{"version":3,"sources":["webpack:///0.0.bundle.js","webpack:///./~/pdfjs-dist/build/pdf.worker.js"],"names":["webpackJsonp","527","module","exports","__webpack_require__","process","root","factory","this","modules","__w_pdfjs_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","setVerbosityLevel","level","verbosity","getVerbosityLevel","info","msg","VERBOSITY_LEVELS","infos","console","log","warn","warnings","deprecated","details","error","errors","backtrace","Error","e","stack","split","slice","join","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","other","isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","writable","getLookupTableFactory","initializer","lookup","create","removeNullCharacters","str","replace","NullCharactersRegExp","bytesToString","bytes","undefined","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","item","itemLength","resultLength","ii","pos","data","set","string32","log2","x","readInt8","start","readUint16","offset","readUint32","isLittleEndian","buffer8","buffer16","Uint16Array","buffer","isEvalSupported","Function","stringToPDFString","code","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","key","isBool","v","isInt","isNum","isString","isArray","Array","isArrayBuffer","isSpace","ch","isNodeJS","__pdfjsdev_webpack__","createPromiseCapability","capability","promise","Promise","resolve","reject","MessageHandler","sourceName","targetName","comObj","callbackIndex","postMessageTransfers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","isReply","callbackId","callback","action","then","result","postMessage","reason","bind","addEventListener","loadJpegStream","id","imageUrl","objs","img","Image","onload","onerror","src","globalScope","window","self","FONT_IDENTITY_MATRIX","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationFlag","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","CMapCompressionType","NONE","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","PasswordException","message","constructor","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","NotImplementedException","MissingDataException","begin","end","XRefParseException","Uint32ArrayView","ensureUint32ArrayViewProps","createUint32ArrayProp","index","uint32ArrayViewSetters","IDENTITY_MATRIX","Util","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","sign","num","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","getArray","has","inherit","sub","loadScript","script","document","createElement","loaded","setAttribute","getElementsByTagName","appendChild","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","args","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","all","iterable","count","results","resolve_","reject_","forEach","catch","onReject","STATUS_PENDING","STATUS_RESOLVED","STATUS_REJECTED","REJECTION_TIMEOUT","HandlerManager","handlers","running","unhandledRejections","pendingRejectionCheck","scheduleHandlers","_status","concat","_handlers","setTimeout","runHandlers","RUN_TIMEOUT","timeoutAt","Date","now","handler","shift","nextStatus","thisPromise","nextValue","_value","onResolve","_unhandledRejection","removeUnhandeledRejection","nextPromise","_updateStatus","addUnhandledRejection","time","scheduleRejectionCheck","splice","unhandled","resolver","_resolve","_reject","promises","deferred","rejectAll","resolveAll","unresolved","isPromise","WeakMap","getOwnPropertyDescriptor","defaultValue","delete","StatTimer","rpad","pad","started","times","enabled","timeEnd","toString","out","longest","span","duration","createBlob","contentType","Blob","type","createObjectURL","digits","forceDataSchema","blob","b1","b2","b3","d1","d2","d3","d4","on","actionName","scope","send","transfers","sendWithPromise","destroy","removeEventListener","isRelativeScheme","scheme","relative","invalid","clear","_isInvalid","IDNAToASCII","h","percentEscape","unicode","indexOf","percentEscapeQuery","parse","input","stateOverride","err","state","cursor","seenAt","seenBracket","loop","EOF","ALPHA","test","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","pop","cp","tempC","temp","parseInt","tmp","relativePathDotMapping","JURL","_url","hasWorkingUrl","u","pathname","href","authority","host","hostname","port","search","hash","OriginalURL","arguments","revokeObjectURL","isEOF","isName","Name","isCmd","cmd","Cmd","isDict","Dict","isRef","Ref","isRefsEqual","v1","v2","gen","isStream","getBytes","sharedUtil","nameCache","nameValue","cmdCache","cmdValue","xref","map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","fetch","getRaw","getKeys","keys","empty","merge","dictArray","mergedDict","keyName","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","corePrimitives","coreJbig2","coreJpg","coreJpx","Jbig2Image","JpegImage","JpxImage","Stream","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","StringStream","DecodeStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","size","buffer2","bufEnd","getBaseStreams","StreamsSequenceStream","streams","stream","newLength","baseStreams","FlateStream","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","PredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","JpegStream","req","jpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","JpxStream","jpxImage","componentsCount","tileCount","tiles","items","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","Jbig2Stream","jbig2Image","chunks","globalsStream","globals","parseChunks","dataLength","DecryptStream","decrypt","nextChunk","initialized","chunkSize","hasMoreData","Ascii85Stream","TILDA_CHAR","Z_LOWER_CHAR","AsciiHexStream","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","RunLengthStream","repeatHeader","source","CCITTFaxStream","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","lookBits","eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","lookChar","addPixels","a1","blackPixels","addPixelsNeg","refPos","code3","getTwoDimCode","getBlackCode","getWhiteCode","gotEOL","findTableCode","limitValue","LZWStream","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","NullStream","coreFunction","PDFFunction","ColorSpace","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","cs","res","IR","parseToIR","AlternateCS","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","range","LabCS","colorSpaces","refcs","mode","altIR","altCS","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","coreStream","MAX_LENGTH_TO_CACHE","Parser","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","followingBytes","E","I","SPACE","LF","CR","startPos","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","createStream","cacheKey","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","Lexer","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","Linearization","getInt","allowZeroValue","linDict","getHints","hintsLength","hints","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","isPDFFunction","fnDict","corePsParser","PostScriptLexer","PostScriptParser","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","types","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","parseArray","fnObj","fnArray","jj","toMultiArray","domain","inputSize","order","encode","samples","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","offset0","offset1","rj","c0","c1","diff","fnRefs","fns","bounds","fnsIR","dmin","dmax","rmin","rmax","compiled","PostScriptCompiler","compile","numOutputs","numInputs","evaluator","PostScriptEvaluator","cache","MAX_CACHE_SIZE","cache_available","cachedValue","output","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","copy","roll","operators","operator","counter","atan","ceil","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","arg","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","getGlyphsUnicode","getDingbatsGlyphsUnicode","setPDFNetworkStreamClass","cls","PDFNetworkStream","initializeWorker","consoleTimer","workerConsole","WorkerMessageHandler","setup","corePdfManager","LocalPdfManager","NetworkPdfManager","WorkerTask","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","msgHandler","_queuedChunks","initialData","_msgHandler","_isRangeSupported","disableRange","_isStreamingSupported","disableStream","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","PDFWorkerStreamReader","queuedChunks","_stream","_done","_requests","_headersReady","onProgress","PDFWorkerStreamRangeReader","_begin","_end","_queuedChunk","_enqueue","some","rangeReader","evt","firstReader","_removeRangeReader","reader","getFullReader","getRangeReader","cancelAllRequests","cancel","readers","requestCapability","headersReady","isRangeSupported","isStreamingSupported","contentLength","read","requestsCapability","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","task","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","pdfManager","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","docId","password","docBaseUrl","pdfStream","chunkedViewerLoading","fullRequest","total","disableAutoFetch","rangeChunkSize","cancelXHRs","cachedChunks","flushChunks","pdfFile","readPromise","readChunk","sendProgressiveData","setupDoc","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","requestLoadedStream","onLoadedStream","disableCreateObjectURL","maxImageSize","disableFontFace","disableNativeImageDecoder","newPdfManager","workerHandlerName","getPage","pageIndex","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","rotate","userUnit","view","catalog","pdfDocument","getPageIndex","ensureCatalog","intent","pageNum","getOperatorList","renderInteractiveForms","operatorList","totalLength","featureId","wrappedException","minimumStackMessage","normalizeWhitespace","combineTextItems","extractTextContent","textContent","cleanup","waitOn","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","coreCharsets","coreEncodings","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","MAX_SUBR_NESTING","CFFStandardStrings","CFFParser","file","properties","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","cff","CFF","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","CFFTopDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","privateDict","subrsIndex","charStrings","seacs","widths","bytesLength","major","minor","hdrSize","offSize","CFFHeader","parseOperand","parseFloatOperand","NaN","parseFloat","operands","entries","cffIndex","CFFIndex","offsets","offsetSize","offsetStart","offsetEnd","add","CFFStrings","Type","cffDict","pair","setByKey","parseCharString","localSubrIndex","callDepth","stackSize","validationCommand","seac","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","fdIndex","getFDIndex","emptyPrivateDictionary","parentDict","CFFPrivateDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","cid","CFFCharset","CFFCharsetPredefinedTypes","ISO_ADOBE","EXPERT","EXPERT_SUBSET","format","raw","readSupplement","supplementsCount","sid","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","next","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","opcodes","values","valueLength","isNaN","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","dataOffset","offset2","offset3","offset4","CFFCompiler","compileHeader","compileNameIndex","subDict","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","exec","epsilon","nibbles","substr","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","outputLength","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","ChunkedStreamManager","pdfNetworkStream","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","sendRequest","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","isProgressive","loadedRequests","requestIds","lastChunk","onError","abort","ARCFourCipher","keyLength","encryptBlock","tmp2","decryptBlock","calculateMD5","h0","h3","paddedLength","padded","w","f","rotateArg","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","lowAdd","highAdd","copyTo","assign","calculateSHA256","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","calculateSHA512","mode384","tmp3","tmp1","calculateSHA384","NullCipher","AES128Cipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","lastBlock","psLen","encrypt","cipher","AES256Cipher","expandKey256","decrypt256","encrypt256","PDF17","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","PDF20","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","CipherTransformFactory","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","fileId","flags","encryptMetadata","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","decodedPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","coreParser","coreImage","coreColorSpace","coreMurmurHash3","coreFonts","corePattern","coreCMap","coreMetrics","coreBidi","coreStandardFonts","coreUnicode","coreGlyphList","PDFImage","MurmurHash3_64","ErrorFont","FontFlags","Font","IdentityToUnicodeMap","ToUnicodeMap","getFontType","Pattern","getTilingPatternIR","CMapFactory","IdentityCMap","getMetrics","bidi","getStdFontMap","getSerifFonts","getSymbolsFonts","getNormalizedUnicodes","reverseIfRtl","getUnicodeForGlyph","PartialEvaluator","NativeImageDecoder","resources","idFactory","fontCache","builtInCMapCache","options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","canDecode","image","isDecodable","colorSpace","decodePromise","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","checked","endTime","TILING_PATTERN","SHADING_PATTERN","hasBlendModes","processed","nodes","node","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","bbox","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","buildPaintImageXObject","inline","imgData","imageMask","bitStrideLength","imgArray","inverseDecode","createMask","cached","softMask","mask","SMALL_IMAGE_DIMENSIONS","imageObj","createImageData","useNativeImageDecoder","createObjId","addDependency","nativeImageDecoder","buildImage","handleSMask","stateManager","smaskContent","smaskOptions","subtype","transferObj","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","OperatorList","resourcesArray","patternResources","addDependencies","dependencies","argsArray","handleSetFont","fontArgs","fontRef","fontName","loadFont","translated","isType3Font","loadType3Data","TranslatedFont","loadedName","handleText","chars","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","errorFont","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","getFontID","translatedPromise","translateFont","translatedFont","fontType","xrefFontStats","fontTypes","fontFile3","lastIndex","opArgs","handleColorN","patterns","patternName","shading","parseShading","xobjs","StateManager","EvalState","preprocessor","EvaluatorPreprocessor","timeSlotManager","promiseBody","stop","fontSize","cacheEntry","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","patternIR","dictName","extGState","savedStatesDepth","getTextContent","ensureTextContentItem","textContentItem","textState","styles","fontFamily","fallbackName","vertical","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","TextState","xobjsCache","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","texts","formTextContent","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","glyphsUnicodeMap","cMap","builtInCMap","ucs2CMapName","useCMap","ucs2CMap","ucs2","firstChar","lastChar","cmapObj","cmap","getMap","charCode","token","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","stdFontMap","lookupName","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","coded","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","glyphStream","getTransfers","queue","messageHandler","_totalLength","CHUNK_SIZE","CHUNK_SIZE_ABOUT","flush","addOpList","opList","QueueOptimizer","optimize","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","handlePaintSolidColorImageMask","iFirstSave","iFirstPIMXO","InitialState","context","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iCurr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","imgWidth","imgHeight","rowSize","kind","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstPIXO","iFirstRestore","firstPIXOArg0","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","coreArithmeticDecoder","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","Number","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","gainLog2","SubbandsGainLog2","calculate","transformComponents","resultImages","transformedTiles","maxK","y2","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","levels","currentLevel","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","coreCrypto","coreChunkedStream","Catalog","pageFactory","catDict","getCatalogObj","pagePromises","metadata","streamRef","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","parent","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","title","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","attachments","fs","FileSpec","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","translatedFonts","getPageDict","createPage","nodesToVisit","currentNode","fetchAsync","currentPageIndex","checkAllKids","kids","last","pageRef","pagesBeforeRef","kidRef","parentRef","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","linkType","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","XRef","xrefstms","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","LT","skipUntil","TAB","PERCENT","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","content","xrefTagOffset","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","ObjectLoader","mayHaveChildren","addChildren","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","getNonStdFontMap","getGlyphMapForStandardFonts","getSupplementalGlyphMapForArialBlack","mapSpecialUnicodeValues","getSpecialPUASymbols","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","isRTLRangeFor","charsLength","NetworkManager","isHttp","httpHeaders","withCredentials","getXhr","currXhrId","getArrayBuffer","response","_options","_manager","_rangeChunkSize","_rangeRequestReaders","PDFNetworkStreamFullRequestReader","onHeadersReceived","_onHeadersReceived","onProgressiveData","_onProgressiveData","onDone","_onDone","_onError","_fullRequestId","requestFull","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","PDFNetworkStreamRangeRequestReader","_requestId","onClosed","coreWorker","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","supportsMozChunked","open","listeners","request","xhrId","pendingRequest","setRequestHeader","rangeStr","expectedStatus","useMozChunkedLoading","mozChunked","onreadystatechange","onStateChange","onprogress","readyState","xhrStatus","ok_response_on_range_request","rangeHeader","getResponseHeader","matches","hasPendingRequests","getRequestXhr","isStreamingRequest","isPendingRequest","isLoadedRequest","abortAllRequests","abortRequest","_onRangeRequestReaderClosed","_validateRangeRequestCapabilities","networkManager","fullRequestXhrId","fullRequestXhr","contentEncoding","exception","lengthComputable","_close","eval","AnnotationFactory","coreObj","coreEvaluator","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","FileAttachmentAnnotation","Annotation","getTransformMatrix","minX","minY","maxY","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","flag","_isViewable","_isPrintable","viewable","printable","hasFlag","AnnotationBorderStyle","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","_preparePopup","hasPopup","contents","loadResources","objectLoader","renderForms","appearanceDict","resourcesPromise","appendToOperatorList","annotations","partialEvaluator","annotationPromises","operatorLists","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","validNumber","radius","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","alignment","textAlignment","maximumLength","multiLine","comb","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","option","isOptionArray","exportValue","displayValue","combo","multiSelect","DEFAULT_ICON_SIZE","parentItem","parentId","parentFlags","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","baseTypes","arabicTypes","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","BUILT_IN_CMAPS","CMap","codespaceRanges","numCodespaceRanges","_map","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","readByte","MAX_NUM_SIZE","char","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","coreAnnotation","Page","pageDict","uniquePrefix","idCounters","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","MAX_LOOP_COUNT","mediaBox","cropBox","intersection","getContentStream","contentStreamPromise","dataPromises","pageListPromise","contentStream","transparency","annotationsPromise","datas","pageOpList","annotationsReadyPromise","getAnnotationsData","annotationsData","annotationRefs","annotationFactory","annotationRef","annotation","PDFDocument","find","needle","backwards","lastIndexOf","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","step","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","coreCFFParser","FontRendererFactory","getLong","getUshort","parseCmap","segCount","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","glyf","loca","isGlyphLocationsLong","itemSize","itemDecode","startOffset","endOffset","lookupCmap","glyphId","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","repeat","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","noop","compileGlyph","compileGlyphImpl","indexToLocFormat","unitsPerEm","numTables","tag","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","type1FontGlyphMapping","glyphNames","charCodeToGlyphId","standardGlyphName","coreFontRenderer","coreType1Parser","Type1Parser","PRIVATE_USE_OFFSET_START","PRIVATE_USE_OFFSET_END","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","SEAC_ANALYSIS_ENABLED","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","tableName","tableOffsets","searchParams","checksum","quad","addTable","ProblematicCharRanges","sizes","missingFile","glyphCache","toFontChar","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","isIdentityUnicode","unicodeCharCode","buildToFontChar","loading","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","int16","signedInt16","int32","string16","safeString16","isProblematicUnicodeLocation","adjustMapping","isSymbolic","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","ID","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","segIndex","segments","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","glyphDataLength","sanitizeHead","locaLength","numGlyphsPlusOne","sanitizeGlyphLocations","dupFirstEntry","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","missingGlyphData","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readNameTable","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","widthCode","missingGlyphs","skipToUnicode","cffFile","VALID_TABLES","isTrueType","maxZones","metricsOverride","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","isUnicode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","mapping","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","handleImageData","nativeDecoder","decodeAndClamp","addend","coefficient","resizeImageMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","imagePromise","imageData","smaskData","maskData","imageIsFromDecodeStream","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","sltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","onImmediateLosslessTextRegion","buildHuffmanTable","children","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuRow","mcusPerLine","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","progressive","componentsLength","marker","mcuExpected","blocksPerColumn","mcusPerColumn","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","clamp0to255","readDataBlock","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","seed","SEED","MASK_HIGH","MASK_LOW","alwaysUseUint32ArrayView","useUint32ArrayView","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","xstep","ystep","paintType","tilingType","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","coreDocument","BasePdfManager","_docId","_docBaseUrl","ensureHelper","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","decrypted","decryptAscii","digit1","digit2","isSpecial","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","readInt","readBoolean","lenIV","program","blueArray","charString","encodingArg","pdfjsCoreWorker"],"mappings":"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AAA+uB,GAnpBA,GAAAK,GAAA,GAAAC,aACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,KAEAC,EAAA,GAAAD,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,MAEAE,EAAA,GAAAF,aACA,EACA,EACA,EACA,EACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAEAG,GACA,GAAAH,aaACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IAEA,EA2OA,OApNAP,GAAAttB,UAAAT,OAAA2D,OAAAkpB,EAAApsB,WACAstB,EAAAttB,UAAAkuB,QAAA,SAAAC,GAKA,IAJA,GAGA5V,GAHAnV,EAAA5E,KAAA4E,IACAsqB,EAAAlvB,KAAAkvB,SACAC,EAAAnvB,KAAAmvB,QAEAD,EAAAS,IACA5V,EAAAnV,EAAAmoB,cAAA,GACApqB,EAAA,gCAEAwsB,GAAApV,GAAAmV,EACAA,GAAA,CAKA,OAHAnV,GAAAoV,GAAA,GAAAQ,GAAA,EACA3vB,KAAAmvB,WAAAQ,EACA3vB,KAAAkvB,YAAAS,EACA5V,GAEA+U,EAAAttB,UAAAouB,QAAA,SAAAC,GAOA,IANA,GAKA9V,GALAnV,EAAA5E,KAAA4E,IACAkrB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAX,EAAAlvB,KAAAkvB,SACAC,EAAAnvB,KAAAmvB,QAEAD,EAAAa,IACAhW,EAAAnV,EAAAmoB,cAAA,GAGAoC,GAAApV,GAAAmV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A,KAGA,GACA,IAGA,EACAD,IAGA,EACAD,IAGA,EACAD,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAL,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAC,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAG,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,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AAAu7B,cACAC,QAAA3B,EAAA75B,UAAAw7B,QACA0C,gBAAA,SAAAa,GACA,UAEA3C,oBAAA,GAEAwB,IAEAz/B,GAAA07B,cAIA,SAAA37B,EAAAC,EAAAO,GAEA,YAowDA,SAAA0mC,GAAAC,GACA,OAAAA,GACA,sBACA,MAAAC,EACA,wBACA,MAAAC,EACA,wBACA,MAAAC,EACA,yBACA,MAAAC,EACA,4BACA,MAAAC,EACA,sBACA,MAAAC,EACA,yBACA,MAAAC,EACA,SACA,aAnxDA,GAAAD,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,eACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,GACA,sBACA,GACA,gBACA,GACA,GACA,GACA,GACA,WACA,GACA,GACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,YACA,eACA,GACA,GACA,GACA,GACA,cACA,cACA,mBACA,iBACA,cACA,aACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,GACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,cACA,GACA,eACA,cACA,GACA,gBACA,GACA,aACA,YACA,eACA,GACA,gBACA,iBACA,cACA,GACA,iBACA,GACA,aACA,GACA,eACA,eACA,cACA,UACA,cACA,oBACA,cACA,cACA,GACA,GACA,GACA,GACA,GACA,GACA,eACA,GACA,GACA,GACA,GACA,GACA,UACA,aACA,iBACA,GACA,GACA,GACA,GACA,kBACA,GACA,iBACA,GACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,eACA,eACA,GACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,GACA,GACA,GACA,GACA,YACA,cACA,aACA,cACA,YACA,YACA,YACA,gBACA,iBACA,iBACA,aAEAJ,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,QACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,SAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,cAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,SACA,OACA,SACA,iBACA,SACA,eACA,WACA,SACA,YACA,aACA,cACA,SACA,gBACA,KACA,SACA,SACA,SACA,SACA,YACA,aACA,eACA,gBACA,SACA,SACA,SACA,QACA,YACA,SACA,iBACA,KACA,SACA,SACA,YACA,QACA,aACA,OACA,WACA,WACA,MACA,YACA,UACA,WACA,YACA,cACA,gBACA,aACA,SACA,aACA,SACA,SACA,YACA,cACA,gBACA,QACA,KACA,YACA,iBACA,UACA,cACA,eACA,iBACA,aACA,UACA,gBACA,eACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,WACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aAEAG,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,YACA,aACA,cACA,UACA,YACA,WACA,YACA,aACA,eACA,OACA,QACA,QACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,SACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,cACA,YACA,eACA,gBACA,aACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,OACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,YACA,MACA,aACA,UACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,WACA,SACA,YACA,WACA,WACA,SACA,OACA,UACA,QACA,QACA,YACA,YACA,UACA,aACA,YACA,SACA,YACA,SACA,eACA,WACA,eACA,cACA,SACA,SACA,WACA,cACA,cACA,WACA,cACA,eACA,iBACA,QACA,WACA,WACA,cACA,iBACA,aACA,WACA,eACA,QACA,iBACA,iBACA,YACA,eACA,eACA,UACA,aACA,QACA,WACA,gBACA,iBACA,iBACA,UACA,UACA,UACA,aACA,aACA,YACA,eACA,eACA,aACA,gBACA,eACA,UACA,YACA,eACA,gBACA,gBACA,YACA,cACA,cACA,cACA,gBACA,gBACA,gBACA,cACA,eACA,cACA,UACA,GACA,aACA,WACA,aACA,aACA,aACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,eACA,gBACA,gBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,KACA,KACA,OACA,KACA,KACA,KACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,GACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA;AAsBAvnC,EAAAmnC,kBACAnnC,EAAAonC,mBACApnC,EAAAqnC,mBACArnC,EAAAsnC,oBACAtnC,EAAAunC,uBACAvnC,EAAAwnC,iBACAxnC,EAAAinC,eAIA,SAAAlnC,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAmsB,EAAAnsB,EAAA,GACAmnC,EAAAnnC,EAAA,GACA8Y,EAAA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AI,IAEA,gBAAAnuB,GACA8pC,EAAAn6B,EAAAM,OAAA,EACA,GAAAskB,GAAAxG,EAAAI,EAAAJ,EAAA1R,KAAA2U,KAEArvB,EAAA,WAAA3B,EAAA,uBACA+tB,GACI,MAAAzqB,GACJ,GAAAA,YAAA8U,GACA,KAAA9U,EAGA,OADA3B,GAAA,oBAAA2B,EAAA,KACA,GAAAg3B,GAAAvM,MAIA4Y,KAEAsD,EAAA,WACA,QAAAA,GAAAlc,EAAAmc,GACA9qC,KAAA2uB,SACA3uB,KAAA+pC,WACA/pC,KAAAuF,UACAvF,KAAA8qC,gBAoQA,QAAAC,GAAA/hC,GACA,MAAAA,IAAA,IAAAA,GAAA,GACA,GAAAA,EAEAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KACA,GAAAA,GAAA,GAEA,EAzQA,GAAAgiC,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAkXA,OAvWAH,GAAArpC,WACAuoC,SAAA,WACA,MAAA/pC,MAAAirC,YAAAjrC,KAAA2uB,OAAA5B,WAEAme,SAAA,WACA,MAAAlrC,MAAA2uB,OAAAvB,YAEA+d,UAAA,WACA,GAAAniC,GAAAhJ,KAAAirC,YACAG,GAAA,EACAC,EAAA,EACAtvB,EAAA,CAcA,IAbA,KAAA/S,GACA+S,GAAA,EACA/S,EAAAhJ,KAAA+pC,WACA,KAAA/gC,IACAA,EAAAhJ,KAAA+pC,aAEI,KAAA/gC,IACJA,EAAAhJ,KAAA+pC,YAEA,KAAA/gC,IACAqiC,EAAA,GACAriC,EAAAhJ,KAAA+pC,YAEA/gC,EAAA,IAAAA,EAAA,GAEA,MADArG,GAAA,mBAAAyC,OAAAC,aAAA2D,IACA,CAKA,KAHA,GAAAsiC,GAAAtiC,EAAA,GACAuiC,EAAA,EACAC,EAAA,GACAxiC,EAAAhJ,KAAA+pC,aAAA,GACA,OAAA/gC,MAAA,IACA,GAAAyiC,GAAAziC,EAAA,EACAoiC,GACAG,EAAA,GAAAA,EAAAE,GAEA,IAAAJ,IACAA,GAAA,IAEAC,EAAA,GAAAA,EAAAG,OAEK,SAAAziC,EAAA,CACL,OAAAq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A,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eA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,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,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,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,YAEAC,EAAA;AA0RA,QAAAA,GAAAC,EAAAC,EAAAC,GACA/gD,KAAAgF,MAAA67C,EAAA92B,WACA/pB,KAAA8gD,aACA9gD,KAAA+gD,wBA5RA,GAAAC,IACA,MAEAj2C,GAAA,QACArF,IAAA,EACAu7C,eAAA,EACAC,MAAA,GAEA,MAEAn2C,GAAA,QACArF,IAAA,EACAu7C,eAAA,EACAC,MAAA,IAGAn2C,GAAA,UACArF,IAAA,EACAu7C,eAAA,IAGAl2C,GAAA,UACArF,IAAA,EACAy7C,YAAA,IAGAp2C,GAAA,UACArF,IAAA,EACAy7C,YAAA,IAGAp2C,GAAA,UACArF,IAAA,EACAy7C,YAAA,IAGAp2C,GAAA,YACArF,IAAA,EACAy7C,YAAA,GAEA,MAEAp2C,GAAA,WACArF,IAAA,EACA07C,YAAA,IAGAr2C,GAAA,SACArF,IAAA,EACA07C,YAAA,GAEA,KACA,MAEAr2C,GAAA,UACArF,IAAA,EACAu7C,eAAA,GAEA,KACA,KACA,MAEAl2C,GAAA,UACArF,IAAA,E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,EAAA,IAAAA,EAAA,IACAX,EAAAtZ,MAAAzpC,KAAAyC,GAEA,MAAAsgD,IAEAD,KAEArG,EAAA,WAiTA,QAAAA,GAAAC,GACA,OAAAqG,IACAA,EAAAD,EAAAU,aAAAC,IAEAX,EAAApoD,KAAAP,KAAA4oD,EAAArG,GACAviD,KAAAikD,YAAA,KArTA,GAAAqF,MAGA,GACA,IAEA,OAEA,MACA,MACA,OAEA,QAIA,GACA,IAEA,gBACA,MACA,OAGA,EACA,UACA,MACA,OAGA,EACA,SACA,MACA,QAIA,GACA,GAEA,YACA,MACA,OAGA,EACA,WACA,MACA,OAGA,EACA,aACA,MACA,OAGA,EACA,SACA,MACA,QAIA,GACA,GAEA,eACA,MACA,KAIA,GACA,GAEA,cACA,MACA,KAIA,GACA,GAEA,oBACA,OACA,OAIA,GACA,GAEA,qBACA,MACA,MAIA,GACA,GAEA,YACA,MACA,KAIA,GACA,GAEA,iBACA,MACA,KAIA,GACA,GAEA,cAEA,MACA,MACA,MACA,MACA,MACA,QAGA,KACA,EACA,EACA,KACA,EACA,KAIA,GACA,WACA,MACA,OAGA,EACA,YAEA,MACA,MACA,MACA,QAGA,EACA,EACA,EACA,MAKA,GACA,GAEA,cACA,MACA,IAGA,GACA,OACA,QACA,OAGA,GACA,UACA,SACA,IAGA,GACA,WACA,SACA,IAGA,GACA,cACA,SACA,IAGA,GACA,WAEA,SACA,UAEA,QAIA,GACA,IAEA,aACA,MACA,QAIA,GACA,IAEA,eACA,MACA,QAIA,GACA,IAEA,gBACA,QACA,QAIA,GACA,IAEA,iBACA,MACA,KAIA,GACA,IAEA,kBACA,MACA,KAIA,GACA,IAEA,cACA,MACA,KAIA,GACA,IAEA,WACA,MACA,QAIA,GACA,IAEA,UACA,MACA,QAIA,GACA,IAEA,WACA,SACA,QAIA,GACA,IAEA,UACA,SACA,QAIA,GACA,IAEA,WACA,MACA,OAGAV,EAAA,IASA,OADAtG,GAAA9gD,UAAAT,OAAA2D,OAAAikD,EAAAnnD,WACA8gD,KAEAwE,EAAA,WA2IA,QAAAA,GAAAvE,GACA,OAAAq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,OACAA,IAAA,SAxMA,GAAAx2C,GAAA,GAAA9T,aACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,KAEAyrB,EAAA,GAAAnC,cACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,OACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,QACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WAyEA,OAAAzG,MAEA+nC,EAAA,WACA,QAAAA,GAAAC,EAAAC,GACA7wD,KAAA8wD,KAAA,EAAAF,EACA5wD,KAAA+wD,IAAA,EAAAF,EA0EA,MAxEAF,GAAAnvD,WACAwvD,IAAA,SAAAC,GACAjxD,KAAA8wD,MAAAG,EAAAH,KACA9wD,KAAA+wD,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACAjxD,KAAA8wD,MAAAG,EAAAH,KACA9wD,KAAA+wD,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACAjxD,KAAA8wD,MAAAG,EAAAH,KACA9wD,KAAA+wD,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACArxD,KAAA+wD,IAAA/wD,KAAA8wD,OAAAO,EAAA,KACArxD,KAAA8wD,KAAA,IAEA9wD,KAAA+wD,IAAA/wD,KAAA+wD,MAAAM,EAAArxD,KAAA8wD,MAAA,GAAAO,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AAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,IAtJA,GAAAhhC,IACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAyFA,OAAA5I,MAEA+pC,EAAA,WACA,QAAA3pD,GAAAyB,EAAA3D,EAAAsY,EAAA2yC,EAAAhqC,GACAtd,EAAAmnD,OAAA9qD,GACA2D,EAAAumD,IAAA5xC,GACA2I,EAAA6pC,OAAA9qD,GACAihB,EAAAypC,MACAzpC,EAAAipC,IAAAe,GACAtnD,EAAAymD,IAAAnpC,GAEA,QAAAiqC,GAAAvnD,EAAA3D,EAAAsY,EAAA2yC,EAAAhqC,GACAtd,EAAAmnD,OAAA9qD,GACA2D,EAAAumD,IAAA5xC,GACA2I,EAAA6pC,OAAA9qD,GACAihB,EAAAipC,IAAAe,GACAtnD,EAAAymD,IAAAnpC,GACAA,EAAA6pC,OAAAxyC,GACA2I,EAAAipC,IAAAe,GACAtnD,EAAAymD,IAAAnpC,GAEA,QAAAkqC,GAAAxnD,EAAA3D,EAAAihB,GACAtd,EAAAmnD,OAAA9qD,GACA2D,EAAA8mD,YAAA,IACAxpC,EAAA6pC,OAAA9qD,GACAihB,EAAAwpC,YAAA,IACA9mD,EAAAymD,IAAAnpC,GACAA,EAAA6pC,OAAA9qD,GACAihB,EAAAwpC,YAAA,IACA9mD,EAAAymD,IAAAnpC,GAEA,QAAAmqC,GAAAznD,EAAA3D,EAAAihB,GACAtd,EAAAmnD,OAAA9qD,GACA2D,EAAA8mD,YAAA,IACAxpC,EAAA6pC,OAAA9qD,GACAihB,EAAAwpC,YAAA,IACA9mD,EAAAymD,IAAAnpC,GACAA,EAAA6pC,OAAA9qD,GACA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AqgF,gBAAA,GAAAt6E,YAAA+/E,GACA9lF,KAAAugF,qBAAArB,EAAA,MAAA/nD,aAAA2uD,GAAA5G,EAAA,KAAA33E,aAAAu+E,GAAA,GAAA//E,YAAA+/E,GACA9lF,KAAAgmF,gBAAA,GAAAjgF,YAAA+/E,EACA,IAAAtF,GAAA,GAAAz6E,YAAA+/E,EACA,QAAAtH,EACA,OAAAn+E,GAAA,EAAmBA,EAAAylF,EAAsBzlF,IACzCmgF,EAAAngF,GAAAm+E,CAGAx+E,MAAAwgF,cACAxgF,KAAAwtB,QAzPA,GAAAy4D,GAAA,GACAC,EAAA,GACAL,EAAA,GAAA9/E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEA6/E,EAAA,GAAA7/E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEA4/E,EAAA,GAAA5/E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,E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,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,GAAA,SACAA,GAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,GAAA,SACAA,GAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,GAAA,UACAA,GAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,S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CA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,UAEAC,GACA,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBAEA9gD,GAAA4gD,kBACA5gD,EAAA6gD,gBACA7gD,EAAA8gD,uBAIA,SAAA/gD,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAmsB,EAAAnsB,EAAA,GACAmnC,EAAAnnC,EAAA,GACA+4D,EAAA/4D,EAAA,GACAwZ,EAAAsQ,EAAAtQ,KACAtW,EAAA4mB,EAAA5mB,OACAb,EAAAynB,EAAAznB,KACAI,EAAAqnB,EAAArnB,MACA8F,EAAAuhB,EAAAvhB,MACAE,EAAAqhB,EAAArhB,SACAqQ,EAAAgR,EAAAhR,qBACAnH,EAAAmY,EAAAnY,oBACAmX,EAAAqD,EAAArD,MACAC,EAAAoD,EAAApD,OACAE,EAAAkD,EAAAlD,MACAW,EAAAuC,EAAAvC,SACA8C,EAAAya,EAAAza,OACAie,EAAAouB,EAAApuB,MACA61D,GACA,iBACA,kBACA,oBACA,oBACA,WACA,WACA,OACA,YACA,YACA,OACA,cACA,cACA,cACA,cACA,cACA,eACA,eACA,cACA,cACA,QACA,aACA,aACA,QACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,OACA,OACA,SACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,YACA,YACA,cACA,cACA,QACA,QACA,QACA,aACA,aACA,QACA,WACA,WACA,OACA,OACA,YACA,YACA,UACA,UACA,aACA,aACA,YACA,YACA,QACA,QACA,cACA,cACA,aACA,aACA,IACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,UACA,WACA,YACA,YACA,QACA,cACA,cACA,QACA,cACA,iBACA,iBACA,cACA,cACA,cACA,WACA,QACA,QACA,SACA,SACA,QACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,mBACA,mBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,qBACA,qBACA,qBACA,q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AkkB,EAAAlkB,iBACAC,EAAAikB,EAAAjkB,yBACAgzD,EAAA0E,EAAA1E,oBACA5hE,EAAAuZ,EAAAvZ,iBACAC,EAAAsZ,EAAAtZ,iBACAC,EAAAqZ,EAAArZ,kBACAC,EAAAoZ,EAAApZ,qBACAN,EAAA0Z,EAAA1Z,YACA+zB,EAAAjB,EAAAiB,cACAu5B,EAAAx6B,EAAAw6B,iBACAC,EAAAz6B,EAAAy6B,4BACAC,EAAA16B,EAAA06B,qCACAM,EAAA/6B,EAAA+6B,mBACAL,EAAA16B,EAAA06B,wBACAr5B,EAAArB,EAAAqB,mBACAuyC,EAAAD,EAAAC,YACA5sD,EAAA+nD,EAAA/nD,mBACAC,EAAA8nD,EAAA9nD,UACAsJ,EAAAw+C,EAAAx+C,YACAzI,EAAAinD,EAAAjnD,IACAkD,EAAA+jD,EAAA/jD,UACArC,GAAAomD,EAAApmD,WACAwE,GAAA4hD,EAAA5hD,eACArB,GAAAijD,EAAAjjD,WACAN,GAAAujD,EAAAvjD,SACAmC,GAAAohD,EAAAphD,WACAkmD,GAAA,MACAC,GAAA,MACAC,IAAA,EACAC,GAAA,IACAC,IAAA,EACA5zC,IACAoS,WAAA,EACAiB,MAAA,EACArD,SAAA,EACA6jC,OAAA,EACA3jC,YAAA,GACA4jC,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,IACA,UACA,QACA,mBACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,QACA,WACA,cACA,cACA,gBACA,UACA,aACA,gBACA,QACA,SACA,SACA,aACA,WACA,WACA,SACA,SACA,SACA,SACA,UA0EAC,GAAA,WACA,QAAAA,GAAA7sC,EAAAx7C,EAAA87C,EAAA/iD,EAAAuoD,EAAAgnC,EAAArlG,EAAAslG,GACAruG,KAAAshE,WACAthE,KAAA8lB,UACA9lB,KAAA4hE,SACA5hE,KAAA6e,QACA7e,KAAAonE,UACApnE,KAAAouG,iBACApuG,KAAA+I,UACA/I,KAAAquG,WAKA,MAHAF,GAAA3sG,UAAA8sG,gBAAA,SAAAhtC,EAAAx7C,EAAA87C,EAAA/iD,EAAAuoD,EAAAgnC,EAAArlG,EAAAslG,GACA,MAAAruG,MAAAshE,cAAAthE,KAAA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,GACArB,EAAAqB,EAAApB,GAEAmB,GACAH,EAAAhB,EAAAiB,GAEAI,GAAA,EAAAA,EAAA31G,OAAA,CACA,GAAA41G,GAAA,GAAA/0G,YAAA80G,EAAA31G,OAAA,EACA41G,GAAAn0G,IAAAk0G,EAAAn0G,MACAm0G,EAAAn0G,KAAAo0G,EAEA,MAAAtB,GAAAxC,WAsIA,QAAA+D,GAAAjR,EAAA1+B,EAAA4vC,GACA,OAAAC,GAAAnR,SAGAoR,IAAA9vC,GAAA,GAAAnC,GAAA9rD,IAAAiuD,QAGA/mB,IAAA22D,GAAA,GAAAtyG,EAAA27C,GAAA22D,MAvfA,GAAAV,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,IACA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,GACA,KACA,KACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,IACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,GACA,KACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,KACA,KACA,KACA,KACA,KACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,KACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EA6NAniG,GAAA,GAAAyU,GAAA,GAAA7mB,YAAAoS,EAAA4R,YACA,IAkBAy3B,GAAA25D,EAlBAC,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAC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AA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,GAAA,QACAA,GAAA,YAGA5wB,GAAA86D,cAIA,SAAA/6D,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAkZ,EAAA4Q,EAAA5Q,gBACA0gD,EAAA,SAAAy8D,GAGA,QAAAz8D,GAAAy8D,GACA,GAAAC,GAAA,UACAx2H,MAAAy7B,GAAA86F,EAAA,WAAAA,EAAAC,EACAx2H,KAAA27B,GAAA46F,EAAA,WAAAA,EAAAC,EALA,GAAAC,GAAA,WACAC,EAAA,MAMAC,GAAA,CACA,KACA,GAAAx/F,aAAA,GAAApxB,YAAA,GAAAyB,OAAA,KACE,MAAAzE,GACF4zH,GAAA,EAsGA,MApGA78D,GAAAt4D,WACAurE,OAAA,SAAA7mD,GACA,GACA7lB,GADAu2H,EAAAD,CAEA,oBAAAzwG,GAAA,CACA,GAAAxf,GAAA,GAAAX,YAAA,EAAAmgB,EAAAhhB,QACAA,EAAA,CACA,KAAA7E,EAAA,EAAeA,EAAA6lB,EAAAhhB,OAAkB7E,IAAA,CACjC,GAAAuH,GAAAse,EAAAlgB,WAAA3F,EACAuH,IAAA,IACAlB,EAAAxB,KAAA0C,GAEAlB,EAAAxB,KAAA0C,IAAA,EACAlB,EAAAxB,KAAA,IAAA0C,QAGI,IAAAse,YAAAngB,YACJW,EAAAwf,EACAhhB,EAAAwB,EAAAxB,WACI,sBAAAghB,IAAA,UAAAA,IAKJ,SAAApjB,OAAA,+EAJA4D,GAAAwf,EACAhhB,EAAAwB,EAAAxB,OACA0xH,GAAA,EAIA,GAAAC,GAAA3xH,GAAA,EACA4xH,EAAA5xH,EAAA,EAAA2xH,EACAE,EAAAH,EAAA,GAAAx9G,GAAA1S,EAAAmwH,GAAA,GAAA1/F,aAAAzwB,EAAAc,OAAA,EAAAqvH,GACAzgE,EAAA,EACA4gE,EAAA,EACAv7F,EAAAz7B,KAAAy7B,GACAE,EAAA37B,KAAA27B,GACAs7F,EAAA,WACAC,EAAA,UACAC,EAAAF,EAAAP,EACAU,EAAAF,EAAAR,CACA,KAAAr2H,EAAA,EAAcA,EAAAw2H,EAAiBx2H,IAC/B,EAAAA,GACA+1D,EAAA2gE,EAAA12H,GACA+1D,IAAA6gE,EAAAR,EAAArgE,EAAA+gE,EAAAT,EACAtgE,KAAA,GAAAA,IAAA,GACAA,IAAA8gE,EAAAT,EAAArgE,EAAAghE,EAAAV,EACAj7F,GAAA26B,EACA36B,KAAA,GAAAA,IAAA,GACAA,EAAA,EAAAA,EAAA,aAEAu7F,EAAAD,EAAA12H,GACA22H,IAAAC,EAAAR,EAAAO,EAAAG,EAAAT,EACAM,KAAA,GAAAA,IAAA,GACAA,IAAAE,EAAAT,EAAAO,EAAAI,EAAAV,EACA/6F,GAAAq7F,EACAr7F,KAAA,GAAAA,IAAA,GACAA,EAAA,EAAAA,EAAA,WAIA,QADAy6B,EAAA,EACA0gE,GACA,OACA1gE,GAAA1vD,EAAA,EAAAmwH,EAAA,MACA,QACAzgE,GAAA1vD,EAAA,EAAAmwH,EAAA,KACA,QACAzgE,GAAA1vD,EAAA,EAAAmwH,GACAzgE,IAAA6gE,EAAAR,EAAArgE,EAAA+gE,EAAAT,EACAtgE,KAAA,GAAAA,IAAA,GACAA,IAAA8gE,EAAAT,EAAArgE,EAAAghE,EAAAV,EACA,EAAAG,EACAp7F,GAAA26B,EAEAz6B,GAAAy6B,EAKA,MAFAp2D,MAAAy7B,KACAz7B,KAAA27B,KACA37B,MAEAmtE,UAAA,WACA,GAAA1xC,GAAAz7B,KAAAy7B,GACAE,EAAA37B,KAAA27B,EACAF,IAAAE,IAAA,EACAF,EAAA,WAAAA,EAAAg7F,EAAA,MAAAh7F,EAAAi7F,EACA/6F,EAAA,WAAAA,EAAA86F,GAAA,YAAA96F,GAAA,GAAAF,IAAA,IAAAg7F,KAAA,GACAh7F,GAAAE,IAAA,EACAF,EAAA,UAAAA,EAAAg7F,EAAA,MAAAh7F,EAAAi7F,EACA/6F,EAAA,WAAAA,EAAA86F,GAAA,YAAA96F,GAAA,GAAAF,IAAA,IAAAg7F,KAAA,GACAh7F,GAAAE,IAAA,CACA,QAAAt7B,GAAA,EAAA6F,GACAu1B,EACAE,GACA/2B,EAAA,GAAiBvE,EAAA6F,EAAAhB,OAAgB7E,IAAA,CAEjC,IADA,GAAAooG,IAAAviG,EAAA7F,KAAA,GAAAojB,SAAA,IACAglF,EAAAvjG,OAAA,GACAujG,EAAA,IAAAA,CAEA7jG,IAAA6jG,EAEA,MAAA7jG,KAGAk1D,IAEAn6D,GAAAm6D,kBAIA,SAAAp6D,EAAAC,EAAAO,GAEA,YA6yBA,SAAAo6D,GAAA9b,EAAAvhC,EAAAiC,GACA,GAAAwf,GAAAzhB,EAAAC,SAAA,UACAsgD,EAAAvgD,EAAAC,SAAA,QACAm6G,EAAAp6G,EAAA9b,IAAA,SACAm2H,EAAAr6G,EAAA9b,IAAA,SACAo2H,EAAAt6G,EAAA9b,IAAA,aACAq2H,EAAAv6G,EAAA9b,IAAA,aACA,QACA,gBACA+d,EACAs/B,EACA9f,EACA8+B,EACA65D,EACAC,EACAC,EACAC,GA3zBA,GAAAxtG,GAAA9pB,EAAA,GACAmsB,EAAAnsB,EAAA,GACAi7B,EAAAj7B,EAAA,GACAi5D,EAAAj5D,EAAA,GACA2X,EAAAmS,EAAAnS,qBACAmB,EAAAgR,EAAAhR,qBACAU,EAAAsQ,EAAAtQ,KACAtW,EAAA4mB,EAAA5mB,OACAT,EAAAqnB,EAAArnB,MACAV,EAAA+nB,EAAA/nB,KACAM,EAAAynB,EAAAznB,KACAunB,EAAAuC,EAAAvC,SACAsR,EAAAD,EAAAC,YACAC,EAAA89B,EAAA99B,WACAo8F,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEA39D,EAAA,WACA,QAAAA,KACA13D,EAAA,uCAgCA,MA9BA03D,GAAA74D,WACAy2H,WAAA,SAAAC,GACAv1H,EAAA,qCAAAu1H,KAGA79D,EAAAmJ,aAAA,SAAAD,EAAA7kC,EAAArU,EAAAyT,EAAAzc,GACA,GAAApE,GAAA6M,EAAAy5C,KAAAtmD,KAAAsmD,EACAt/C,EAAAhH,EAAA9b,IAAA,cACA,KACA,OAAA8iB,GACA,IAAAwzG,GAAAE,MACA,IAAAF,GAAAG,OACA,UAAAO,GAAAC,YAAAn7G,EAAAyhB,EAAArU,EAAAyT,EACA,KAAA25F,GAAAI,eACA,IAAAJ,GAAAK,kBACA,IAAAL,GAAAM,iBACA,IAAAN,GAAAO,kBACA,UAAAG,GAAAE,KAAA90D,EAAA7kC,EAAArU,EAAAyT,EACA,SACA,SAAAh7B,OAAA,4BAAAmhB,IAEG,MAAA/f,GACH,GAAAA,YAAA8U,GACA,KAAA9U,EAIA,OAFAmd,GAAA2D,KAAA,sBAAuC05B,UAAA7mC,EAAAK,iBACvC3V,EAAA2B,GACA,GAAAi0H,GAAAG,QAGAj+D,KAEA89D,IACAA,GAAAI,aAAA,KACAJ,EAAAC,YAAA,WACA,QAAAA,GAAAn7G,EAAAyhB,EAAArU,EAAAyT,GACA99B,KAAA0+B,SACA1+B,KAAAw4H,UAAAv7G,EAAAC,SAAA,UACAld,KAAAy4H,YAAAx7G,EAAA9b,IAAA,eACAnB,KAAAikB,KAAA,SACA,IAAA4Z,GAAA5gB,EAAA9b,IAAA,kBACA08B,GAAAxC,EAAApV,MAAA4X,EAAAxT,EAAAyT,GACA99B,KAAA69B,IACA,IAAA66F,GAAA,EAAAjmE,EAAA,CACA,IAAAx1C,EAAAE,IAAA,WACA,GAAAw7G,GAAA17G,EAAAC,SAAA,SACAw7G,GAAAC,EAAA,GACAlmE,EAAAkmE,EAAA,GAEA,GAAAC,IAAA,EAAAC,GAAA,CACA,IAAA57G,EAAAE,IAAA,WACA,GAAA27G,GAAA77G,EAAAC,SAAA,SACA07G,GAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,KAAA94H,KAAAy4H,cAAAhB,EAAAG,QAAAgB,GAAAC,GAAA,CACA,GAAAvkD,GAAAt0E,KAAAw4H,UAAA,GACA7jD,EAAA30E,KAAAw4H,UAAA,GACAO,EAAA/4H,KAAAw4H,UAAA,GACAxsF,EAAAhsC,KAAAw4H,UAAA,GACAz2C,EAAA/hF,KAAAw4H,UAAA,GACAQ,EAAAh5H,KAAAw4H,UAAA,GACAS,EAAAxzH,KAAA0V,MAAAm5D,EAAAtoC,IAAAsoC,EAAAtoC,IAAA2oC,EAAAoN,IAAApN,EAAAoN,GACAg3C,IAAAC,EAAAC,GAAAD,GAAAD,EAAAE,GACA12H,EAAA,gCAGAvC,KAAA44H,cACA54H,KAAA64H,WACA,IAAA7pF,GAAA/xB,EAAA9b,IAAA,YACAgrB,EAAAiP,EAAA2T,WAAA1kB,EAAA2kB,GACA8B,EAAA2hB,EAAAimE,EACA9wB,EAAA92D,EAAA,GACAooF,EAAAl5H,KAAAk5H,aACA,IAAAR,GAAAjmE,GAAAm1C,GAAA,EAEA,WADA3lG,GAAA,sBAKA,QADA6oF,GADAhoD,EAAA,GAAA7C,cAAApC,EAAAN,UAAA47F,EAAA,GAAAl5F,cAAA,GAEA5/B,EAAAq4H,EAAkBr4H,GAAAoyD,EAASpyD,GAAAunG,EAAA,CAC3BuxB,EAAA,GAAA94H,EACA8rB,EAAAgtG,EAAA,EAAAr2F,EAAA,GACAgoD,EAAAjtD,EAAAtB,OAAAuG,EAAA,EACA,IAAAs2F,GAAA1/G,EAAAE,WAAAkxE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAouC,GAAArzH,OACAxF,EAAAq4H,GAAA5nF,EACAsoF,IAGA,GAAAC,GAAA,aACAp8G,GAAAE,IAAA,gBACA2tE,EAAAjtD,EAAAtB,OAAAtf,EAAA9b,IAAA,iBACAk4H,EAAA3/G,EAAAE,WAAAkxE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA8tC,IACAM,EAAAt8G,SACA,EACAy8G,IAEAH,EAAA,OAAAf,EAAAI,cAEAM,IACAK,IAAAh0H,OAAA,OAAAizH,EAAAI,aACAW,EAAArzH,MACA,EACAwzH,KAGAr5H,KAAAk5H,aAuDA,MArDAd,GAAA52H,WACA0yB,MAAA,WACA,GAEAjQ,GAAAytG,EAAAn3G,EAAA++G,EAAAP,EAFAP,EAAAx4H,KAAAw4H,UACAC,EAAAz4H,KAAAy4H,WAEAA,KAAAhB,EAAAE,OACAjG,GACA8G,EAAA,GACAA,EAAA,IAEAj+G,GACAi+G,EAAA,GACAA,EAAA,IAEAc,EAAA,KACAP,EAAA,KACA90G,EAAA,SACIw0G,IAAAhB,EAAAG,QACJlG,GACA8G,EAAA,GACAA,EAAA,IAEAj+G,GACAi+G,EAAA,GACAA,EAAA,IAEAc,EAAAd,EAAA,GACAO,EAAAP,EAAA,GACAv0G,EAAA,UAEAthB,EAAA,4BAAA81H,EAEA,IAAA/5F,GAAA1+B,KAAA0+B,MACA,IAAAA,IACAgzF,EAAAh4G,EAAAQ,eAAAw3G,EAAAhzF,GACAnkB,EAAAb,EAAAQ,eAAAK,EAAAmkB,GACA+5F,IAAAhB,EAAAG,QAAA,CACA,GAAA55G,GAAAtE,EAAAoB,8BAAA4jB,EACA46F,IAAAt7G,EAAA,GACA+6G,GAAA/6G,EAAA,GAGA,OACA,cACAiG,EACAjkB,KAAAk5H,WACAxH,EACAn3G,EACA++G,EACAP,KAIAX,KAEAD,EAAAE,KAAA,WACA,QAAAkB,GAAA5qG,EAAAqiD,GACAhxE,KAAA2uB,SACA3uB,KAAAgxE,UACAhxE,KAAAwH,OAAA,EACAxH,KAAA8tB,aAAA,CACA,IAAAyP,GAAAyzC,EAAAzzC,QACAv9B,MAAAw5H,YAAA,GAAAv5F,cAAA1C,EACA,IAAAk8F,GAAAzoD,EAAAhV,WAAAz+B,QACAv9B,MAAA05H,cAAA1oD,EAAA2oD,QAAA,GAAA15F,cAAAw5F,GAAAz5H,KAAAw5H,YA6EA,QAAAI,GAAAC,EAAAhhF,GAMA,IALA,GAAAihF,GAAAD,EAAAC,OACA9nG,EAAA6nG,EAAA7nG,OACA2gB,KACAonF,KACAC,EAAA,EACAnhF,EAAAohF,SAAA,CACA,GAAAxpE,GAAA5X,EAAAqhF,WACAC,EAAAthF,EAAAuhF,iBACAt3F,EAAA+V,EAAAwhF,gBACA,QAAAL,EAAA,CAEA,OADA52H,EAAA,GAAAqtD,MAAA,wBACAA,GACA,OACAupE,EAAA,CACA,MACA,QACAD,EAAAl0H,KAAAk0H,IAAA70H,OAAA,GAAA60H,IAAA70H,OAAA,IACA80H,EAAA,CACA,MACA,QACAD,EAAAl0H,KAAAk0H,IAAA70H,OAAA,GAAA60H,IAAA70H,OAAA,IACA80H,EAAA,EAGArnF,EAAA9sC,KAAA4qD,GAEAspE,EAAAl0H,KAAAi0H,EAAA50H,QACA40H,EAAAj0H,KAAAs0H,GACAnoG,EAAAnsB,KAAAi9B,GACAk3F,IACAnhF,EAAAyhF,QAEAT,EAAAU,QAAA10H,MACAoe,KAAA,YACA61G,OAAA,GAAAzqG,YAAA0qG,GACA/nG,OAAA,GAAA3C,YAAA0qG,KAGA,QAAAS,GAAAX,EAAAhhF,EAAA4hF,GAIA,IAHA,GAAAX,GAAAD,EAAAC,OACA9nG,EAAA6nG,EAAA7nG,OACA+nG,KACAlhF,EAAAohF,SAAA,CACA,GAAAE,GAAAthF,EAAAuhF,iBACAt3F,EAAA+V,EAAAwhF,gBACAN,GAAAl0H,KAAAi0H,EAAA50H,QACA40H,EAAAj0H,KAAAs0H,GACAnoG,EAAAnsB,KAAAi9B,GAEA+2F,EAAAU,QAAA10H,MACAoe,KAAA,UACA61G,OAAA,GAAAzqG,YAAA0qG,GACA/nG,OAAA,GAAA3C,YAAA0qG,GACAU,mBA4BA,QAAAC,GAAAb,EAAAtgH,GACA,GAAAohH,GAAAd,EAAAU,QAAAhhH,EACAnW,GAAA,UAAAu3H,EAAA12G,KAAA,+BACA,IAAA61G,GAAAD,EAAAC,OAAA9nG,EAAA6nG,EAAA7nG,OACAmnD,EAAAwhD,EAAAb,OACAc,EAAAD,EAAA3oG,OACA6oG,EAAAp1H,KAAAC,IAAAo0H,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,QAAA2gD,EAAA3gD,EAAA,SACA2hD,EAAAr1H,KAAAC,IAAAo0H,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,QAAA2gD,EAAA3gD,EAAA,SACA4hD,EAAAt1H,KAAAkV,IAAAm/G,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,QAAA2gD,EAAA3gD,EAAA,SACA6hD,EAAAv1H,KAAAkV,IAAAm/G,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,OAAA2gD,EAAA3gD,EAAA,QAAA2gD,EAAA3gD,EAAA,SACA8hD,EAAAx1H,KAAAstC,MAAAgoF,EAAAF,GAAAK,GAAArB,EAAA5oF,OAAA,GAAA4oF,EAAA5oF,OAAA,IACAgqF,GAAAx1H,KAAAkV,IAAAwgH,EAAA11H,KAAAC,IAAA01H,EAAAH,GACA,IAAAI,GAAA51H,KAAAstC,MAAAioF,EAAAF,GAAAI,GAAArB,EAAA5oF,OAAA,GAAA4oF,EAAA5oF,OAAA,IACAoqF,GAAA51H,KAAAkV,IAAAwgH,EAAA11H,KAAAC,IAAA01H,EAAAC,GAQA,QAPAZ,GAAAQ,EAAA,EACAK,EAAA,GAAAjsG,aAAAgsG,EAAA,GAAAZ,GACAc,EAAA,GAAAlsG,aAAAgsG,EAAA,GAAAZ,GACAjpG,EAAA,EACAgqG,EAAA,GAAAz1H,YAAA,GAAA01H,EAAA,GAAA11H,YAAA,GACA6qC,EAAA5e,EAAA4oG,EAAA,IAAA/pF,EAAA7e,EAAA4oG,EAAA,IAAAc,EAAA1pG,EAAA4oG,EAAA,IAAAe,EAAA3pG,EAAA4oG,EAAA,IACAgB,EAAAC,EAAAR,GAAAS,EAAAD,EAAAZ,GACA3jG,EAAA,EAAmBA,GAAA+jG,EAAiB/jG,IAAA,CACpCkkG,EAAA,IAAA5qF,EAAA,IAAAyqF,EAAA/jG,GAAAokG,EAAA,GAAApkG,GAAA+jG,EAAA,EACAG,EAAA,IAAA5qF,EAAA,IAAAyqF,EAAA/jG,GAAAokG,EAAA,GAAApkG,GAAA+jG,EAAA,EACAG,EAAA,IAAA5qF,EAAA,IAAAyqF,EAAA/jG,GAAAokG,EAAA,GAAApkG,GAAA+jG,EAAA,EACAI,EAAA,IAAA5qF,EAAA,IAAAwqF,EAAA/jG,GAAAqkG,EAAA,GAAArkG,GAAA+jG,EAAA,EACAI,EAAA,IAAA5qF,EAAA,IAAAwqF,EAAA/jG,GAAAqkG,EAAA,GAAArkG,GAAA+jG,EAAA,EACAI,EAAA,IAAA5qF,EAAA,IAAAwqF,EAAA/jG,GAAAqkG,EAAA,GAAArkG,GAAA+jG,EAAA,CACA,QAAA/M,GAAA,EAAoBA,GAAA2M,EAAiB3M,IAAA98F,IACrC,OAAA8F,OAAA+jG,GAAA,IAAA/M,OAAA2M,EAAA,CAKA,OAFAn0H,GAAA,EAAAsY,EAAA,EACAsb,EAAA,EACAr6B,EAAA,EAAmBA,GAAA,EAAQA,IAC3B,OAAAsyB,GAAA,EAAoBA,GAAA,EAAQA,IAAA+H,IAAA,CAC5B,GAAAl6B,GAAAo7H,EAAAtkG,GAAAj3B,GAAAy7H,EAAAxN,GAAA37F,EACA7rB,IAAAgzH,EAAA3gD,EAAAz+C,IAAA,GAAAl6B,EACA4e,GAAA06G,EAAA3gD,EAAAz+C,IAAA,GAAAl6B,EAGA86H,EAAA9pG,GAAAsoG,EAAA50H,OACA40H,EAAAj0H,MACAiB,EACAsY,IAEAm8G,EAAA/pG,GAAAQ,EAAA9sB,MACA,IAAA62H,GAAA,GAAAh2H,YAAA,EACAg2H,GAAA,IAAAP,EAAA,IAAAP,EAAA3M,GAAAmN,EAAA,GAAAnN,GAAA2M,EAAA,EACAc,EAAA,IAAAP,EAAA,IAAAP,EAAA3M,GAAAmN,EAAA,GAAAnN,GAAA2M,EAAA,EACAc,EAAA,IAAAP,EAAA,IAAAP,EAAA3M,GAAAmN,EAAA,GAAAnN,GAAA2M,EAAA,EACAjpG,EAAAnsB,KAAAk2H,IAGAT,EAAA,GAAAniD,EAAA,GACAoiD,EAAA,GAAAX,EAAA,GACAU,EAAAL,GAAA9hD,EAAA,GACAoiD,EAAAN,GAAAL,EAAA,GACAU,EAAAb,EAAAY,GAAAliD,EAAA,IACAoiD,EAAAd,EAAAY,GAAAT,EAAA,GACAU,EAAAb,EAAAY,EAAAJ,GAAA9hD,EAAA,IACAoiD,EAAAd,EAAAY,EAAAJ,GAAAL,EAAA,GACAf,EAAAU,QAAAhhH,IACA0K,KAAA,UACA61G,OAAAwB,EACAtpG,OAAAupG,EACAd,kBAGA,QAAAuB,GAAAnC,EAAAhhF,GAKA,IAJA,GAAAihF,GAAAD,EAAAC,OACA9nG,EAAA6nG,EAAA7nG,OACA+nG,EAAA,GAAA1qG,YAAA,IACAwO,EAAA,GAAAxO,YAAA,GACAwpB,EAAAohF,SAAA,CACA,GAAAxpE,GAAA5X,EAAAqhF,UACA92H,GAAA,GAAAqtD,MAAA,uBACA,IAAApwD,GAAAmG,EACA2yE,EAAA2gD,EAAA50H,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAAiqD,EAAA,KAAqCpwD,EAAAmG,EAAQnG,IAC7Cy5H,EAAAj0H,KAAAgzC,EAAAuhF,iBAEA,IAAAQ,GAAA5oG,EAAA9sB,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAAiqD,EAAA,IAAoCpwD,EAAAmG,EAAQnG,IAC5C2xB,EAAAnsB,KAAAgzC,EAAAwhF,iBAEA,IAAAvnE,GAAA7C,EAAA4C,EAAAopE,CACA,QAAAxrE,GACA,OACAspE,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACAt7C,EAAA,GAAA+8F,EAAA,EACA/8F,EAAA,GAAA+8F,EAAA,EACA/8F,EAAA,GAAA+8F,EACA/8F,EAAA,GAAA+8F,EAAA,CACA,MACA,QACA9nE,EAAAinE,EAAA,IACA9pE,EAAA8pE,EAAA,IACAlnE,EAAAknE,EAAA,IACAkC,EAAAlC,EAAA,IACAA,EAAA,IAAAkC,EACAlC,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAlnE,EACAknE,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA9pE,EACA8pE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAjnE,EACAinE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACArmB,EAAAj1B,EAAA,GACAoyB,EAAApyB,EAAA,GACAA,EAAA,GAAAoyB,EACApyB,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAi1B,EACAj1B,EAAA,GAAA+8F,EAAA,CACA,MACA,QACA9nE,EAAAinE,EAAA,IACA9pE,EAAA8pE,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA9pE,EACA8pE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAjnE,EACAinE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACArmB,EAAAj1B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAi1B,EACAj1B,EAAA,GAAA+8F,EAAA,CACA,MACA,QACAb,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACAt7C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EAAA,EAGAb,EAAA,GAAAD,EAAA50H,OACA40H,EAAAj0H,QACA,EAAAi0H,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aAEAA,EAAA,GAAAD,EAAA50H,OACA40H,EAAAj0H,QACA,EAAAi0H,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,cACA,EAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,cAEAA,EAAA,GAAAD,EAAA50H,OACA40H,EAAAj0H,QACA,EAAAi0H,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aAEAA,EAAA,IAAAD,EAAA50H,OACA40H,EAAAj0H,QACA,EAAAi0H,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,aAEAF,EAAAU,QAAA10H,MACAoe,KAAA,QACA61G,OAAA,GAAAzqG,YAAA0qG,GACA/nG,OAAA,GAAA3C,YAAAwO,MAIA,QAAAq+F,GAAArC,EAAAhhF,GAKA,IAJA,GAAAihF,GAAAD,EAAAC,OACA9nG,EAAA6nG,EAAA7nG,OACA+nG,EAAA,GAAA1qG,YAAA,IACAwO,EAAA,GAAAxO,YAAA,GACAwpB,EAAAohF,SAAA,CACA,GAAAxpE,GAAA5X,EAAAqhF,UACA92H,GAAA,GAAAqtD,MAAA,uBACA,IAAApwD,GAAAmG,EACA2yE,EAAA2gD,EAAA50H,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAAiqD,EAAA,MAAsCpwD,EAAAmG,EAAQnG,IAC9Cy5H,EAAAj0H,KAAAgzC,EAAAuhF,iBAEA,IAAAQ,GAAA5oG,EAAA9sB,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAAiqD,EAAA,IAAoCpwD,EAAAmG,EAAQnG,IAC5C2xB,EAAAnsB,KAAAgzC,EAAAwhF,iBAEA,IAAAvnE,GAAA7C,EAAA4C,EAAAopE,CACA,QAAAxrE,GACA,OACAspE,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,IAAA5gD,EAAA,GACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACAt7C,EAAA,GAAA+8F,EAAA,EACA/8F,EAAA,GAAA+8F,EAAA,EACA/8F,EAAA,GAAA+8F,EACA/8F,EAAA,GAAA+8F,EAAA,CACA,MACA,QACA9nE,EAAAinE,EAAA,IACA9pE,EAAA8pE,EAAA,IACAlnE,EAAAknE,EAAA,IACAkC,EAAAlC,EAAA,IACAA,EAAA,IAAAkC,EACAlC,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAlnE,EACAknE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,GACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA9pE,EACA8pE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAjnE,EACAinE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACArmB,EAAAj1B,EAAA,GACAoyB,EAAApyB,EAAA,GACAA,EAAA,GAAAoyB,EACApyB,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAi1B,EACAj1B,EAAA,GAAA+8F,EAAA,CACA,MACA,QACA9nE,EAAAinE,EAAA,IACA9pE,EAAA8pE,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,GACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAA9pE,EACA8pE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAjnE,EACAinE,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACArmB,EAAAj1B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAi1B,EACAj1B,EAAA,GAAA+8F,EAAA,CACA,MACA,QACAb,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,IAAA5gD,EAAA,GACA4gD,EAAA,IAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,GACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACA4gD,EAAA,GAAA5gD,EAAA,EACAt7C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EACA/8F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+8F,EAAA,EAGAf,EAAAU,QAAA10H,MACAoe,KAAA,QACA61G,OAAA,GAAAzqG,YAAA0qG,GACA/nG,OAAA,GAAA3C,YAAAwO,MAIA,QAAAs+F,GAAAtC,GAEA,OADAv/B,GAAAu/B,EAAAC,OAAA,MAAAv/B,EAAAs/B,EAAAC,OAAA,MAAAroD,EAAA6oB,EAAAE,EAAAD,EACAl6F,EAAA,EAAAmG,EAAAqzH,EAAAC,OAAA50H,OAA0C7E,EAAAmG,EAAQnG,IAAA,CAClD,GAAAyG,GAAA+yH,EAAAC,OAAAz5H,GAAA,GAAA+e,EAAAy6G,EAAAC,OAAAz5H,GAAA,EACAi6F,KAAAxzF,IAAAwzF,EACAC,IAAAn7E,IAAAm7E,EACA9oB,IAAA3qE,IAAA2qE,EACA+oB,IAAAp7E,IAAAo7E,EAEAq/B,EAAA5oF,QACAqpD,EACAC,EACA9oB,EACA+oB,GAGA,QAAA4hC,GAAAvC,GACA,GAAAx5H,GAAAmG,EAAAmsB,EAAAuc,EACA4qF,EAAAD,EAAAC,OACAuC,EAAA,GAAAp8F,cAAA,EAAA65F,EAAA50H,OACA,KAAA7E,EAAA,EAAAsyB,EAAA,EAAAnsB,EAAAszH,EAAA50H,OAAwC7E,EAAAmG,EAAQnG,IAAA,CAChD,GAAAi8H,GAAAxC,EAAAz5H,EACAg8H,GAAA1pG,KAAA2pG,EAAA,GACAD,EAAA1pG,KAAA2pG,EAAA,GAEAzC,EAAAC,OAAAuC,CACA,IAAArqG,GAAA6nG,EAAA7nG,OACAuqG,EAAA,GAAAx2H,YAAA,EAAAisB,EAAA9sB,OACA,KAAA7E,EAAA,EAAAsyB,EAAA,EAAAnsB,EAAAwrB,EAAA9sB,OAAwC7E,EAAAmG,EAAQnG,IAAA,CAChD,GAAAI,GAAAuxB,EAAA3xB,EACAk8H,GAAA5pG,KAAAlyB,EAAA,GACA87H,EAAA5pG,KAAAlyB,EAAA,GACA87H,EAAA5pG,KAAAlyB,EAAA,GAEAo5H,EAAA7nG,OAAAuqG,CACA,IAAAhC,GAAAV,EAAAU,OACA,KAAAl6H,EAAA,EAAAmG,EAAA+zH,EAAAr1H,OAAkC7E,EAAAmG,EAAQnG,IAAA,CAC1C,GAAAs6H,GAAAJ,EAAAl6H,GAAA05H,EAAAY,EAAAb,OAAAj8F,EAAA88F,EAAA3oG,MACA,KAAAW,EAAA,EAAAuc,EAAA6qF,EAAA70H,OAA8BytB,EAAAuc,EAAQvc,IACtConG,EAAApnG,IAAA,EACAkL,EAAAlL,IAAA,GAIA,QAAA0lG,GAAA1pG,EAAA+P,EAAArU,EAAAyT,GACA16B,EAAA0mB,EAAA6E,GAAA,4BACA,IAAA1R,GAAA0R,EAAA1R,IACAjd,MAAA0+B,SACA1+B,KAAAy4H,YAAAx7G,EAAA9b,IAAA,eACAnB,KAAAikB,KAAA,UACAjkB,KAAAw9D,KAAAvgD,EAAAC,SAAA,OACA,IAAA2gB,GAAA5gB,EAAA9b,IAAA,kBACA08B,GAAAxC,EAAApV,MAAA4X,EAAAxT,EAAAyT,GACA99B,KAAA69B,KACA79B,KAAAq5H,WAAAp8G,EAAAE,IAAA,cAAA0gB,EAAAtB,OAAAtf,EAAA9b,IAAA,qBACA,IAAA6tC,GAAA/xB,EAAA9b,IAAA,YACAgrB,EAAA6iB,EAAA5T,EAAA2T,WAAA1kB,EAAA2kB,GAAA,IACAhvC,MAAA85H,UACA95H,KAAAgyB,UACAhyB,KAAAu6H,UACA,IAAAiC,IACAC,kBAAAx/G,EAAA9b,IAAA,qBACAsyB,iBAAAxW,EAAA9b,IAAA,oBACAu7H,YAAAz/G,EAAA9b,IAAA,eACAw+B,OAAA1iB,EAAAC,SAAA,UACAy8G,QAAAxtG,EACA6vC,WAAAn+B,EACAN,SAAApR,EAAA,EAAA0R,EAAAN,UAEAsb,EAAA,GAAA0gF,GAAA5qG,EAAA6tG,GACAG,GAAA,CACA,QAAA38H,KAAAy4H,aACA,IAAAhB,GAAAI,eACA+B,EAAA55H,KAAA64C,EACA,MACA,KAAA4+E,GAAAK;AACA,GAAA2C,GAAA,EAAAx9G,EAAA9b,IAAA,iBACAiC,GAAAq3H,GAAA,4BACAD,EAAAx6H,KAAA64C,EAAA4hF,EACA,MACA,KAAAhD,GAAAM,iBACAiE,EAAAh8H,KAAA64C,GACA8jF,GAAA,CACA,MACA,KAAAlF,GAAAO,kBACAkE,EAAAl8H,KAAA64C,GACA8jF,GAAA,CACA,MACA,SACAh6H,EAAA,0BAGA,GAAAg6H,EAAA,CACAR,EAAAn8H,KACA,QAAAK,GAAA,EAAAmG,EAAAxG,KAAAu6H,QAAAr1H,OAA4C7E,EAAAmG,EAAQnG,IACpDq6H,EAAA16H,KAAAK,GAGA87H,EAAAn8H,MACAo8H,EAAAp8H,MAjkBAu5H,EAAA/3H,WACAy4H,cACA,GAAAj6H,KAAA2uB,OAAAzV,IACA,MAAAlZ,MAAA2uB,OAAAloB,IAAAzG,KAAA2uB,OAAAzV,GAEA,IAAAlZ,KAAA8tB,aAAA,EACA,QAEA,IAAAmhG,GAAAjvH,KAAA2uB,OAAA5B,SACA,SAAAkiG,EAAA,KAGAjvH,KAAAwH,OAAAynH,EACAjvH,KAAA8tB,aAAA,GACA,IAEA0M,SAAA,SAAAp5B,GACA,GAAAoG,GAAAxH,KAAAwH,OACAsmB,EAAA9tB,KAAA8tB,YACA,SAAA1sB,EAAA,CACA,OAAA0sB,EACA,OAAA9tB,KAAA2uB,OAAA5B,WAAA,GAAA/sB,KAAA2uB,OAAA5B,WAAA,GAAA/sB,KAAA2uB,OAAA5B,WAAA,EAAA/sB,KAAA2uB,OAAA5B,aAAA,CAEAvlB,MAAA,GAAAxH,KAAA2uB,OAAA5B,WAAA,GAAA/sB,KAAA2uB,OAAA5B,WAAA,EAAA/sB,KAAA2uB,OAAA5B,SACA,IAAAkiG,GAAAjvH,KAAA2uB,OAAA5B,SAEA,OADA/sB,MAAAwH,OAAAynH,GAAA,GAAAnhG,GAAA,GACAtmB,GAAA,EAAAsmB,GAAA,IAAAmhG,IAAAnhG,KAAA,EAEA,OAAA1sB,GAAA,IAAA0sB,EACA,MAAA9tB,MAAA2uB,OAAA5B,SAEA,MAAAe,EAAA1sB,GACAoG,KAAA,EAAAxH,KAAA2uB,OAAA5B,UACAe,GAAA,CAKA,OAHAA,IAAA1sB,EACApB,KAAA8tB,eACA9tB,KAAAwH,UAAA,GAAAsmB,GAAA,EACAtmB,GAAAsmB,GAEAwsG,MAAA,WACAt6H,KAAAwH,OAAA,EACAxH,KAAA8tB,aAAA,GAEAosG,SAAA,WACA,MAAAl6H,MAAAw6B,SAAAx6B,KAAAgxE,QAAA0rD,cAEAtC,eAAA,WACA,GAAAqC,GAAAz8H,KAAAgxE,QAAAyrD,kBACArsF,EAAApwC,KAAAw6B,SAAAiiG,GACAG,EAAA58H,KAAAw6B,SAAAiiG,GACA98F,EAAA3/B,KAAAgxE,QAAArxC,OACA3hB,EAAAy+G,EAAA,UAAAA,GAAA,yBACA,QACArsF,EAAApyB,GAAA2hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACAi9F,EAAA5+G,GAAA2hB,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAGA06F,eAAA,WAMA,OALA98F,GAAAv9B,KAAAgxE,QAAAzzC,SACA9J,EAAAzzB,KAAAgxE,QAAAv9C,iBACAzV,EAAAyV,EAAA,UAAAA,GAAA,0BACAkM,EAAA3/B,KAAAgxE,QAAArxC,OACAm1C,EAAA90E,KAAAw5H,YACAn5H,EAAA,EAAAsyB,EAAA,EAAyBtyB,EAAAk9B,EAAcl9B,IAAAsyB,GAAA,GACvC,GAAAioG,GAAA56H,KAAAw6B,SAAA/G,EACAqhD,GAAAz0E,GAAAu6H,EAAA58G,GAAA2hB,EAAAhN,EAAA,GAAAgN,EAAAhN,IAAAgN,EAAAhN,GAEA,GAAAmQ,GAAA9iC,KAAA05H,aAIA,OAHA15H,MAAAgxE,QAAA2oD,SACA35H,KAAAgxE,QAAA2oD,QAAA7kD,EAAA,EAAAhyC,EAAA,GAEA9iC,KAAAgxE,QAAAhV,WAAAz/B,OAAAuG,EAAA,IA4DA,IAAAq4F,GAAA,EACAC,EAAA,GACAF,EAAA,GACAW,EAAA,WACA,QAAAgB,GAAAl9G,GAEA,OADAm9G,MACAz8H,EAAA,EAAkBA,GAAAsf,EAAYtf,IAAA,CAC9B,GAAAkwB,GAAAlwB,EAAAsf,EAAAo9G,EAAA,EAAAxsG,CACAusG,GAAAj3H,KAAA,GAAAo6B,eACA88F,MACA,EAAAxsG,EAAAwsG,IACA,EAAAxsG,IAAAwsG,EACAxsG,SAGA,MAAAusG,GAEA,GAAAhrF,KACA,iBAAAnyB,GAIA,MAHAmyB,GAAAnyB,KACAmyB,EAAAnyB,GAAAk9G,EAAAl9G,IAEAmyB,EAAAnyB,MAwbA,OAfA04G,GAAA72H,WACA0yB,MAAA,WACA,OACA,OACAl0B,KAAAy4H,YACAz4H,KAAA85H,OACA95H,KAAAgyB,OACAhyB,KAAAu6H,QACAv6H,KAAAixC,OACAjxC,KAAA0+B,OACA1+B,KAAAw9D,KACAx9D,KAAAq5H,cAIAhB,KAEAF,EAAAG,MAAA,WACA,QAAAA,KACAt4H,KAAAikB,KAAA,UAOA,MALAq0G,GAAA92H,WACA0yB,MAAA,WACA,kBAGAokG,KAqBA34H,EAAA06D,UACA16D,EAAA26D,sBAIA,SAAA56D,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAmnC,EAAAnnC,EAAA,GACAypF,EAAAzpF,EAAA,IACA88H,EAAA98H,EAAA,IACAqC,EAAAynB,EAAAznB,KACAyB,EAAAgmB,EAAAhmB,uBACAG,EAAA6lB,EAAA7lB,OACA4U,EAAAiR,EAAAjR,wBACAC,EAAAgR,EAAAhR,qBACA7P,EAAA6gB,EAAA7gB,wBACAuQ,EAAAsQ,EAAAtQ,KACAkT,EAAAya,EAAAza,OACAihC,EAAA87B,EAAA97B,qBACAw4C,EAAA22B,EAAA32B,YACA42B,EAAA,WACA,QAAAA,KACA,SAAAn6H,OAAA,wCA0DA,MAxDAm6H,GAAAz7H,WACA+5C,YACA,MAAAv7C,MAAAk9H,QAEA1hF,eACA,MAAAx7C,MAAAunB,WAEAk0B,iBACA,GAAAA,GAAA,IACA,IAAAz7C,KAAAm9H,YAAA,CACA,GAAAl5H,GAAAD,EAAAhE,KAAAm9H,YACAl5H,GACAw3C,EAAAx3C,EAAAqkB,KAEA/lB,EAAA,iCAAAvC,KAAAm9H,YAAA,MAGA,MAAAh5H,GAAAnE,KAAA,aAAAy7C,IAEAqB,eAAA,WACA,SAAA/jC,IAEA6hC,UAAA,SAAAv2C,EAAA6a,GACA,MAAAlf,MAAAy9C,OAAAz9C,KAAAi+C,YAAA55C,EAAA6a,IAEA67B,WAAA,SAAA12C,EAAA6a,GACA,MAAAlf,MAAAy9C,OAAAz9C,KAAAi+C,YAAA5zB,KAAAhmB,EAAA6a,IAEAi/B,cAAA,SAAA95C,EAAA6a,GACA,MAAAlf,MAAAy9C,OAAAz9C,KAAAi+C,YAAAD,QAAA35C,EAAA6a,IAEAm+B,QAAA,SAAAC,GACA,MAAAt9C,MAAAi+C,YAAAZ,QAAAC,IAEA2B,QAAA,WACA,MAAAj/C,MAAAi+C,YAAAgB,WAEAxB,OAAA,SAAAr5C,EAAAC,EAAA6a,GACA,UAAAnG,IAEAi2C,aAAA,SAAA/1C,EAAAC,GACA,UAAAH,IAEA8jC,oBAAA,WACA,UAAA9jC,IAEAujC,oBAAA,SAAA32C,GACA,UAAAoT,IAEA4jC,eAAA,SAAAnB,GACAx7C,KAAAunB,UAAAi0B,GAEA5E,UAAA,WACA,UAAA79B,KAGAkkH,KAEA5mF,EAAA,WACA,QAAAA,GAAAkF,EAAA70C,EAAA80C,EAAAH,EAAAI,GACAz7C,KAAAk9H,OAAA3hF,EACAv7C,KAAAunB,UAAAi0B,EACAx7C,KAAAm9H,YAAA1hF,EACAz7C,KAAAq7C,kBACA,IAAA1sB,GAAA,GAAA/B,GAAAlmB,EACA1G,MAAAi+C,YAAA,GAAAooD,GAAArmG,KAAA2uB,GACA3uB,KAAAouD,wBAAAjlD,IACAnJ,KAAAouD,wBAAA7kD,QAAAolB,GA8BA,MA5BAjV,GAAA0D,QAAAi5B,EAAA4mF,GACAx/E,OAAA,SAAAr5C,EAAAC,EAAA6a,GACA,UAAA5V,SAAA,SAAAC,EAAAC,GACA,IACA,GACAiB,GADA/J,EAAA0D,EAAAC,EAGAoG,GADA,kBAAA/J,GACAA,EAAA4E,MAAAlB,EAAA8a,GAEAxe,EAEA6I,EAAAkB,GACK,MAAA1H,GACLyG,EAAAzG,OAIAisD,aAAA,SAAA/1C,EAAAC,GACA,MAAA5P,SAAAC,WAEAszC,oBAAA,aAEAC,eAAA,WACA,MAAA98C,MAAAouD,wBAAA/kD,SAEAutC,UAAA,eAGAP,KAEAC,EAAA,WACA,QAAAA,GAAAiF,EAAAuS,EAAA5uC,EAAAm8B,EAAAI,GACAz7C,KAAAk9H,OAAA3hF,EACAv7C,KAAAunB,UAAArI,EAAAs8B,SACAx7C,KAAAm9H,YAAA1hF,EACAz7C,KAAA+2C,WAAA73B,EAAA63B,WACA/2C,KAAAq7C,kBACA,IAAAzpB,IACAmlB,WAAA73B,EAAA63B,WACAjzC,IAAAob,EAAApb,IACAoB,OAAAga,EAAAha,OACA42C,iBAAA58B,EAAA48B,iBACAC,eAAA78B,EAAA68B,eAEA/7C,MAAAyyF,cAAA,GAAA5kC,GAAAC,EAAAl8B,GACA5xB,KAAAi+C,YAAA,GAAAooD,GAAArmG,UAAAyyF,cAAA1jC,aA2CA,MAzCAr1C,GAAA0D,QAAAk5B,EAAA2mF,GACAx/E,OAAA,SAAAr5C,EAAAC,EAAA6a,GACA,GAAAy7B,GAAA36C,IACA,WAAAsJ,SAAA,SAAAC,EAAAC,GACA,QAAA4zH,KACA,IACA,GAAA3yH,GACA/J,EAAA0D,EAAAC,EAEAoG,GADA,kBAAA/J,GACAA,EAAA4E,MAAAlB,EAAA8a,GAEAxe,EAEA6I,EAAAkB,GACM,MAAA1H,GACN,KAAAA,YAAAiW,IAEA,WADAxP,GAAAzG,EAGA43C,GAAA83C,cAAAzjC,aAAAjsD,EAAAkW,MAAAlW,EAAAmW,KAAA1O,KAAA4yH,EAAA5zH,IAGA4zH,OAGApuE,aAAA,SAAA/1C,EAAAC,GACA,MAAAlZ,MAAAyyF,cAAAzjC,aAAA/1C,EAAAC,IAEA2jC,oBAAA,WACA78C,KAAAyyF,cAAAlkC,oBAEAjS,oBAAA,SAAA32C,GACA3F,KAAAyyF,cAAA1lC,eAAqCpnD,WAErCm3C,eAAA,WACA,MAAA98C,MAAAyyF,cAAA31C,kBAEAlG,UAAA,WACA52C,KAAAyyF,cAAA5iC,WAGAvZ,IAEA32C,GAAA02C,kBACA12C,EAAA22C,qBAIA,SAAA52C,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAmsB,EAAAnsB,EAAA,GACAyC,EAAAqnB,EAAArnB,MACAoG,EAAAihB,EAAAjhB,QACA2d,EAAA2F,EAAA3F,IACA+mB,EAAA,WACA,QAAAA,GAAAjG,GACAxnC,KAAAwnC,QACAxnC,KAAA2yC,aACA3yC,KAAAqrE,MAAA,KACArrE,KAAA6vE,KAAA,KAgEA,MA9DApiC,GAAAjsC,WACA67H,UAAA,WACAr9H,KAAA6vE,KAAA7vE,KAAAqrE,MACArrE,KAAAqrE,MAAArrE,KAAAwnC,MAAA81F,YAEAC,OAAA,SAAAt5G,GACA,MAAAjkB,MAAAqrE,MAAApnD,WACAjkB,KAAAq9H,aACA,IAIAG,OAAA,SAAAv5G,GACA,QAAAjkB,KAAAu9H,OAAAt5G,QAGAthB,GAAA,4BAAA3C,KAAAqrE,MAAApnD,KAAA,aAAAA,EAAA,MAEAgC,MAAA,WAKA,MAJAjmB,MAAAq9H,YACAr9H,KAAAw9H,OAAAC,EAAAC,QACA19H,KAAA29H,aACA39H,KAAAw9H,OAAAC,EAAAG,QACA59H,KAAA2yC,WAEAgrF,WAAA,WACA,OACA,GAAA39H,KAAAu9H,OAAAE,EAAAI,QACA79H,KAAA2yC,UAAA9sC,KAAA7F,KAAA6vE,KAAAnvE,WACK,IAAAV,KAAAu9H,OAAAE,EAAAK,UACL99H,KAAA2yC,UAAA9sC,KAAA7F,KAAA6vE,KAAAnvE,WACK,KAAAV,KAAAu9H,OAAAE,EAAAC,QAGL,MAFA19H,MAAA+9H,mBAMAA,eAAA,WACA,GAAAC,GAAAh+H,KAAA2yC,UAAAztC,MAIA,IAHAlF,KAAA2yC,UAAA9sC,KAAA,WACA7F,KAAA29H,aACA39H,KAAAw9H,OAAAC,EAAAG,QACA59H,KAAAu9H,OAAAE,EAAAQ,IACAj+H,KAAA2yC,UAAAqrF,GAAAh+H,KAAA2yC,UAAAztC,OACAlF,KAAA2yC,UAAAqrF,EAAA,YACI,IAAAh+H,KAAAu9H,OAAAE,EAAAC,QAAA,CACJ,GAAAQ,GAAAl+H,KAAA2yC,UAAAztC,MACAlF,MAAA2yC,UAAA9sC,KAAA,UACA,IAAAs4H,GAAAn+H,KAAA2yC,UAAAztC,MACAlF,MAAA29H,aACA39H,KAAAw9H,OAAAC,EAAAG,QACA59H,KAAAw9H,OAAAC,EAAAW,QACAp+H,KAAA2yC,UAAAurF,GAAAl+H,KAAA2yC,UAAAztC,OACAlF,KAAA2yC,UAAAurF,EAAA,OACAl+H,KAAA2yC,UAAAqrF,GAAAG,EACAn+H,KAAA2yC,UAAAqrF,EAAA,YAEAr7H,GAAA,6CAIA8qC,KAEAgwF,GACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,QAAAA,GAAAp6G,EAAAvjB,GACAV,KAAAikB,OACAjkB,KAAAU,QAEA,GAAA49H,GAAAv9H,OAAA2D,OAAA,KAYA,OAXA25H,GAAAE,YAAA,SAAAhrF,GACA,GAAAirF,GAAAF,EAAA/qF,EACA,OAAAirF,GACAA,EAEAF,EAAA/qF,GAAA,GAAA8qF,GAAAZ,EAAAK,SAAAvqF,IAEA8qF,EAAAX,OAAA,GAAAW,GAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,GAAAS,GAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,GAAAI,GAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,GAAAC,GAAAZ,EAAAW,OAAA,UACAC,KAEA7wF,EAAA,WACA,QAAAA,GAAA7e,GACA3uB,KAAA2uB,SACA3uB,KAAA+pC,WACA/pC,KAAAuF,UAiFA,MA/EAioC,GAAAhsC,WACAuoC,SAAA,WACA,MAAA/pC,MAAAirC,YAAAjrC,KAAA2uB,OAAA5B,WAEAuwG,SAAA,WAGA,IAFA,GAAAlxF,IAAA,EACApjC,EAAAhJ,KAAAirC,cACA,CACA,GAAAjiC,EAAA,EACA,MAAA0d,EAEA,IAAA0lB,EACA,KAAApjC,GAAA,KAAAA,IACAojC,GAAA,OAEK,SAAApjC,EACLojC,GAAA,MACK,KAAArjC,EAAAC,GACL,KAEAA,GAAAhJ,KAAA+pC,WAEA,SAAA/gC,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAAAq1H,GAAAZ,EAAAI,OAAA79H,KAAAmrC,YACA,UAEA,MADAnrC,MAAA+pC,WACAs0F,EAAAX,MACA,UAEA,MADA19H,MAAA+pC,WACAs0F,EAAAT,OAEA,GAAAr4H,GAAAvF,KAAAuF,MAGA,KAFAA,EAAAL,OAAA,EACAK,EAAA,GAAAH,OAAAC,aAAA2D,IACAA,EAAAhJ,KAAA+pC,aAAA,IAAA/gC,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAzD,EAAAM,KAAAT,OAAAC,aAAA2D,GAEA,IAAApE,GAAAW,EAAApC,KAAA,GACA,QAAAyB,EAAA2X,eACA,SACA,MAAA8hH,GAAAJ,EACA,cACA,MAAAI,GAAAD,MACA,SACA,MAAAC,GAAAE,YAAA35H,KAGAumC,UAAA,WACA,GAAAniC,GAAAhJ,KAAAirC,YACA1lC,EAAAvF,KAAAuF,MAGA,KAFAA,EAAAL,OAAA,EACAK,EAAA,GAAAH,OAAAC,aAAA2D,IACAA,EAAAhJ,KAAA+pC,aAAA,IACA/gC,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACAzD,EAAAM,KAAAT,OAAAC,aAAA2D,GAKA,IAAAtI,GAAAqkD,WAAAx/C,EAAApC,KAAA,IAIA,OAHAgmD,OAAAzoD,IACAiC,EAAA,kCAAAjC,GAEAA,IAGA8sC,IAEA7tC,GAAA6tC,kBACA7tC,EAAA8tC,oBAIA,SAAA/tC,EAAAC,EAAAO,GAEA,YAEA,IAAA8pB,GAAA9pB,EAAA,GACAmnC,EAAAnnC,EAAA,GACAogD,EAAApgD,EAAA,GACAqC,EAAAynB,EAAAznB,KACAwG,EAAAihB,EAAAjhB,QACA6jB,EAAAya,EAAAza,OACAga,EAAA0Z,EAAA1Z,YACA63F,GAAA,EACAC,EAAA,WAwBA,QAAAA,KACA1+H,KAAA6e,MAAA,EACA7e,KAAA2+H,IAAA,EACA3+H,KAAA4+H,SAAA,EACA5+H,KAAAkyC,UACAlyC,KAAAgD,SA5BA,GAAA67H,IACAC,OAAA,GACAC,OAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,WAAA,GACAC,UAAA,IACAC,MACA,GACA,IAEAC,MACA,GACA,IAEAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,WAAA,IACAC,WAAA,IA6NA,OApNAlB,GAAAl9H,WACAwvG,QAAA,SAAA6uB,EAAA7zE,EAAAjL,GAIA,OADA++E,GAAAC,EAAA15E,EAFA1mC,EAAAkgH,EAAA36H,OACAvC,GAAA,EAEAtC,EAAA,EAAkBA,EAAAsf,EAAWtf,IAAA,CAC7B,GAAAK,GAAAm/H,EAAAx/H,EACA,IAAAK,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAAm/H,IAAAx/H,IAEAK,GACA,OACA,IAAA+9H,EAAA,CACAz+H,KAAAgD,QACA,OAEAL,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAC,MACA,MACA,QACA,IAAAL,EAAA,CACAz+H,KAAAgD,QACA,OAEAL,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAE,MACA,MACA,QACA,GAAA/+H,KAAA4+H,QAAA,CACA,GAAA5+H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA,GAAAs9H,GAAAjgI,KAAAgD,MAAA0kB,KACA1nB,MAAAgD,MAAA6C,KAAA,EAAAo6H,EACA,OAEAt9H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAG,QACA,MACA,QACAr8H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAI,QACA,MACA,QACAt8H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAK,QACA,MACA,QACAv8H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAM,QACA,MACA,QACAx8H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAO,UACA,MACA,QACAp/H,KAAAgD,QACA,MACA,SACA,GAAAhD,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA0jD,EAAArmD,KAAAgD,MAAA0kB,MACA/kB,EAAA3C,KAAAgxG,QAAAhlD,EAAA3F,GAAA2F,EAAAjL,EACA,MACA,SACA,MAAAp+C,EACA,SACA,GAAA3C,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEAm9H,EAAA9/H,KAAAgD,MAAA0kB,MACAq4G,EAAA//H,KAAAgD,MAAA0kB,MACA1nB,KAAA2+H,IAAAoB,EACA//H,KAAA6e,MAAAihH,EACA9/H,KAAAgD,MAAA6C,KAAAi6H,EAAAC,GACAp9H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAa,QACA,MACA,SACA1/H,KAAAkyC,OAAArsC,KAAAg5H,EAAAW,QAAA,GACA,MACA,SACA,GAAAx/H,KAAA4+H,QACA,KAEAj8H,GAAA3C,KAAAggI,eAAA,EAAAnB,EAAAY,QACA,MACA,SACA,GAAAz/H,KAAA4+H,QAAA,CACA5+H,KAAAgD,MAAA6C,KAAA,EACA,OAEAlD,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAa,QACA,MACA,SACA/8H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAc,UACA,MACA,SACAh9H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAe,UACA,MACA,WACA5/H,KAAAgD,QACA,MACA,WACA,IAAAy7H,EAAA,CACAz+H,KAAAgD,QACA,OAEAL,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAE,MACA,MACA,WACA,IAAAN,EAAA,CACAz+H,KAAAgD,QACA,OAEAL,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAC,MACA,MACA,WACA/9E,GACA/gD,KAAAmmD,KAAAnmD,KAAAgD,MAAAmf,QAAA,KACAxf,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAW,UAEA78H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAW,QAEA,MACA,WACA,GAAAx/H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA3C,KAAAgD,MAAA0kB,MACAo4G,EAAA9/H,KAAAgD,MAAA0kB,KACA,IAAAw4G,GAAAlgI,KAAAgD,MAAA0kB,KACAq4G,GAAA//H,KAAAgD,MAAA0kB,MACA1nB,KAAA2+H,IAAAoB,EACA//H,KAAA6e,MAAAihH,EACA9/H,KAAAgD,MAAA6C,KAAAi6H,EAAAC,EAAAG,GACAv9H,EAAA3C,KAAAggI,eAAA,EAAAnB,EAAAY,QACA,MACA,WACA,GAAAz/H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA,GAAAwxC,GAAAn0C,KAAAgD,MAAA0kB,MACAwsB,EAAAl0C,KAAAgD,MAAA0kB,KACA1nB,MAAAgD,MAAA6C,KAAAquC,EAAAC,EACA,MACA,WACA,GAAAn0C,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA0jD,EAAArmD,KAAAgD,MAAA0kB,KACA,IAAA2oD,GAAArwE,KAAAgD,MAAA0kB,KACA,QAAA2+B,GAAA,IAAAgqB,EAAA,CACA,GAAA8vD,GAAAngI,KAAAgD,MAAAmf,OAAAniB,KAAAgD,MAAAkC,OAAA,MACAlF,MAAAgD,MAAA6C,KAAAs6H,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAx9H,EAAA3C,KAAAggI,eAAA,GAAAnB,EAAAS,MAAA,GACAt/H,KAAA4+H,SAAA,EACA5+H,KAAAgD,MAAA6C,KAAAs6H,EAAA,IAAAA,EAAA,SACO,KAAA95E,GAAA,IAAAgqB,IACPrwE,KAAA4+H,SAAA,EAEA,MACA,WACA,KACA,WACA5+H,KAAAgD,QACA,MACA,SACAT,EAAA,yCAAA7B,EAAA,KAGA,GAAAiC,EACA,UAGKjC,IAAA,IACLA,GAAA,IAEAA,EADKA,GAAA,IACL,KAAAA,EAAA,KAAAm/H,IAAAx/H,GAAA,IACKK,GAAA,MACL,KAAAA,EAAA,MAAAm/H,IAAAx/H,GAAA,KAEA,IAAAw/H,IAAAx/H,KAAA,QAAAw/H,IAAAx/H,KAAA,QAAAw/H,IAAAx/H,KAAA,OAAAw/H,IAAAx/H,KAAA,EAEAL,KAAAgD,MAAA6C,KAAAnF,GAEA,MAAAiC,IAEAq9H,eAAA,SAAAI,EAAAC,EAAAC,GACA,GAAAC,GAAAvgI,KAAAgD,MAAAkC,MACA,IAAAk7H,EAAAG,EACA,QAGA,QADAv5H,GAAAu5H,EAAAH,EACA//H,EAAA2G,EAAsB3G,EAAAkgI,EAAiBlgI,IAAA,CACvC,GAAAK,GAAAV,KAAAgD,MAAA3C,EACAK,MAAA,EAAAA,GACAV,KAAAkyC,OAAArsC,KAAA,GAAAnF,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAV,KAAAkyC,OAAArsC,KAAA,IAAAnF,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,MANAV,MAAAkyC,OAAArsC,KAAAP,MAAAtF,KAAAkyC,OAAAmuF,GACAC,EACAtgI,KAAAgD,MAAAmf,OAAAnb,EAAAo5H,GAEApgI,KAAAgD,MAAAkC,OAAA,GAEA,IAGAw5H,KAEAnxB,EAAA,WAGA,QAAAizB,GAAA54H,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,QAAA+tB,GAAAjvB,EAAA4B,EAAAm4H,GACA,GAAAA,GAAA/5H,EAAAxB,OACA,UAAAa,YAAA,EAEA,IAAA1F,GAAAsyB,EAAA9Y,EAAA,EAAAvR,EAAAuoC,EAAA,MAAA6qF,EAAA,KACA,KAAAr7H,EAAA,EAAaA,EAAAogI,EAAmBpgI,IAChCwZ,GAAAnT,EAAArG,GAAAwZ,GAAAg3B,EAAA6qF,EAAA,KAEA,IAAA/7G,GAAAjZ,EAAAxB,OAAAu7H,EACAC,EAAA,GAAA36H,YAAA4Z,EACA,KAAAtf,EAAAogI,EAAA9tG,EAAA,EAAgCA,EAAAhT,EAAWtf,IAAAsyB,IAAA,CAC3C,GAAAjyB,GAAAgG,EAAArG,EACAqgI,GAAA/tG,GAAAjyB,EAAAmZ,GAAA,EACAA,GAAAnZ,EAAAmZ,GAAAg3B,EAAA6qF,EAAA,MAEA,MAAAgF,GAEA,QAAAC,GAAAj6H,EAAA4B,EAAAm4H,GACA,GAGApgI,GAAAsyB,EAHA9Y,EAAA,EAAAvR,EAAAuoC,EAAA,MAAA6qF,EAAA,MACA/7G,EAAAjZ,EAAAxB,OAAA6pB,EAAApP,IAAA,EACA+gH,EAAA,GAAA36H,YAAAgpB,EAEA,KAAA1uB,EAAA,EAAAsyB,EAAA,EAAoBtyB,EAAAsf,EAAWtf,IAAA,CAC/B,GAAAugI,GAAAl6H,EAAArG,EACA,IAAAmgI,EAAAI,GAAA,CAGAvgI,GAEA,KADA,GAAAwgI,GACAxgI,EAAAsf,IAAA6gH,EAAAK,EAAAn6H,EAAArG,KACAA,GAEA,IAAAA,EAAAsf,EAAA,CACA,GAAAjf,GAAAonB,SAAA1iB,OAAAC,aAAAu7H,EAAAC,GAAA,GACAH,GAAA/tG,KAAAjyB,EAAAmZ,GAAA,EACAA,GAAAnZ,EAAAmZ,GAAAg3B,EAAA6qF,EAAA,QAGA,MAAA7yH,OAAArH,UAAA0B,MAAA3C,KAAAmgI,EAAAD,EAAA9tG,GAEA,QAAAmuG,GAAArgI,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,QAAA8sG,GAAA5+E,EAAAusB,EAAA6F,GACA,GAAA7F,EAAA,CACA,GAAAx0C,GAAAioB,EAAA5E,WACAg3G,IAAAP,EAAA95H,EAAA,KAAA85H,EAAA95H,EAAA,KAAA85H,EAAA95H,EAAA,KAAA85H,EAAA95H,EAAA,IACAioB,GAAA,GAAA/B,GAAAm0G,EAAAprG,EAAAjvB,EAAAs6H,EAAA,GAAAL,EAAAj6H,EAAAs6H,EAAA,IAEAhhI,KAAA+gD,wBACA/gD,KAAA2uB,SACA3uB,KAAA+pC,WAxDA,GAAAi3F,GAAA,MACAC,EAAA,IAyRA,OAhOA1zB,GAAA/rG,WACA0/H,gBAAA,WACAlhI,KAAAs9H,UAEA,KADA,GAAAn1F,QACA,CACA,GAAAkjC,GAAArrE,KAAAs9H,UACA,WAAAjyD,GAAA,MAAAA,GAAA,MAAAA,EACA,KAEAljC,GAAAtiC,KAAAk/C,WAAAsmB,GAAA,IAEA,MAAAljC,IAEAy6D,WAAA,WACA,GAAAv3B,GAAArrE,KAAAs9H,UACA,OAAAv4E,YAAAsmB,GAAA,IAEA81D,QAAA,WACA,GAAA91D,GAAArrE,KAAAs9H,UACA,UAAAx1G,SAAAujD,GAAA,OAEA+1D,YAAA,WACA,GAAA/1D,GAAArrE,KAAAs9H,UACA,gBAAAjyD,EAAA,KAEAthC,SAAA,WACA,MAAA/pC,MAAAirC,YAAAjrC,KAAA2uB,OAAA5B,WAEAuwG,SAAA,WAGA,IAFA,GAAAlxF,IAAA,EACApjC,EAAAhJ,KAAAirC,cACA,CACA,GAAAjiC,KAAA,EACA,WAEA,IAAAojC,EACA,KAAApjC,GAAA,KAAAA,IACAojC,GAAA,OAEK,SAAApjC,EACLojC,GAAA,MACK,KAAArjC,EAAAC,GACL,KAEAA,GAAAhJ,KAAA+pC,WAEA,GAAA+2F,EAAA93H,GAEA,MADAhJ,MAAA+pC,WACA3kC,OAAAC,aAAA2D,EAEA,IAAAqiE,GAAA,EACA,GACAA,IAAAjmE,OAAAC,aAAA2D,GACAA,EAAAhJ,KAAA+pC,iBACI/gC,GAAA,IAAAD,EAAAC,KAAA83H,EAAA93H,GACJ,OAAAqiE,IAEAg0C,mBAAA,WACA,GAAA1wF,GAAA3uB,KAAA2uB,OACAq9B,KAAAunD,KACA0M,EAAAl/G,OAAA2D,OAAA,KACAu7G,GAAA,OAOA,KANA,GAKA50C,GAAAnmE,EAAAwB,EAAA26H,EAAAxB,EALAyB,GACAt1E,SACAunD,eACAzyD,YAAiBm/D,gBAGjB,QAAA50C,EAAArrE,KAAAs9H,aACA,SAAAjyD,EAIA,OADAA,EAAArrE,KAAAs9H,YAEA,kBAKA,IAJAt9H,KAAAs9H,WACAt9H,KAAAs9H,WACAt9H,KAAAs9H,WACAt9H,KAAAs9H,aACA,CAEA,GADAjyD,EAAArrE,KAAAs9H,WACA,OAAAjyD,GAAA,QAAAA,EACA,KAEA,UAAAA,EAAA,CAGA,GAAA1J,GAAA3hE,KAAAs9H,UACAp4H,GAAAlF,KAAAmhI,UACAnhI,KAAAs9H,WACA52H,EAAAioB,EAAAjB,cAAAiB,EAAAloB,IAAAvB,GACAm8H,EAAAC,EAAAxgF,WAAAm/D,YAAA,MACA4f,EAAAlqG,EAAAjvB,EAAAqjB,WAAAk3G,EAAAI,GACA1yG,EAAApB,KAAAroB,GACAlF,KAAA+pC,WACAshC,EAAArrE,KAAAs9H,WACA,aAAAjyD,GACArrE,KAAAs9H,WAEA/pB,EAAA1tG,MACA87D,QACAk+D,aAGA,KACA,aAGA,IAFA7/H,KAAAmhI,UACAnhI,KAAAs9H,WACA,SAAAjyD,EAAArrE,KAAAs9H,aAAA,CACA,GAAA/jH,GAAAvZ,KAAAmhI,SACAj8H,GAAAlF,KAAAmhI,UACAnhI,KAAAs9H,WACA52H,EAAAioB,EAAAjB,cAAAiB,EAAAloB,IAAAvB,GACAm8H,EAAAC,EAAAxgF,WAAAm/D,YAAA,MACA4f,EAAAlqG,EAAAjvB,EAAAqjB,WAAAk3G,EAAAI,GACA1yG,EAAApB,KAAAroB,GACAlF,KAAA+pC,WACAshC,EAAArrE,KAAAs9H,WACA,aAAAjyD,GACArrE,KAAAs9H,WAEAtxE,EAAAzyC,GAAAsmH,EAEA,KACA,kBACA,iBACA,kBACA,uBACA,GAAA0B,GAAAvhI,KAAAkhI,iBACAK,GAAAr8H,OAAA,GAAAq8H,EAAAr8H,OAAA,OAAAu5H,IACA6C,EAAAxgF,WAAAm/D,YAAA50C,GAAAk2D,EAEA,MACA,iBACA,gBACAD,EAAAxgF,WAAAm/D,YAAA50C,GAAArrE,KAAAkhI,iBACA,MACA,aACA,YACAI,EAAAxgF,WAAAm/D,YAAA50C,GAAArrE,KAAAkhI,kBAAA,EACA,MACA,iBACA,YACA,eACA,gBACA,oBACA,sBACAI,EAAAxgF,WAAAm/D,YAAA50C,GAAArrE,KAAA4iG,YACA,MACA,iBACA0+B,EAAAxgF,WAAAm/D,YAAA50C,GAAArrE,KAAAohI,cAIA,OAAA/gI,GAAA,EAAkBA,EAAAkzG,EAAAruG,OAAwB7E,IAAA,CAC1CshE,EAAA4xC,EAAAlzG,GAAAshE,MACAk+D,EAAAtsB,EAAAlzG,GAAAw/H,OACA,IAAA2B,GAAA,GAAA9C,GACA/7H,EAAA6+H,EAAAxwB,QAAA6uB,EAAA7zE,EAAAhsD,KAAA+gD,qBACA7O,EAAAsvF,EAAAtvF,MACAvvC,KACAuvC,GAAA,KAEAovF,EAAA/tB,YAAA1tG,MACA0kE,UAAA5I,EACAnb,WAAAtU,EACArzB,MAAA2iH,EAAA3iH,MACA8/G,IAAA6C,EAAA7C,IACAx4E,KAAAq7E,EAAAr7E,OAGA,MAAAm7E,IAEApiB,kBAAA,SAAAp+D,GAEA,IADA,GAAAuqB,GACA,QAAAA,EAAArrE,KAAAs9H,aACA,SAAAjyD,EAIA,OADAA,EAAArrE,KAAAs9H,YAEA,iBACA,GAAA5+F,GAAA1+B,KAAAkhI,iBACApgF,GAAAmC,WAAAvkB,CACA,MACA,gBACA,GACA9H,GADA6qG,EAAAzhI,KAAAs9H,UAEA,YAAA12G,KAAA66G,GAEM,CACN7qG,IACA,IAAAvI,GAAA,EAAAvG,SAAA25G,EAAA,GACAzhI,MAAAs9H,UACA,QAAA3qG,GAAA,EAAqBA,EAAAtE,EAAUsE,IAAA,CAE/B,IADA04C,EAAArrE,KAAAs9H,WACA,QAAAjyD,GAAA,QAAAA,GAEA,GADAA,EAAArrE,KAAAs9H,WACA,OAAAjyD,EACA,MAGA,YAAAA,EACA,KAEA,IAAA9xD,GAAAvZ,KAAAmhI,SACAnhI,MAAAs9H,UACA,IAAA37D,GAAA3hE,KAAAs9H,UACA1mG,GAAArd,GAAAooD,EACA3hE,KAAAs9H,gBApBA1mG,GAAAgQ,EAAA66F,EAuBA3gF,GAAAgsD,gBAAAl2E,CACA,MACA,gBACA,GAAAssB,GAAAljD,KAAAkhI,iBACApgF,GAAAqC,OAAA19C,KAAAkV,IAAAuoC,EAAA,GAAAA,EAAA,IACApC,EAAAsC,QAAA39C,KAAAC,IAAAw9C,EAAA,GAAAA,EAAA,IACApC,EAAAuC,cAAA,KAMAkqD,IAEA5tG,GAAA4tG,eAIA,SAAA7tG,EAAAC,EAAAO,GAEA,YAEA,IAEAwhI,GAAAxhI,EAAA,EAEAA,GAAA,IAEAP,EAAAu2C,qBAAAwrF,EAAAxrF,4BDa8B31C,KAAKZ,EAASC,mCAAsD","file":"0.0.bundle.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 527:\n/*!******************************************!*\\\n  !*** ./~/pdfjs-dist/build/pdf.worker.js ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/* Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\t\telse\n\t\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __w_pdfjs_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__w_pdfjs_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__w_pdfjs_require__.c = installedModules;\n\t\n\t/******/ \t// identity function for calling harmony imports with the correct context\n\t/******/ \t__w_pdfjs_require__.i = function(value) { return value; };\n\t\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__w_pdfjs_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__w_pdfjs_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 36);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\n\tvar FONT_IDENTITY_MATRIX = [\n\t 0.001,\n\t 0,\n\t 0,\n\t 0.001,\n\t 0,\n\t 0\n\t];\n\tvar TextRenderingMode = {\n\t FILL: 0,\n\t STROKE: 1,\n\t FILL_STROKE: 2,\n\t INVISIBLE: 3,\n\t FILL_ADD_TO_PATH: 4,\n\t STROKE_ADD_TO_PATH: 5,\n\t FILL_STROKE_ADD_TO_PATH: 6,\n\t ADD_TO_PATH: 7,\n\t FILL_STROKE_MASK: 3,\n\t ADD_TO_PATH_FLAG: 4\n\t};\n\tvar ImageKind = {\n\t GRAYSCALE_1BPP: 1,\n\t RGB_24BPP: 2,\n\t RGBA_32BPP: 3\n\t};\n\tvar AnnotationType = {\n\t TEXT: 1,\n\t LINK: 2,\n\t FREETEXT: 3,\n\t LINE: 4,\n\t SQUARE: 5,\n\t CIRCLE: 6,\n\t POLYGON: 7,\n\t POLYLINE: 8,\n\t HIGHLIGHT: 9,\n\t UNDERLINE: 10,\n\t SQUIGGLY: 11,\n\t STRIKEOUT: 12,\n\t STAMP: 13,\n\t CARET: 14,\n\t INK: 15,\n\t POPUP: 16,\n\t FILEATTACHMENT: 17,\n\t SOUND: 18,\n\t MOVIE: 19,\n\t WIDGET: 20,\n\t SCREEN: 21,\n\t PRINTERMARK: 22,\n\t TRAPNET: 23,\n\t WATERMARK: 24,\n\t THREED: 25,\n\t REDACT: 26\n\t};\n\tvar AnnotationFlag = {\n\t INVISIBLE: 0x01,\n\t HIDDEN: 0x02,\n\t PRINT: 0x04,\n\t NOZOOM: 0x08,\n\t NOROTATE: 0x10,\n\t NOVIEW: 0x20,\n\t READONLY: 0x40,\n\t LOCKED: 0x80,\n\t TOGGLENOVIEW: 0x100,\n\t LOCKEDCONTENTS: 0x200\n\t};\n\tvar AnnotationFieldFlag = {\n\t READONLY: 0x0000001,\n\t REQUIRED: 0x0000002,\n\t NOEXPORT: 0x0000004,\n\t MULTILINE: 0x0001000,\n\t PASSWORD: 0x0002000,\n\t NOTOGGLETOOFF: 0x0004000,\n\t RADIO: 0x0008000,\n\t PUSHBUTTON: 0x0010000,\n\t COMBO: 0x0020000,\n\t EDIT: 0x0040000,\n\t SORT: 0x0080000,\n\t FILESELECT: 0x0100000,\n\t MULTISELECT: 0x0200000,\n\t DONOTSPELLCHECK: 0x0400000,\n\t DONOTSCROLL: 0x0800000,\n\t COMB: 0x1000000,\n\t RICHTEXT: 0x2000000,\n\t RADIOSINUNISON: 0x2000000,\n\t COMMITONSELCHANGE: 0x4000000\n\t};\n\tvar AnnotationBorderStyleType = {\n\t SOLID: 1,\n\t DASHED: 2,\n\t BEVELED: 3,\n\t INSET: 4,\n\t UNDERLINE: 5\n\t};\n\tvar StreamType = {\n\t UNKNOWN: 0,\n\t FLATE: 1,\n\t LZW: 2,\n\t DCT: 3,\n\t JPX: 4,\n\t JBIG: 5,\n\t A85: 6,\n\t AHX: 7,\n\t CCF: 8,\n\t RL: 9\n\t};\n\tvar FontType = {\n\t UNKNOWN: 0,\n\t TYPE1: 1,\n\t TYPE1C: 2,\n\t CIDFONTTYPE0: 3,\n\t CIDFONTTYPE0C: 4,\n\t TRUETYPE: 5,\n\t CIDFONTTYPE2: 6,\n\t TYPE3: 7,\n\t OPENTYPE: 8,\n\t TYPE0: 9,\n\t MMTYPE1: 10\n\t};\n\tvar VERBOSITY_LEVELS = {\n\t errors: 0,\n\t warnings: 1,\n\t infos: 5\n\t};\n\tvar CMapCompressionType = {\n\t NONE: 0,\n\t BINARY: 1,\n\t STREAM: 2\n\t};\n\tvar OPS = {\n\t dependency: 1,\n\t setLineWidth: 2,\n\t setLineCap: 3,\n\t setLineJoin: 4,\n\t setMiterLimit: 5,\n\t setDash: 6,\n\t setRenderingIntent: 7,\n\t setFlatness: 8,\n\t setGState: 9,\n\t save: 10,\n\t restore: 11,\n\t transform: 12,\n\t moveTo: 13,\n\t lineTo: 14,\n\t curveTo: 15,\n\t curveTo2: 16,\n\t curveTo3: 17,\n\t closePath: 18,\n\t rectangle: 19,\n\t stroke: 20,\n\t closeStroke: 21,\n\t fill: 22,\n\t eoFill: 23,\n\t fillStroke: 24,\n\t eoFillStroke: 25,\n\t closeFillStroke: 26,\n\t closeEOFillStroke: 27,\n\t endPath: 28,\n\t clip: 29,\n\t eoClip: 30,\n\t beginText: 31,\n\t endText: 32,\n\t setCharSpacing: 33,\n\t setWordSpacing: 34,\n\t setHScale: 35,\n\t setLeading: 36,\n\t setFont: 37,\n\t setTextRenderingMode: 38,\n\t setTextRise: 39,\n\t moveText: 40,\n\t setLeadingMoveText: 41,\n\t setTextMatrix: 42,\n\t nextLine: 43,\n\t showText: 44,\n\t showSpacedText: 45,\n\t nextLineShowText: 46,\n\t nextLineSetSpacingShowText: 47,\n\t setCharWidth: 48,\n\t setCharWidthAndBounds: 49,\n\t setStrokeColorSpace: 50,\n\t setFillColorSpace: 51,\n\t setStrokeColor: 52,\n\t setStrokeColorN: 53,\n\t setFillColor: 54,\n\t setFillColorN: 55,\n\t setStrokeGray: 56,\n\t setFillGray: 57,\n\t setStrokeRGBColor: 58,\n\t setFillRGBColor: 59,\n\t setStrokeCMYKColor: 60,\n\t setFillCMYKColor: 61,\n\t shadingFill: 62,\n\t beginInlineImage: 63,\n\t beginImageData: 64,\n\t endInlineImage: 65,\n\t paintXObject: 66,\n\t markPoint: 67,\n\t markPointProps: 68,\n\t beginMarkedContent: 69,\n\t beginMarkedContentProps: 70,\n\t endMarkedContent: 71,\n\t beginCompat: 72,\n\t endCompat: 73,\n\t paintFormXObjectBegin: 74,\n\t paintFormXObjectEnd: 75,\n\t beginGroup: 76,\n\t endGroup: 77,\n\t beginAnnotations: 78,\n\t endAnnotations: 79,\n\t beginAnnotation: 80,\n\t endAnnotation: 81,\n\t paintJpegXObject: 82,\n\t paintImageMaskXObject: 83,\n\t paintImageMaskXObjectGroup: 84,\n\t paintImageXObject: 85,\n\t paintInlineImageXObject: 86,\n\t paintInlineImageXObjectGroup: 87,\n\t paintImageXObjectRepeat: 88,\n\t paintImageMaskXObjectRepeat: 89,\n\t paintSolidColorImageMask: 90,\n\t constructPath: 91\n\t};\n\tvar verbosity = VERBOSITY_LEVELS.warnings;\n\tfunction setVerbosityLevel(level) {\n\t verbosity = level;\n\t}\n\tfunction getVerbosityLevel() {\n\t return verbosity;\n\t}\n\tfunction info(msg) {\n\t if (verbosity >= VERBOSITY_LEVELS.infos) {\n\t  console.log('Info: ' + msg);\n\t }\n\t}\n\tfunction warn(msg) {\n\t if (verbosity >= VERBOSITY_LEVELS.warnings) {\n\t  console.log('Warning: ' + msg);\n\t }\n\t}\n\tfunction deprecated(details) {\n\t console.log('Deprecated API usage: ' + details);\n\t}\n\tfunction error(msg) {\n\t if (verbosity >= VERBOSITY_LEVELS.errors) {\n\t  console.log('Error: ' + msg);\n\t  console.log(backtrace());\n\t }\n\t throw new Error(msg);\n\t}\n\tfunction backtrace() {\n\t try {\n\t  throw new Error();\n\t } catch (e) {\n\t  return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n\t }\n\t}\n\tfunction assert(cond, msg) {\n\t if (!cond) {\n\t  error(msg);\n\t }\n\t}\n\tvar UNSUPPORTED_FEATURES = {\n\t unknown: 'unknown',\n\t forms: 'forms',\n\t javaScript: 'javaScript',\n\t smask: 'smask',\n\t shadingPattern: 'shadingPattern',\n\t font: 'font'\n\t};\n\tfunction isSameOrigin(baseUrl, otherUrl) {\n\t try {\n\t  var base = new URL(baseUrl);\n\t  if (!base.origin || base.origin === 'null') {\n\t   return false;\n\t  }\n\t } catch (e) {\n\t  return false;\n\t }\n\t var other = new URL(otherUrl, base);\n\t return base.origin === other.origin;\n\t}\n\tfunction isValidProtocol(url) {\n\t if (!url) {\n\t  return false;\n\t }\n\t switch (url.protocol) {\n\t case 'http:':\n\t case 'https:':\n\t case 'ftp:':\n\t case 'mailto:':\n\t case 'tel:':\n\t  return true;\n\t default:\n\t  return false;\n\t }\n\t}\n\tfunction createValidAbsoluteUrl(url, baseUrl) {\n\t if (!url) {\n\t  return null;\n\t }\n\t try {\n\t  var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\t  if (isValidProtocol(absoluteUrl)) {\n\t   return absoluteUrl;\n\t  }\n\t } catch (ex) {\n\t }\n\t return null;\n\t}\n\tfunction shadow(obj, prop, value) {\n\t Object.defineProperty(obj, prop, {\n\t  value: value,\n\t  enumerable: true,\n\t  configurable: true,\n\t  writable: false\n\t });\n\t return value;\n\t}\n\tfunction getLookupTableFactory(initializer) {\n\t var lookup;\n\t return function () {\n\t  if (initializer) {\n\t   lookup = Object.create(null);\n\t   initializer(lookup);\n\t   initializer = null;\n\t  }\n\t  return lookup;\n\t };\n\t}\n\tvar PasswordResponses = {\n\t NEED_PASSWORD: 1,\n\t INCORRECT_PASSWORD: 2\n\t};\n\tvar PasswordException = function PasswordExceptionClosure() {\n\t function PasswordException(msg, code) {\n\t  this.name = 'PasswordException';\n\t  this.message = msg;\n\t  this.code = code;\n\t }\n\t PasswordException.prototype = new Error();\n\t PasswordException.constructor = PasswordException;\n\t return PasswordException;\n\t}();\n\tvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n\t function UnknownErrorException(msg, details) {\n\t  this.name = 'UnknownErrorException';\n\t  this.message = msg;\n\t  this.details = details;\n\t }\n\t UnknownErrorException.prototype = new Error();\n\t UnknownErrorException.constructor = UnknownErrorException;\n\t return UnknownErrorException;\n\t}();\n\tvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n\t function InvalidPDFException(msg) {\n\t  this.name = 'InvalidPDFException';\n\t  this.message = msg;\n\t }\n\t InvalidPDFException.prototype = new Error();\n\t InvalidPDFException.constructor = InvalidPDFException;\n\t return InvalidPDFException;\n\t}();\n\tvar MissingPDFException = function MissingPDFExceptionClosure() {\n\t function MissingPDFException(msg) {\n\t  this.name = 'MissingPDFException';\n\t  this.message = msg;\n\t }\n\t MissingPDFException.prototype = new Error();\n\t MissingPDFException.constructor = MissingPDFException;\n\t return MissingPDFException;\n\t}();\n\tvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n\t function UnexpectedResponseException(msg, status) {\n\t  this.name = 'UnexpectedResponseException';\n\t  this.message = msg;\n\t  this.status = status;\n\t }\n\t UnexpectedResponseException.prototype = new Error();\n\t UnexpectedResponseException.constructor = UnexpectedResponseException;\n\t return UnexpectedResponseException;\n\t}();\n\tvar NotImplementedException = function NotImplementedExceptionClosure() {\n\t function NotImplementedException(msg) {\n\t  this.message = msg;\n\t }\n\t NotImplementedException.prototype = new Error();\n\t NotImplementedException.prototype.name = 'NotImplementedException';\n\t NotImplementedException.constructor = NotImplementedException;\n\t return NotImplementedException;\n\t}();\n\tvar MissingDataException = function MissingDataExceptionClosure() {\n\t function MissingDataException(begin, end) {\n\t  this.begin = begin;\n\t  this.end = end;\n\t  this.message = 'Missing data [' + begin + ', ' + end + ')';\n\t }\n\t MissingDataException.prototype = new Error();\n\t MissingDataException.prototype.name = 'MissingDataException';\n\t MissingDataException.constructor = MissingDataException;\n\t return MissingDataException;\n\t}();\n\tvar XRefParseException = function XRefParseExceptionClosure() {\n\t function XRefParseException(msg) {\n\t  this.message = msg;\n\t }\n\t XRefParseException.prototype = new Error();\n\t XRefParseException.prototype.name = 'XRefParseException';\n\t XRefParseException.constructor = XRefParseException;\n\t return XRefParseException;\n\t}();\n\tvar NullCharactersRegExp = /\\x00/g;\n\tfunction removeNullCharacters(str) {\n\t if (typeof str !== 'string') {\n\t  warn('The argument for removeNullCharacters must be a string.');\n\t  return str;\n\t }\n\t return str.replace(NullCharactersRegExp, '');\n\t}\n\tfunction bytesToString(bytes) {\n\t assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n\t var length = bytes.length;\n\t var MAX_ARGUMENT_COUNT = 8192;\n\t if (length < MAX_ARGUMENT_COUNT) {\n\t  return String.fromCharCode.apply(null, bytes);\n\t }\n\t var strBuf = [];\n\t for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n\t  var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n\t  var chunk = bytes.subarray(i, chunkEnd);\n\t  strBuf.push(String.fromCharCode.apply(null, chunk));\n\t }\n\t return strBuf.join('');\n\t}\n\tfunction stringToBytes(str) {\n\t assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n\t var length = str.length;\n\t var bytes = new Uint8Array(length);\n\t for (var i = 0; i < length; ++i) {\n\t  bytes[i] = str.charCodeAt(i) & 0xFF;\n\t }\n\t return bytes;\n\t}\n\tfunction arrayByteLength(arr) {\n\t if (arr.length !== undefined) {\n\t  return arr.length;\n\t }\n\t assert(arr.byteLength !== undefined);\n\t return arr.byteLength;\n\t}\n\tfunction arraysToBytes(arr) {\n\t if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n\t  return arr[0];\n\t }\n\t var resultLength = 0;\n\t var i, ii = arr.length;\n\t var item, itemLength;\n\t for (i = 0; i < ii; i++) {\n\t  item = arr[i];\n\t  itemLength = arrayByteLength(item);\n\t  resultLength += itemLength;\n\t }\n\t var pos = 0;\n\t var data = new Uint8Array(resultLength);\n\t for (i = 0; i < ii; i++) {\n\t  item = arr[i];\n\t  if (!(item instanceof Uint8Array)) {\n\t   if (typeof item === 'string') {\n\t    item = stringToBytes(item);\n\t   } else {\n\t    item = new Uint8Array(item);\n\t   }\n\t  }\n\t  itemLength = item.byteLength;\n\t  data.set(item, pos);\n\t  pos += itemLength;\n\t }\n\t return data;\n\t}\n\tfunction string32(value) {\n\t return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n\t}\n\tfunction log2(x) {\n\t var n = 1, i = 0;\n\t while (x > n) {\n\t  n <<= 1;\n\t  i++;\n\t }\n\t return i;\n\t}\n\tfunction readInt8(data, start) {\n\t return data[start] << 24 >> 24;\n\t}\n\tfunction readUint16(data, offset) {\n\t return data[offset] << 8 | data[offset + 1];\n\t}\n\tfunction readUint32(data, offset) {\n\t return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n\t}\n\tfunction isLittleEndian() {\n\t var buffer8 = new Uint8Array(2);\n\t buffer8[0] = 1;\n\t var buffer16 = new Uint16Array(buffer8.buffer);\n\t return buffer16[0] === 1;\n\t}\n\tfunction isEvalSupported() {\n\t try {\n\t  new Function('');\n\t  return true;\n\t } catch (e) {\n\t  return false;\n\t }\n\t}\n\tvar Uint32ArrayView = function Uint32ArrayViewClosure() {\n\t function Uint32ArrayView(buffer, length) {\n\t  this.buffer = buffer;\n\t  this.byteLength = buffer.length;\n\t  this.length = length === undefined ? this.byteLength >> 2 : length;\n\t  ensureUint32ArrayViewProps(this.length);\n\t }\n\t Uint32ArrayView.prototype = Object.create(null);\n\t var uint32ArrayViewSetters = 0;\n\t function createUint32ArrayProp(index) {\n\t  return {\n\t   get: function () {\n\t    var buffer = this.buffer, offset = index << 2;\n\t    return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n\t   },\n\t   set: function (value) {\n\t    var buffer = this.buffer, offset = index << 2;\n\t    buffer[offset] = value & 255;\n\t    buffer[offset + 1] = value >> 8 & 255;\n\t    buffer[offset + 2] = value >> 16 & 255;\n\t    buffer[offset + 3] = value >>> 24 & 255;\n\t   }\n\t  };\n\t }\n\t function ensureUint32ArrayViewProps(length) {\n\t  while (uint32ArrayViewSetters < length) {\n\t   Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n\t   uint32ArrayViewSetters++;\n\t  }\n\t }\n\t return Uint32ArrayView;\n\t}();\n\texports.Uint32ArrayView = Uint32ArrayView;\n\tvar IDENTITY_MATRIX = [\n\t 1,\n\t 0,\n\t 0,\n\t 1,\n\t 0,\n\t 0\n\t];\n\tvar Util = function UtilClosure() {\n\t function Util() {\n\t }\n\t var rgbBuf = [\n\t  'rgb(',\n\t  0,\n\t  ',',\n\t  0,\n\t  ',',\n\t  0,\n\t  ')'\n\t ];\n\t Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n\t  rgbBuf[1] = r;\n\t  rgbBuf[3] = g;\n\t  rgbBuf[5] = b;\n\t  return rgbBuf.join('');\n\t };\n\t Util.transform = function Util_transform(m1, m2) {\n\t  return [\n\t   m1[0] * m2[0] + m1[2] * m2[1],\n\t   m1[1] * m2[0] + m1[3] * m2[1],\n\t   m1[0] * m2[2] + m1[2] * m2[3],\n\t   m1[1] * m2[2] + m1[3] * m2[3],\n\t   m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n\t   m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n\t  ];\n\t };\n\t Util.applyTransform = function Util_applyTransform(p, m) {\n\t  var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n\t  var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n\t  return [\n\t   xt,\n\t   yt\n\t  ];\n\t };\n\t Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n\t  var d = m[0] * m[3] - m[1] * m[2];\n\t  var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n\t  var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n\t  return [\n\t   xt,\n\t   yt\n\t  ];\n\t };\n\t Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n\t  var p1 = Util.applyTransform(r, m);\n\t  var p2 = Util.applyTransform(r.slice(2, 4), m);\n\t  var p3 = Util.applyTransform([\n\t   r[0],\n\t   r[3]\n\t  ], m);\n\t  var p4 = Util.applyTransform([\n\t   r[2],\n\t   r[1]\n\t  ], m);\n\t  return [\n\t   Math.min(p1[0], p2[0], p3[0], p4[0]),\n\t   Math.min(p1[1], p2[1], p3[1], p4[1]),\n\t   Math.max(p1[0], p2[0], p3[0], p4[0]),\n\t   Math.max(p1[1], p2[1], p3[1], p4[1])\n\t  ];\n\t };\n\t Util.inverseTransform = function Util_inverseTransform(m) {\n\t  var d = m[0] * m[3] - m[1] * m[2];\n\t  return [\n\t   m[3] / d,\n\t   -m[1] / d,\n\t   -m[2] / d,\n\t   m[0] / d,\n\t   (m[2] * m[5] - m[4] * m[3]) / d,\n\t   (m[4] * m[1] - m[5] * m[0]) / d\n\t  ];\n\t };\n\t Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n\t  return [\n\t   m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n\t   m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n\t   m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n\t  ];\n\t };\n\t Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n\t  var transpose = [\n\t   m[0],\n\t   m[2],\n\t   m[1],\n\t   m[3]\n\t  ];\n\t  var a = m[0] * transpose[0] + m[1] * transpose[2];\n\t  var b = m[0] * transpose[1] + m[1] * transpose[3];\n\t  var c = m[2] * transpose[0] + m[3] * transpose[2];\n\t  var d = m[2] * transpose[1] + m[3] * transpose[3];\n\t  var first = (a + d) / 2;\n\t  var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n\t  var sx = first + second || 1;\n\t  var sy = first - second || 1;\n\t  return [\n\t   Math.sqrt(sx),\n\t   Math.sqrt(sy)\n\t  ];\n\t };\n\t Util.normalizeRect = function Util_normalizeRect(rect) {\n\t  var r = rect.slice(0);\n\t  if (rect[0] > rect[2]) {\n\t   r[0] = rect[2];\n\t   r[2] = rect[0];\n\t  }\n\t  if (rect[1] > rect[3]) {\n\t   r[1] = rect[3];\n\t   r[3] = rect[1];\n\t  }\n\t  return r;\n\t };\n\t Util.intersect = function Util_intersect(rect1, rect2) {\n\t  function compare(a, b) {\n\t   return a - b;\n\t  }\n\t  var orderedX = [\n\t    rect1[0],\n\t    rect1[2],\n\t    rect2[0],\n\t    rect2[2]\n\t   ].sort(compare), orderedY = [\n\t    rect1[1],\n\t    rect1[3],\n\t    rect2[1],\n\t    rect2[3]\n\t   ].sort(compare), result = [];\n\t  rect1 = Util.normalizeRect(rect1);\n\t  rect2 = Util.normalizeRect(rect2);\n\t  if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n\t   result[0] = orderedX[1];\n\t   result[2] = orderedX[2];\n\t  } else {\n\t   return false;\n\t  }\n\t  if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n\t   result[1] = orderedY[1];\n\t   result[3] = orderedY[2];\n\t  } else {\n\t   return false;\n\t  }\n\t  return result;\n\t };\n\t Util.sign = function Util_sign(num) {\n\t  return num < 0 ? -1 : 1;\n\t };\n\t var ROMAN_NUMBER_MAP = [\n\t  '',\n\t  'C',\n\t  'CC',\n\t  'CCC',\n\t  'CD',\n\t  'D',\n\t  'DC',\n\t  'DCC',\n\t  'DCCC',\n\t  'CM',\n\t  '',\n\t  'X',\n\t  'XX',\n\t  'XXX',\n\t  'XL',\n\t  'L',\n\t  'LX',\n\t  'LXX',\n\t  'LXXX',\n\t  'XC',\n\t  '',\n\t  'I',\n\t  'II',\n\t  'III',\n\t  'IV',\n\t  'V',\n\t  'VI',\n\t  'VII',\n\t  'VIII',\n\t  'IX'\n\t ];\n\t Util.toRoman = function Util_toRoman(number, lowerCase) {\n\t  assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n\t  var pos, romanBuf = [];\n\t  while (number >= 1000) {\n\t   number -= 1000;\n\t   romanBuf.push('M');\n\t  }\n\t  pos = number / 100 | 0;\n\t  number %= 100;\n\t  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n\t  pos = number / 10 | 0;\n\t  number %= 10;\n\t  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n\t  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n\t  var romanStr = romanBuf.join('');\n\t  return lowerCase ? romanStr.toLowerCase() : romanStr;\n\t };\n\t Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n\t  Array.prototype.push.apply(arr1, arr2);\n\t };\n\t Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n\t  Array.prototype.unshift.apply(arr1, arr2);\n\t };\n\t Util.extendObj = function extendObj(obj1, obj2) {\n\t  for (var key in obj2) {\n\t   obj1[key] = obj2[key];\n\t  }\n\t };\n\t Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n\t  while (dict && !dict.has(name)) {\n\t   dict = dict.get('Parent');\n\t  }\n\t  if (!dict) {\n\t   return null;\n\t  }\n\t  return getArray ? dict.getArray(name) : dict.get(name);\n\t };\n\t Util.inherit = function Util_inherit(sub, base, prototype) {\n\t  sub.prototype = Object.create(base.prototype);\n\t  sub.prototype.constructor = sub;\n\t  for (var prop in prototype) {\n\t   sub.prototype[prop] = prototype[prop];\n\t  }\n\t };\n\t Util.loadScript = function Util_loadScript(src, callback) {\n\t  var script = document.createElement('script');\n\t  var loaded = false;\n\t  script.setAttribute('src', src);\n\t  if (callback) {\n\t   script.onload = function () {\n\t    if (!loaded) {\n\t     callback();\n\t    }\n\t    loaded = true;\n\t   };\n\t  }\n\t  document.getElementsByTagName('head')[0].appendChild(script);\n\t };\n\t return Util;\n\t}();\n\tvar PageViewport = function PageViewportClosure() {\n\t function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n\t  this.viewBox = viewBox;\n\t  this.scale = scale;\n\t  this.rotation = rotation;\n\t  this.offsetX = offsetX;\n\t  this.offsetY = offsetY;\n\t  var centerX = (viewBox[2] + viewBox[0]) / 2;\n\t  var centerY = (viewBox[3] + viewBox[1]) / 2;\n\t  var rotateA, rotateB, rotateC, rotateD;\n\t  rotation = rotation % 360;\n\t  rotation = rotation < 0 ? rotation + 360 : rotation;\n\t  switch (rotation) {\n\t  case 180:\n\t   rotateA = -1;\n\t   rotateB = 0;\n\t   rotateC = 0;\n\t   rotateD = 1;\n\t   break;\n\t  case 90:\n\t   rotateA = 0;\n\t   rotateB = 1;\n\t   rotateC = 1;\n\t   rotateD = 0;\n\t   break;\n\t  case 270:\n\t   rotateA = 0;\n\t   rotateB = -1;\n\t   rotateC = -1;\n\t   rotateD = 0;\n\t   break;\n\t  default:\n\t   rotateA = 1;\n\t   rotateB = 0;\n\t   rotateC = 0;\n\t   rotateD = -1;\n\t   break;\n\t  }\n\t  if (dontFlip) {\n\t   rotateC = -rotateC;\n\t   rotateD = -rotateD;\n\t  }\n\t  var offsetCanvasX, offsetCanvasY;\n\t  var width, height;\n\t  if (rotateA === 0) {\n\t   offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n\t   offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n\t   width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t   height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t  } else {\n\t   offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n\t   offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n\t   width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t   height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t  }\n\t  this.transform = [\n\t   rotateA * scale,\n\t   rotateB * scale,\n\t   rotateC * scale,\n\t   rotateD * scale,\n\t   offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n\t   offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n\t  ];\n\t  this.width = width;\n\t  this.height = height;\n\t  this.fontScale = scale;\n\t }\n\t PageViewport.prototype = {\n\t  clone: function PageViewPort_clone(args) {\n\t   args = args || {};\n\t   var scale = 'scale' in args ? args.scale : this.scale;\n\t   var rotation = 'rotation' in args ? args.rotation : this.rotation;\n\t   return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n\t  },\n\t  convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n\t   return Util.applyTransform([\n\t    x,\n\t    y\n\t   ], this.transform);\n\t  },\n\t  convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n\t   var tl = Util.applyTransform([\n\t    rect[0],\n\t    rect[1]\n\t   ], this.transform);\n\t   var br = Util.applyTransform([\n\t    rect[2],\n\t    rect[3]\n\t   ], this.transform);\n\t   return [\n\t    tl[0],\n\t    tl[1],\n\t    br[0],\n\t    br[1]\n\t   ];\n\t  },\n\t  convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n\t   return Util.applyInverseTransform([\n\t    x,\n\t    y\n\t   ], this.transform);\n\t  }\n\t };\n\t return PageViewport;\n\t}();\n\tvar PDFStringTranslateTable = [\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0x2D8,\n\t 0x2C7,\n\t 0x2C6,\n\t 0x2D9,\n\t 0x2DD,\n\t 0x2DB,\n\t 0x2DA,\n\t 0x2DC,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0,\n\t 0x2022,\n\t 0x2020,\n\t 0x2021,\n\t 0x2026,\n\t 0x2014,\n\t 0x2013,\n\t 0x192,\n\t 0x2044,\n\t 0x2039,\n\t 0x203A,\n\t 0x2212,\n\t 0x2030,\n\t 0x201E,\n\t 0x201C,\n\t 0x201D,\n\t 0x2018,\n\t 0x2019,\n\t 0x201A,\n\t 0x2122,\n\t 0xFB01,\n\t 0xFB02,\n\t 0x141,\n\t 0x152,\n\t 0x160,\n\t 0x178,\n\t 0x17D,\n\t 0x131,\n\t 0x142,\n\t 0x153,\n\t 0x161,\n\t 0x17E,\n\t 0,\n\t 0x20AC\n\t];\n\tfunction stringToPDFString(str) {\n\t var i, n = str.length, strBuf = [];\n\t if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n\t  for (i = 2; i < n; i += 2) {\n\t   strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n\t  }\n\t } else {\n\t  for (i = 0; i < n; ++i) {\n\t   var code = PDFStringTranslateTable[str.charCodeAt(i)];\n\t   strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n\t  }\n\t }\n\t return strBuf.join('');\n\t}\n\tfunction stringToUTF8String(str) {\n\t return decodeURIComponent(escape(str));\n\t}\n\tfunction utf8StringToString(str) {\n\t return unescape(encodeURIComponent(str));\n\t}\n\tfunction isEmptyObj(obj) {\n\t for (var key in obj) {\n\t  return false;\n\t }\n\t return true;\n\t}\n\tfunction isBool(v) {\n\t return typeof v === 'boolean';\n\t}\n\tfunction isInt(v) {\n\t return typeof v === 'number' && (v | 0) === v;\n\t}\n\tfunction isNum(v) {\n\t return typeof v === 'number';\n\t}\n\tfunction isString(v) {\n\t return typeof v === 'string';\n\t}\n\tfunction isArray(v) {\n\t return v instanceof Array;\n\t}\n\tfunction isArrayBuffer(v) {\n\t return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n\t}\n\tfunction isSpace(ch) {\n\t return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n\t}\n\tfunction isNodeJS() {\n\t if (typeof __pdfjsdev_webpack__ === 'undefined') {\n\t  return typeof process === 'object' && process + '' === '[object process]';\n\t }\n\t return false;\n\t}\n\tfunction createPromiseCapability() {\n\t var capability = {};\n\t capability.promise = new Promise(function (resolve, reject) {\n\t  capability.resolve = resolve;\n\t  capability.reject = reject;\n\t });\n\t return capability;\n\t}\n\t(function PromiseClosure() {\n\t if (globalScope.Promise) {\n\t  if (typeof globalScope.Promise.all !== 'function') {\n\t   globalScope.Promise.all = function (iterable) {\n\t    var count = 0, results = [], resolve, reject;\n\t    var promise = new globalScope.Promise(function (resolve_, reject_) {\n\t     resolve = resolve_;\n\t     reject = reject_;\n\t    });\n\t    iterable.forEach(function (p, i) {\n\t     count++;\n\t     p.then(function (result) {\n\t      results[i] = result;\n\t      count--;\n\t      if (count === 0) {\n\t       resolve(results);\n\t      }\n\t     }, reject);\n\t    });\n\t    if (count === 0) {\n\t     resolve(results);\n\t    }\n\t    return promise;\n\t   };\n\t  }\n\t  if (typeof globalScope.Promise.resolve !== 'function') {\n\t   globalScope.Promise.resolve = function (value) {\n\t    return new globalScope.Promise(function (resolve) {\n\t     resolve(value);\n\t    });\n\t   };\n\t  }\n\t  if (typeof globalScope.Promise.reject !== 'function') {\n\t   globalScope.Promise.reject = function (reason) {\n\t    return new globalScope.Promise(function (resolve, reject) {\n\t     reject(reason);\n\t    });\n\t   };\n\t  }\n\t  if (typeof globalScope.Promise.prototype.catch !== 'function') {\n\t   globalScope.Promise.prototype.catch = function (onReject) {\n\t    return globalScope.Promise.prototype.then(undefined, onReject);\n\t   };\n\t  }\n\t  return;\n\t }\n\t var STATUS_PENDING = 0;\n\t var STATUS_RESOLVED = 1;\n\t var STATUS_REJECTED = 2;\n\t var REJECTION_TIMEOUT = 500;\n\t var HandlerManager = {\n\t  handlers: [],\n\t  running: false,\n\t  unhandledRejections: [],\n\t  pendingRejectionCheck: false,\n\t  scheduleHandlers: function scheduleHandlers(promise) {\n\t   if (promise._status === STATUS_PENDING) {\n\t    return;\n\t   }\n\t   this.handlers = this.handlers.concat(promise._handlers);\n\t   promise._handlers = [];\n\t   if (this.running) {\n\t    return;\n\t   }\n\t   this.running = true;\n\t   setTimeout(this.runHandlers.bind(this), 0);\n\t  },\n\t  runHandlers: function runHandlers() {\n\t   var RUN_TIMEOUT = 1;\n\t   var timeoutAt = Date.now() + RUN_TIMEOUT;\n\t   while (this.handlers.length > 0) {\n\t    var handler = this.handlers.shift();\n\t    var nextStatus = handler.thisPromise._status;\n\t    var nextValue = handler.thisPromise._value;\n\t    try {\n\t     if (nextStatus === STATUS_RESOLVED) {\n\t      if (typeof handler.onResolve === 'function') {\n\t       nextValue = handler.onResolve(nextValue);\n\t      }\n\t     } else if (typeof handler.onReject === 'function') {\n\t      nextValue = handler.onReject(nextValue);\n\t      nextStatus = STATUS_RESOLVED;\n\t      if (handler.thisPromise._unhandledRejection) {\n\t       this.removeUnhandeledRejection(handler.thisPromise);\n\t      }\n\t     }\n\t    } catch (ex) {\n\t     nextStatus = STATUS_REJECTED;\n\t     nextValue = ex;\n\t    }\n\t    handler.nextPromise._updateStatus(nextStatus, nextValue);\n\t    if (Date.now() >= timeoutAt) {\n\t     break;\n\t    }\n\t   }\n\t   if (this.handlers.length > 0) {\n\t    setTimeout(this.runHandlers.bind(this), 0);\n\t    return;\n\t   }\n\t   this.running = false;\n\t  },\n\t  addUnhandledRejection: function addUnhandledRejection(promise) {\n\t   this.unhandledRejections.push({\n\t    promise: promise,\n\t    time: Date.now()\n\t   });\n\t   this.scheduleRejectionCheck();\n\t  },\n\t  removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n\t   promise._unhandledRejection = false;\n\t   for (var i = 0; i < this.unhandledRejections.length; i++) {\n\t    if (this.unhandledRejections[i].promise === promise) {\n\t     this.unhandledRejections.splice(i);\n\t     i--;\n\t    }\n\t   }\n\t  },\n\t  scheduleRejectionCheck: function scheduleRejectionCheck() {\n\t   if (this.pendingRejectionCheck) {\n\t    return;\n\t   }\n\t   this.pendingRejectionCheck = true;\n\t   setTimeout(function rejectionCheck() {\n\t    this.pendingRejectionCheck = false;\n\t    var now = Date.now();\n\t    for (var i = 0; i < this.unhandledRejections.length; i++) {\n\t     if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n\t      var unhandled = this.unhandledRejections[i].promise._value;\n\t      var msg = 'Unhandled rejection: ' + unhandled;\n\t      if (unhandled.stack) {\n\t       msg += '\\n' + unhandled.stack;\n\t      }\n\t      warn(msg);\n\t      this.unhandledRejections.splice(i);\n\t      i--;\n\t     }\n\t    }\n\t    if (this.unhandledRejections.length) {\n\t     this.scheduleRejectionCheck();\n\t    }\n\t   }.bind(this), REJECTION_TIMEOUT);\n\t  }\n\t };\n\t var Promise = function Promise(resolver) {\n\t  this._status = STATUS_PENDING;\n\t  this._handlers = [];\n\t  try {\n\t   resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n\t  } catch (e) {\n\t   this._reject(e);\n\t  }\n\t };\n\t Promise.all = function Promise_all(promises) {\n\t  var resolveAll, rejectAll;\n\t  var deferred = new Promise(function (resolve, reject) {\n\t   resolveAll = resolve;\n\t   rejectAll = reject;\n\t  });\n\t  var unresolved = promises.length;\n\t  var results = [];\n\t  if (unresolved === 0) {\n\t   resolveAll(results);\n\t   return deferred;\n\t  }\n\t  function reject(reason) {\n\t   if (deferred._status === STATUS_REJECTED) {\n\t    return;\n\t   }\n\t   results = [];\n\t   rejectAll(reason);\n\t  }\n\t  for (var i = 0, ii = promises.length; i < ii; ++i) {\n\t   var promise = promises[i];\n\t   var resolve = function (i) {\n\t    return function (value) {\n\t     if (deferred._status === STATUS_REJECTED) {\n\t      return;\n\t     }\n\t     results[i] = value;\n\t     unresolved--;\n\t     if (unresolved === 0) {\n\t      resolveAll(results);\n\t     }\n\t    };\n\t   }(i);\n\t   if (Promise.isPromise(promise)) {\n\t    promise.then(resolve, reject);\n\t   } else {\n\t    resolve(promise);\n\t   }\n\t  }\n\t  return deferred;\n\t };\n\t Promise.isPromise = function Promise_isPromise(value) {\n\t  return value && typeof value.then === 'function';\n\t };\n\t Promise.resolve = function Promise_resolve(value) {\n\t  return new Promise(function (resolve) {\n\t   resolve(value);\n\t  });\n\t };\n\t Promise.reject = function Promise_reject(reason) {\n\t  return new Promise(function (resolve, reject) {\n\t   reject(reason);\n\t  });\n\t };\n\t Promise.prototype = {\n\t  _status: null,\n\t  _value: null,\n\t  _handlers: null,\n\t  _unhandledRejection: null,\n\t  _updateStatus: function Promise__updateStatus(status, value) {\n\t   if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n\t    return;\n\t   }\n\t   if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n\t    value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n\t    return;\n\t   }\n\t   this._status = status;\n\t   this._value = value;\n\t   if (status === STATUS_REJECTED && this._handlers.length === 0) {\n\t    this._unhandledRejection = true;\n\t    HandlerManager.addUnhandledRejection(this);\n\t   }\n\t   HandlerManager.scheduleHandlers(this);\n\t  },\n\t  _resolve: function Promise_resolve(value) {\n\t   this._updateStatus(STATUS_RESOLVED, value);\n\t  },\n\t  _reject: function Promise_reject(reason) {\n\t   this._updateStatus(STATUS_REJECTED, reason);\n\t  },\n\t  then: function Promise_then(onResolve, onReject) {\n\t   var nextPromise = new Promise(function (resolve, reject) {\n\t    this.resolve = resolve;\n\t    this.reject = reject;\n\t   });\n\t   this._handlers.push({\n\t    thisPromise: this,\n\t    onResolve: onResolve,\n\t    onReject: onReject,\n\t    nextPromise: nextPromise\n\t   });\n\t   HandlerManager.scheduleHandlers(this);\n\t   return nextPromise;\n\t  },\n\t  catch: function Promise_catch(onReject) {\n\t   return this.then(undefined, onReject);\n\t  }\n\t };\n\t globalScope.Promise = Promise;\n\t}());\n\t(function WeakMapClosure() {\n\t if (globalScope.WeakMap) {\n\t  return;\n\t }\n\t var id = 0;\n\t function WeakMap() {\n\t  this.id = '$weakmap' + id++;\n\t }\n\t WeakMap.prototype = {\n\t  has: function (obj) {\n\t   return !!Object.getOwnPropertyDescriptor(obj, this.id);\n\t  },\n\t  get: function (obj, defaultValue) {\n\t   return this.has(obj) ? obj[this.id] : defaultValue;\n\t  },\n\t  set: function (obj, value) {\n\t   Object.defineProperty(obj, this.id, {\n\t    value: value,\n\t    enumerable: false,\n\t    configurable: true\n\t   });\n\t  },\n\t  delete: function (obj) {\n\t   delete obj[this.id];\n\t  }\n\t };\n\t globalScope.WeakMap = WeakMap;\n\t}());\n\tvar StatTimer = function StatTimerClosure() {\n\t function rpad(str, pad, length) {\n\t  while (str.length < length) {\n\t   str += pad;\n\t  }\n\t  return str;\n\t }\n\t function StatTimer() {\n\t  this.started = Object.create(null);\n\t  this.times = [];\n\t  this.enabled = true;\n\t }\n\t StatTimer.prototype = {\n\t  time: function StatTimer_time(name) {\n\t   if (!this.enabled) {\n\t    return;\n\t   }\n\t   if (name in this.started) {\n\t    warn('Timer is already running for ' + name);\n\t   }\n\t   this.started[name] = Date.now();\n\t  },\n\t  timeEnd: function StatTimer_timeEnd(name) {\n\t   if (!this.enabled) {\n\t    return;\n\t   }\n\t   if (!(name in this.started)) {\n\t    warn('Timer has not been started for ' + name);\n\t   }\n\t   this.times.push({\n\t    'name': name,\n\t    'start': this.started[name],\n\t    'end': Date.now()\n\t   });\n\t   delete this.started[name];\n\t  },\n\t  toString: function StatTimer_toString() {\n\t   var i, ii;\n\t   var times = this.times;\n\t   var out = '';\n\t   var longest = 0;\n\t   for (i = 0, ii = times.length; i < ii; ++i) {\n\t    var name = times[i]['name'];\n\t    if (name.length > longest) {\n\t     longest = name.length;\n\t    }\n\t   }\n\t   for (i = 0, ii = times.length; i < ii; ++i) {\n\t    var span = times[i];\n\t    var duration = span.end - span.start;\n\t    out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n\t   }\n\t   return out;\n\t  }\n\t };\n\t return StatTimer;\n\t}();\n\tvar createBlob = function createBlob(data, contentType) {\n\t if (typeof Blob !== 'undefined') {\n\t  return new Blob([data], { type: contentType });\n\t }\n\t warn('The \"Blob\" constructor is not supported.');\n\t};\n\tvar createObjectURL = function createObjectURLClosure() {\n\t var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t return function createObjectURL(data, contentType, forceDataSchema) {\n\t  if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n\t   var blob = createBlob(data, contentType);\n\t   return URL.createObjectURL(blob);\n\t  }\n\t  var buffer = 'data:' + contentType + ';base64,';\n\t  for (var i = 0, ii = data.length; i < ii; i += 3) {\n\t   var b1 = data[i] & 0xFF;\n\t   var b2 = data[i + 1] & 0xFF;\n\t   var b3 = data[i + 2] & 0xFF;\n\t   var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n\t   var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t   var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n\t   buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n\t  }\n\t  return buffer;\n\t };\n\t}();\n\tfunction MessageHandler(sourceName, targetName, comObj) {\n\t this.sourceName = sourceName;\n\t this.targetName = targetName;\n\t this.comObj = comObj;\n\t this.callbackIndex = 1;\n\t this.postMessageTransfers = true;\n\t var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n\t var ah = this.actionHandler = Object.create(null);\n\t this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n\t  var data = event.data;\n\t  if (data.targetName !== this.sourceName) {\n\t   return;\n\t  }\n\t  if (data.isReply) {\n\t   var callbackId = data.callbackId;\n\t   if (data.callbackId in callbacksCapabilities) {\n\t    var callback = callbacksCapabilities[callbackId];\n\t    delete callbacksCapabilities[callbackId];\n\t    if ('error' in data) {\n\t     callback.reject(data.error);\n\t    } else {\n\t     callback.resolve(data.data);\n\t    }\n\t   } else {\n\t    error('Cannot resolve callback ' + callbackId);\n\t   }\n\t  } else if (data.action in ah) {\n\t   var action = ah[data.action];\n\t   if (data.callbackId) {\n\t    var sourceName = this.sourceName;\n\t    var targetName = data.sourceName;\n\t    Promise.resolve().then(function () {\n\t     return action[0].call(action[1], data.data);\n\t    }).then(function (result) {\n\t     comObj.postMessage({\n\t      sourceName: sourceName,\n\t      targetName: targetName,\n\t      isReply: true,\n\t      callbackId: data.callbackId,\n\t      data: result\n\t     });\n\t    }, function (reason) {\n\t     if (reason instanceof Error) {\n\t      reason = reason + '';\n\t     }\n\t     comObj.postMessage({\n\t      sourceName: sourceName,\n\t      targetName: targetName,\n\t      isReply: true,\n\t      callbackId: data.callbackId,\n\t      error: reason\n\t     });\n\t    });\n\t   } else {\n\t    action[0].call(action[1], data.data);\n\t   }\n\t  } else {\n\t   error('Unknown action from worker: ' + data.action);\n\t  }\n\t }.bind(this);\n\t comObj.addEventListener('message', this._onComObjOnMessage);\n\t}\n\tMessageHandler.prototype = {\n\t on: function messageHandlerOn(actionName, handler, scope) {\n\t  var ah = this.actionHandler;\n\t  if (ah[actionName]) {\n\t   error('There is already an actionName called \"' + actionName + '\"');\n\t  }\n\t  ah[actionName] = [\n\t   handler,\n\t   scope\n\t  ];\n\t },\n\t send: function messageHandlerSend(actionName, data, transfers) {\n\t  var message = {\n\t   sourceName: this.sourceName,\n\t   targetName: this.targetName,\n\t   action: actionName,\n\t   data: data\n\t  };\n\t  this.postMessage(message, transfers);\n\t },\n\t sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n\t  var callbackId = this.callbackIndex++;\n\t  var message = {\n\t   sourceName: this.sourceName,\n\t   targetName: this.targetName,\n\t   action: actionName,\n\t   data: data,\n\t   callbackId: callbackId\n\t  };\n\t  var capability = createPromiseCapability();\n\t  this.callbacksCapabilities[callbackId] = capability;\n\t  try {\n\t   this.postMessage(message, transfers);\n\t  } catch (e) {\n\t   capability.reject(e);\n\t  }\n\t  return capability.promise;\n\t },\n\t postMessage: function (message, transfers) {\n\t  if (transfers && this.postMessageTransfers) {\n\t   this.comObj.postMessage(message, transfers);\n\t  } else {\n\t   this.comObj.postMessage(message);\n\t  }\n\t },\n\t destroy: function () {\n\t  this.comObj.removeEventListener('message', this._onComObjOnMessage);\n\t }\n\t};\n\tfunction loadJpegStream(id, imageUrl, objs) {\n\t var img = new Image();\n\t img.onload = function loadJpegStream_onloadClosure() {\n\t  objs.resolve(id, img);\n\t };\n\t img.onerror = function loadJpegStream_onerrorClosure() {\n\t  objs.resolve(id, null);\n\t  warn('Error during JPEG image loading');\n\t };\n\t img.src = imageUrl;\n\t}\n\t(function checkURLConstructor(scope) {\n\t var hasWorkingUrl = false;\n\t try {\n\t  if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n\t   var u = new URL('b', 'http://a');\n\t   u.pathname = 'c%20d';\n\t   hasWorkingUrl = u.href === 'http://a/c%20d';\n\t  }\n\t } catch (e) {\n\t }\n\t if (hasWorkingUrl) {\n\t  return;\n\t }\n\t var relative = Object.create(null);\n\t relative['ftp'] = 21;\n\t relative['file'] = 0;\n\t relative['gopher'] = 70;\n\t relative['http'] = 80;\n\t relative['https'] = 443;\n\t relative['ws'] = 80;\n\t relative['wss'] = 443;\n\t var relativePathDotMapping = Object.create(null);\n\t relativePathDotMapping['%2e'] = '.';\n\t relativePathDotMapping['.%2e'] = '..';\n\t relativePathDotMapping['%2e.'] = '..';\n\t relativePathDotMapping['%2e%2e'] = '..';\n\t function isRelativeScheme(scheme) {\n\t  return relative[scheme] !== undefined;\n\t }\n\t function invalid() {\n\t  clear.call(this);\n\t  this._isInvalid = true;\n\t }\n\t function IDNAToASCII(h) {\n\t  if (h === '') {\n\t   invalid.call(this);\n\t  }\n\t  return h.toLowerCase();\n\t }\n\t function percentEscape(c) {\n\t  var unicode = c.charCodeAt(0);\n\t  if (unicode > 0x20 && unicode < 0x7F && [\n\t    0x22,\n\t    0x23,\n\t    0x3C,\n\t    0x3E,\n\t    0x3F,\n\t    0x60\n\t   ].indexOf(unicode) === -1) {\n\t   return c;\n\t  }\n\t  return encodeURIComponent(c);\n\t }\n\t function percentEscapeQuery(c) {\n\t  var unicode = c.charCodeAt(0);\n\t  if (unicode > 0x20 && unicode < 0x7F && [\n\t    0x22,\n\t    0x23,\n\t    0x3C,\n\t    0x3E,\n\t    0x60\n\t   ].indexOf(unicode) === -1) {\n\t   return c;\n\t  }\n\t  return encodeURIComponent(c);\n\t }\n\t var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n\t function parse(input, stateOverride, base) {\n\t  function err(message) {\n\t   errors.push(message);\n\t  }\n\t  var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n\t  loop:\n\t   while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n\t    var c = input[cursor];\n\t    switch (state) {\n\t    case 'scheme start':\n\t     if (c && ALPHA.test(c)) {\n\t      buffer += c.toLowerCase();\n\t      state = 'scheme';\n\t     } else if (!stateOverride) {\n\t      buffer = '';\n\t      state = 'no scheme';\n\t      continue;\n\t     } else {\n\t      err('Invalid scheme.');\n\t      break loop;\n\t     }\n\t     break;\n\t    case 'scheme':\n\t     if (c && ALPHANUMERIC.test(c)) {\n\t      buffer += c.toLowerCase();\n\t     } else if (c === ':') {\n\t      this._scheme = buffer;\n\t      buffer = '';\n\t      if (stateOverride) {\n\t       break loop;\n\t      }\n\t      if (isRelativeScheme(this._scheme)) {\n\t       this._isRelative = true;\n\t      }\n\t      if (this._scheme === 'file') {\n\t       state = 'relative';\n\t      } else if (this._isRelative && base && base._scheme === this._scheme) {\n\t       state = 'relative or authority';\n\t      } else if (this._isRelative) {\n\t       state = 'authority first slash';\n\t      } else {\n\t       state = 'scheme data';\n\t      }\n\t     } else if (!stateOverride) {\n\t      buffer = '';\n\t      cursor = 0;\n\t      state = 'no scheme';\n\t      continue;\n\t     } else if (EOF === c) {\n\t      break loop;\n\t     } else {\n\t      err('Code point not allowed in scheme: ' + c);\n\t      break loop;\n\t     }\n\t     break;\n\t    case 'scheme data':\n\t     if (c === '?') {\n\t      this._query = '?';\n\t      state = 'query';\n\t     } else if (c === '#') {\n\t      this._fragment = '#';\n\t      state = 'fragment';\n\t     } else {\n\t      if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t       this._schemeData += percentEscape(c);\n\t      }\n\t     }\n\t     break;\n\t    case 'no scheme':\n\t     if (!base || !isRelativeScheme(base._scheme)) {\n\t      err('Missing scheme.');\n\t      invalid.call(this);\n\t     } else {\n\t      state = 'relative';\n\t      continue;\n\t     }\n\t     break;\n\t    case 'relative or authority':\n\t     if (c === '/' && input[cursor + 1] === '/') {\n\t      state = 'authority ignore slashes';\n\t     } else {\n\t      err('Expected /, got: ' + c);\n\t      state = 'relative';\n\t      continue;\n\t     }\n\t     break;\n\t    case 'relative':\n\t     this._isRelative = true;\n\t     if ('file' !== this._scheme) {\n\t      this._scheme = base._scheme;\n\t     }\n\t     if (EOF === c) {\n\t      this._host = base._host;\n\t      this._port = base._port;\n\t      this._path = base._path.slice();\n\t      this._query = base._query;\n\t      this._username = base._username;\n\t      this._password = base._password;\n\t      break loop;\n\t     } else if (c === '/' || c === '\\\\') {\n\t      if (c === '\\\\') {\n\t       err('\\\\ is an invalid code point.');\n\t      }\n\t      state = 'relative slash';\n\t     } else if (c === '?') {\n\t      this._host = base._host;\n\t      this._port = base._port;\n\t      this._path = base._path.slice();\n\t      this._query = '?';\n\t      this._username = base._username;\n\t      this._password = base._password;\n\t      state = 'query';\n\t     } else if (c === '#') {\n\t      this._host = base._host;\n\t      this._port = base._port;\n\t      this._path = base._path.slice();\n\t      this._query = base._query;\n\t      this._fragment = '#';\n\t      this._username = base._username;\n\t      this._password = base._password;\n\t      state = 'fragment';\n\t     } else {\n\t      var nextC = input[cursor + 1];\n\t      var nextNextC = input[cursor + 2];\n\t      if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n\t       this._host = base._host;\n\t       this._port = base._port;\n\t       this._username = base._username;\n\t       this._password = base._password;\n\t       this._path = base._path.slice();\n\t       this._path.pop();\n\t      }\n\t      state = 'relative path';\n\t      continue;\n\t     }\n\t     break;\n\t    case 'relative slash':\n\t     if (c === '/' || c === '\\\\') {\n\t      if (c === '\\\\') {\n\t       err('\\\\ is an invalid code point.');\n\t      }\n\t      if (this._scheme === 'file') {\n\t       state = 'file host';\n\t      } else {\n\t       state = 'authority ignore slashes';\n\t      }\n\t     } else {\n\t      if ('file' !== this._scheme) {\n\t       this._host = base._host;\n\t       this._port = base._port;\n\t       this._username = base._username;\n\t       this._password = base._password;\n\t      }\n\t      state = 'relative path';\n\t      continue;\n\t     }\n\t     break;\n\t    case 'authority first slash':\n\t     if (c === '/') {\n\t      state = 'authority second slash';\n\t     } else {\n\t      err('Expected \\'/\\', got: ' + c);\n\t      state = 'authority ignore slashes';\n\t      continue;\n\t     }\n\t     break;\n\t    case 'authority second slash':\n\t     state = 'authority ignore slashes';\n\t     if ('/' !== c) {\n\t      err('Expected \\'/\\', got: ' + c);\n\t      continue;\n\t     }\n\t     break;\n\t    case 'authority ignore slashes':\n\t     if ('/' !== c && '\\\\' !== c) {\n\t      state = 'authority';\n\t      continue;\n\t     } else {\n\t      err('Expected authority, got: ' + c);\n\t     }\n\t     break;\n\t    case 'authority':\n\t     if (c === '@') {\n\t      if (seenAt) {\n\t       err('@ already seen.');\n\t       buffer += '%40';\n\t      }\n\t      seenAt = true;\n\t      for (var i = 0; i < buffer.length; i++) {\n\t       var cp = buffer[i];\n\t       if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n\t        err('Invalid whitespace in authority.');\n\t        continue;\n\t       }\n\t       if (cp === ':' && this._password === null) {\n\t        this._password = '';\n\t        continue;\n\t       }\n\t       var tempC = percentEscape(cp);\n\t       if (null !== this._password) {\n\t        this._password += tempC;\n\t       } else {\n\t        this._username += tempC;\n\t       }\n\t      }\n\t      buffer = '';\n\t     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t      cursor -= buffer.length;\n\t      buffer = '';\n\t      state = 'host';\n\t      continue;\n\t     } else {\n\t      buffer += c;\n\t     }\n\t     break;\n\t    case 'file host':\n\t     if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t      if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n\t       state = 'relative path';\n\t      } else if (buffer.length === 0) {\n\t       state = 'relative path start';\n\t      } else {\n\t       this._host = IDNAToASCII.call(this, buffer);\n\t       buffer = '';\n\t       state = 'relative path start';\n\t      }\n\t      continue;\n\t     } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t      err('Invalid whitespace in file host.');\n\t     } else {\n\t      buffer += c;\n\t     }\n\t     break;\n\t    case 'host':\n\t    case 'hostname':\n\t     if (c === ':' && !seenBracket) {\n\t      this._host = IDNAToASCII.call(this, buffer);\n\t      buffer = '';\n\t      state = 'port';\n\t      if (stateOverride === 'hostname') {\n\t       break loop;\n\t      }\n\t     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t      this._host = IDNAToASCII.call(this, buffer);\n\t      buffer = '';\n\t      state = 'relative path start';\n\t      if (stateOverride) {\n\t       break loop;\n\t      }\n\t      continue;\n\t     } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t      if (c === '[') {\n\t       seenBracket = true;\n\t      } else if (c === ']') {\n\t       seenBracket = false;\n\t      }\n\t      buffer += c;\n\t     } else {\n\t      err('Invalid code point in host/hostname: ' + c);\n\t     }\n\t     break;\n\t    case 'port':\n\t     if (/[0-9]/.test(c)) {\n\t      buffer += c;\n\t     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n\t      if ('' !== buffer) {\n\t       var temp = parseInt(buffer, 10);\n\t       if (temp !== relative[this._scheme]) {\n\t        this._port = temp + '';\n\t       }\n\t       buffer = '';\n\t      }\n\t      if (stateOverride) {\n\t       break loop;\n\t      }\n\t      state = 'relative path start';\n\t      continue;\n\t     } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t      err('Invalid code point in port: ' + c);\n\t     } else {\n\t      invalid.call(this);\n\t     }\n\t     break;\n\t    case 'relative path start':\n\t     if (c === '\\\\') {\n\t      err('\\'\\\\\\' not allowed in path.');\n\t     }\n\t     state = 'relative path';\n\t     if ('/' !== c && '\\\\' !== c) {\n\t      continue;\n\t     }\n\t     break;\n\t    case 'relative path':\n\t     if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n\t      if (c === '\\\\') {\n\t       err('\\\\ not allowed in relative path.');\n\t      }\n\t      var tmp;\n\t      if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n\t       buffer = tmp;\n\t      }\n\t      if (buffer === '..') {\n\t       this._path.pop();\n\t       if ('/' !== c && '\\\\' !== c) {\n\t        this._path.push('');\n\t       }\n\t      } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n\t       this._path.push('');\n\t      } else if ('.' !== buffer) {\n\t       if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n\t        buffer = buffer[0] + ':';\n\t       }\n\t       this._path.push(buffer);\n\t      }\n\t      buffer = '';\n\t      if (c === '?') {\n\t       this._query = '?';\n\t       state = 'query';\n\t      } else if (c === '#') {\n\t       this._fragment = '#';\n\t       state = 'fragment';\n\t      }\n\t     } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t      buffer += percentEscape(c);\n\t     }\n\t     break;\n\t    case 'query':\n\t     if (!stateOverride && c === '#') {\n\t      this._fragment = '#';\n\t      state = 'fragment';\n\t     } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t      this._query += percentEscapeQuery(c);\n\t     }\n\t     break;\n\t    case 'fragment':\n\t     if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n\t      this._fragment += c;\n\t     }\n\t     break;\n\t    }\n\t    cursor++;\n\t   }\n\t }\n\t function clear() {\n\t  this._scheme = '';\n\t  this._schemeData = '';\n\t  this._username = '';\n\t  this._password = null;\n\t  this._host = '';\n\t  this._port = '';\n\t  this._path = [];\n\t  this._query = '';\n\t  this._fragment = '';\n\t  this._isInvalid = false;\n\t  this._isRelative = false;\n\t }\n\t function JURL(url, base) {\n\t  if (base !== undefined && !(base instanceof JURL)) {\n\t   base = new JURL(String(base));\n\t  }\n\t  this._url = url;\n\t  clear.call(this);\n\t  var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n\t  parse.call(this, input, null, base);\n\t }\n\t JURL.prototype = {\n\t  toString: function () {\n\t   return this.href;\n\t  },\n\t  get href() {\n\t   if (this._isInvalid) {\n\t    return this._url;\n\t   }\n\t   var authority = '';\n\t   if ('' !== this._username || null !== this._password) {\n\t    authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n\t   }\n\t   return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n\t  },\n\t  set href(href) {\n\t   clear.call(this);\n\t   parse.call(this, href);\n\t  },\n\t  get protocol() {\n\t   return this._scheme + ':';\n\t  },\n\t  set protocol(protocol) {\n\t   if (this._isInvalid) {\n\t    return;\n\t   }\n\t   parse.call(this, protocol + ':', 'scheme start');\n\t  },\n\t  get host() {\n\t   return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n\t  },\n\t  set host(host) {\n\t   if (this._isInvalid || !this._isRelative) {\n\t    return;\n\t   }\n\t   parse.call(this, host, 'host');\n\t  },\n\t  get hostname() {\n\t   return this._host;\n\t  },\n\t  set hostname(hostname) {\n\t   if (this._isInvalid || !this._isRelative) {\n\t    return;\n\t   }\n\t   parse.call(this, hostname, 'hostname');\n\t  },\n\t  get port() {\n\t   return this._port;\n\t  },\n\t  set port(port) {\n\t   if (this._isInvalid || !this._isRelative) {\n\t    return;\n\t   }\n\t   parse.call(this, port, 'port');\n\t  },\n\t  get pathname() {\n\t   return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n\t  },\n\t  set pathname(pathname) {\n\t   if (this._isInvalid || !this._isRelative) {\n\t    return;\n\t   }\n\t   this._path = [];\n\t   parse.call(this, pathname, 'relative path start');\n\t  },\n\t  get search() {\n\t   return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n\t  },\n\t  set search(search) {\n\t   if (this._isInvalid || !this._isRelative) {\n\t    return;\n\t   }\n\t   this._query = '?';\n\t   if (search[0] === '?') {\n\t    search = search.slice(1);\n\t   }\n\t   parse.call(this, search, 'query');\n\t  },\n\t  get hash() {\n\t   return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n\t  },\n\t  set hash(hash) {\n\t   if (this._isInvalid) {\n\t    return;\n\t   }\n\t   this._fragment = '#';\n\t   if (hash[0] === '#') {\n\t    hash = hash.slice(1);\n\t   }\n\t   parse.call(this, hash, 'fragment');\n\t  },\n\t  get origin() {\n\t   var host;\n\t   if (this._isInvalid || !this._scheme) {\n\t    return '';\n\t   }\n\t   switch (this._scheme) {\n\t   case 'data':\n\t   case 'file':\n\t   case 'javascript':\n\t   case 'mailto':\n\t    return 'null';\n\t   }\n\t   host = this.host;\n\t   if (!host) {\n\t    return '';\n\t   }\n\t   return this._scheme + '://' + host;\n\t  }\n\t };\n\t var OriginalURL = scope.URL;\n\t if (OriginalURL) {\n\t  JURL.createObjectURL = function (blob) {\n\t   return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n\t  };\n\t  JURL.revokeObjectURL = function (url) {\n\t   OriginalURL.revokeObjectURL(url);\n\t  };\n\t }\n\t scope.URL = JURL;\n\t}(globalScope));\n\texports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n\texports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n\texports.OPS = OPS;\n\texports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\n\texports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n\texports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n\texports.AnnotationFieldFlag = AnnotationFieldFlag;\n\texports.AnnotationFlag = AnnotationFlag;\n\texports.AnnotationType = AnnotationType;\n\texports.FontType = FontType;\n\texports.ImageKind = ImageKind;\n\texports.CMapCompressionType = CMapCompressionType;\n\texports.InvalidPDFException = InvalidPDFException;\n\texports.MessageHandler = MessageHandler;\n\texports.MissingDataException = MissingDataException;\n\texports.MissingPDFException = MissingPDFException;\n\texports.NotImplementedException = NotImplementedException;\n\texports.PageViewport = PageViewport;\n\texports.PasswordException = PasswordException;\n\texports.PasswordResponses = PasswordResponses;\n\texports.StatTimer = StatTimer;\n\texports.StreamType = StreamType;\n\texports.TextRenderingMode = TextRenderingMode;\n\texports.UnexpectedResponseException = UnexpectedResponseException;\n\texports.UnknownErrorException = UnknownErrorException;\n\texports.Util = Util;\n\texports.XRefParseException = XRefParseException;\n\texports.arrayByteLength = arrayByteLength;\n\texports.arraysToBytes = arraysToBytes;\n\texports.assert = assert;\n\texports.bytesToString = bytesToString;\n\texports.createBlob = createBlob;\n\texports.createPromiseCapability = createPromiseCapability;\n\texports.createObjectURL = createObjectURL;\n\texports.deprecated = deprecated;\n\texports.error = error;\n\texports.getLookupTableFactory = getLookupTableFactory;\n\texports.getVerbosityLevel = getVerbosityLevel;\n\texports.globalScope = globalScope;\n\texports.info = info;\n\texports.isArray = isArray;\n\texports.isArrayBuffer = isArrayBuffer;\n\texports.isBool = isBool;\n\texports.isEmptyObj = isEmptyObj;\n\texports.isInt = isInt;\n\texports.isNum = isNum;\n\texports.isString = isString;\n\texports.isSpace = isSpace;\n\texports.isNodeJS = isNodeJS;\n\texports.isSameOrigin = isSameOrigin;\n\texports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n\texports.isLittleEndian = isLittleEndian;\n\texports.isEvalSupported = isEvalSupported;\n\texports.loadJpegStream = loadJpegStream;\n\texports.log2 = log2;\n\texports.readInt8 = readInt8;\n\texports.readUint16 = readUint16;\n\texports.readUint32 = readUint32;\n\texports.removeNullCharacters = removeNullCharacters;\n\texports.setVerbosityLevel = setVerbosityLevel;\n\texports.shadow = shadow;\n\texports.string32 = string32;\n\texports.stringToBytes = stringToBytes;\n\texports.stringToPDFString = stringToPDFString;\n\texports.stringToUTF8String = stringToUTF8String;\n\texports.utf8StringToString = utf8StringToString;\n\texports.warn = warn;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(19)))\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar isArray = sharedUtil.isArray;\n\tvar EOF = {};\n\tvar Name = function NameClosure() {\n\t function Name(name) {\n\t  this.name = name;\n\t }\n\t Name.prototype = {};\n\t var nameCache = Object.create(null);\n\t Name.get = function Name_get(name) {\n\t  var nameValue = nameCache[name];\n\t  return nameValue ? nameValue : nameCache[name] = new Name(name);\n\t };\n\t return Name;\n\t}();\n\tvar Cmd = function CmdClosure() {\n\t function Cmd(cmd) {\n\t  this.cmd = cmd;\n\t }\n\t Cmd.prototype = {};\n\t var cmdCache = Object.create(null);\n\t Cmd.get = function Cmd_get(cmd) {\n\t  var cmdValue = cmdCache[cmd];\n\t  return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n\t };\n\t return Cmd;\n\t}();\n\tvar Dict = function DictClosure() {\n\t var nonSerializable = function nonSerializableClosure() {\n\t  return nonSerializable;\n\t };\n\t function Dict(xref) {\n\t  this.map = Object.create(null);\n\t  this.xref = xref;\n\t  this.objId = null;\n\t  this.suppressEncryption = false;\n\t  this.__nonSerializable__ = nonSerializable;\n\t }\n\t Dict.prototype = {\n\t  assignXref: function Dict_assignXref(newXref) {\n\t   this.xref = newXref;\n\t  },\n\t  get: function Dict_get(key1, key2, key3) {\n\t   var value;\n\t   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n\t    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t   }\n\t   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n\t    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t   }\n\t   value = this.map[key3] || null;\n\t   return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t  },\n\t  getAsync: function Dict_getAsync(key1, key2, key3) {\n\t   var value;\n\t   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n\t    if (xref) {\n\t     return xref.fetchIfRefAsync(value, suppressEncryption);\n\t    }\n\t    return Promise.resolve(value);\n\t   }\n\t   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n\t    if (xref) {\n\t     return xref.fetchIfRefAsync(value, suppressEncryption);\n\t    }\n\t    return Promise.resolve(value);\n\t   }\n\t   value = this.map[key3] || null;\n\t   if (xref) {\n\t    return xref.fetchIfRefAsync(value, suppressEncryption);\n\t   }\n\t   return Promise.resolve(value);\n\t  },\n\t  getArray: function Dict_getArray(key1, key2, key3) {\n\t   var value = this.get(key1, key2, key3);\n\t   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n\t   if (!isArray(value) || !xref) {\n\t    return value;\n\t   }\n\t   value = value.slice();\n\t   for (var i = 0, ii = value.length; i < ii; i++) {\n\t    if (!isRef(value[i])) {\n\t     continue;\n\t    }\n\t    value[i] = xref.fetch(value[i], suppressEncryption);\n\t   }\n\t   return value;\n\t  },\n\t  getRaw: function Dict_getRaw(key) {\n\t   return this.map[key];\n\t  },\n\t  getKeys: function Dict_getKeys() {\n\t   return Object.keys(this.map);\n\t  },\n\t  set: function Dict_set(key, value) {\n\t   this.map[key] = value;\n\t  },\n\t  has: function Dict_has(key) {\n\t   return key in this.map;\n\t  },\n\t  forEach: function Dict_forEach(callback) {\n\t   for (var key in this.map) {\n\t    callback(key, this.get(key));\n\t   }\n\t  }\n\t };\n\t Dict.empty = new Dict(null);\n\t Dict.merge = function Dict_merge(xref, dictArray) {\n\t  var mergedDict = new Dict(xref);\n\t  for (var i = 0, ii = dictArray.length; i < ii; i++) {\n\t   var dict = dictArray[i];\n\t   if (!isDict(dict)) {\n\t    continue;\n\t   }\n\t   for (var keyName in dict.map) {\n\t    if (mergedDict.map[keyName]) {\n\t     continue;\n\t    }\n\t    mergedDict.map[keyName] = dict.map[keyName];\n\t   }\n\t  }\n\t  return mergedDict;\n\t };\n\t return Dict;\n\t}();\n\tvar Ref = function RefClosure() {\n\t function Ref(num, gen) {\n\t  this.num = num;\n\t  this.gen = gen;\n\t }\n\t Ref.prototype = {\n\t  toString: function Ref_toString() {\n\t   var str = this.num + 'R';\n\t   if (this.gen !== 0) {\n\t    str += this.gen;\n\t   }\n\t   return str;\n\t  }\n\t };\n\t return Ref;\n\t}();\n\tvar RefSet = function RefSetClosure() {\n\t function RefSet() {\n\t  this.dict = Object.create(null);\n\t }\n\t RefSet.prototype = {\n\t  has: function RefSet_has(ref) {\n\t   return ref.toString() in this.dict;\n\t  },\n\t  put: function RefSet_put(ref) {\n\t   this.dict[ref.toString()] = true;\n\t  },\n\t  remove: function RefSet_remove(ref) {\n\t   delete this.dict[ref.toString()];\n\t  }\n\t };\n\t return RefSet;\n\t}();\n\tvar RefSetCache = function RefSetCacheClosure() {\n\t function RefSetCache() {\n\t  this.dict = Object.create(null);\n\t }\n\t RefSetCache.prototype = {\n\t  get: function RefSetCache_get(ref) {\n\t   return this.dict[ref.toString()];\n\t  },\n\t  has: function RefSetCache_has(ref) {\n\t   return ref.toString() in this.dict;\n\t  },\n\t  put: function RefSetCache_put(ref, obj) {\n\t   this.dict[ref.toString()] = obj;\n\t  },\n\t  putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n\t   this.dict[ref.toString()] = this.get(aliasRef);\n\t  },\n\t  forEach: function RefSetCache_forEach(fn, thisArg) {\n\t   for (var i in this.dict) {\n\t    fn.call(thisArg, this.dict[i]);\n\t   }\n\t  },\n\t  clear: function RefSetCache_clear() {\n\t   this.dict = Object.create(null);\n\t  }\n\t };\n\t return RefSetCache;\n\t}();\n\tfunction isEOF(v) {\n\t return v === EOF;\n\t}\n\tfunction isName(v, name) {\n\t return v instanceof Name && (name === undefined || v.name === name);\n\t}\n\tfunction isCmd(v, cmd) {\n\t return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n\t}\n\tfunction isDict(v, type) {\n\t return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n\t}\n\tfunction isRef(v) {\n\t return v instanceof Ref;\n\t}\n\tfunction isRefsEqual(v1, v2) {\n\t return v1.num === v2.num && v1.gen === v2.gen;\n\t}\n\tfunction isStream(v) {\n\t return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n\t}\n\texports.EOF = EOF;\n\texports.Cmd = Cmd;\n\texports.Dict = Dict;\n\texports.Name = Name;\n\texports.Ref = Ref;\n\texports.RefSet = RefSet;\n\texports.RefSetCache = RefSetCache;\n\texports.isEOF = isEOF;\n\texports.isCmd = isCmd;\n\texports.isDict = isDict;\n\texports.isName = isName;\n\texports.isRef = isRef;\n\texports.isRefsEqual = isRefsEqual;\n\texports.isStream = isStream;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreJbig2 = __w_pdfjs_require__(28);\n\tvar coreJpg = __w_pdfjs_require__(29);\n\tvar coreJpx = __w_pdfjs_require__(14);\n\tvar Util = sharedUtil.Util;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isInt = sharedUtil.isInt;\n\tvar isArray = sharedUtil.isArray;\n\tvar createObjectURL = sharedUtil.createObjectURL;\n\tvar shadow = sharedUtil.shadow;\n\tvar isSpace = sharedUtil.isSpace;\n\tvar Dict = corePrimitives.Dict;\n\tvar isDict = corePrimitives.isDict;\n\tvar isStream = corePrimitives.isStream;\n\tvar Jbig2Image = coreJbig2.Jbig2Image;\n\tvar JpegImage = coreJpg.JpegImage;\n\tvar JpxImage = coreJpx.JpxImage;\n\tvar Stream = function StreamClosure() {\n\t function Stream(arrayBuffer, start, length, dict) {\n\t  this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n\t  this.start = start || 0;\n\t  this.pos = this.start;\n\t  this.end = start + length || this.bytes.length;\n\t  this.dict = dict;\n\t }\n\t Stream.prototype = {\n\t  get length() {\n\t   return this.end - this.start;\n\t  },\n\t  get isEmpty() {\n\t   return this.length === 0;\n\t  },\n\t  getByte: function Stream_getByte() {\n\t   if (this.pos >= this.end) {\n\t    return -1;\n\t   }\n\t   return this.bytes[this.pos++];\n\t  },\n\t  getUint16: function Stream_getUint16() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   if (b0 === -1 || b1 === -1) {\n\t    return -1;\n\t   }\n\t   return (b0 << 8) + b1;\n\t  },\n\t  getInt32: function Stream_getInt32() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   var b2 = this.getByte();\n\t   var b3 = this.getByte();\n\t   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  },\n\t  getBytes: function Stream_getBytes(length) {\n\t   var bytes = this.bytes;\n\t   var pos = this.pos;\n\t   var strEnd = this.end;\n\t   if (!length) {\n\t    return bytes.subarray(pos, strEnd);\n\t   }\n\t   var end = pos + length;\n\t   if (end > strEnd) {\n\t    end = strEnd;\n\t   }\n\t   this.pos = end;\n\t   return bytes.subarray(pos, end);\n\t  },\n\t  peekByte: function Stream_peekByte() {\n\t   var peekedByte = this.getByte();\n\t   this.pos--;\n\t   return peekedByte;\n\t  },\n\t  peekBytes: function Stream_peekBytes(length) {\n\t   var bytes = this.getBytes(length);\n\t   this.pos -= bytes.length;\n\t   return bytes;\n\t  },\n\t  skip: function Stream_skip(n) {\n\t   if (!n) {\n\t    n = 1;\n\t   }\n\t   this.pos += n;\n\t  },\n\t  reset: function Stream_reset() {\n\t   this.pos = this.start;\n\t  },\n\t  moveStart: function Stream_moveStart() {\n\t   this.start = this.pos;\n\t  },\n\t  makeSubStream: function Stream_makeSubStream(start, length, dict) {\n\t   return new Stream(this.bytes.buffer, start, length, dict);\n\t  }\n\t };\n\t return Stream;\n\t}();\n\tvar StringStream = function StringStreamClosure() {\n\t function StringStream(str) {\n\t  var length = str.length;\n\t  var bytes = new Uint8Array(length);\n\t  for (var n = 0; n < length; ++n) {\n\t   bytes[n] = str.charCodeAt(n);\n\t  }\n\t  Stream.call(this, bytes);\n\t }\n\t StringStream.prototype = Stream.prototype;\n\t return StringStream;\n\t}();\n\tvar DecodeStream = function DecodeStreamClosure() {\n\t var emptyBuffer = new Uint8Array(0);\n\t function DecodeStream(maybeMinBufferLength) {\n\t  this.pos = 0;\n\t  this.bufferLength = 0;\n\t  this.eof = false;\n\t  this.buffer = emptyBuffer;\n\t  this.minBufferLength = 512;\n\t  if (maybeMinBufferLength) {\n\t   while (this.minBufferLength < maybeMinBufferLength) {\n\t    this.minBufferLength *= 2;\n\t   }\n\t  }\n\t }\n\t DecodeStream.prototype = {\n\t  get isEmpty() {\n\t   while (!this.eof && this.bufferLength === 0) {\n\t    this.readBlock();\n\t   }\n\t   return this.bufferLength === 0;\n\t  },\n\t  ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n\t   var buffer = this.buffer;\n\t   if (requested <= buffer.byteLength) {\n\t    return buffer;\n\t   }\n\t   var size = this.minBufferLength;\n\t   while (size < requested) {\n\t    size *= 2;\n\t   }\n\t   var buffer2 = new Uint8Array(size);\n\t   buffer2.set(buffer);\n\t   return this.buffer = buffer2;\n\t  },\n\t  getByte: function DecodeStream_getByte() {\n\t   var pos = this.pos;\n\t   while (this.bufferLength <= pos) {\n\t    if (this.eof) {\n\t     return -1;\n\t    }\n\t    this.readBlock();\n\t   }\n\t   return this.buffer[this.pos++];\n\t  },\n\t  getUint16: function DecodeStream_getUint16() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   if (b0 === -1 || b1 === -1) {\n\t    return -1;\n\t   }\n\t   return (b0 << 8) + b1;\n\t  },\n\t  getInt32: function DecodeStream_getInt32() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   var b2 = this.getByte();\n\t   var b3 = this.getByte();\n\t   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  },\n\t  getBytes: function DecodeStream_getBytes(length) {\n\t   var end, pos = this.pos;\n\t   if (length) {\n\t    this.ensureBuffer(pos + length);\n\t    end = pos + length;\n\t    while (!this.eof && this.bufferLength < end) {\n\t     this.readBlock();\n\t    }\n\t    var bufEnd = this.bufferLength;\n\t    if (end > bufEnd) {\n\t     end = bufEnd;\n\t    }\n\t   } else {\n\t    while (!this.eof) {\n\t     this.readBlock();\n\t    }\n\t    end = this.bufferLength;\n\t   }\n\t   this.pos = end;\n\t   return this.buffer.subarray(pos, end);\n\t  },\n\t  peekByte: function DecodeStream_peekByte() {\n\t   var peekedByte = this.getByte();\n\t   this.pos--;\n\t   return peekedByte;\n\t  },\n\t  peekBytes: function DecodeStream_peekBytes(length) {\n\t   var bytes = this.getBytes(length);\n\t   this.pos -= bytes.length;\n\t   return bytes;\n\t  },\n\t  makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n\t   var end = start + length;\n\t   while (this.bufferLength <= end && !this.eof) {\n\t    this.readBlock();\n\t   }\n\t   return new Stream(this.buffer, start, length, dict);\n\t  },\n\t  skip: function DecodeStream_skip(n) {\n\t   if (!n) {\n\t    n = 1;\n\t   }\n\t   this.pos += n;\n\t  },\n\t  reset: function DecodeStream_reset() {\n\t   this.pos = 0;\n\t  },\n\t  getBaseStreams: function DecodeStream_getBaseStreams() {\n\t   if (this.str && this.str.getBaseStreams) {\n\t    return this.str.getBaseStreams();\n\t   }\n\t   return [];\n\t  }\n\t };\n\t return DecodeStream;\n\t}();\n\tvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n\t function StreamsSequenceStream(streams) {\n\t  this.streams = streams;\n\t  DecodeStream.call(this, null);\n\t }\n\t StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\t StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n\t  var streams = this.streams;\n\t  if (streams.length === 0) {\n\t   this.eof = true;\n\t   return;\n\t  }\n\t  var stream = streams.shift();\n\t  var chunk = stream.getBytes();\n\t  var bufferLength = this.bufferLength;\n\t  var newLength = bufferLength + chunk.length;\n\t  var buffer = this.ensureBuffer(newLength);\n\t  buffer.set(chunk, bufferLength);\n\t  this.bufferLength = newLength;\n\t };\n\t StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n\t  var baseStreams = [];\n\t  for (var i = 0, ii = this.streams.length; i < ii; i++) {\n\t   var stream = this.streams[i];\n\t   if (stream.getBaseStreams) {\n\t    Util.appendToArray(baseStreams, stream.getBaseStreams());\n\t   }\n\t  }\n\t  return baseStreams;\n\t };\n\t return StreamsSequenceStream;\n\t}();\n\tvar FlateStream = function FlateStreamClosure() {\n\t var codeLenCodeMap = new Int32Array([\n\t  16,\n\t  17,\n\t  18,\n\t  0,\n\t  8,\n\t  7,\n\t  9,\n\t  6,\n\t  10,\n\t  5,\n\t  11,\n\t  4,\n\t  12,\n\t  3,\n\t  13,\n\t  2,\n\t  14,\n\t  1,\n\t  15\n\t ]);\n\t var lengthDecode = new Int32Array([\n\t  0x00003,\n\t  0x00004,\n\t  0x00005,\n\t  0x00006,\n\t  0x00007,\n\t  0x00008,\n\t  0x00009,\n\t  0x0000a,\n\t  0x1000b,\n\t  0x1000d,\n\t  0x1000f,\n\t  0x10011,\n\t  0x20013,\n\t  0x20017,\n\t  0x2001b,\n\t  0x2001f,\n\t  0x30023,\n\t  0x3002b,\n\t  0x30033,\n\t  0x3003b,\n\t  0x40043,\n\t  0x40053,\n\t  0x40063,\n\t  0x40073,\n\t  0x50083,\n\t  0x500a3,\n\t  0x500c3,\n\t  0x500e3,\n\t  0x00102,\n\t  0x00102,\n\t  0x00102\n\t ]);\n\t var distDecode = new Int32Array([\n\t  0x00001,\n\t  0x00002,\n\t  0x00003,\n\t  0x00004,\n\t  0x10005,\n\t  0x10007,\n\t  0x20009,\n\t  0x2000d,\n\t  0x30011,\n\t  0x30019,\n\t  0x40021,\n\t  0x40031,\n\t  0x50041,\n\t  0x50061,\n\t  0x60081,\n\t  0x600c1,\n\t  0x70101,\n\t  0x70181,\n\t  0x80201,\n\t  0x80301,\n\t  0x90401,\n\t  0x90601,\n\t  0xa0801,\n\t  0xa0c01,\n\t  0xb1001,\n\t  0xb1801,\n\t  0xc2001,\n\t  0xc3001,\n\t  0xd4001,\n\t  0xd6001\n\t ]);\n\t var fixedLitCodeTab = [\n\t  new Int32Array([\n\t   0x70100,\n\t   0x80050,\n\t   0x80010,\n\t   0x80118,\n\t   0x70110,\n\t   0x80070,\n\t   0x80030,\n\t   0x900c0,\n\t   0x70108,\n\t   0x80060,\n\t   0x80020,\n\t   0x900a0,\n\t   0x80000,\n\t   0x80080,\n\t   0x80040,\n\t   0x900e0,\n\t   0x70104,\n\t   0x80058,\n\t   0x80018,\n\t   0x90090,\n\t   0x70114,\n\t   0x80078,\n\t   0x80038,\n\t   0x900d0,\n\t   0x7010c,\n\t   0x80068,\n\t   0x80028,\n\t   0x900b0,\n\t   0x80008,\n\t   0x80088,\n\t   0x80048,\n\t   0x900f0,\n\t   0x70102,\n\t   0x80054,\n\t   0x80014,\n\t   0x8011c,\n\t   0x70112,\n\t   0x80074,\n\t   0x80034,\n\t   0x900c8,\n\t   0x7010a,\n\t   0x80064,\n\t   0x80024,\n\t   0x900a8,\n\t   0x80004,\n\t   0x80084,\n\t   0x80044,\n\t   0x900e8,\n\t   0x70106,\n\t   0x8005c,\n\t   0x8001c,\n\t   0x90098,\n\t   0x70116,\n\t   0x8007c,\n\t   0x8003c,\n\t   0x900d8,\n\t   0x7010e,\n\t   0x8006c,\n\t   0x8002c,\n\t   0x900b8,\n\t   0x8000c,\n\t   0x8008c,\n\t   0x8004c,\n\t   0x900f8,\n\t   0x70101,\n\t   0x80052,\n\t   0x80012,\n\t   0x8011a,\n\t   0x70111,\n\t   0x80072,\n\t   0x80032,\n\t   0x900c4,\n\t   0x70109,\n\t   0x80062,\n\t   0x80022,\n\t   0x900a4,\n\t   0x80002,\n\t   0x80082,\n\t   0x80042,\n\t   0x900e4,\n\t   0x70105,\n\t   0x8005a,\n\t   0x8001a,\n\t   0x90094,\n\t   0x70115,\n\t   0x8007a,\n\t   0x8003a,\n\t   0x900d4,\n\t   0x7010d,\n\t   0x8006a,\n\t   0x8002a,\n\t   0x900b4,\n\t   0x8000a,\n\t   0x8008a,\n\t   0x8004a,\n\t   0x900f4,\n\t   0x70103,\n\t   0x80056,\n\t   0x80016,\n\t   0x8011e,\n\t   0x70113,\n\t   0x80076,\n\t   0x80036,\n\t   0x900cc,\n\t   0x7010b,\n\t   0x80066,\n\t   0x80026,\n\t   0x900ac,\n\t   0x80006,\n\t   0x80086,\n\t   0x80046,\n\t   0x900ec,\n\t   0x70107,\n\t   0x8005e,\n\t   0x8001e,\n\t   0x9009c,\n\t   0x70117,\n\t   0x8007e,\n\t   0x8003e,\n\t   0x900dc,\n\t   0x7010f,\n\t   0x8006e,\n\t   0x8002e,\n\t   0x900bc,\n\t   0x8000e,\n\t   0x8008e,\n\t   0x8004e,\n\t   0x900fc,\n\t   0x70100,\n\t   0x80051,\n\t   0x80011,\n\t   0x80119,\n\t   0x70110,\n\t   0x80071,\n\t   0x80031,\n\t   0x900c2,\n\t   0x70108,\n\t   0x80061,\n\t   0x80021,\n\t   0x900a2,\n\t   0x80001,\n\t   0x80081,\n\t   0x80041,\n\t   0x900e2,\n\t   0x70104,\n\t   0x80059,\n\t   0x80019,\n\t   0x90092,\n\t   0x70114,\n\t   0x80079,\n\t   0x80039,\n\t   0x900d2,\n\t   0x7010c,\n\t   0x80069,\n\t   0x80029,\n\t   0x900b2,\n\t   0x80009,\n\t   0x80089,\n\t   0x80049,\n\t   0x900f2,\n\t   0x70102,\n\t   0x80055,\n\t   0x80015,\n\t   0x8011d,\n\t   0x70112,\n\t   0x80075,\n\t   0x80035,\n\t   0x900ca,\n\t   0x7010a,\n\t   0x80065,\n\t   0x80025,\n\t   0x900aa,\n\t   0x80005,\n\t   0x80085,\n\t   0x80045,\n\t   0x900ea,\n\t   0x70106,\n\t   0x8005d,\n\t   0x8001d,\n\t   0x9009a,\n\t   0x70116,\n\t   0x8007d,\n\t   0x8003d,\n\t   0x900da,\n\t   0x7010e,\n\t   0x8006d,\n\t   0x8002d,\n\t   0x900ba,\n\t   0x8000d,\n\t   0x8008d,\n\t   0x8004d,\n\t   0x900fa,\n\t   0x70101,\n\t   0x80053,\n\t   0x80013,\n\t   0x8011b,\n\t   0x70111,\n\t   0x80073,\n\t   0x80033,\n\t   0x900c6,\n\t   0x70109,\n\t   0x80063,\n\t   0x80023,\n\t   0x900a6,\n\t   0x80003,\n\t   0x80083,\n\t   0x80043,\n\t   0x900e6,\n\t   0x70105,\n\t   0x8005b,\n\t   0x8001b,\n\t   0x90096,\n\t   0x70115,\n\t   0x8007b,\n\t   0x8003b,\n\t   0x900d6,\n\t   0x7010d,\n\t   0x8006b,\n\t   0x8002b,\n\t   0x900b6,\n\t   0x8000b,\n\t   0x8008b,\n\t   0x8004b,\n\t   0x900f6,\n\t   0x70103,\n\t   0x80057,\n\t   0x80017,\n\t   0x8011f,\n\t   0x70113,\n\t   0x80077,\n\t   0x80037,\n\t   0x900ce,\n\t   0x7010b,\n\t   0x80067,\n\t   0x80027,\n\t   0x900ae,\n\t   0x80007,\n\t   0x80087,\n\t   0x80047,\n\t   0x900ee,\n\t   0x70107,\n\t   0x8005f,\n\t   0x8001f,\n\t   0x9009e,\n\t   0x70117,\n\t   0x8007f,\n\t   0x8003f,\n\t   0x900de,\n\t   0x7010f,\n\t   0x8006f,\n\t   0x8002f,\n\t   0x900be,\n\t   0x8000f,\n\t   0x8008f,\n\t   0x8004f,\n\t   0x900fe,\n\t   0x70100,\n\t   0x80050,\n\t   0x80010,\n\t   0x80118,\n\t   0x70110,\n\t   0x80070,\n\t   0x80030,\n\t   0x900c1,\n\t   0x70108,\n\t   0x80060,\n\t   0x80020,\n\t   0x900a1,\n\t   0x80000,\n\t   0x80080,\n\t   0x80040,\n\t   0x900e1,\n\t   0x70104,\n\t   0x80058,\n\t   0x80018,\n\t   0x90091,\n\t   0x70114,\n\t   0x80078,\n\t   0x80038,\n\t   0x900d1,\n\t   0x7010c,\n\t   0x80068,\n\t   0x80028,\n\t   0x900b1,\n\t   0x80008,\n\t   0x80088,\n\t   0x80048,\n\t   0x900f1,\n\t   0x70102,\n\t   0x80054,\n\t   0x80014,\n\t   0x8011c,\n\t   0x70112,\n\t   0x80074,\n\t   0x80034,\n\t   0x900c9,\n\t   0x7010a,\n\t   0x80064,\n\t   0x80024,\n\t   0x900a9,\n\t   0x80004,\n\t   0x80084,\n\t   0x80044,\n\t   0x900e9,\n\t   0x70106,\n\t   0x8005c,\n\t   0x8001c,\n\t   0x90099,\n\t   0x70116,\n\t   0x8007c,\n\t   0x8003c,\n\t   0x900d9,\n\t   0x7010e,\n\t   0x8006c,\n\t   0x8002c,\n\t   0x900b9,\n\t   0x8000c,\n\t   0x8008c,\n\t   0x8004c,\n\t   0x900f9,\n\t   0x70101,\n\t   0x80052,\n\t   0x80012,\n\t   0x8011a,\n\t   0x70111,\n\t   0x80072,\n\t   0x80032,\n\t   0x900c5,\n\t   0x70109,\n\t   0x80062,\n\t   0x80022,\n\t   0x900a5,\n\t   0x80002,\n\t   0x80082,\n\t   0x80042,\n\t   0x900e5,\n\t   0x70105,\n\t   0x8005a,\n\t   0x8001a,\n\t   0x90095,\n\t   0x70115,\n\t   0x8007a,\n\t   0x8003a,\n\t   0x900d5,\n\t   0x7010d,\n\t   0x8006a,\n\t   0x8002a,\n\t   0x900b5,\n\t   0x8000a,\n\t   0x8008a,\n\t   0x8004a,\n\t   0x900f5,\n\t   0x70103,\n\t   0x80056,\n\t   0x80016,\n\t   0x8011e,\n\t   0x70113,\n\t   0x80076,\n\t   0x80036,\n\t   0x900cd,\n\t   0x7010b,\n\t   0x80066,\n\t   0x80026,\n\t   0x900ad,\n\t   0x80006,\n\t   0x80086,\n\t   0x80046,\n\t   0x900ed,\n\t   0x70107,\n\t   0x8005e,\n\t   0x8001e,\n\t   0x9009d,\n\t   0x70117,\n\t   0x8007e,\n\t   0x8003e,\n\t   0x900dd,\n\t   0x7010f,\n\t   0x8006e,\n\t   0x8002e,\n\t   0x900bd,\n\t   0x8000e,\n\t   0x8008e,\n\t   0x8004e,\n\t   0x900fd,\n\t   0x70100,\n\t   0x80051,\n\t   0x80011,\n\t   0x80119,\n\t   0x70110,\n\t   0x80071,\n\t   0x80031,\n\t   0x900c3,\n\t   0x70108,\n\t   0x80061,\n\t   0x80021,\n\t   0x900a3,\n\t   0x80001,\n\t   0x80081,\n\t   0x80041,\n\t   0x900e3,\n\t   0x70104,\n\t   0x80059,\n\t   0x80019,\n\t   0x90093,\n\t   0x70114,\n\t   0x80079,\n\t   0x80039,\n\t   0x900d3,\n\t   0x7010c,\n\t   0x80069,\n\t   0x80029,\n\t   0x900b3,\n\t   0x80009,\n\t   0x80089,\n\t   0x80049,\n\t   0x900f3,\n\t   0x70102,\n\t   0x80055,\n\t   0x80015,\n\t   0x8011d,\n\t   0x70112,\n\t   0x80075,\n\t   0x80035,\n\t   0x900cb,\n\t   0x7010a,\n\t   0x80065,\n\t   0x80025,\n\t   0x900ab,\n\t   0x80005,\n\t   0x80085,\n\t   0x80045,\n\t   0x900eb,\n\t   0x70106,\n\t   0x8005d,\n\t   0x8001d,\n\t   0x9009b,\n\t   0x70116,\n\t   0x8007d,\n\t   0x8003d,\n\t   0x900db,\n\t   0x7010e,\n\t   0x8006d,\n\t   0x8002d,\n\t   0x900bb,\n\t   0x8000d,\n\t   0x8008d,\n\t   0x8004d,\n\t   0x900fb,\n\t   0x70101,\n\t   0x80053,\n\t   0x80013,\n\t   0x8011b,\n\t   0x70111,\n\t   0x80073,\n\t   0x80033,\n\t   0x900c7,\n\t   0x70109,\n\t   0x80063,\n\t   0x80023,\n\t   0x900a7,\n\t   0x80003,\n\t   0x80083,\n\t   0x80043,\n\t   0x900e7,\n\t   0x70105,\n\t   0x8005b,\n\t   0x8001b,\n\t   0x90097,\n\t   0x70115,\n\t   0x8007b,\n\t   0x8003b,\n\t   0x900d7,\n\t   0x7010d,\n\t   0x8006b,\n\t   0x8002b,\n\t   0x900b7,\n\t   0x8000b,\n\t   0x8008b,\n\t   0x8004b,\n\t   0x900f7,\n\t   0x70103,\n\t   0x80057,\n\t   0x80017,\n\t   0x8011f,\n\t   0x70113,\n\t   0x80077,\n\t   0x80037,\n\t   0x900cf,\n\t   0x7010b,\n\t   0x80067,\n\t   0x80027,\n\t   0x900af,\n\t   0x80007,\n\t   0x80087,\n\t   0x80047,\n\t   0x900ef,\n\t   0x70107,\n\t   0x8005f,\n\t   0x8001f,\n\t   0x9009f,\n\t   0x70117,\n\t   0x8007f,\n\t   0x8003f,\n\t   0x900df,\n\t   0x7010f,\n\t   0x8006f,\n\t   0x8002f,\n\t   0x900bf,\n\t   0x8000f,\n\t   0x8008f,\n\t   0x8004f,\n\t   0x900ff\n\t  ]),\n\t  9\n\t ];\n\t var fixedDistCodeTab = [\n\t  new Int32Array([\n\t   0x50000,\n\t   0x50010,\n\t   0x50008,\n\t   0x50018,\n\t   0x50004,\n\t   0x50014,\n\t   0x5000c,\n\t   0x5001c,\n\t   0x50002,\n\t   0x50012,\n\t   0x5000a,\n\t   0x5001a,\n\t   0x50006,\n\t   0x50016,\n\t   0x5000e,\n\t   0x00000,\n\t   0x50001,\n\t   0x50011,\n\t   0x50009,\n\t   0x50019,\n\t   0x50005,\n\t   0x50015,\n\t   0x5000d,\n\t   0x5001d,\n\t   0x50003,\n\t   0x50013,\n\t   0x5000b,\n\t   0x5001b,\n\t   0x50007,\n\t   0x50017,\n\t   0x5000f,\n\t   0x00000\n\t  ]),\n\t  5\n\t ];\n\t function FlateStream(str, maybeLength) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  var cmf = str.getByte();\n\t  var flg = str.getByte();\n\t  if (cmf === -1 || flg === -1) {\n\t   error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n\t  }\n\t  if ((cmf & 0x0f) !== 0x08) {\n\t   error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n\t  }\n\t  if (((cmf << 8) + flg) % 31 !== 0) {\n\t   error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n\t  }\n\t  if (flg & 0x20) {\n\t   error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n\t  }\n\t  this.codeSize = 0;\n\t  this.codeBuf = 0;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t FlateStream.prototype = Object.create(DecodeStream.prototype);\n\t FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n\t  var str = this.str;\n\t  var codeSize = this.codeSize;\n\t  var codeBuf = this.codeBuf;\n\t  var b;\n\t  while (codeSize < bits) {\n\t   if ((b = str.getByte()) === -1) {\n\t    error('Bad encoding in flate stream');\n\t   }\n\t   codeBuf |= b << codeSize;\n\t   codeSize += 8;\n\t  }\n\t  b = codeBuf & (1 << bits) - 1;\n\t  this.codeBuf = codeBuf >> bits;\n\t  this.codeSize = codeSize -= bits;\n\t  return b;\n\t };\n\t FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n\t  var str = this.str;\n\t  var codes = table[0];\n\t  var maxLen = table[1];\n\t  var codeSize = this.codeSize;\n\t  var codeBuf = this.codeBuf;\n\t  var b;\n\t  while (codeSize < maxLen) {\n\t   if ((b = str.getByte()) === -1) {\n\t    break;\n\t   }\n\t   codeBuf |= b << codeSize;\n\t   codeSize += 8;\n\t  }\n\t  var code = codes[codeBuf & (1 << maxLen) - 1];\n\t  var codeLen = code >> 16;\n\t  var codeVal = code & 0xffff;\n\t  if (codeLen < 1 || codeSize < codeLen) {\n\t   error('Bad encoding in flate stream');\n\t  }\n\t  this.codeBuf = codeBuf >> codeLen;\n\t  this.codeSize = codeSize - codeLen;\n\t  return codeVal;\n\t };\n\t FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n\t  var n = lengths.length;\n\t  var maxLen = 0;\n\t  var i;\n\t  for (i = 0; i < n; ++i) {\n\t   if (lengths[i] > maxLen) {\n\t    maxLen = lengths[i];\n\t   }\n\t  }\n\t  var size = 1 << maxLen;\n\t  var codes = new Int32Array(size);\n\t  for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n\t   for (var val = 0; val < n; ++val) {\n\t    if (lengths[val] === len) {\n\t     var code2 = 0;\n\t     var t = code;\n\t     for (i = 0; i < len; ++i) {\n\t      code2 = code2 << 1 | t & 1;\n\t      t >>= 1;\n\t     }\n\t     for (i = code2; i < size; i += skip) {\n\t      codes[i] = len << 16 | val;\n\t     }\n\t     ++code;\n\t    }\n\t   }\n\t  }\n\t  return [\n\t   codes,\n\t   maxLen\n\t  ];\n\t };\n\t FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n\t  var buffer, len;\n\t  var str = this.str;\n\t  var hdr = this.getBits(3);\n\t  if (hdr & 1) {\n\t   this.eof = true;\n\t  }\n\t  hdr >>= 1;\n\t  if (hdr === 0) {\n\t   var b;\n\t   if ((b = str.getByte()) === -1) {\n\t    error('Bad block header in flate stream');\n\t   }\n\t   var blockLen = b;\n\t   if ((b = str.getByte()) === -1) {\n\t    error('Bad block header in flate stream');\n\t   }\n\t   blockLen |= b << 8;\n\t   if ((b = str.getByte()) === -1) {\n\t    error('Bad block header in flate stream');\n\t   }\n\t   var check = b;\n\t   if ((b = str.getByte()) === -1) {\n\t    error('Bad block header in flate stream');\n\t   }\n\t   check |= b << 8;\n\t   if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n\t    error('Bad uncompressed block length in flate stream');\n\t   }\n\t   this.codeBuf = 0;\n\t   this.codeSize = 0;\n\t   var bufferLength = this.bufferLength;\n\t   buffer = this.ensureBuffer(bufferLength + blockLen);\n\t   var end = bufferLength + blockLen;\n\t   this.bufferLength = end;\n\t   if (blockLen === 0) {\n\t    if (str.peekByte() === -1) {\n\t     this.eof = true;\n\t    }\n\t   } else {\n\t    for (var n = bufferLength; n < end; ++n) {\n\t     if ((b = str.getByte()) === -1) {\n\t      this.eof = true;\n\t      break;\n\t     }\n\t     buffer[n] = b;\n\t    }\n\t   }\n\t   return;\n\t  }\n\t  var litCodeTable;\n\t  var distCodeTable;\n\t  if (hdr === 1) {\n\t   litCodeTable = fixedLitCodeTab;\n\t   distCodeTable = fixedDistCodeTab;\n\t  } else if (hdr === 2) {\n\t   var numLitCodes = this.getBits(5) + 257;\n\t   var numDistCodes = this.getBits(5) + 1;\n\t   var numCodeLenCodes = this.getBits(4) + 4;\n\t   var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\t   var i;\n\t   for (i = 0; i < numCodeLenCodes; ++i) {\n\t    codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n\t   }\n\t   var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\t   len = 0;\n\t   i = 0;\n\t   var codes = numLitCodes + numDistCodes;\n\t   var codeLengths = new Uint8Array(codes);\n\t   var bitsLength, bitsOffset, what;\n\t   while (i < codes) {\n\t    var code = this.getCode(codeLenCodeTab);\n\t    if (code === 16) {\n\t     bitsLength = 2;\n\t     bitsOffset = 3;\n\t     what = len;\n\t    } else if (code === 17) {\n\t     bitsLength = 3;\n\t     bitsOffset = 3;\n\t     what = len = 0;\n\t    } else if (code === 18) {\n\t     bitsLength = 7;\n\t     bitsOffset = 11;\n\t     what = len = 0;\n\t    } else {\n\t     codeLengths[i++] = len = code;\n\t     continue;\n\t    }\n\t    var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\t    while (repeatLength-- > 0) {\n\t     codeLengths[i++] = what;\n\t    }\n\t   }\n\t   litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n\t   distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n\t  } else {\n\t   error('Unknown block type in flate stream');\n\t  }\n\t  buffer = this.buffer;\n\t  var limit = buffer ? buffer.length : 0;\n\t  var pos = this.bufferLength;\n\t  while (true) {\n\t   var code1 = this.getCode(litCodeTable);\n\t   if (code1 < 256) {\n\t    if (pos + 1 >= limit) {\n\t     buffer = this.ensureBuffer(pos + 1);\n\t     limit = buffer.length;\n\t    }\n\t    buffer[pos++] = code1;\n\t    continue;\n\t   }\n\t   if (code1 === 256) {\n\t    this.bufferLength = pos;\n\t    return;\n\t   }\n\t   code1 -= 257;\n\t   code1 = lengthDecode[code1];\n\t   var code2 = code1 >> 16;\n\t   if (code2 > 0) {\n\t    code2 = this.getBits(code2);\n\t   }\n\t   len = (code1 & 0xffff) + code2;\n\t   code1 = this.getCode(distCodeTable);\n\t   code1 = distDecode[code1];\n\t   code2 = code1 >> 16;\n\t   if (code2 > 0) {\n\t    code2 = this.getBits(code2);\n\t   }\n\t   var dist = (code1 & 0xffff) + code2;\n\t   if (pos + len >= limit) {\n\t    buffer = this.ensureBuffer(pos + len);\n\t    limit = buffer.length;\n\t   }\n\t   for (var k = 0; k < len; ++k, ++pos) {\n\t    buffer[pos] = buffer[pos - dist];\n\t   }\n\t  }\n\t };\n\t return FlateStream;\n\t}();\n\tvar PredictorStream = function PredictorStreamClosure() {\n\t function PredictorStream(str, maybeLength, params) {\n\t  if (!isDict(params)) {\n\t   return str;\n\t  }\n\t  var predictor = this.predictor = params.get('Predictor') || 1;\n\t  if (predictor <= 1) {\n\t   return str;\n\t  }\n\t  if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n\t   error('Unsupported predictor: ' + predictor);\n\t  }\n\t  if (predictor === 2) {\n\t   this.readBlock = this.readBlockTiff;\n\t  } else {\n\t   this.readBlock = this.readBlockPng;\n\t  }\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  var colors = this.colors = params.get('Colors') || 1;\n\t  var bits = this.bits = params.get('BitsPerComponent') || 8;\n\t  var columns = this.columns = params.get('Columns') || 1;\n\t  this.pixBytes = colors * bits + 7 >> 3;\n\t  this.rowBytes = columns * colors * bits + 7 >> 3;\n\t  DecodeStream.call(this, maybeLength);\n\t  return this;\n\t }\n\t PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\t PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n\t  var rowBytes = this.rowBytes;\n\t  var bufferLength = this.bufferLength;\n\t  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t  var bits = this.bits;\n\t  var colors = this.colors;\n\t  var rawBytes = this.str.getBytes(rowBytes);\n\t  this.eof = !rawBytes.length;\n\t  if (this.eof) {\n\t   return;\n\t  }\n\t  var inbuf = 0, outbuf = 0;\n\t  var inbits = 0, outbits = 0;\n\t  var pos = bufferLength;\n\t  var i;\n\t  if (bits === 1 && colors === 1) {\n\t   for (i = 0; i < rowBytes; ++i) {\n\t    var c = rawBytes[i] ^ inbuf;\n\t    c ^= c >> 1;\n\t    c ^= c >> 2;\n\t    c ^= c >> 4;\n\t    inbuf = (c & 1) << 7;\n\t    buffer[pos++] = c;\n\t   }\n\t  } else if (bits === 8) {\n\t   for (i = 0; i < colors; ++i) {\n\t    buffer[pos++] = rawBytes[i];\n\t   }\n\t   for (; i < rowBytes; ++i) {\n\t    buffer[pos] = buffer[pos - colors] + rawBytes[i];\n\t    pos++;\n\t   }\n\t  } else {\n\t   var compArray = new Uint8Array(colors + 1);\n\t   var bitMask = (1 << bits) - 1;\n\t   var j = 0, k = bufferLength;\n\t   var columns = this.columns;\n\t   for (i = 0; i < columns; ++i) {\n\t    for (var kk = 0; kk < colors; ++kk) {\n\t     if (inbits < bits) {\n\t      inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n\t      inbits += 8;\n\t     }\n\t     compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n\t     inbits -= bits;\n\t     outbuf = outbuf << bits | compArray[kk];\n\t     outbits += bits;\n\t     if (outbits >= 8) {\n\t      buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n\t      outbits -= 8;\n\t     }\n\t    }\n\t   }\n\t   if (outbits > 0) {\n\t    buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n\t   }\n\t  }\n\t  this.bufferLength += rowBytes;\n\t };\n\t PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n\t  var rowBytes = this.rowBytes;\n\t  var pixBytes = this.pixBytes;\n\t  var predictor = this.str.getByte();\n\t  var rawBytes = this.str.getBytes(rowBytes);\n\t  this.eof = !rawBytes.length;\n\t  if (this.eof) {\n\t   return;\n\t  }\n\t  var bufferLength = this.bufferLength;\n\t  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t  var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\t  if (prevRow.length === 0) {\n\t   prevRow = new Uint8Array(rowBytes);\n\t  }\n\t  var i, j = bufferLength, up, c;\n\t  switch (predictor) {\n\t  case 0:\n\t   for (i = 0; i < rowBytes; ++i) {\n\t    buffer[j++] = rawBytes[i];\n\t   }\n\t   break;\n\t  case 1:\n\t   for (i = 0; i < pixBytes; ++i) {\n\t    buffer[j++] = rawBytes[i];\n\t   }\n\t   for (; i < rowBytes; ++i) {\n\t    buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n\t    j++;\n\t   }\n\t   break;\n\t  case 2:\n\t   for (i = 0; i < rowBytes; ++i) {\n\t    buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n\t   }\n\t   break;\n\t  case 3:\n\t   for (i = 0; i < pixBytes; ++i) {\n\t    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n\t   }\n\t   for (; i < rowBytes; ++i) {\n\t    buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n\t    j++;\n\t   }\n\t   break;\n\t  case 4:\n\t   for (i = 0; i < pixBytes; ++i) {\n\t    up = prevRow[i];\n\t    c = rawBytes[i];\n\t    buffer[j++] = up + c;\n\t   }\n\t   for (; i < rowBytes; ++i) {\n\t    up = prevRow[i];\n\t    var upLeft = prevRow[i - pixBytes];\n\t    var left = buffer[j - pixBytes];\n\t    var p = left + up - upLeft;\n\t    var pa = p - left;\n\t    if (pa < 0) {\n\t     pa = -pa;\n\t    }\n\t    var pb = p - up;\n\t    if (pb < 0) {\n\t     pb = -pb;\n\t    }\n\t    var pc = p - upLeft;\n\t    if (pc < 0) {\n\t     pc = -pc;\n\t    }\n\t    c = rawBytes[i];\n\t    if (pa <= pb && pa <= pc) {\n\t     buffer[j++] = left + c;\n\t    } else if (pb <= pc) {\n\t     buffer[j++] = up + c;\n\t    } else {\n\t     buffer[j++] = upLeft + c;\n\t    }\n\t   }\n\t   break;\n\t  default:\n\t   error('Unsupported predictor: ' + predictor);\n\t  }\n\t  this.bufferLength += rowBytes;\n\t };\n\t return PredictorStream;\n\t}();\n\tvar JpegStream = function JpegStreamClosure() {\n\t function JpegStream(stream, maybeLength, dict, params) {\n\t  var ch;\n\t  while ((ch = stream.getByte()) !== -1) {\n\t   if (ch === 0xFF) {\n\t    stream.skip(-1);\n\t    break;\n\t   }\n\t  }\n\t  this.stream = stream;\n\t  this.maybeLength = maybeLength;\n\t  this.dict = dict;\n\t  this.params = params;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t JpegStream.prototype = Object.create(DecodeStream.prototype);\n\t Object.defineProperty(JpegStream.prototype, 'bytes', {\n\t  get: function JpegStream_bytes() {\n\t   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t  },\n\t  configurable: true\n\t });\n\t JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n\t  if (this.bufferLength) {\n\t   return;\n\t  }\n\t  var jpegImage = new JpegImage();\n\t  var decodeArr = this.dict.getArray('Decode', 'D');\n\t  if (this.forceRGB && isArray(decodeArr)) {\n\t   var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n\t   var decodeArrLength = decodeArr.length;\n\t   var transform = new Int32Array(decodeArrLength);\n\t   var transformNeeded = false;\n\t   var maxValue = (1 << bitsPerComponent) - 1;\n\t   for (var i = 0; i < decodeArrLength; i += 2) {\n\t    transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n\t    transform[i + 1] = decodeArr[i] * maxValue | 0;\n\t    if (transform[i] !== 256 || transform[i + 1] !== 0) {\n\t     transformNeeded = true;\n\t    }\n\t   }\n\t   if (transformNeeded) {\n\t    jpegImage.decodeTransform = transform;\n\t   }\n\t  }\n\t  if (isDict(this.params)) {\n\t   var colorTransform = this.params.get('ColorTransform');\n\t   if (isInt(colorTransform)) {\n\t    jpegImage.colorTransform = colorTransform;\n\t   }\n\t  }\n\t  jpegImage.parse(this.bytes);\n\t  var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n\t  this.buffer = data;\n\t  this.bufferLength = data.length;\n\t  this.eof = true;\n\t };\n\t JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n\t  this.ensureBuffer();\n\t  return this.buffer;\n\t };\n\t JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n\t  return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n\t };\n\t return JpegStream;\n\t}();\n\tvar JpxStream = function JpxStreamClosure() {\n\t function JpxStream(stream, maybeLength, dict, params) {\n\t  this.stream = stream;\n\t  this.maybeLength = maybeLength;\n\t  this.dict = dict;\n\t  this.params = params;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t JpxStream.prototype = Object.create(DecodeStream.prototype);\n\t Object.defineProperty(JpxStream.prototype, 'bytes', {\n\t  get: function JpxStream_bytes() {\n\t   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t  },\n\t  configurable: true\n\t });\n\t JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n\t  if (this.bufferLength) {\n\t   return;\n\t  }\n\t  var jpxImage = new JpxImage();\n\t  jpxImage.parse(this.bytes);\n\t  var width = jpxImage.width;\n\t  var height = jpxImage.height;\n\t  var componentsCount = jpxImage.componentsCount;\n\t  var tileCount = jpxImage.tiles.length;\n\t  if (tileCount === 1) {\n\t   this.buffer = jpxImage.tiles[0].items;\n\t  } else {\n\t   var data = new Uint8Array(width * height * componentsCount);\n\t   for (var k = 0; k < tileCount; k++) {\n\t    var tileComponents = jpxImage.tiles[k];\n\t    var tileWidth = tileComponents.width;\n\t    var tileHeight = tileComponents.height;\n\t    var tileLeft = tileComponents.left;\n\t    var tileTop = tileComponents.top;\n\t    var src = tileComponents.items;\n\t    var srcPosition = 0;\n\t    var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n\t    var imgRowSize = width * componentsCount;\n\t    var tileRowSize = tileWidth * componentsCount;\n\t    for (var j = 0; j < tileHeight; j++) {\n\t     var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n\t     data.set(rowBytes, dataPosition);\n\t     srcPosition += tileRowSize;\n\t     dataPosition += imgRowSize;\n\t    }\n\t   }\n\t   this.buffer = data;\n\t  }\n\t  this.bufferLength = this.buffer.length;\n\t  this.eof = true;\n\t };\n\t return JpxStream;\n\t}();\n\tvar Jbig2Stream = function Jbig2StreamClosure() {\n\t function Jbig2Stream(stream, maybeLength, dict, params) {\n\t  this.stream = stream;\n\t  this.maybeLength = maybeLength;\n\t  this.dict = dict;\n\t  this.params = params;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n\t Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n\t  get: function Jbig2Stream_bytes() {\n\t   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t  },\n\t  configurable: true\n\t });\n\t Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n\t  if (this.bufferLength) {\n\t   return;\n\t  }\n\t  var jbig2Image = new Jbig2Image();\n\t  var chunks = [];\n\t  if (isDict(this.params)) {\n\t   var globalsStream = this.params.get('JBIG2Globals');\n\t   if (isStream(globalsStream)) {\n\t    var globals = globalsStream.getBytes();\n\t    chunks.push({\n\t     data: globals,\n\t     start: 0,\n\t     end: globals.length\n\t    });\n\t   }\n\t  }\n\t  chunks.push({\n\t   data: this.bytes,\n\t   start: 0,\n\t   end: this.bytes.length\n\t  });\n\t  var data = jbig2Image.parseChunks(chunks);\n\t  var dataLength = data.length;\n\t  for (var i = 0; i < dataLength; i++) {\n\t   data[i] ^= 0xFF;\n\t  }\n\t  this.buffer = data;\n\t  this.bufferLength = dataLength;\n\t  this.eof = true;\n\t };\n\t return Jbig2Stream;\n\t}();\n\tvar DecryptStream = function DecryptStreamClosure() {\n\t function DecryptStream(str, maybeLength, decrypt) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  this.decrypt = decrypt;\n\t  this.nextChunk = null;\n\t  this.initialized = false;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t var chunkSize = 512;\n\t DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\t DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n\t  var chunk;\n\t  if (this.initialized) {\n\t   chunk = this.nextChunk;\n\t  } else {\n\t   chunk = this.str.getBytes(chunkSize);\n\t   this.initialized = true;\n\t  }\n\t  if (!chunk || chunk.length === 0) {\n\t   this.eof = true;\n\t   return;\n\t  }\n\t  this.nextChunk = this.str.getBytes(chunkSize);\n\t  var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\t  var decrypt = this.decrypt;\n\t  chunk = decrypt(chunk, !hasMoreData);\n\t  var bufferLength = this.bufferLength;\n\t  var i, n = chunk.length;\n\t  var buffer = this.ensureBuffer(bufferLength + n);\n\t  for (i = 0; i < n; i++) {\n\t   buffer[bufferLength++] = chunk[i];\n\t  }\n\t  this.bufferLength = bufferLength;\n\t };\n\t return DecryptStream;\n\t}();\n\tvar Ascii85Stream = function Ascii85StreamClosure() {\n\t function Ascii85Stream(str, maybeLength) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  this.input = new Uint8Array(5);\n\t  if (maybeLength) {\n\t   maybeLength = 0.8 * maybeLength;\n\t  }\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\t Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n\t  var TILDA_CHAR = 0x7E;\n\t  var Z_LOWER_CHAR = 0x7A;\n\t  var EOF = -1;\n\t  var str = this.str;\n\t  var c = str.getByte();\n\t  while (isSpace(c)) {\n\t   c = str.getByte();\n\t  }\n\t  if (c === EOF || c === TILDA_CHAR) {\n\t   this.eof = true;\n\t   return;\n\t  }\n\t  var bufferLength = this.bufferLength, buffer;\n\t  var i;\n\t  if (c === Z_LOWER_CHAR) {\n\t   buffer = this.ensureBuffer(bufferLength + 4);\n\t   for (i = 0; i < 4; ++i) {\n\t    buffer[bufferLength + i] = 0;\n\t   }\n\t   this.bufferLength += 4;\n\t  } else {\n\t   var input = this.input;\n\t   input[0] = c;\n\t   for (i = 1; i < 5; ++i) {\n\t    c = str.getByte();\n\t    while (isSpace(c)) {\n\t     c = str.getByte();\n\t    }\n\t    input[i] = c;\n\t    if (c === EOF || c === TILDA_CHAR) {\n\t     break;\n\t    }\n\t   }\n\t   buffer = this.ensureBuffer(bufferLength + i - 1);\n\t   this.bufferLength += i - 1;\n\t   if (i < 5) {\n\t    for (; i < 5; ++i) {\n\t     input[i] = 0x21 + 84;\n\t    }\n\t    this.eof = true;\n\t   }\n\t   var t = 0;\n\t   for (i = 0; i < 5; ++i) {\n\t    t = t * 85 + (input[i] - 0x21);\n\t   }\n\t   for (i = 3; i >= 0; --i) {\n\t    buffer[bufferLength + i] = t & 0xFF;\n\t    t >>= 8;\n\t   }\n\t  }\n\t };\n\t return Ascii85Stream;\n\t}();\n\tvar AsciiHexStream = function AsciiHexStreamClosure() {\n\t function AsciiHexStream(str, maybeLength) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  this.firstDigit = -1;\n\t  if (maybeLength) {\n\t   maybeLength = 0.5 * maybeLength;\n\t  }\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\t AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n\t  var UPSTREAM_BLOCK_SIZE = 8000;\n\t  var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\t  if (!bytes.length) {\n\t   this.eof = true;\n\t   return;\n\t  }\n\t  var maxDecodeLength = bytes.length + 1 >> 1;\n\t  var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n\t  var bufferLength = this.bufferLength;\n\t  var firstDigit = this.firstDigit;\n\t  for (var i = 0, ii = bytes.length; i < ii; i++) {\n\t   var ch = bytes[i], digit;\n\t   if (ch >= 0x30 && ch <= 0x39) {\n\t    digit = ch & 0x0F;\n\t   } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t    digit = (ch & 0x0F) + 9;\n\t   } else if (ch === 0x3E) {\n\t    this.eof = true;\n\t    break;\n\t   } else {\n\t    continue;\n\t   }\n\t   if (firstDigit < 0) {\n\t    firstDigit = digit;\n\t   } else {\n\t    buffer[bufferLength++] = firstDigit << 4 | digit;\n\t    firstDigit = -1;\n\t   }\n\t  }\n\t  if (firstDigit >= 0 && this.eof) {\n\t   buffer[bufferLength++] = firstDigit << 4;\n\t   firstDigit = -1;\n\t  }\n\t  this.firstDigit = firstDigit;\n\t  this.bufferLength = bufferLength;\n\t };\n\t return AsciiHexStream;\n\t}();\n\tvar RunLengthStream = function RunLengthStreamClosure() {\n\t function RunLengthStream(str, maybeLength) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\t RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n\t  var repeatHeader = this.str.getBytes(2);\n\t  if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n\t   this.eof = true;\n\t   return;\n\t  }\n\t  var buffer;\n\t  var bufferLength = this.bufferLength;\n\t  var n = repeatHeader[0];\n\t  if (n < 128) {\n\t   buffer = this.ensureBuffer(bufferLength + n + 1);\n\t   buffer[bufferLength++] = repeatHeader[1];\n\t   if (n > 0) {\n\t    var source = this.str.getBytes(n);\n\t    buffer.set(source, bufferLength);\n\t    bufferLength += n;\n\t   }\n\t  } else {\n\t   n = 257 - n;\n\t   var b = repeatHeader[1];\n\t   buffer = this.ensureBuffer(bufferLength + n + 1);\n\t   for (var i = 0; i < n; i++) {\n\t    buffer[bufferLength++] = b;\n\t   }\n\t  }\n\t  this.bufferLength = bufferLength;\n\t };\n\t return RunLengthStream;\n\t}();\n\tvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n\t var ccittEOL = -2;\n\t var ccittEOF = -1;\n\t var twoDimPass = 0;\n\t var twoDimHoriz = 1;\n\t var twoDimVert0 = 2;\n\t var twoDimVertR1 = 3;\n\t var twoDimVertL1 = 4;\n\t var twoDimVertR2 = 5;\n\t var twoDimVertL2 = 6;\n\t var twoDimVertR3 = 7;\n\t var twoDimVertL3 = 8;\n\t var twoDimTable = [\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   7,\n\t   twoDimVertL3\n\t  ],\n\t  [\n\t   7,\n\t   twoDimVertR3\n\t  ],\n\t  [\n\t   6,\n\t   twoDimVertL2\n\t  ],\n\t  [\n\t   6,\n\t   twoDimVertL2\n\t  ],\n\t  [\n\t   6,\n\t   twoDimVertR2\n\t  ],\n\t  [\n\t   6,\n\t   twoDimVertR2\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   4,\n\t   twoDimPass\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimHoriz\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertL1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   3,\n\t   twoDimVertR1\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ],\n\t  [\n\t   1,\n\t   twoDimVert0\n\t  ]\n\t ];\n\t var whiteTable1 = [\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   12,\n\t   ccittEOL\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   12,\n\t   1984\n\t  ],\n\t  [\n\t   12,\n\t   2048\n\t  ],\n\t  [\n\t   12,\n\t   2112\n\t  ],\n\t  [\n\t   12,\n\t   2176\n\t  ],\n\t  [\n\t   12,\n\t   2240\n\t  ],\n\t  [\n\t   12,\n\t   2304\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   12,\n\t   2368\n\t  ],\n\t  [\n\t   12,\n\t   2432\n\t  ],\n\t  [\n\t   12,\n\t   2496\n\t  ],\n\t  [\n\t   12,\n\t   2560\n\t  ]\n\t ];\n\t var whiteTable2 = [\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   8,\n\t   29\n\t  ],\n\t  [\n\t   8,\n\t   29\n\t  ],\n\t  [\n\t   8,\n\t   30\n\t  ],\n\t  [\n\t   8,\n\t   30\n\t  ],\n\t  [\n\t   8,\n\t   45\n\t  ],\n\t  [\n\t   8,\n\t   45\n\t  ],\n\t  [\n\t   8,\n\t   46\n\t  ],\n\t  [\n\t   8,\n\t   46\n\t  ],\n\t  [\n\t   7,\n\t   22\n\t  ],\n\t  [\n\t   7,\n\t   22\n\t  ],\n\t  [\n\t   7,\n\t   22\n\t  ],\n\t  [\n\t   7,\n\t   22\n\t  ],\n\t  [\n\t   7,\n\t   23\n\t  ],\n\t  [\n\t   7,\n\t   23\n\t  ],\n\t  [\n\t   7,\n\t   23\n\t  ],\n\t  [\n\t   7,\n\t   23\n\t  ],\n\t  [\n\t   8,\n\t   47\n\t  ],\n\t  [\n\t   8,\n\t   47\n\t  ],\n\t  [\n\t   8,\n\t   48\n\t  ],\n\t  [\n\t   8,\n\t   48\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   6,\n\t   13\n\t  ],\n\t  [\n\t   7,\n\t   20\n\t  ],\n\t  [\n\t   7,\n\t   20\n\t  ],\n\t  [\n\t   7,\n\t   20\n\t  ],\n\t  [\n\t   7,\n\t   20\n\t  ],\n\t  [\n\t   8,\n\t   33\n\t  ],\n\t  [\n\t   8,\n\t   33\n\t  ],\n\t  [\n\t   8,\n\t   34\n\t  ],\n\t  [\n\t   8,\n\t   34\n\t  ],\n\t  [\n\t   8,\n\t   35\n\t  ],\n\t  [\n\t   8,\n\t   35\n\t  ],\n\t  [\n\t   8,\n\t   36\n\t  ],\n\t  [\n\t   8,\n\t   36\n\t  ],\n\t  [\n\t   8,\n\t   37\n\t  ],\n\t  [\n\t   8,\n\t   37\n\t  ],\n\t  [\n\t   8,\n\t   38\n\t  ],\n\t  [\n\t   8,\n\t   38\n\t  ],\n\t  [\n\t   7,\n\t   19\n\t  ],\n\t  [\n\t   7,\n\t   19\n\t  ],\n\t  [\n\t   7,\n\t   19\n\t  ],\n\t  [\n\t   7,\n\t   19\n\t  ],\n\t  [\n\t   8,\n\t   31\n\t  ],\n\t  [\n\t   8,\n\t   31\n\t  ],\n\t  [\n\t   8,\n\t   32\n\t  ],\n\t  [\n\t   8,\n\t   32\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   1\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   6,\n\t   12\n\t  ],\n\t  [\n\t   8,\n\t   53\n\t  ],\n\t  [\n\t   8,\n\t   53\n\t  ],\n\t  [\n\t   8,\n\t   54\n\t  ],\n\t  [\n\t   8,\n\t   54\n\t  ],\n\t  [\n\t   7,\n\t   26\n\t  ],\n\t  [\n\t   7,\n\t   26\n\t  ],\n\t  [\n\t   7,\n\t   26\n\t  ],\n\t  [\n\t   7,\n\t   26\n\t  ],\n\t  [\n\t   8,\n\t   39\n\t  ],\n\t  [\n\t   8,\n\t   39\n\t  ],\n\t  [\n\t   8,\n\t   40\n\t  ],\n\t  [\n\t   8,\n\t   40\n\t  ],\n\t  [\n\t   8,\n\t   41\n\t  ],\n\t  [\n\t   8,\n\t   41\n\t  ],\n\t  [\n\t   8,\n\t   42\n\t  ],\n\t  [\n\t   8,\n\t   42\n\t  ],\n\t  [\n\t   8,\n\t   43\n\t  ],\n\t  [\n\t   8,\n\t   43\n\t  ],\n\t  [\n\t   8,\n\t   44\n\t  ],\n\t  [\n\t   8,\n\t   44\n\t  ],\n\t  [\n\t   7,\n\t   21\n\t  ],\n\t  [\n\t   7,\n\t   21\n\t  ],\n\t  [\n\t   7,\n\t   21\n\t  ],\n\t  [\n\t   7,\n\t   21\n\t  ],\n\t  [\n\t   7,\n\t   28\n\t  ],\n\t  [\n\t   7,\n\t   28\n\t  ],\n\t  [\n\t   7,\n\t   28\n\t  ],\n\t  [\n\t   7,\n\t   28\n\t  ],\n\t  [\n\t   8,\n\t   61\n\t  ],\n\t  [\n\t   8,\n\t   61\n\t  ],\n\t  [\n\t   8,\n\t   62\n\t  ],\n\t  [\n\t   8,\n\t   62\n\t  ],\n\t  [\n\t   8,\n\t   63\n\t  ],\n\t  [\n\t   8,\n\t   63\n\t  ],\n\t  [\n\t   8,\n\t   0\n\t  ],\n\t  [\n\t   8,\n\t   0\n\t  ],\n\t  [\n\t   8,\n\t   320\n\t  ],\n\t  [\n\t   8,\n\t   320\n\t  ],\n\t  [\n\t   8,\n\t   384\n\t  ],\n\t  [\n\t   8,\n\t   384\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   10\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   5,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   27\n\t  ],\n\t  [\n\t   7,\n\t   27\n\t  ],\n\t  [\n\t   7,\n\t   27\n\t  ],\n\t  [\n\t   7,\n\t   27\n\t  ],\n\t  [\n\t   8,\n\t   59\n\t  ],\n\t  [\n\t   8,\n\t   59\n\t  ],\n\t  [\n\t   8,\n\t   60\n\t  ],\n\t  [\n\t   8,\n\t   60\n\t  ],\n\t  [\n\t   9,\n\t   1472\n\t  ],\n\t  [\n\t   9,\n\t   1536\n\t  ],\n\t  [\n\t   9,\n\t   1600\n\t  ],\n\t  [\n\t   9,\n\t   1728\n\t  ],\n\t  [\n\t   7,\n\t   18\n\t  ],\n\t  [\n\t   7,\n\t   18\n\t  ],\n\t  [\n\t   7,\n\t   18\n\t  ],\n\t  [\n\t   7,\n\t   18\n\t  ],\n\t  [\n\t   7,\n\t   24\n\t  ],\n\t  [\n\t   7,\n\t   24\n\t  ],\n\t  [\n\t   7,\n\t   24\n\t  ],\n\t  [\n\t   7,\n\t   24\n\t  ],\n\t  [\n\t   8,\n\t   49\n\t  ],\n\t  [\n\t   8,\n\t   49\n\t  ],\n\t  [\n\t   8,\n\t   50\n\t  ],\n\t  [\n\t   8,\n\t   50\n\t  ],\n\t  [\n\t   8,\n\t   51\n\t  ],\n\t  [\n\t   8,\n\t   51\n\t  ],\n\t  [\n\t   8,\n\t   52\n\t  ],\n\t  [\n\t   8,\n\t   52\n\t  ],\n\t  [\n\t   7,\n\t   25\n\t  ],\n\t  [\n\t   7,\n\t   25\n\t  ],\n\t  [\n\t   7,\n\t   25\n\t  ],\n\t  [\n\t   7,\n\t   25\n\t  ],\n\t  [\n\t   8,\n\t   55\n\t  ],\n\t  [\n\t   8,\n\t   55\n\t  ],\n\t  [\n\t   8,\n\t   56\n\t  ],\n\t  [\n\t   8,\n\t   56\n\t  ],\n\t  [\n\t   8,\n\t   57\n\t  ],\n\t  [\n\t   8,\n\t   57\n\t  ],\n\t  [\n\t   8,\n\t   58\n\t  ],\n\t  [\n\t   8,\n\t   58\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   192\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   6,\n\t   1664\n\t  ],\n\t  [\n\t   8,\n\t   448\n\t  ],\n\t  [\n\t   8,\n\t   448\n\t  ],\n\t  [\n\t   8,\n\t   512\n\t  ],\n\t  [\n\t   8,\n\t   512\n\t  ],\n\t  [\n\t   9,\n\t   704\n\t  ],\n\t  [\n\t   9,\n\t   768\n\t  ],\n\t  [\n\t   8,\n\t   640\n\t  ],\n\t  [\n\t   8,\n\t   640\n\t  ],\n\t  [\n\t   8,\n\t   576\n\t  ],\n\t  [\n\t   8,\n\t   576\n\t  ],\n\t  [\n\t   9,\n\t   832\n\t  ],\n\t  [\n\t   9,\n\t   896\n\t  ],\n\t  [\n\t   9,\n\t   960\n\t  ],\n\t  [\n\t   9,\n\t   1024\n\t  ],\n\t  [\n\t   9,\n\t   1088\n\t  ],\n\t  [\n\t   9,\n\t   1152\n\t  ],\n\t  [\n\t   9,\n\t   1216\n\t  ],\n\t  [\n\t   9,\n\t   1280\n\t  ],\n\t  [\n\t   9,\n\t   1344\n\t  ],\n\t  [\n\t   9,\n\t   1408\n\t  ],\n\t  [\n\t   7,\n\t   256\n\t  ],\n\t  [\n\t   7,\n\t   256\n\t  ],\n\t  [\n\t   7,\n\t   256\n\t  ],\n\t  [\n\t   7,\n\t   256\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   2\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   4,\n\t   3\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   128\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   5,\n\t   9\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   16\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   6,\n\t   17\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   4\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   14\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   6,\n\t   15\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   5,\n\t   64\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   7\n\t  ]\n\t ];\n\t var blackTable1 = [\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   12,\n\t   ccittEOL\n\t  ],\n\t  [\n\t   12,\n\t   ccittEOL\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   11,\n\t   1792\n\t  ],\n\t  [\n\t   12,\n\t   1984\n\t  ],\n\t  [\n\t   12,\n\t   1984\n\t  ],\n\t  [\n\t   12,\n\t   2048\n\t  ],\n\t  [\n\t   12,\n\t   2048\n\t  ],\n\t  [\n\t   12,\n\t   2112\n\t  ],\n\t  [\n\t   12,\n\t   2112\n\t  ],\n\t  [\n\t   12,\n\t   2176\n\t  ],\n\t  [\n\t   12,\n\t   2176\n\t  ],\n\t  [\n\t   12,\n\t   2240\n\t  ],\n\t  [\n\t   12,\n\t   2240\n\t  ],\n\t  [\n\t   12,\n\t   2304\n\t  ],\n\t  [\n\t   12,\n\t   2304\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1856\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   11,\n\t   1920\n\t  ],\n\t  [\n\t   12,\n\t   2368\n\t  ],\n\t  [\n\t   12,\n\t   2368\n\t  ],\n\t  [\n\t   12,\n\t   2432\n\t  ],\n\t  [\n\t   12,\n\t   2432\n\t  ],\n\t  [\n\t   12,\n\t   2496\n\t  ],\n\t  [\n\t   12,\n\t   2496\n\t  ],\n\t  [\n\t   12,\n\t   2560\n\t  ],\n\t  [\n\t   12,\n\t   2560\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   10,\n\t   18\n\t  ],\n\t  [\n\t   12,\n\t   52\n\t  ],\n\t  [\n\t   12,\n\t   52\n\t  ],\n\t  [\n\t   13,\n\t   640\n\t  ],\n\t  [\n\t   13,\n\t   704\n\t  ],\n\t  [\n\t   13,\n\t   768\n\t  ],\n\t  [\n\t   13,\n\t   832\n\t  ],\n\t  [\n\t   12,\n\t   55\n\t  ],\n\t  [\n\t   12,\n\t   55\n\t  ],\n\t  [\n\t   12,\n\t   56\n\t  ],\n\t  [\n\t   12,\n\t   56\n\t  ],\n\t  [\n\t   13,\n\t   1280\n\t  ],\n\t  [\n\t   13,\n\t   1344\n\t  ],\n\t  [\n\t   13,\n\t   1408\n\t  ],\n\t  [\n\t   13,\n\t   1472\n\t  ],\n\t  [\n\t   12,\n\t   59\n\t  ],\n\t  [\n\t   12,\n\t   59\n\t  ],\n\t  [\n\t   12,\n\t   60\n\t  ],\n\t  [\n\t   12,\n\t   60\n\t  ],\n\t  [\n\t   13,\n\t   1536\n\t  ],\n\t  [\n\t   13,\n\t   1600\n\t  ],\n\t  [\n\t   11,\n\t   24\n\t  ],\n\t  [\n\t   11,\n\t   24\n\t  ],\n\t  [\n\t   11,\n\t   24\n\t  ],\n\t  [\n\t   11,\n\t   24\n\t  ],\n\t  [\n\t   11,\n\t   25\n\t  ],\n\t  [\n\t   11,\n\t   25\n\t  ],\n\t  [\n\t   11,\n\t   25\n\t  ],\n\t  [\n\t   11,\n\t   25\n\t  ],\n\t  [\n\t   13,\n\t   1664\n\t  ],\n\t  [\n\t   13,\n\t   1728\n\t  ],\n\t  [\n\t   12,\n\t   320\n\t  ],\n\t  [\n\t   12,\n\t   320\n\t  ],\n\t  [\n\t   12,\n\t   384\n\t  ],\n\t  [\n\t   12,\n\t   384\n\t  ],\n\t  [\n\t   12,\n\t   448\n\t  ],\n\t  [\n\t   12,\n\t   448\n\t  ],\n\t  [\n\t   13,\n\t   512\n\t  ],\n\t  [\n\t   13,\n\t   576\n\t  ],\n\t  [\n\t   12,\n\t   53\n\t  ],\n\t  [\n\t   12,\n\t   53\n\t  ],\n\t  [\n\t   12,\n\t   54\n\t  ],\n\t  [\n\t   12,\n\t   54\n\t  ],\n\t  [\n\t   13,\n\t   896\n\t  ],\n\t  [\n\t   13,\n\t   960\n\t  ],\n\t  [\n\t   13,\n\t   1024\n\t  ],\n\t  [\n\t   13,\n\t   1088\n\t  ],\n\t  [\n\t   13,\n\t   1152\n\t  ],\n\t  [\n\t   13,\n\t   1216\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ],\n\t  [\n\t   10,\n\t   64\n\t  ]\n\t ];\n\t var blackTable2 = [\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   8,\n\t   13\n\t  ],\n\t  [\n\t   11,\n\t   23\n\t  ],\n\t  [\n\t   11,\n\t   23\n\t  ],\n\t  [\n\t   12,\n\t   50\n\t  ],\n\t  [\n\t   12,\n\t   51\n\t  ],\n\t  [\n\t   12,\n\t   44\n\t  ],\n\t  [\n\t   12,\n\t   45\n\t  ],\n\t  [\n\t   12,\n\t   46\n\t  ],\n\t  [\n\t   12,\n\t   47\n\t  ],\n\t  [\n\t   12,\n\t   57\n\t  ],\n\t  [\n\t   12,\n\t   58\n\t  ],\n\t  [\n\t   12,\n\t   61\n\t  ],\n\t  [\n\t   12,\n\t   256\n\t  ],\n\t  [\n\t   10,\n\t   16\n\t  ],\n\t  [\n\t   10,\n\t   16\n\t  ],\n\t  [\n\t   10,\n\t   16\n\t  ],\n\t  [\n\t   10,\n\t   16\n\t  ],\n\t  [\n\t   10,\n\t   17\n\t  ],\n\t  [\n\t   10,\n\t   17\n\t  ],\n\t  [\n\t   10,\n\t   17\n\t  ],\n\t  [\n\t   10,\n\t   17\n\t  ],\n\t  [\n\t   12,\n\t   48\n\t  ],\n\t  [\n\t   12,\n\t   49\n\t  ],\n\t  [\n\t   12,\n\t   62\n\t  ],\n\t  [\n\t   12,\n\t   63\n\t  ],\n\t  [\n\t   12,\n\t   30\n\t  ],\n\t  [\n\t   12,\n\t   31\n\t  ],\n\t  [\n\t   12,\n\t   32\n\t  ],\n\t  [\n\t   12,\n\t   33\n\t  ],\n\t  [\n\t   12,\n\t   40\n\t  ],\n\t  [\n\t   12,\n\t   41\n\t  ],\n\t  [\n\t   11,\n\t   22\n\t  ],\n\t  [\n\t   11,\n\t   22\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   8,\n\t   14\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   10\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   7,\n\t   11\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   9,\n\t   15\n\t  ],\n\t  [\n\t   12,\n\t   128\n\t  ],\n\t  [\n\t   12,\n\t   192\n\t  ],\n\t  [\n\t   12,\n\t   26\n\t  ],\n\t  [\n\t   12,\n\t   27\n\t  ],\n\t  [\n\t   12,\n\t   28\n\t  ],\n\t  [\n\t   12,\n\t   29\n\t  ],\n\t  [\n\t   11,\n\t   19\n\t  ],\n\t  [\n\t   11,\n\t   19\n\t  ],\n\t  [\n\t   11,\n\t   20\n\t  ],\n\t  [\n\t   11,\n\t   20\n\t  ],\n\t  [\n\t   12,\n\t   34\n\t  ],\n\t  [\n\t   12,\n\t   35\n\t  ],\n\t  [\n\t   12,\n\t   36\n\t  ],\n\t  [\n\t   12,\n\t   37\n\t  ],\n\t  [\n\t   12,\n\t   38\n\t  ],\n\t  [\n\t   12,\n\t   39\n\t  ],\n\t  [\n\t   11,\n\t   21\n\t  ],\n\t  [\n\t   11,\n\t   21\n\t  ],\n\t  [\n\t   12,\n\t   42\n\t  ],\n\t  [\n\t   12,\n\t   43\n\t  ],\n\t  [\n\t   10,\n\t   0\n\t  ],\n\t  [\n\t   10,\n\t   0\n\t  ],\n\t  [\n\t   10,\n\t   0\n\t  ],\n\t  [\n\t   10,\n\t   0\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ],\n\t  [\n\t   7,\n\t   12\n\t  ]\n\t ];\n\t var blackTable3 = [\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   -1,\n\t   -1\n\t  ],\n\t  [\n\t   6,\n\t   9\n\t  ],\n\t  [\n\t   6,\n\t   8\n\t  ],\n\t  [\n\t   5,\n\t   7\n\t  ],\n\t  [\n\t   5,\n\t   7\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   6\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   4,\n\t   5\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   1\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   3,\n\t   4\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   3\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ],\n\t  [\n\t   2,\n\t   2\n\t  ]\n\t ];\n\t function CCITTFaxStream(str, maybeLength, params) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  params = params || Dict.empty;\n\t  this.encoding = params.get('K') || 0;\n\t  this.eoline = params.get('EndOfLine') || false;\n\t  this.byteAlign = params.get('EncodedByteAlign') || false;\n\t  this.columns = params.get('Columns') || 1728;\n\t  this.rows = params.get('Rows') || 0;\n\t  var eoblock = params.get('EndOfBlock');\n\t  if (eoblock === null || eoblock === undefined) {\n\t   eoblock = true;\n\t  }\n\t  this.eoblock = eoblock;\n\t  this.black = params.get('BlackIs1') || false;\n\t  this.codingLine = new Uint32Array(this.columns + 1);\n\t  this.refLine = new Uint32Array(this.columns + 2);\n\t  this.codingLine[0] = this.columns;\n\t  this.codingPos = 0;\n\t  this.row = 0;\n\t  this.nextLine2D = this.encoding < 0;\n\t  this.inputBits = 0;\n\t  this.inputBuf = 0;\n\t  this.outputBits = 0;\n\t  var code1;\n\t  while ((code1 = this.lookBits(12)) === 0) {\n\t   this.eatBits(1);\n\t  }\n\t  if (code1 === 1) {\n\t   this.eatBits(12);\n\t  }\n\t  if (this.encoding > 0) {\n\t   this.nextLine2D = !this.lookBits(1);\n\t   this.eatBits(1);\n\t  }\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n\t CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n\t  while (!this.eof) {\n\t   var c = this.lookChar();\n\t   this.ensureBuffer(this.bufferLength + 1);\n\t   this.buffer[this.bufferLength++] = c;\n\t  }\n\t };\n\t CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n\t  var codingLine = this.codingLine;\n\t  var codingPos = this.codingPos;\n\t  if (a1 > codingLine[codingPos]) {\n\t   if (a1 > this.columns) {\n\t    info('row is wrong length');\n\t    this.err = true;\n\t    a1 = this.columns;\n\t   }\n\t   if (codingPos & 1 ^ blackPixels) {\n\t    ++codingPos;\n\t   }\n\t   codingLine[codingPos] = a1;\n\t  }\n\t  this.codingPos = codingPos;\n\t };\n\t CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n\t  var codingLine = this.codingLine;\n\t  var codingPos = this.codingPos;\n\t  if (a1 > codingLine[codingPos]) {\n\t   if (a1 > this.columns) {\n\t    info('row is wrong length');\n\t    this.err = true;\n\t    a1 = this.columns;\n\t   }\n\t   if (codingPos & 1 ^ blackPixels) {\n\t    ++codingPos;\n\t   }\n\t   codingLine[codingPos] = a1;\n\t  } else if (a1 < codingLine[codingPos]) {\n\t   if (a1 < 0) {\n\t    info('invalid code');\n\t    this.err = true;\n\t    a1 = 0;\n\t   }\n\t   while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n\t    --codingPos;\n\t   }\n\t   codingLine[codingPos] = a1;\n\t  }\n\t  this.codingPos = codingPos;\n\t };\n\t CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n\t  var refLine = this.refLine;\n\t  var codingLine = this.codingLine;\n\t  var columns = this.columns;\n\t  var refPos, blackPixels, bits, i;\n\t  if (this.outputBits === 0) {\n\t   if (this.eof) {\n\t    return null;\n\t   }\n\t   this.err = false;\n\t   var code1, code2, code3;\n\t   if (this.nextLine2D) {\n\t    for (i = 0; codingLine[i] < columns; ++i) {\n\t     refLine[i] = codingLine[i];\n\t    }\n\t    refLine[i++] = columns;\n\t    refLine[i] = columns;\n\t    codingLine[0] = 0;\n\t    this.codingPos = 0;\n\t    refPos = 0;\n\t    blackPixels = 0;\n\t    while (codingLine[this.codingPos] < columns) {\n\t     code1 = this.getTwoDimCode();\n\t     switch (code1) {\n\t     case twoDimPass:\n\t      this.addPixels(refLine[refPos + 1], blackPixels);\n\t      if (refLine[refPos + 1] < columns) {\n\t       refPos += 2;\n\t      }\n\t      break;\n\t     case twoDimHoriz:\n\t      code1 = code2 = 0;\n\t      if (blackPixels) {\n\t       do {\n\t        code1 += code3 = this.getBlackCode();\n\t       } while (code3 >= 64);\n\t       do {\n\t        code2 += code3 = this.getWhiteCode();\n\t       } while (code3 >= 64);\n\t      } else {\n\t       do {\n\t        code1 += code3 = this.getWhiteCode();\n\t       } while (code3 >= 64);\n\t       do {\n\t        code2 += code3 = this.getBlackCode();\n\t       } while (code3 >= 64);\n\t      }\n\t      this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t      if (codingLine[this.codingPos] < columns) {\n\t       this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n\t      }\n\t      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t       refPos += 2;\n\t      }\n\t      break;\n\t     case twoDimVertR3:\n\t      this.addPixels(refLine[refPos] + 3, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       ++refPos;\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVertR2:\n\t      this.addPixels(refLine[refPos] + 2, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       ++refPos;\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVertR1:\n\t      this.addPixels(refLine[refPos] + 1, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       ++refPos;\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVert0:\n\t      this.addPixels(refLine[refPos], blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       ++refPos;\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVertL3:\n\t      this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       if (refPos > 0) {\n\t        --refPos;\n\t       } else {\n\t        ++refPos;\n\t       }\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVertL2:\n\t      this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       if (refPos > 0) {\n\t        --refPos;\n\t       } else {\n\t        ++refPos;\n\t       }\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case twoDimVertL1:\n\t      this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\t      blackPixels ^= 1;\n\t      if (codingLine[this.codingPos] < columns) {\n\t       if (refPos > 0) {\n\t        --refPos;\n\t       } else {\n\t        ++refPos;\n\t       }\n\t       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t        refPos += 2;\n\t       }\n\t      }\n\t      break;\n\t     case ccittEOF:\n\t      this.addPixels(columns, 0);\n\t      this.eof = true;\n\t      break;\n\t     default:\n\t      info('bad 2d code');\n\t      this.addPixels(columns, 0);\n\t      this.err = true;\n\t     }\n\t    }\n\t   } else {\n\t    codingLine[0] = 0;\n\t    this.codingPos = 0;\n\t    blackPixels = 0;\n\t    while (codingLine[this.codingPos] < columns) {\n\t     code1 = 0;\n\t     if (blackPixels) {\n\t      do {\n\t       code1 += code3 = this.getBlackCode();\n\t      } while (code3 >= 64);\n\t     } else {\n\t      do {\n\t       code1 += code3 = this.getWhiteCode();\n\t      } while (code3 >= 64);\n\t     }\n\t     this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t     blackPixels ^= 1;\n\t    }\n\t   }\n\t   var gotEOL = false;\n\t   if (this.byteAlign) {\n\t    this.inputBits &= ~7;\n\t   }\n\t   if (!this.eoblock && this.row === this.rows - 1) {\n\t    this.eof = true;\n\t   } else {\n\t    code1 = this.lookBits(12);\n\t    if (this.eoline) {\n\t     while (code1 !== ccittEOF && code1 !== 1) {\n\t      this.eatBits(1);\n\t      code1 = this.lookBits(12);\n\t     }\n\t    } else {\n\t     while (code1 === 0) {\n\t      this.eatBits(1);\n\t      code1 = this.lookBits(12);\n\t     }\n\t    }\n\t    if (code1 === 1) {\n\t     this.eatBits(12);\n\t     gotEOL = true;\n\t    } else if (code1 === ccittEOF) {\n\t     this.eof = true;\n\t    }\n\t   }\n\t   if (!this.eof && this.encoding > 0) {\n\t    this.nextLine2D = !this.lookBits(1);\n\t    this.eatBits(1);\n\t   }\n\t   if (this.eoblock && gotEOL && this.byteAlign) {\n\t    code1 = this.lookBits(12);\n\t    if (code1 === 1) {\n\t     this.eatBits(12);\n\t     if (this.encoding > 0) {\n\t      this.lookBits(1);\n\t      this.eatBits(1);\n\t     }\n\t     if (this.encoding >= 0) {\n\t      for (i = 0; i < 4; ++i) {\n\t       code1 = this.lookBits(12);\n\t       if (code1 !== 1) {\n\t        info('bad rtc code: ' + code1);\n\t       }\n\t       this.eatBits(12);\n\t       if (this.encoding > 0) {\n\t        this.lookBits(1);\n\t        this.eatBits(1);\n\t       }\n\t      }\n\t     }\n\t     this.eof = true;\n\t    }\n\t   } else if (this.err && this.eoline) {\n\t    while (true) {\n\t     code1 = this.lookBits(13);\n\t     if (code1 === ccittEOF) {\n\t      this.eof = true;\n\t      return null;\n\t     }\n\t     if (code1 >> 1 === 1) {\n\t      break;\n\t     }\n\t     this.eatBits(1);\n\t    }\n\t    this.eatBits(12);\n\t    if (this.encoding > 0) {\n\t     this.eatBits(1);\n\t     this.nextLine2D = !(code1 & 1);\n\t    }\n\t   }\n\t   if (codingLine[0] > 0) {\n\t    this.outputBits = codingLine[this.codingPos = 0];\n\t   } else {\n\t    this.outputBits = codingLine[this.codingPos = 1];\n\t   }\n\t   this.row++;\n\t  }\n\t  var c;\n\t  if (this.outputBits >= 8) {\n\t   c = this.codingPos & 1 ? 0 : 0xFF;\n\t   this.outputBits -= 8;\n\t   if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n\t    this.codingPos++;\n\t    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t   }\n\t  } else {\n\t   bits = 8;\n\t   c = 0;\n\t   do {\n\t    if (this.outputBits > bits) {\n\t     c <<= bits;\n\t     if (!(this.codingPos & 1)) {\n\t      c |= 0xFF >> 8 - bits;\n\t     }\n\t     this.outputBits -= bits;\n\t     bits = 0;\n\t    } else {\n\t     c <<= this.outputBits;\n\t     if (!(this.codingPos & 1)) {\n\t      c |= 0xFF >> 8 - this.outputBits;\n\t     }\n\t     bits -= this.outputBits;\n\t     this.outputBits = 0;\n\t     if (codingLine[this.codingPos] < columns) {\n\t      this.codingPos++;\n\t      this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t     } else if (bits > 0) {\n\t      c <<= bits;\n\t      bits = 0;\n\t     }\n\t    }\n\t   } while (bits);\n\t  }\n\t  if (this.black) {\n\t   c ^= 0xFF;\n\t  }\n\t  return c;\n\t };\n\t CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n\t  var limitValue = limit || 0;\n\t  for (var i = start; i <= end; ++i) {\n\t   var code = this.lookBits(i);\n\t   if (code === ccittEOF) {\n\t    return [\n\t     true,\n\t     1,\n\t     false\n\t    ];\n\t   }\n\t   if (i < end) {\n\t    code <<= end - i;\n\t   }\n\t   if (!limitValue || code >= limitValue) {\n\t    var p = table[code - limitValue];\n\t    if (p[0] === i) {\n\t     this.eatBits(i);\n\t     return [\n\t      true,\n\t      p[1],\n\t      true\n\t     ];\n\t    }\n\t   }\n\t  }\n\t  return [\n\t   false,\n\t   0,\n\t   false\n\t  ];\n\t };\n\t CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n\t  var code = 0;\n\t  var p;\n\t  if (this.eoblock) {\n\t   code = this.lookBits(7);\n\t   p = twoDimTable[code];\n\t   if (p && p[0] > 0) {\n\t    this.eatBits(p[0]);\n\t    return p[1];\n\t   }\n\t  } else {\n\t   var result = this.findTableCode(1, 7, twoDimTable);\n\t   if (result[0] && result[2]) {\n\t    return result[1];\n\t   }\n\t  }\n\t  info('Bad two dim code');\n\t  return ccittEOF;\n\t };\n\t CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n\t  var code = 0;\n\t  var p;\n\t  if (this.eoblock) {\n\t   code = this.lookBits(12);\n\t   if (code === ccittEOF) {\n\t    return 1;\n\t   }\n\t   if (code >> 5 === 0) {\n\t    p = whiteTable1[code];\n\t   } else {\n\t    p = whiteTable2[code >> 3];\n\t   }\n\t   if (p[0] > 0) {\n\t    this.eatBits(p[0]);\n\t    return p[1];\n\t   }\n\t  } else {\n\t   var result = this.findTableCode(1, 9, whiteTable2);\n\t   if (result[0]) {\n\t    return result[1];\n\t   }\n\t   result = this.findTableCode(11, 12, whiteTable1);\n\t   if (result[0]) {\n\t    return result[1];\n\t   }\n\t  }\n\t  info('bad white code');\n\t  this.eatBits(1);\n\t  return 1;\n\t };\n\t CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n\t  var code, p;\n\t  if (this.eoblock) {\n\t   code = this.lookBits(13);\n\t   if (code === ccittEOF) {\n\t    return 1;\n\t   }\n\t   if (code >> 7 === 0) {\n\t    p = blackTable1[code];\n\t   } else if (code >> 9 === 0 && code >> 7 !== 0) {\n\t    p = blackTable2[(code >> 1) - 64];\n\t   } else {\n\t    p = blackTable3[code >> 7];\n\t   }\n\t   if (p[0] > 0) {\n\t    this.eatBits(p[0]);\n\t    return p[1];\n\t   }\n\t  } else {\n\t   var result = this.findTableCode(2, 6, blackTable3);\n\t   if (result[0]) {\n\t    return result[1];\n\t   }\n\t   result = this.findTableCode(7, 12, blackTable2, 64);\n\t   if (result[0]) {\n\t    return result[1];\n\t   }\n\t   result = this.findTableCode(10, 13, blackTable1);\n\t   if (result[0]) {\n\t    return result[1];\n\t   }\n\t  }\n\t  info('bad black code');\n\t  this.eatBits(1);\n\t  return 1;\n\t };\n\t CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n\t  var c;\n\t  while (this.inputBits < n) {\n\t   if ((c = this.str.getByte()) === -1) {\n\t    if (this.inputBits === 0) {\n\t     return ccittEOF;\n\t    }\n\t    return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n\t   }\n\t   this.inputBuf = this.inputBuf << 8 | c;\n\t   this.inputBits += 8;\n\t  }\n\t  return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n\t };\n\t CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n\t  if ((this.inputBits -= n) < 0) {\n\t   this.inputBits = 0;\n\t  }\n\t };\n\t return CCITTFaxStream;\n\t}();\n\tvar LZWStream = function LZWStreamClosure() {\n\t function LZWStream(str, maybeLength, earlyChange) {\n\t  this.str = str;\n\t  this.dict = str.dict;\n\t  this.cachedData = 0;\n\t  this.bitsCached = 0;\n\t  var maxLzwDictionarySize = 4096;\n\t  var lzwState = {\n\t   earlyChange: earlyChange,\n\t   codeLength: 9,\n\t   nextCode: 258,\n\t   dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n\t   dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n\t   dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n\t   currentSequence: new Uint8Array(maxLzwDictionarySize),\n\t   currentSequenceLength: 0\n\t  };\n\t  for (var i = 0; i < 256; ++i) {\n\t   lzwState.dictionaryValues[i] = i;\n\t   lzwState.dictionaryLengths[i] = 1;\n\t  }\n\t  this.lzwState = lzwState;\n\t  DecodeStream.call(this, maybeLength);\n\t }\n\t LZWStream.prototype = Object.create(DecodeStream.prototype);\n\t LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n\t  var bitsCached = this.bitsCached;\n\t  var cachedData = this.cachedData;\n\t  while (bitsCached < n) {\n\t   var c = this.str.getByte();\n\t   if (c === -1) {\n\t    this.eof = true;\n\t    return null;\n\t   }\n\t   cachedData = cachedData << 8 | c;\n\t   bitsCached += 8;\n\t  }\n\t  this.bitsCached = bitsCached -= n;\n\t  this.cachedData = cachedData;\n\t  this.lastCode = null;\n\t  return cachedData >>> bitsCached & (1 << n) - 1;\n\t };\n\t LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n\t  var blockSize = 512;\n\t  var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n\t  var i, j, q;\n\t  var lzwState = this.lzwState;\n\t  if (!lzwState) {\n\t   return;\n\t  }\n\t  var earlyChange = lzwState.earlyChange;\n\t  var nextCode = lzwState.nextCode;\n\t  var dictionaryValues = lzwState.dictionaryValues;\n\t  var dictionaryLengths = lzwState.dictionaryLengths;\n\t  var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n\t  var codeLength = lzwState.codeLength;\n\t  var prevCode = lzwState.prevCode;\n\t  var currentSequence = lzwState.currentSequence;\n\t  var currentSequenceLength = lzwState.currentSequenceLength;\n\t  var decodedLength = 0;\n\t  var currentBufferLength = this.bufferLength;\n\t  var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t  for (i = 0; i < blockSize; i++) {\n\t   var code = this.readBits(codeLength);\n\t   var hasPrev = currentSequenceLength > 0;\n\t   if (code < 256) {\n\t    currentSequence[0] = code;\n\t    currentSequenceLength = 1;\n\t   } else if (code >= 258) {\n\t    if (code < nextCode) {\n\t     currentSequenceLength = dictionaryLengths[code];\n\t     for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n\t      currentSequence[j] = dictionaryValues[q];\n\t      q = dictionaryPrevCodes[q];\n\t     }\n\t    } else {\n\t     currentSequence[currentSequenceLength++] = currentSequence[0];\n\t    }\n\t   } else if (code === 256) {\n\t    codeLength = 9;\n\t    nextCode = 258;\n\t    currentSequenceLength = 0;\n\t    continue;\n\t   } else {\n\t    this.eof = true;\n\t    delete this.lzwState;\n\t    break;\n\t   }\n\t   if (hasPrev) {\n\t    dictionaryPrevCodes[nextCode] = prevCode;\n\t    dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n\t    dictionaryValues[nextCode] = currentSequence[0];\n\t    nextCode++;\n\t    codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n\t   }\n\t   prevCode = code;\n\t   decodedLength += currentSequenceLength;\n\t   if (estimatedDecodedSize < decodedLength) {\n\t    do {\n\t     estimatedDecodedSize += decodedSizeDelta;\n\t    } while (estimatedDecodedSize < decodedLength);\n\t    buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t   }\n\t   for (j = 0; j < currentSequenceLength; j++) {\n\t    buffer[currentBufferLength++] = currentSequence[j];\n\t   }\n\t  }\n\t  lzwState.nextCode = nextCode;\n\t  lzwState.codeLength = codeLength;\n\t  lzwState.prevCode = prevCode;\n\t  lzwState.currentSequenceLength = currentSequenceLength;\n\t  this.bufferLength = currentBufferLength;\n\t };\n\t return LZWStream;\n\t}();\n\tvar NullStream = function NullStreamClosure() {\n\t function NullStream() {\n\t  Stream.call(this, new Uint8Array(0));\n\t }\n\t NullStream.prototype = Stream.prototype;\n\t return NullStream;\n\t}();\n\texports.Ascii85Stream = Ascii85Stream;\n\texports.AsciiHexStream = AsciiHexStream;\n\texports.CCITTFaxStream = CCITTFaxStream;\n\texports.DecryptStream = DecryptStream;\n\texports.DecodeStream = DecodeStream;\n\texports.FlateStream = FlateStream;\n\texports.Jbig2Stream = Jbig2Stream;\n\texports.JpegStream = JpegStream;\n\texports.JpxStream = JpxStream;\n\texports.NullStream = NullStream;\n\texports.PredictorStream = PredictorStream;\n\texports.RunLengthStream = RunLengthStream;\n\texports.Stream = Stream;\n\texports.StreamsSequenceStream = StreamsSequenceStream;\n\texports.StringStream = StringStream;\n\texports.LZWStream = LZWStream;\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreFunction = __w_pdfjs_require__(6);\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isString = sharedUtil.isString;\n\tvar shadow = sharedUtil.shadow;\n\tvar warn = sharedUtil.warn;\n\tvar isDict = corePrimitives.isDict;\n\tvar isName = corePrimitives.isName;\n\tvar isStream = corePrimitives.isStream;\n\tvar PDFFunction = coreFunction.PDFFunction;\n\tvar ColorSpace = function ColorSpaceClosure() {\n\t function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n\t  var COMPONENTS = 3;\n\t  alpha01 = alpha01 !== 1 ? 0 : alpha01;\n\t  var xRatio = w1 / w2;\n\t  var yRatio = h1 / h2;\n\t  var i, j, py, newIndex = 0, oldIndex;\n\t  var xScaled = new Uint16Array(w2);\n\t  var w1Scanline = w1 * COMPONENTS;\n\t  for (i = 0; i < w2; i++) {\n\t   xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n\t  }\n\t  for (i = 0; i < h2; i++) {\n\t   py = Math.floor(i * yRatio) * w1Scanline;\n\t   for (j = 0; j < w2; j++) {\n\t    oldIndex = py + xScaled[j];\n\t    dest[newIndex++] = src[oldIndex++];\n\t    dest[newIndex++] = src[oldIndex++];\n\t    dest[newIndex++] = src[oldIndex++];\n\t    newIndex += alpha01;\n\t   }\n\t  }\n\t }\n\t function ColorSpace() {\n\t  error('should not call ColorSpace constructor');\n\t }\n\t ColorSpace.prototype = {\n\t  getRgb: function ColorSpace_getRgb(src, srcOffset) {\n\t   var rgb = new Uint8Array(3);\n\t   this.getRgbItem(src, srcOffset, rgb, 0);\n\t   return rgb;\n\t  },\n\t  getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   error('Should not call ColorSpace.getRgbItem');\n\t  },\n\t  getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   error('Should not call ColorSpace.getRgbBuffer');\n\t  },\n\t  getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n\t   error('Should not call ColorSpace.getOutputLength');\n\t  },\n\t  isPassthrough: function ColorSpace_isPassthrough(bits) {\n\t   return false;\n\t  },\n\t  fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n\t   var count = originalWidth * originalHeight;\n\t   var rgbBuf = null;\n\t   var numComponentColors = 1 << bpc;\n\t   var needsResizing = originalHeight !== height || originalWidth !== width;\n\t   var i, ii;\n\t   if (this.isPassthrough(bpc)) {\n\t    rgbBuf = comps;\n\t   } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n\t    var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\t    var key;\n\t    for (i = 0; i < numComponentColors; i++) {\n\t     allColors[i] = i;\n\t    }\n\t    var colorMap = new Uint8Array(numComponentColors * 3);\n\t    this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\t    var destPos, rgbPos;\n\t    if (!needsResizing) {\n\t     destPos = 0;\n\t     for (i = 0; i < count; ++i) {\n\t      key = comps[i] * 3;\n\t      dest[destPos++] = colorMap[key];\n\t      dest[destPos++] = colorMap[key + 1];\n\t      dest[destPos++] = colorMap[key + 2];\n\t      destPos += alpha01;\n\t     }\n\t    } else {\n\t     rgbBuf = new Uint8Array(count * 3);\n\t     rgbPos = 0;\n\t     for (i = 0; i < count; ++i) {\n\t      key = comps[i] * 3;\n\t      rgbBuf[rgbPos++] = colorMap[key];\n\t      rgbBuf[rgbPos++] = colorMap[key + 1];\n\t      rgbBuf[rgbPos++] = colorMap[key + 2];\n\t     }\n\t    }\n\t   } else {\n\t    if (!needsResizing) {\n\t     this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n\t    } else {\n\t     rgbBuf = new Uint8Array(count * 3);\n\t     this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n\t    }\n\t   }\n\t   if (rgbBuf) {\n\t    if (needsResizing) {\n\t     resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n\t    } else {\n\t     rgbPos = 0;\n\t     destPos = 0;\n\t     for (i = 0, ii = width * actualHeight; i < ii; i++) {\n\t      dest[destPos++] = rgbBuf[rgbPos++];\n\t      dest[destPos++] = rgbBuf[rgbPos++];\n\t      dest[destPos++] = rgbBuf[rgbPos++];\n\t      destPos += alpha01;\n\t     }\n\t    }\n\t   }\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n\t  var IR = ColorSpace.parseToIR(cs, xref, res);\n\t  if (IR instanceof AlternateCS) {\n\t   return IR;\n\t  }\n\t  return ColorSpace.fromIR(IR);\n\t };\n\t ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n\t  var name = isArray(IR) ? IR[0] : IR;\n\t  var whitePoint, blackPoint, gamma;\n\t  switch (name) {\n\t  case 'DeviceGrayCS':\n\t   return this.singletons.gray;\n\t  case 'DeviceRgbCS':\n\t   return this.singletons.rgb;\n\t  case 'DeviceCmykCS':\n\t   return this.singletons.cmyk;\n\t  case 'CalGrayCS':\n\t   whitePoint = IR[1];\n\t   blackPoint = IR[2];\n\t   gamma = IR[3];\n\t   return new CalGrayCS(whitePoint, blackPoint, gamma);\n\t  case 'CalRGBCS':\n\t   whitePoint = IR[1];\n\t   blackPoint = IR[2];\n\t   gamma = IR[3];\n\t   var matrix = IR[4];\n\t   return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\t  case 'PatternCS':\n\t   var basePatternCS = IR[1];\n\t   if (basePatternCS) {\n\t    basePatternCS = ColorSpace.fromIR(basePatternCS);\n\t   }\n\t   return new PatternCS(basePatternCS);\n\t  case 'IndexedCS':\n\t   var baseIndexedCS = IR[1];\n\t   var hiVal = IR[2];\n\t   var lookup = IR[3];\n\t   return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n\t  case 'AlternateCS':\n\t   var numComps = IR[1];\n\t   var alt = IR[2];\n\t   var tintFnIR = IR[3];\n\t   return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n\t  case 'LabCS':\n\t   whitePoint = IR[1];\n\t   blackPoint = IR[2];\n\t   var range = IR[3];\n\t   return new LabCS(whitePoint, blackPoint, range);\n\t  default:\n\t   error('Unknown name ' + name);\n\t  }\n\t  return null;\n\t };\n\t ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n\t  if (isName(cs)) {\n\t   var colorSpaces = res.get('ColorSpace');\n\t   if (isDict(colorSpaces)) {\n\t    var refcs = colorSpaces.get(cs.name);\n\t    if (refcs) {\n\t     cs = refcs;\n\t    }\n\t   }\n\t  }\n\t  cs = xref.fetchIfRef(cs);\n\t  if (isName(cs)) {\n\t   switch (cs.name) {\n\t   case 'DeviceGray':\n\t   case 'G':\n\t    return 'DeviceGrayCS';\n\t   case 'DeviceRGB':\n\t   case 'RGB':\n\t    return 'DeviceRgbCS';\n\t   case 'DeviceCMYK':\n\t   case 'CMYK':\n\t    return 'DeviceCmykCS';\n\t   case 'Pattern':\n\t    return [\n\t     'PatternCS',\n\t     null\n\t    ];\n\t   default:\n\t    error('unrecognized colorspace ' + cs.name);\n\t   }\n\t  } else if (isArray(cs)) {\n\t   var mode = xref.fetchIfRef(cs[0]).name;\n\t   var numComps, params, alt, whitePoint, blackPoint, gamma;\n\t   switch (mode) {\n\t   case 'DeviceGray':\n\t   case 'G':\n\t    return 'DeviceGrayCS';\n\t   case 'DeviceRGB':\n\t   case 'RGB':\n\t    return 'DeviceRgbCS';\n\t   case 'DeviceCMYK':\n\t   case 'CMYK':\n\t    return 'DeviceCmykCS';\n\t   case 'CalGray':\n\t    params = xref.fetchIfRef(cs[1]);\n\t    whitePoint = params.getArray('WhitePoint');\n\t    blackPoint = params.getArray('BlackPoint');\n\t    gamma = params.get('Gamma');\n\t    return [\n\t     'CalGrayCS',\n\t     whitePoint,\n\t     blackPoint,\n\t     gamma\n\t    ];\n\t   case 'CalRGB':\n\t    params = xref.fetchIfRef(cs[1]);\n\t    whitePoint = params.getArray('WhitePoint');\n\t    blackPoint = params.getArray('BlackPoint');\n\t    gamma = params.getArray('Gamma');\n\t    var matrix = params.getArray('Matrix');\n\t    return [\n\t     'CalRGBCS',\n\t     whitePoint,\n\t     blackPoint,\n\t     gamma,\n\t     matrix\n\t    ];\n\t   case 'ICCBased':\n\t    var stream = xref.fetchIfRef(cs[1]);\n\t    var dict = stream.dict;\n\t    numComps = dict.get('N');\n\t    alt = dict.get('Alternate');\n\t    if (alt) {\n\t     var altIR = ColorSpace.parseToIR(alt, xref, res);\n\t     var altCS = ColorSpace.fromIR(altIR);\n\t     if (altCS.numComps === numComps) {\n\t      return altIR;\n\t     }\n\t     warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n\t    }\n\t    if (numComps === 1) {\n\t     return 'DeviceGrayCS';\n\t    } else if (numComps === 3) {\n\t     return 'DeviceRgbCS';\n\t    } else if (numComps === 4) {\n\t     return 'DeviceCmykCS';\n\t    }\n\t    break;\n\t   case 'Pattern':\n\t    var basePatternCS = cs[1] || null;\n\t    if (basePatternCS) {\n\t     basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n\t    }\n\t    return [\n\t     'PatternCS',\n\t     basePatternCS\n\t    ];\n\t   case 'Indexed':\n\t   case 'I':\n\t    var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n\t    var hiVal = xref.fetchIfRef(cs[2]) + 1;\n\t    var lookup = xref.fetchIfRef(cs[3]);\n\t    if (isStream(lookup)) {\n\t     lookup = lookup.getBytes();\n\t    }\n\t    return [\n\t     'IndexedCS',\n\t     baseIndexedCS,\n\t     hiVal,\n\t     lookup\n\t    ];\n\t   case 'Separation':\n\t   case 'DeviceN':\n\t    var name = xref.fetchIfRef(cs[1]);\n\t    numComps = isArray(name) ? name.length : 1;\n\t    alt = ColorSpace.parseToIR(cs[2], xref, res);\n\t    var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n\t    return [\n\t     'AlternateCS',\n\t     numComps,\n\t     alt,\n\t     tintFnIR\n\t    ];\n\t   case 'Lab':\n\t    params = xref.fetchIfRef(cs[1]);\n\t    whitePoint = params.getArray('WhitePoint');\n\t    blackPoint = params.getArray('BlackPoint');\n\t    var range = params.getArray('Range');\n\t    return [\n\t     'LabCS',\n\t     whitePoint,\n\t     blackPoint,\n\t     range\n\t    ];\n\t   default:\n\t    error('unimplemented color space object \"' + mode + '\"');\n\t   }\n\t  } else {\n\t   error('unrecognized color space object: \"' + cs + '\"');\n\t  }\n\t  return null;\n\t };\n\t ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n\t  if (!isArray(decode)) {\n\t   return true;\n\t  }\n\t  if (n * 2 !== decode.length) {\n\t   warn('The decode map is not the correct length');\n\t   return true;\n\t  }\n\t  for (var i = 0, ii = decode.length; i < ii; i += 2) {\n\t   if (decode[i] !== 0 || decode[i + 1] !== 1) {\n\t    return false;\n\t   }\n\t  }\n\t  return true;\n\t };\n\t ColorSpace.singletons = {\n\t  get gray() {\n\t   return shadow(this, 'gray', new DeviceGrayCS());\n\t  },\n\t  get rgb() {\n\t   return shadow(this, 'rgb', new DeviceRgbCS());\n\t  },\n\t  get cmyk() {\n\t   return shadow(this, 'cmyk', new DeviceCmykCS());\n\t  }\n\t };\n\t return ColorSpace;\n\t}();\n\tvar AlternateCS = function AlternateCSClosure() {\n\t function AlternateCS(numComps, base, tintFn) {\n\t  this.name = 'Alternate';\n\t  this.numComps = numComps;\n\t  this.defaultColor = new Float32Array(numComps);\n\t  for (var i = 0; i < numComps; ++i) {\n\t   this.defaultColor[i] = 1;\n\t  }\n\t  this.base = base;\n\t  this.tintFn = tintFn;\n\t  this.tmpBuf = new Float32Array(base.numComps);\n\t }\n\t AlternateCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   var tmpBuf = this.tmpBuf;\n\t   this.tintFn(src, srcOffset, tmpBuf, 0);\n\t   this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n\t  },\n\t  getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var tintFn = this.tintFn;\n\t   var base = this.base;\n\t   var scale = 1 / ((1 << bits) - 1);\n\t   var baseNumComps = base.numComps;\n\t   var usesZeroToOneRange = base.usesZeroToOneRange;\n\t   var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n\t   var pos = isPassthrough ? destOffset : 0;\n\t   var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n\t   var numComps = this.numComps;\n\t   var scaled = new Float32Array(numComps);\n\t   var tinted = new Float32Array(baseNumComps);\n\t   var i, j;\n\t   for (i = 0; i < count; i++) {\n\t    for (j = 0; j < numComps; j++) {\n\t     scaled[j] = src[srcOffset++] * scale;\n\t    }\n\t    tintFn(scaled, 0, tinted, 0);\n\t    if (usesZeroToOneRange) {\n\t     for (j = 0; j < baseNumComps; j++) {\n\t      baseBuf[pos++] = tinted[j] * 255;\n\t     }\n\t    } else {\n\t     base.getRgbItem(tinted, 0, baseBuf, pos);\n\t     pos += baseNumComps;\n\t    }\n\t   }\n\t   if (!isPassthrough) {\n\t    base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n\t   }\n\t  },\n\t  getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n\t   return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return AlternateCS;\n\t}();\n\tvar PatternCS = function PatternCSClosure() {\n\t function PatternCS(baseCS) {\n\t  this.name = 'Pattern';\n\t  this.base = baseCS;\n\t }\n\t PatternCS.prototype = {};\n\t return PatternCS;\n\t}();\n\tvar IndexedCS = function IndexedCSClosure() {\n\t function IndexedCS(base, highVal, lookup) {\n\t  this.name = 'Indexed';\n\t  this.numComps = 1;\n\t  this.defaultColor = new Uint8Array(this.numComps);\n\t  this.base = base;\n\t  this.highVal = highVal;\n\t  var baseNumComps = base.numComps;\n\t  var length = baseNumComps * highVal;\n\t  if (isStream(lookup)) {\n\t   this.lookup = new Uint8Array(length);\n\t   var bytes = lookup.getBytes(length);\n\t   this.lookup.set(bytes);\n\t  } else if (isString(lookup)) {\n\t   this.lookup = new Uint8Array(length);\n\t   for (var i = 0; i < length; ++i) {\n\t    this.lookup[i] = lookup.charCodeAt(i);\n\t   }\n\t  } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n\t   this.lookup = lookup;\n\t  } else {\n\t   error('Unrecognized lookup table: ' + lookup);\n\t  }\n\t }\n\t IndexedCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   var numComps = this.base.numComps;\n\t   var start = src[srcOffset] * numComps;\n\t   this.base.getRgbItem(this.lookup, start, dest, destOffset);\n\t  },\n\t  getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var base = this.base;\n\t   var numComps = base.numComps;\n\t   var outputDelta = base.getOutputLength(numComps, alpha01);\n\t   var lookup = this.lookup;\n\t   for (var i = 0; i < count; ++i) {\n\t    var lookupPos = src[srcOffset++] * numComps;\n\t    base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n\t    destOffset += outputDelta;\n\t   }\n\t  },\n\t  getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n\t   return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n\t   return true;\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return IndexedCS;\n\t}();\n\tvar DeviceGrayCS = function DeviceGrayCSClosure() {\n\t function DeviceGrayCS() {\n\t  this.name = 'DeviceGray';\n\t  this.numComps = 1;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t }\n\t DeviceGrayCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   var c = src[srcOffset] * 255 | 0;\n\t   c = c < 0 ? 0 : c > 255 ? 255 : c;\n\t   dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n\t  },\n\t  getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var scale = 255 / ((1 << bits) - 1);\n\t   var j = srcOffset, q = destOffset;\n\t   for (var i = 0; i < count; ++i) {\n\t    var c = scale * src[j++] | 0;\n\t    dest[q++] = c;\n\t    dest[q++] = c;\n\t    dest[q++] = c;\n\t    q += alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength * (3 + alpha01);\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return DeviceGrayCS;\n\t}();\n\tvar DeviceRgbCS = function DeviceRgbCSClosure() {\n\t function DeviceRgbCS() {\n\t  this.name = 'DeviceRGB';\n\t  this.numComps = 3;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t }\n\t DeviceRgbCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   var r = src[srcOffset] * 255 | 0;\n\t   var g = src[srcOffset + 1] * 255 | 0;\n\t   var b = src[srcOffset + 2] * 255 | 0;\n\t   dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n\t   dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n\t   dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n\t  },\n\t  getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   if (bits === 8 && alpha01 === 0) {\n\t    dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n\t    return;\n\t   }\n\t   var scale = 255 / ((1 << bits) - 1);\n\t   var j = srcOffset, q = destOffset;\n\t   for (var i = 0; i < count; ++i) {\n\t    dest[q++] = scale * src[j++] | 0;\n\t    dest[q++] = scale * src[j++] | 0;\n\t    dest[q++] = scale * src[j++] | 0;\n\t    q += alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength * (3 + alpha01) / 3 | 0;\n\t  },\n\t  isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n\t   return bits === 8;\n\t  },\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return DeviceRgbCS;\n\t}();\n\tvar DeviceCmykCS = function DeviceCmykCSClosure() {\n\t function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n\t  var c = src[srcOffset + 0] * srcScale;\n\t  var m = src[srcOffset + 1] * srcScale;\n\t  var y = src[srcOffset + 2] * srcScale;\n\t  var k = src[srcOffset + 3] * srcScale;\n\t  var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n\t  var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n\t  var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n\t  dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t  dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t  dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t }\n\t function DeviceCmykCS() {\n\t  this.name = 'DeviceCMYK';\n\t  this.numComps = 4;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t  this.defaultColor[3] = 1;\n\t }\n\t DeviceCmykCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   convertToRgb(src, srcOffset, 1, dest, destOffset);\n\t  },\n\t  getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var scale = 1 / ((1 << bits) - 1);\n\t   for (var i = 0; i < count; i++) {\n\t    convertToRgb(src, srcOffset, scale, dest, destOffset);\n\t    srcOffset += 4;\n\t    destOffset += 3 + alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength / 4 * (3 + alpha01) | 0;\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return DeviceCmykCS;\n\t}();\n\tvar CalGrayCS = function CalGrayCSClosure() {\n\t function CalGrayCS(whitePoint, blackPoint, gamma) {\n\t  this.name = 'CalGray';\n\t  this.numComps = 1;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t  if (!whitePoint) {\n\t   error('WhitePoint missing - required for color space CalGray');\n\t  }\n\t  blackPoint = blackPoint || [\n\t   0,\n\t   0,\n\t   0\n\t  ];\n\t  gamma = gamma || 1;\n\t  this.XW = whitePoint[0];\n\t  this.YW = whitePoint[1];\n\t  this.ZW = whitePoint[2];\n\t  this.XB = blackPoint[0];\n\t  this.YB = blackPoint[1];\n\t  this.ZB = blackPoint[2];\n\t  this.G = gamma;\n\t  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t  }\n\t  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t   info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n\t   this.XB = this.YB = this.ZB = 0;\n\t  }\n\t  if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n\t   warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n\t  }\n\t  if (this.G < 1) {\n\t   info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n\t   this.G = 1;\n\t  }\n\t }\n\t function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t  var A = src[srcOffset] * scale;\n\t  var AG = Math.pow(A, cs.G);\n\t  var L = cs.YW * AG;\n\t  var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n\t  dest[destOffset] = val;\n\t  dest[destOffset + 1] = val;\n\t  dest[destOffset + 2] = val;\n\t }\n\t CalGrayCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t  },\n\t  getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var scale = 1 / ((1 << bits) - 1);\n\t   for (var i = 0; i < count; ++i) {\n\t    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t    srcOffset += 1;\n\t    destOffset += 3 + alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength * (3 + alpha01);\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return CalGrayCS;\n\t}();\n\tvar CalRGBCS = function CalRGBCSClosure() {\n\t var BRADFORD_SCALE_MATRIX = new Float32Array([\n\t  0.8951,\n\t  0.2664,\n\t  -0.1614,\n\t  -0.7502,\n\t  1.7135,\n\t  0.0367,\n\t  0.0389,\n\t  -0.0685,\n\t  1.0296\n\t ]);\n\t var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n\t  0.9869929,\n\t  -0.1470543,\n\t  0.1599627,\n\t  0.4323053,\n\t  0.5183603,\n\t  0.0492912,\n\t  -0.0085287,\n\t  0.0400428,\n\t  0.9684867\n\t ]);\n\t var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n\t  3.2404542,\n\t  -1.5371385,\n\t  -0.4985314,\n\t  -0.9692660,\n\t  1.8760108,\n\t  0.0415560,\n\t  0.0556434,\n\t  -0.2040259,\n\t  1.0572252\n\t ]);\n\t var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n\t  1,\n\t  1,\n\t  1\n\t ]);\n\t var tempNormalizeMatrix = new Float32Array(3);\n\t var tempConvertMatrix1 = new Float32Array(3);\n\t var tempConvertMatrix2 = new Float32Array(3);\n\t var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\t function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n\t  this.name = 'CalRGB';\n\t  this.numComps = 3;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t  if (!whitePoint) {\n\t   error('WhitePoint missing - required for color space CalRGB');\n\t  }\n\t  blackPoint = blackPoint || new Float32Array(3);\n\t  gamma = gamma || new Float32Array([\n\t   1,\n\t   1,\n\t   1\n\t  ]);\n\t  matrix = matrix || new Float32Array([\n\t   1,\n\t   0,\n\t   0,\n\t   0,\n\t   1,\n\t   0,\n\t   0,\n\t   0,\n\t   1\n\t  ]);\n\t  var XW = whitePoint[0];\n\t  var YW = whitePoint[1];\n\t  var ZW = whitePoint[2];\n\t  this.whitePoint = whitePoint;\n\t  var XB = blackPoint[0];\n\t  var YB = blackPoint[1];\n\t  var ZB = blackPoint[2];\n\t  this.blackPoint = blackPoint;\n\t  this.GR = gamma[0];\n\t  this.GG = gamma[1];\n\t  this.GB = gamma[2];\n\t  this.MXA = matrix[0];\n\t  this.MYA = matrix[1];\n\t  this.MZA = matrix[2];\n\t  this.MXB = matrix[3];\n\t  this.MYB = matrix[4];\n\t  this.MZB = matrix[5];\n\t  this.MXC = matrix[6];\n\t  this.MYC = matrix[7];\n\t  this.MZC = matrix[8];\n\t  if (XW < 0 || ZW < 0 || YW !== 1) {\n\t   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t  }\n\t  if (XB < 0 || YB < 0 || ZB < 0) {\n\t   info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n\t   this.blackPoint = new Float32Array(3);\n\t  }\n\t  if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n\t   info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n\t   this.GR = this.GG = this.GB = 1;\n\t  }\n\t  if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n\t   info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n\t   this.MXA = this.MYB = this.MZC = 1;\n\t   this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n\t  }\n\t }\n\t function matrixProduct(a, b, result) {\n\t  result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n\t  result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n\t }\n\t function convertToFlat(sourceWhitePoint, LMS, result) {\n\t  result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n\t  result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n\t  result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n\t }\n\t function convertToD65(sourceWhitePoint, LMS, result) {\n\t  var D65X = 0.95047;\n\t  var D65Y = 1;\n\t  var D65Z = 1.08883;\n\t  result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n\t  result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n\t  result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n\t }\n\t function sRGBTransferFunction(color) {\n\t  if (color <= 0.0031308) {\n\t   return adjustToRange(0, 1, 12.92 * color);\n\t  }\n\t  return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n\t }\n\t function adjustToRange(min, max, value) {\n\t  return Math.max(min, Math.min(max, value));\n\t }\n\t function decodeL(L) {\n\t  if (L < 0) {\n\t   return -decodeL(-L);\n\t  }\n\t  if (L > 8.0) {\n\t   return Math.pow((L + 16) / 116, 3);\n\t  }\n\t  return L * DECODE_L_CONSTANT;\n\t }\n\t function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\t  if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n\t   result[0] = XYZ_Flat[0];\n\t   result[1] = XYZ_Flat[1];\n\t   result[2] = XYZ_Flat[2];\n\t   return;\n\t  }\n\t  var zeroDecodeL = decodeL(0);\n\t  var X_DST = zeroDecodeL;\n\t  var X_SRC = decodeL(sourceBlackPoint[0]);\n\t  var Y_DST = zeroDecodeL;\n\t  var Y_SRC = decodeL(sourceBlackPoint[1]);\n\t  var Z_DST = zeroDecodeL;\n\t  var Z_SRC = decodeL(sourceBlackPoint[2]);\n\t  var X_Scale = (1 - X_DST) / (1 - X_SRC);\n\t  var X_Offset = 1 - X_Scale;\n\t  var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n\t  var Y_Offset = 1 - Y_Scale;\n\t  var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n\t  var Z_Offset = 1 - Z_Scale;\n\t  result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n\t  result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n\t  result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n\t }\n\t function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\t  if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n\t   result[0] = XYZ_In[0];\n\t   result[1] = XYZ_In[1];\n\t   result[2] = XYZ_In[2];\n\t   return;\n\t  }\n\t  var LMS = result;\n\t  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t  var LMS_Flat = tempNormalizeMatrix;\n\t  convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\t  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n\t }\n\t function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\t  var LMS = result;\n\t  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t  var LMS_D65 = tempNormalizeMatrix;\n\t  convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\t  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n\t }\n\t function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t  var A = adjustToRange(0, 1, src[srcOffset] * scale);\n\t  var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n\t  var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\t  var AGR = Math.pow(A, cs.GR);\n\t  var BGG = Math.pow(B, cs.GG);\n\t  var CGB = Math.pow(C, cs.GB);\n\t  var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n\t  var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n\t  var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\t  var XYZ = tempConvertMatrix1;\n\t  XYZ[0] = X;\n\t  XYZ[1] = Y;\n\t  XYZ[2] = Z;\n\t  var XYZ_Flat = tempConvertMatrix2;\n\t  normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\t  var XYZ_Black = tempConvertMatrix1;\n\t  compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\t  var XYZ_D65 = tempConvertMatrix2;\n\t  normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\t  var SRGB = tempConvertMatrix1;\n\t  matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\t  var sR = sRGBTransferFunction(SRGB[0]);\n\t  var sG = sRGBTransferFunction(SRGB[1]);\n\t  var sB = sRGBTransferFunction(SRGB[2]);\n\t  dest[destOffset] = Math.round(sR * 255);\n\t  dest[destOffset + 1] = Math.round(sG * 255);\n\t  dest[destOffset + 2] = Math.round(sB * 255);\n\t }\n\t CalRGBCS.prototype = {\n\t  getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n\t   var rgb = new Uint8Array(3);\n\t   this.getRgbItem(src, srcOffset, rgb, 0);\n\t   return rgb;\n\t  },\n\t  getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t  },\n\t  getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var scale = 1 / ((1 << bits) - 1);\n\t   for (var i = 0; i < count; ++i) {\n\t    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t    srcOffset += 3;\n\t    destOffset += 3 + alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength * (3 + alpha01) / 3 | 0;\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n\t   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t  },\n\t  usesZeroToOneRange: true\n\t };\n\t return CalRGBCS;\n\t}();\n\tvar LabCS = function LabCSClosure() {\n\t function LabCS(whitePoint, blackPoint, range) {\n\t  this.name = 'Lab';\n\t  this.numComps = 3;\n\t  this.defaultColor = new Float32Array(this.numComps);\n\t  if (!whitePoint) {\n\t   error('WhitePoint missing - required for color space Lab');\n\t  }\n\t  blackPoint = blackPoint || [\n\t   0,\n\t   0,\n\t   0\n\t  ];\n\t  range = range || [\n\t   -100,\n\t   100,\n\t   -100,\n\t   100\n\t  ];\n\t  this.XW = whitePoint[0];\n\t  this.YW = whitePoint[1];\n\t  this.ZW = whitePoint[2];\n\t  this.amin = range[0];\n\t  this.amax = range[1];\n\t  this.bmin = range[2];\n\t  this.bmax = range[3];\n\t  this.XB = blackPoint[0];\n\t  this.YB = blackPoint[1];\n\t  this.ZB = blackPoint[2];\n\t  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t   error('Invalid WhitePoint components, no fallback available');\n\t  }\n\t  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t   info('Invalid BlackPoint, falling back to default');\n\t   this.XB = this.YB = this.ZB = 0;\n\t  }\n\t  if (this.amin > this.amax || this.bmin > this.bmax) {\n\t   info('Invalid Range, falling back to defaults');\n\t   this.amin = -100;\n\t   this.amax = 100;\n\t   this.bmin = -100;\n\t   this.bmax = 100;\n\t  }\n\t }\n\t function fn_g(x) {\n\t  var result;\n\t  if (x >= 6 / 29) {\n\t   result = x * x * x;\n\t  } else {\n\t   result = 108 / 841 * (x - 4 / 29);\n\t  }\n\t  return result;\n\t }\n\t function decode(value, high1, low2, high2) {\n\t  return low2 + value * (high2 - low2) / high1;\n\t }\n\t function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n\t  var Ls = src[srcOffset];\n\t  var as = src[srcOffset + 1];\n\t  var bs = src[srcOffset + 2];\n\t  if (maxVal !== false) {\n\t   Ls = decode(Ls, maxVal, 0, 100);\n\t   as = decode(as, maxVal, cs.amin, cs.amax);\n\t   bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n\t  }\n\t  as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n\t  bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\t  var M = (Ls + 16) / 116;\n\t  var L = M + as / 500;\n\t  var N = M - bs / 200;\n\t  var X = cs.XW * fn_g(L);\n\t  var Y = cs.YW * fn_g(M);\n\t  var Z = cs.ZW * fn_g(N);\n\t  var r, g, b;\n\t  if (cs.ZW < 1) {\n\t   r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n\t   g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n\t   b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n\t  } else {\n\t   r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n\t   g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n\t   b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n\t  }\n\t  dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n\t  dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n\t  dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n\t }\n\t LabCS.prototype = {\n\t  getRgb: ColorSpace.prototype.getRgb,\n\t  getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t   convertToRgb(this, src, srcOffset, false, dest, destOffset);\n\t  },\n\t  getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t   var maxVal = (1 << bits) - 1;\n\t   for (var i = 0; i < count; i++) {\n\t    convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n\t    srcOffset += 3;\n\t    destOffset += 3 + alpha01;\n\t   }\n\t  },\n\t  getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n\t   return inputLength * (3 + alpha01) / 3 | 0;\n\t  },\n\t  isPassthrough: ColorSpace.prototype.isPassthrough,\n\t  fillRgb: ColorSpace.prototype.fillRgb,\n\t  isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n\t   return true;\n\t  },\n\t  usesZeroToOneRange: false\n\t };\n\t return LabCS;\n\t}();\n\texports.ColorSpace = ColorSpace;\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar ExpertEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclamsmall',\n\t 'Hungarumlautsmall',\n\t '',\n\t 'dollaroldstyle',\n\t 'dollarsuperior',\n\t 'ampersandsmall',\n\t 'Acutesmall',\n\t 'parenleftsuperior',\n\t 'parenrightsuperior',\n\t 'twodotenleader',\n\t 'onedotenleader',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'fraction',\n\t 'zerooldstyle',\n\t 'oneoldstyle',\n\t 'twooldstyle',\n\t 'threeoldstyle',\n\t 'fouroldstyle',\n\t 'fiveoldstyle',\n\t 'sixoldstyle',\n\t 'sevenoldstyle',\n\t 'eightoldstyle',\n\t 'nineoldstyle',\n\t 'colon',\n\t 'semicolon',\n\t 'commasuperior',\n\t 'threequartersemdash',\n\t 'periodsuperior',\n\t 'questionsmall',\n\t '',\n\t 'asuperior',\n\t 'bsuperior',\n\t 'centsuperior',\n\t 'dsuperior',\n\t 'esuperior',\n\t '',\n\t '',\n\t 'isuperior',\n\t '',\n\t '',\n\t 'lsuperior',\n\t 'msuperior',\n\t 'nsuperior',\n\t 'osuperior',\n\t '',\n\t '',\n\t 'rsuperior',\n\t 'ssuperior',\n\t 'tsuperior',\n\t '',\n\t 'ff',\n\t 'fi',\n\t 'fl',\n\t 'ffi',\n\t 'ffl',\n\t 'parenleftinferior',\n\t '',\n\t 'parenrightinferior',\n\t 'Circumflexsmall',\n\t 'hyphensuperior',\n\t 'Gravesmall',\n\t 'Asmall',\n\t 'Bsmall',\n\t 'Csmall',\n\t 'Dsmall',\n\t 'Esmall',\n\t 'Fsmall',\n\t 'Gsmall',\n\t 'Hsmall',\n\t 'Ismall',\n\t 'Jsmall',\n\t 'Ksmall',\n\t 'Lsmall',\n\t 'Msmall',\n\t 'Nsmall',\n\t 'Osmall',\n\t 'Psmall',\n\t 'Qsmall',\n\t 'Rsmall',\n\t 'Ssmall',\n\t 'Tsmall',\n\t 'Usmall',\n\t 'Vsmall',\n\t 'Wsmall',\n\t 'Xsmall',\n\t 'Ysmall',\n\t 'Zsmall',\n\t 'colonmonetary',\n\t 'onefitted',\n\t 'rupiah',\n\t 'Tildesmall',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'exclamdownsmall',\n\t 'centoldstyle',\n\t 'Lslashsmall',\n\t '',\n\t '',\n\t 'Scaronsmall',\n\t 'Zcaronsmall',\n\t 'Dieresissmall',\n\t 'Brevesmall',\n\t 'Caronsmall',\n\t '',\n\t 'Dotaccentsmall',\n\t '',\n\t '',\n\t 'Macronsmall',\n\t '',\n\t '',\n\t 'figuredash',\n\t 'hypheninferior',\n\t '',\n\t '',\n\t 'Ogoneksmall',\n\t 'Ringsmall',\n\t 'Cedillasmall',\n\t '',\n\t '',\n\t '',\n\t 'onequarter',\n\t 'onehalf',\n\t 'threequarters',\n\t 'questiondownsmall',\n\t 'oneeighth',\n\t 'threeeighths',\n\t 'fiveeighths',\n\t 'seveneighths',\n\t 'onethird',\n\t 'twothirds',\n\t '',\n\t '',\n\t 'zerosuperior',\n\t 'onesuperior',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'foursuperior',\n\t 'fivesuperior',\n\t 'sixsuperior',\n\t 'sevensuperior',\n\t 'eightsuperior',\n\t 'ninesuperior',\n\t 'zeroinferior',\n\t 'oneinferior',\n\t 'twoinferior',\n\t 'threeinferior',\n\t 'fourinferior',\n\t 'fiveinferior',\n\t 'sixinferior',\n\t 'seveninferior',\n\t 'eightinferior',\n\t 'nineinferior',\n\t 'centinferior',\n\t 'dollarinferior',\n\t 'periodinferior',\n\t 'commainferior',\n\t 'Agravesmall',\n\t 'Aacutesmall',\n\t 'Acircumflexsmall',\n\t 'Atildesmall',\n\t 'Adieresissmall',\n\t 'Aringsmall',\n\t 'AEsmall',\n\t 'Ccedillasmall',\n\t 'Egravesmall',\n\t 'Eacutesmall',\n\t 'Ecircumflexsmall',\n\t 'Edieresissmall',\n\t 'Igravesmall',\n\t 'Iacutesmall',\n\t 'Icircumflexsmall',\n\t 'Idieresissmall',\n\t 'Ethsmall',\n\t 'Ntildesmall',\n\t 'Ogravesmall',\n\t 'Oacutesmall',\n\t 'Ocircumflexsmall',\n\t 'Otildesmall',\n\t 'Odieresissmall',\n\t 'OEsmall',\n\t 'Oslashsmall',\n\t 'Ugravesmall',\n\t 'Uacutesmall',\n\t 'Ucircumflexsmall',\n\t 'Udieresissmall',\n\t 'Yacutesmall',\n\t 'Thornsmall',\n\t 'Ydieresissmall'\n\t];\n\tvar MacExpertEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclamsmall',\n\t 'Hungarumlautsmall',\n\t 'centoldstyle',\n\t 'dollaroldstyle',\n\t 'dollarsuperior',\n\t 'ampersandsmall',\n\t 'Acutesmall',\n\t 'parenleftsuperior',\n\t 'parenrightsuperior',\n\t 'twodotenleader',\n\t 'onedotenleader',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'fraction',\n\t 'zerooldstyle',\n\t 'oneoldstyle',\n\t 'twooldstyle',\n\t 'threeoldstyle',\n\t 'fouroldstyle',\n\t 'fiveoldstyle',\n\t 'sixoldstyle',\n\t 'sevenoldstyle',\n\t 'eightoldstyle',\n\t 'nineoldstyle',\n\t 'colon',\n\t 'semicolon',\n\t '',\n\t 'threequartersemdash',\n\t '',\n\t 'questionsmall',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'Ethsmall',\n\t '',\n\t '',\n\t 'onequarter',\n\t 'onehalf',\n\t 'threequarters',\n\t 'oneeighth',\n\t 'threeeighths',\n\t 'fiveeighths',\n\t 'seveneighths',\n\t 'onethird',\n\t 'twothirds',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'ff',\n\t 'fi',\n\t 'fl',\n\t 'ffi',\n\t 'ffl',\n\t 'parenleftinferior',\n\t '',\n\t 'parenrightinferior',\n\t 'Circumflexsmall',\n\t 'hypheninferior',\n\t 'Gravesmall',\n\t 'Asmall',\n\t 'Bsmall',\n\t 'Csmall',\n\t 'Dsmall',\n\t 'Esmall',\n\t 'Fsmall',\n\t 'Gsmall',\n\t 'Hsmall',\n\t 'Ismall',\n\t 'Jsmall',\n\t 'Ksmall',\n\t 'Lsmall',\n\t 'Msmall',\n\t 'Nsmall',\n\t 'Osmall',\n\t 'Psmall',\n\t 'Qsmall',\n\t 'Rsmall',\n\t 'Ssmall',\n\t 'Tsmall',\n\t 'Usmall',\n\t 'Vsmall',\n\t 'Wsmall',\n\t 'Xsmall',\n\t 'Ysmall',\n\t 'Zsmall',\n\t 'colonmonetary',\n\t 'onefitted',\n\t 'rupiah',\n\t 'Tildesmall',\n\t '',\n\t '',\n\t 'asuperior',\n\t 'centsuperior',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'Aacutesmall',\n\t 'Agravesmall',\n\t 'Acircumflexsmall',\n\t 'Adieresissmall',\n\t 'Atildesmall',\n\t 'Aringsmall',\n\t 'Ccedillasmall',\n\t 'Eacutesmall',\n\t 'Egravesmall',\n\t 'Ecircumflexsmall',\n\t 'Edieresissmall',\n\t 'Iacutesmall',\n\t 'Igravesmall',\n\t 'Icircumflexsmall',\n\t 'Idieresissmall',\n\t 'Ntildesmall',\n\t 'Oacutesmall',\n\t 'Ogravesmall',\n\t 'Ocircumflexsmall',\n\t 'Odieresissmall',\n\t 'Otildesmall',\n\t 'Uacutesmall',\n\t 'Ugravesmall',\n\t 'Ucircumflexsmall',\n\t 'Udieresissmall',\n\t '',\n\t 'eightsuperior',\n\t 'fourinferior',\n\t 'threeinferior',\n\t 'sixinferior',\n\t 'eightinferior',\n\t 'seveninferior',\n\t 'Scaronsmall',\n\t '',\n\t 'centinferior',\n\t 'twoinferior',\n\t '',\n\t 'Dieresissmall',\n\t '',\n\t 'Caronsmall',\n\t 'osuperior',\n\t 'fiveinferior',\n\t '',\n\t 'commainferior',\n\t 'periodinferior',\n\t 'Yacutesmall',\n\t '',\n\t 'dollarinferior',\n\t '',\n\t 'Thornsmall',\n\t '',\n\t 'nineinferior',\n\t 'zeroinferior',\n\t 'Zcaronsmall',\n\t 'AEsmall',\n\t 'Oslashsmall',\n\t 'questiondownsmall',\n\t 'oneinferior',\n\t 'Lslashsmall',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'Cedillasmall',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'OEsmall',\n\t 'figuredash',\n\t 'hyphensuperior',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'exclamdownsmall',\n\t '',\n\t 'Ydieresissmall',\n\t '',\n\t 'onesuperior',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'foursuperior',\n\t 'fivesuperior',\n\t 'sixsuperior',\n\t 'sevensuperior',\n\t 'ninesuperior',\n\t 'zerosuperior',\n\t '',\n\t 'esuperior',\n\t 'rsuperior',\n\t 'tsuperior',\n\t '',\n\t '',\n\t 'isuperior',\n\t 'ssuperior',\n\t 'dsuperior',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'lsuperior',\n\t 'Ogoneksmall',\n\t 'Brevesmall',\n\t 'Macronsmall',\n\t 'bsuperior',\n\t 'nsuperior',\n\t 'msuperior',\n\t 'commasuperior',\n\t 'periodsuperior',\n\t 'Dotaccentsmall',\n\t 'Ringsmall'\n\t];\n\tvar MacRomanEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quotesingle',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'grave',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t '',\n\t 'Adieresis',\n\t 'Aring',\n\t 'Ccedilla',\n\t 'Eacute',\n\t 'Ntilde',\n\t 'Odieresis',\n\t 'Udieresis',\n\t 'aacute',\n\t 'agrave',\n\t 'acircumflex',\n\t 'adieresis',\n\t 'atilde',\n\t 'aring',\n\t 'ccedilla',\n\t 'eacute',\n\t 'egrave',\n\t 'ecircumflex',\n\t 'edieresis',\n\t 'iacute',\n\t 'igrave',\n\t 'icircumflex',\n\t 'idieresis',\n\t 'ntilde',\n\t 'oacute',\n\t 'ograve',\n\t 'ocircumflex',\n\t 'odieresis',\n\t 'otilde',\n\t 'uacute',\n\t 'ugrave',\n\t 'ucircumflex',\n\t 'udieresis',\n\t 'dagger',\n\t 'degree',\n\t 'cent',\n\t 'sterling',\n\t 'section',\n\t 'bullet',\n\t 'paragraph',\n\t 'germandbls',\n\t 'registered',\n\t 'copyright',\n\t 'trademark',\n\t 'acute',\n\t 'dieresis',\n\t 'notequal',\n\t 'AE',\n\t 'Oslash',\n\t 'infinity',\n\t 'plusminus',\n\t 'lessequal',\n\t 'greaterequal',\n\t 'yen',\n\t 'mu',\n\t 'partialdiff',\n\t 'summation',\n\t 'product',\n\t 'pi',\n\t 'integral',\n\t 'ordfeminine',\n\t 'ordmasculine',\n\t 'Omega',\n\t 'ae',\n\t 'oslash',\n\t 'questiondown',\n\t 'exclamdown',\n\t 'logicalnot',\n\t 'radical',\n\t 'florin',\n\t 'approxequal',\n\t 'Delta',\n\t 'guillemotleft',\n\t 'guillemotright',\n\t 'ellipsis',\n\t 'space',\n\t 'Agrave',\n\t 'Atilde',\n\t 'Otilde',\n\t 'OE',\n\t 'oe',\n\t 'endash',\n\t 'emdash',\n\t 'quotedblleft',\n\t 'quotedblright',\n\t 'quoteleft',\n\t 'quoteright',\n\t 'divide',\n\t 'lozenge',\n\t 'ydieresis',\n\t 'Ydieresis',\n\t 'fraction',\n\t 'currency',\n\t 'guilsinglleft',\n\t 'guilsinglright',\n\t 'fi',\n\t 'fl',\n\t 'daggerdbl',\n\t 'periodcentered',\n\t 'quotesinglbase',\n\t 'quotedblbase',\n\t 'perthousand',\n\t 'Acircumflex',\n\t 'Ecircumflex',\n\t 'Aacute',\n\t 'Edieresis',\n\t 'Egrave',\n\t 'Iacute',\n\t 'Icircumflex',\n\t 'Idieresis',\n\t 'Igrave',\n\t 'Oacute',\n\t 'Ocircumflex',\n\t 'apple',\n\t 'Ograve',\n\t 'Uacute',\n\t 'Ucircumflex',\n\t 'Ugrave',\n\t 'dotlessi',\n\t 'circumflex',\n\t 'tilde',\n\t 'macron',\n\t 'breve',\n\t 'dotaccent',\n\t 'ring',\n\t 'cedilla',\n\t 'hungarumlaut',\n\t 'ogonek',\n\t 'caron'\n\t];\n\tvar StandardEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quoteright',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'quoteleft',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'exclamdown',\n\t 'cent',\n\t 'sterling',\n\t 'fraction',\n\t 'yen',\n\t 'florin',\n\t 'section',\n\t 'currency',\n\t 'quotesingle',\n\t 'quotedblleft',\n\t 'guillemotleft',\n\t 'guilsinglleft',\n\t 'guilsinglright',\n\t 'fi',\n\t 'fl',\n\t '',\n\t 'endash',\n\t 'dagger',\n\t 'daggerdbl',\n\t 'periodcentered',\n\t '',\n\t 'paragraph',\n\t 'bullet',\n\t 'quotesinglbase',\n\t 'quotedblbase',\n\t 'quotedblright',\n\t 'guillemotright',\n\t 'ellipsis',\n\t 'perthousand',\n\t '',\n\t 'questiondown',\n\t '',\n\t 'grave',\n\t 'acute',\n\t 'circumflex',\n\t 'tilde',\n\t 'macron',\n\t 'breve',\n\t 'dotaccent',\n\t 'dieresis',\n\t '',\n\t 'ring',\n\t 'cedilla',\n\t '',\n\t 'hungarumlaut',\n\t 'ogonek',\n\t 'caron',\n\t 'emdash',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'AE',\n\t '',\n\t 'ordfeminine',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'Lslash',\n\t 'Oslash',\n\t 'OE',\n\t 'ordmasculine',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'ae',\n\t '',\n\t '',\n\t '',\n\t 'dotlessi',\n\t '',\n\t '',\n\t 'lslash',\n\t 'oslash',\n\t 'oe',\n\t 'germandbls'\n\t];\n\tvar WinAnsiEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quotesingle',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'grave',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t 'bullet',\n\t 'Euro',\n\t 'bullet',\n\t 'quotesinglbase',\n\t 'florin',\n\t 'quotedblbase',\n\t 'ellipsis',\n\t 'dagger',\n\t 'daggerdbl',\n\t 'circumflex',\n\t 'perthousand',\n\t 'Scaron',\n\t 'guilsinglleft',\n\t 'OE',\n\t 'bullet',\n\t 'Zcaron',\n\t 'bullet',\n\t 'bullet',\n\t 'quoteleft',\n\t 'quoteright',\n\t 'quotedblleft',\n\t 'quotedblright',\n\t 'bullet',\n\t 'endash',\n\t 'emdash',\n\t 'tilde',\n\t 'trademark',\n\t 'scaron',\n\t 'guilsinglright',\n\t 'oe',\n\t 'bullet',\n\t 'zcaron',\n\t 'Ydieresis',\n\t 'space',\n\t 'exclamdown',\n\t 'cent',\n\t 'sterling',\n\t 'currency',\n\t 'yen',\n\t 'brokenbar',\n\t 'section',\n\t 'dieresis',\n\t 'copyright',\n\t 'ordfeminine',\n\t 'guillemotleft',\n\t 'logicalnot',\n\t 'hyphen',\n\t 'registered',\n\t 'macron',\n\t 'degree',\n\t 'plusminus',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'acute',\n\t 'mu',\n\t 'paragraph',\n\t 'periodcentered',\n\t 'cedilla',\n\t 'onesuperior',\n\t 'ordmasculine',\n\t 'guillemotright',\n\t 'onequarter',\n\t 'onehalf',\n\t 'threequarters',\n\t 'questiondown',\n\t 'Agrave',\n\t 'Aacute',\n\t 'Acircumflex',\n\t 'Atilde',\n\t 'Adieresis',\n\t 'Aring',\n\t 'AE',\n\t 'Ccedilla',\n\t 'Egrave',\n\t 'Eacute',\n\t 'Ecircumflex',\n\t 'Edieresis',\n\t 'Igrave',\n\t 'Iacute',\n\t 'Icircumflex',\n\t 'Idieresis',\n\t 'Eth',\n\t 'Ntilde',\n\t 'Ograve',\n\t 'Oacute',\n\t 'Ocircumflex',\n\t 'Otilde',\n\t 'Odieresis',\n\t 'multiply',\n\t 'Oslash',\n\t 'Ugrave',\n\t 'Uacute',\n\t 'Ucircumflex',\n\t 'Udieresis',\n\t 'Yacute',\n\t 'Thorn',\n\t 'germandbls',\n\t 'agrave',\n\t 'aacute',\n\t 'acircumflex',\n\t 'atilde',\n\t 'adieresis',\n\t 'aring',\n\t 'ae',\n\t 'ccedilla',\n\t 'egrave',\n\t 'eacute',\n\t 'ecircumflex',\n\t 'edieresis',\n\t 'igrave',\n\t 'iacute',\n\t 'icircumflex',\n\t 'idieresis',\n\t 'eth',\n\t 'ntilde',\n\t 'ograve',\n\t 'oacute',\n\t 'ocircumflex',\n\t 'otilde',\n\t 'odieresis',\n\t 'divide',\n\t 'oslash',\n\t 'ugrave',\n\t 'uacute',\n\t 'ucircumflex',\n\t 'udieresis',\n\t 'yacute',\n\t 'thorn',\n\t 'ydieresis'\n\t];\n\tvar SymbolSetEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'exclam',\n\t 'universal',\n\t 'numbersign',\n\t 'existential',\n\t 'percent',\n\t 'ampersand',\n\t 'suchthat',\n\t 'parenleft',\n\t 'parenright',\n\t 'asteriskmath',\n\t 'plus',\n\t 'comma',\n\t 'minus',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'congruent',\n\t 'Alpha',\n\t 'Beta',\n\t 'Chi',\n\t 'Delta',\n\t 'Epsilon',\n\t 'Phi',\n\t 'Gamma',\n\t 'Eta',\n\t 'Iota',\n\t 'theta1',\n\t 'Kappa',\n\t 'Lambda',\n\t 'Mu',\n\t 'Nu',\n\t 'Omicron',\n\t 'Pi',\n\t 'Theta',\n\t 'Rho',\n\t 'Sigma',\n\t 'Tau',\n\t 'Upsilon',\n\t 'sigma1',\n\t 'Omega',\n\t 'Xi',\n\t 'Psi',\n\t 'Zeta',\n\t 'bracketleft',\n\t 'therefore',\n\t 'bracketright',\n\t 'perpendicular',\n\t 'underscore',\n\t 'radicalex',\n\t 'alpha',\n\t 'beta',\n\t 'chi',\n\t 'delta',\n\t 'epsilon',\n\t 'phi',\n\t 'gamma',\n\t 'eta',\n\t 'iota',\n\t 'phi1',\n\t 'kappa',\n\t 'lambda',\n\t 'mu',\n\t 'nu',\n\t 'omicron',\n\t 'pi',\n\t 'theta',\n\t 'rho',\n\t 'sigma',\n\t 'tau',\n\t 'upsilon',\n\t 'omega1',\n\t 'omega',\n\t 'xi',\n\t 'psi',\n\t 'zeta',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'similar',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'Euro',\n\t 'Upsilon1',\n\t 'minute',\n\t 'lessequal',\n\t 'fraction',\n\t 'infinity',\n\t 'florin',\n\t 'club',\n\t 'diamond',\n\t 'heart',\n\t 'spade',\n\t 'arrowboth',\n\t 'arrowleft',\n\t 'arrowup',\n\t 'arrowright',\n\t 'arrowdown',\n\t 'degree',\n\t 'plusminus',\n\t 'second',\n\t 'greaterequal',\n\t 'multiply',\n\t 'proportional',\n\t 'partialdiff',\n\t 'bullet',\n\t 'divide',\n\t 'notequal',\n\t 'equivalence',\n\t 'approxequal',\n\t 'ellipsis',\n\t 'arrowvertex',\n\t 'arrowhorizex',\n\t 'carriagereturn',\n\t 'aleph',\n\t 'Ifraktur',\n\t 'Rfraktur',\n\t 'weierstrass',\n\t 'circlemultiply',\n\t 'circleplus',\n\t 'emptyset',\n\t 'intersection',\n\t 'union',\n\t 'propersuperset',\n\t 'reflexsuperset',\n\t 'notsubset',\n\t 'propersubset',\n\t 'reflexsubset',\n\t 'element',\n\t 'notelement',\n\t 'angle',\n\t 'gradient',\n\t 'registerserif',\n\t 'copyrightserif',\n\t 'trademarkserif',\n\t 'product',\n\t 'radical',\n\t 'dotmath',\n\t 'logicalnot',\n\t 'logicaland',\n\t 'logicalor',\n\t 'arrowdblboth',\n\t 'arrowdblleft',\n\t 'arrowdblup',\n\t 'arrowdblright',\n\t 'arrowdbldown',\n\t 'lozenge',\n\t 'angleleft',\n\t 'registersans',\n\t 'copyrightsans',\n\t 'trademarksans',\n\t 'summation',\n\t 'parenlefttp',\n\t 'parenleftex',\n\t 'parenleftbt',\n\t 'bracketlefttp',\n\t 'bracketleftex',\n\t 'bracketleftbt',\n\t 'bracelefttp',\n\t 'braceleftmid',\n\t 'braceleftbt',\n\t 'braceex',\n\t '',\n\t 'angleright',\n\t 'integral',\n\t 'integraltp',\n\t 'integralex',\n\t 'integralbt',\n\t 'parenrighttp',\n\t 'parenrightex',\n\t 'parenrightbt',\n\t 'bracketrighttp',\n\t 'bracketrightex',\n\t 'bracketrightbt',\n\t 'bracerighttp',\n\t 'bracerightmid',\n\t 'bracerightbt'\n\t];\n\tvar ZapfDingbatsEncoding = [\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'space',\n\t 'a1',\n\t 'a2',\n\t 'a202',\n\t 'a3',\n\t 'a4',\n\t 'a5',\n\t 'a119',\n\t 'a118',\n\t 'a117',\n\t 'a11',\n\t 'a12',\n\t 'a13',\n\t 'a14',\n\t 'a15',\n\t 'a16',\n\t 'a105',\n\t 'a17',\n\t 'a18',\n\t 'a19',\n\t 'a20',\n\t 'a21',\n\t 'a22',\n\t 'a23',\n\t 'a24',\n\t 'a25',\n\t 'a26',\n\t 'a27',\n\t 'a28',\n\t 'a6',\n\t 'a7',\n\t 'a8',\n\t 'a9',\n\t 'a10',\n\t 'a29',\n\t 'a30',\n\t 'a31',\n\t 'a32',\n\t 'a33',\n\t 'a34',\n\t 'a35',\n\t 'a36',\n\t 'a37',\n\t 'a38',\n\t 'a39',\n\t 'a40',\n\t 'a41',\n\t 'a42',\n\t 'a43',\n\t 'a44',\n\t 'a45',\n\t 'a46',\n\t 'a47',\n\t 'a48',\n\t 'a49',\n\t 'a50',\n\t 'a51',\n\t 'a52',\n\t 'a53',\n\t 'a54',\n\t 'a55',\n\t 'a56',\n\t 'a57',\n\t 'a58',\n\t 'a59',\n\t 'a60',\n\t 'a61',\n\t 'a62',\n\t 'a63',\n\t 'a64',\n\t 'a65',\n\t 'a66',\n\t 'a67',\n\t 'a68',\n\t 'a69',\n\t 'a70',\n\t 'a71',\n\t 'a72',\n\t 'a73',\n\t 'a74',\n\t 'a203',\n\t 'a75',\n\t 'a204',\n\t 'a76',\n\t 'a77',\n\t 'a78',\n\t 'a79',\n\t 'a81',\n\t 'a82',\n\t 'a83',\n\t 'a84',\n\t 'a97',\n\t 'a98',\n\t 'a99',\n\t 'a100',\n\t '',\n\t 'a89',\n\t 'a90',\n\t 'a93',\n\t 'a94',\n\t 'a91',\n\t 'a92',\n\t 'a205',\n\t 'a85',\n\t 'a206',\n\t 'a86',\n\t 'a87',\n\t 'a88',\n\t 'a95',\n\t 'a96',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t '',\n\t 'a101',\n\t 'a102',\n\t 'a103',\n\t 'a104',\n\t 'a106',\n\t 'a107',\n\t 'a108',\n\t 'a112',\n\t 'a111',\n\t 'a110',\n\t 'a109',\n\t 'a120',\n\t 'a121',\n\t 'a122',\n\t 'a123',\n\t 'a124',\n\t 'a125',\n\t 'a126',\n\t 'a127',\n\t 'a128',\n\t 'a129',\n\t 'a130',\n\t 'a131',\n\t 'a132',\n\t 'a133',\n\t 'a134',\n\t 'a135',\n\t 'a136',\n\t 'a137',\n\t 'a138',\n\t 'a139',\n\t 'a140',\n\t 'a141',\n\t 'a142',\n\t 'a143',\n\t 'a144',\n\t 'a145',\n\t 'a146',\n\t 'a147',\n\t 'a148',\n\t 'a149',\n\t 'a150',\n\t 'a151',\n\t 'a152',\n\t 'a153',\n\t 'a154',\n\t 'a155',\n\t 'a156',\n\t 'a157',\n\t 'a158',\n\t 'a159',\n\t 'a160',\n\t 'a161',\n\t 'a163',\n\t 'a164',\n\t 'a196',\n\t 'a165',\n\t 'a192',\n\t 'a166',\n\t 'a167',\n\t 'a168',\n\t 'a169',\n\t 'a170',\n\t 'a171',\n\t 'a172',\n\t 'a173',\n\t 'a162',\n\t 'a174',\n\t 'a175',\n\t 'a176',\n\t 'a177',\n\t 'a178',\n\t 'a179',\n\t 'a193',\n\t 'a180',\n\t 'a199',\n\t 'a181',\n\t 'a200',\n\t 'a182',\n\t '',\n\t 'a201',\n\t 'a183',\n\t 'a184',\n\t 'a197',\n\t 'a185',\n\t 'a194',\n\t 'a198',\n\t 'a186',\n\t 'a195',\n\t 'a187',\n\t 'a188',\n\t 'a189',\n\t 'a190',\n\t 'a191'\n\t];\n\tfunction getEncoding(encodingName) {\n\t switch (encodingName) {\n\t case 'WinAnsiEncoding':\n\t  return WinAnsiEncoding;\n\t case 'StandardEncoding':\n\t  return StandardEncoding;\n\t case 'MacRomanEncoding':\n\t  return MacRomanEncoding;\n\t case 'SymbolSetEncoding':\n\t  return SymbolSetEncoding;\n\t case 'ZapfDingbatsEncoding':\n\t  return ZapfDingbatsEncoding;\n\t case 'ExpertEncoding':\n\t  return ExpertEncoding;\n\t case 'MacExpertEncoding':\n\t  return MacExpertEncoding;\n\t default:\n\t  return null;\n\t }\n\t}\n\texports.WinAnsiEncoding = WinAnsiEncoding;\n\texports.StandardEncoding = StandardEncoding;\n\texports.MacRomanEncoding = MacRomanEncoding;\n\texports.SymbolSetEncoding = SymbolSetEncoding;\n\texports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\texports.ExpertEncoding = ExpertEncoding;\n\texports.getEncoding = getEncoding;\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar StreamType = sharedUtil.StreamType;\n\tvar assert = sharedUtil.assert;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isInt = sharedUtil.isInt;\n\tvar isNum = sharedUtil.isNum;\n\tvar isString = sharedUtil.isString;\n\tvar warn = sharedUtil.warn;\n\tvar EOF = corePrimitives.EOF;\n\tvar Cmd = corePrimitives.Cmd;\n\tvar Dict = corePrimitives.Dict;\n\tvar Name = corePrimitives.Name;\n\tvar Ref = corePrimitives.Ref;\n\tvar isEOF = corePrimitives.isEOF;\n\tvar isCmd = corePrimitives.isCmd;\n\tvar isDict = corePrimitives.isDict;\n\tvar isName = corePrimitives.isName;\n\tvar Ascii85Stream = coreStream.Ascii85Stream;\n\tvar AsciiHexStream = coreStream.AsciiHexStream;\n\tvar CCITTFaxStream = coreStream.CCITTFaxStream;\n\tvar FlateStream = coreStream.FlateStream;\n\tvar Jbig2Stream = coreStream.Jbig2Stream;\n\tvar JpegStream = coreStream.JpegStream;\n\tvar JpxStream = coreStream.JpxStream;\n\tvar LZWStream = coreStream.LZWStream;\n\tvar NullStream = coreStream.NullStream;\n\tvar PredictorStream = coreStream.PredictorStream;\n\tvar RunLengthStream = coreStream.RunLengthStream;\n\tvar MAX_LENGTH_TO_CACHE = 1000;\n\tvar Parser = function ParserClosure() {\n\t function Parser(lexer, allowStreams, xref, recoveryMode) {\n\t  this.lexer = lexer;\n\t  this.allowStreams = allowStreams;\n\t  this.xref = xref;\n\t  this.recoveryMode = recoveryMode || false;\n\t  this.imageCache = Object.create(null);\n\t  this.refill();\n\t }\n\t Parser.prototype = {\n\t  refill: function Parser_refill() {\n\t   this.buf1 = this.lexer.getObj();\n\t   this.buf2 = this.lexer.getObj();\n\t  },\n\t  shift: function Parser_shift() {\n\t   if (isCmd(this.buf2, 'ID')) {\n\t    this.buf1 = this.buf2;\n\t    this.buf2 = null;\n\t   } else {\n\t    this.buf1 = this.buf2;\n\t    this.buf2 = this.lexer.getObj();\n\t   }\n\t  },\n\t  tryShift: function Parser_tryShift() {\n\t   try {\n\t    this.shift();\n\t    return true;\n\t   } catch (e) {\n\t    if (e instanceof MissingDataException) {\n\t     throw e;\n\t    }\n\t    return false;\n\t   }\n\t  },\n\t  getObj: function Parser_getObj(cipherTransform) {\n\t   var buf1 = this.buf1;\n\t   this.shift();\n\t   if (buf1 instanceof Cmd) {\n\t    switch (buf1.cmd) {\n\t    case 'BI':\n\t     return this.makeInlineImage(cipherTransform);\n\t    case '[':\n\t     var array = [];\n\t     while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n\t      array.push(this.getObj(cipherTransform));\n\t     }\n\t     if (isEOF(this.buf1)) {\n\t      if (!this.recoveryMode) {\n\t       error('End of file inside array');\n\t      }\n\t      return array;\n\t     }\n\t     this.shift();\n\t     return array;\n\t    case '<<':\n\t     var dict = new Dict(this.xref);\n\t     while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n\t      if (!isName(this.buf1)) {\n\t       info('Malformed dictionary: key must be a name object');\n\t       this.shift();\n\t       continue;\n\t      }\n\t      var key = this.buf1.name;\n\t      this.shift();\n\t      if (isEOF(this.buf1)) {\n\t       break;\n\t      }\n\t      dict.set(key, this.getObj(cipherTransform));\n\t     }\n\t     if (isEOF(this.buf1)) {\n\t      if (!this.recoveryMode) {\n\t       error('End of file inside dictionary');\n\t      }\n\t      return dict;\n\t     }\n\t     if (isCmd(this.buf2, 'stream')) {\n\t      return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n\t     }\n\t     this.shift();\n\t     return dict;\n\t    default:\n\t     return buf1;\n\t    }\n\t   }\n\t   if (isInt(buf1)) {\n\t    var num = buf1;\n\t    if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n\t     var ref = new Ref(num, this.buf1);\n\t     this.shift();\n\t     this.shift();\n\t     return ref;\n\t    }\n\t    return num;\n\t   }\n\t   if (isString(buf1)) {\n\t    var str = buf1;\n\t    if (cipherTransform) {\n\t     str = cipherTransform.decryptString(str);\n\t    }\n\t    return str;\n\t   }\n\t   return buf1;\n\t  },\n\t  findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n\t   var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n\t   var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n\t   while ((ch = stream.getByte()) !== -1) {\n\t    if (state === 0) {\n\t     state = ch === E ? 1 : 0;\n\t    } else if (state === 1) {\n\t     state = ch === I ? 2 : 0;\n\t    } else {\n\t     assert(state === 2);\n\t     if (ch === SPACE || ch === LF || ch === CR) {\n\t      n = 5;\n\t      followingBytes = stream.peekBytes(n);\n\t      for (i = 0; i < n; i++) {\n\t       ch = followingBytes[i];\n\t       if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n\t        state = 0;\n\t        break;\n\t       }\n\t      }\n\t      if (state === 2) {\n\t       break;\n\t      }\n\t     } else {\n\t      state = 0;\n\t     }\n\t    }\n\t   }\n\t   return stream.pos - 4 - startPos;\n\t  },\n\t  findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n\t   var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n\t   while ((b = stream.getByte()) !== -1) {\n\t    if (b !== 0xFF) {\n\t     continue;\n\t    }\n\t    switch (stream.getByte()) {\n\t    case 0x00:\n\t     break;\n\t    case 0xFF:\n\t     stream.skip(-1);\n\t     break;\n\t    case 0xD9:\n\t     foundEOI = true;\n\t     break;\n\t    case 0xC0:\n\t    case 0xC1:\n\t    case 0xC2:\n\t    case 0xC3:\n\t    case 0xC5:\n\t    case 0xC6:\n\t    case 0xC7:\n\t    case 0xC9:\n\t    case 0xCA:\n\t    case 0xCB:\n\t    case 0xCD:\n\t    case 0xCE:\n\t    case 0xCF:\n\t    case 0xC4:\n\t    case 0xCC:\n\t    case 0xDA:\n\t    case 0xDB:\n\t    case 0xDC:\n\t    case 0xDD:\n\t    case 0xDE:\n\t    case 0xDF:\n\t    case 0xE0:\n\t    case 0xE1:\n\t    case 0xE2:\n\t    case 0xE3:\n\t    case 0xE4:\n\t    case 0xE5:\n\t    case 0xE6:\n\t    case 0xE7:\n\t    case 0xE8:\n\t    case 0xE9:\n\t    case 0xEA:\n\t    case 0xEB:\n\t    case 0xEC:\n\t    case 0xED:\n\t    case 0xEE:\n\t    case 0xEF:\n\t    case 0xFE:\n\t     markerLength = stream.getUint16();\n\t     if (markerLength > 2) {\n\t      stream.skip(markerLength - 2);\n\t     } else {\n\t      stream.skip(-2);\n\t     }\n\t     break;\n\t    }\n\t    if (foundEOI) {\n\t     break;\n\t    }\n\t   }\n\t   length = stream.pos - startPos;\n\t   if (b === -1) {\n\t    warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n\t    stream.skip(-length);\n\t    return this.findDefaultInlineStreamEnd(stream);\n\t   }\n\t   this.inlineStreamSkipEI(stream);\n\t   return length;\n\t  },\n\t  findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n\t   var TILDE = 0x7E, GT = 0x3E;\n\t   var startPos = stream.pos, ch, length;\n\t   while ((ch = stream.getByte()) !== -1) {\n\t    if (ch === TILDE && stream.peekByte() === GT) {\n\t     stream.skip();\n\t     break;\n\t    }\n\t   }\n\t   length = stream.pos - startPos;\n\t   if (ch === -1) {\n\t    warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t    stream.skip(-length);\n\t    return this.findDefaultInlineStreamEnd(stream);\n\t   }\n\t   this.inlineStreamSkipEI(stream);\n\t   return length;\n\t  },\n\t  findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n\t   var GT = 0x3E;\n\t   var startPos = stream.pos, ch, length;\n\t   while ((ch = stream.getByte()) !== -1) {\n\t    if (ch === GT) {\n\t     break;\n\t    }\n\t   }\n\t   length = stream.pos - startPos;\n\t   if (ch === -1) {\n\t    warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t    stream.skip(-length);\n\t    return this.findDefaultInlineStreamEnd(stream);\n\t   }\n\t   this.inlineStreamSkipEI(stream);\n\t   return length;\n\t  },\n\t  inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n\t   var E = 0x45, I = 0x49;\n\t   var state = 0, ch;\n\t   while ((ch = stream.getByte()) !== -1) {\n\t    if (state === 0) {\n\t     state = ch === E ? 1 : 0;\n\t    } else if (state === 1) {\n\t     state = ch === I ? 2 : 0;\n\t    } else if (state === 2) {\n\t     break;\n\t    }\n\t   }\n\t  },\n\t  makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n\t   var lexer = this.lexer;\n\t   var stream = lexer.stream;\n\t   var dict = new Dict(this.xref);\n\t   while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n\t    if (!isName(this.buf1)) {\n\t     error('Dictionary key must be a name object');\n\t    }\n\t    var key = this.buf1.name;\n\t    this.shift();\n\t    if (isEOF(this.buf1)) {\n\t     break;\n\t    }\n\t    dict.set(key, this.getObj(cipherTransform));\n\t   }\n\t   var filter = dict.get('Filter', 'F'), filterName;\n\t   if (isName(filter)) {\n\t    filterName = filter.name;\n\t   } else if (isArray(filter)) {\n\t    var filterZero = this.xref.fetchIfRef(filter[0]);\n\t    if (isName(filterZero)) {\n\t     filterName = filterZero.name;\n\t    }\n\t   }\n\t   var startPos = stream.pos, length, i, ii;\n\t   if (filterName === 'DCTDecode' || filterName === 'DCT') {\n\t    length = this.findDCTDecodeInlineStreamEnd(stream);\n\t   } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n\t    length = this.findASCII85DecodeInlineStreamEnd(stream);\n\t   } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n\t    length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n\t   } else {\n\t    length = this.findDefaultInlineStreamEnd(stream);\n\t   }\n\t   var imageStream = stream.makeSubStream(startPos, length, dict);\n\t   var adler32;\n\t   if (length < MAX_LENGTH_TO_CACHE) {\n\t    var imageBytes = imageStream.getBytes();\n\t    imageStream.reset();\n\t    var a = 1;\n\t    var b = 0;\n\t    for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n\t     a += imageBytes[i] & 0xff;\n\t     b += a;\n\t    }\n\t    adler32 = b % 65521 << 16 | a % 65521;\n\t    if (this.imageCache.adler32 === adler32) {\n\t     this.buf2 = Cmd.get('EI');\n\t     this.shift();\n\t     this.imageCache[adler32].reset();\n\t     return this.imageCache[adler32];\n\t    }\n\t   }\n\t   if (cipherTransform) {\n\t    imageStream = cipherTransform.createStream(imageStream, length);\n\t   }\n\t   imageStream = this.filter(imageStream, dict, length);\n\t   imageStream.dict = dict;\n\t   if (adler32 !== undefined) {\n\t    imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n\t    this.imageCache[adler32] = imageStream;\n\t   }\n\t   this.buf2 = Cmd.get('EI');\n\t   this.shift();\n\t   return imageStream;\n\t  },\n\t  makeStream: function Parser_makeStream(dict, cipherTransform) {\n\t   var lexer = this.lexer;\n\t   var stream = lexer.stream;\n\t   lexer.skipToNextLine();\n\t   var pos = stream.pos - 1;\n\t   var length = dict.get('Length');\n\t   if (!isInt(length)) {\n\t    info('Bad ' + length + ' attribute in stream');\n\t    length = 0;\n\t   }\n\t   stream.pos = pos + length;\n\t   lexer.nextChar();\n\t   if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n\t    this.shift();\n\t   } else {\n\t    stream.pos = pos;\n\t    var SCAN_BLOCK_SIZE = 2048;\n\t    var ENDSTREAM_SIGNATURE_LENGTH = 9;\n\t    var ENDSTREAM_SIGNATURE = [\n\t     0x65,\n\t     0x6E,\n\t     0x64,\n\t     0x73,\n\t     0x74,\n\t     0x72,\n\t     0x65,\n\t     0x61,\n\t     0x6D\n\t    ];\n\t    var skipped = 0, found = false, i, j;\n\t    while (stream.pos < stream.end) {\n\t     var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n\t     var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n\t     if (scanLength <= 0) {\n\t      break;\n\t     }\n\t     found = false;\n\t     i = 0;\n\t     while (i < scanLength) {\n\t      j = 0;\n\t      while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n\t       j++;\n\t      }\n\t      if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n\t       found = true;\n\t       break;\n\t      }\n\t      i++;\n\t     }\n\t     if (found) {\n\t      skipped += i;\n\t      stream.pos += i;\n\t      break;\n\t     }\n\t     skipped += scanLength;\n\t     stream.pos += scanLength;\n\t    }\n\t    if (!found) {\n\t     error('Missing endstream');\n\t    }\n\t    length = skipped;\n\t    lexer.nextChar();\n\t    this.shift();\n\t    this.shift();\n\t   }\n\t   this.shift();\n\t   stream = stream.makeSubStream(pos, length, dict);\n\t   if (cipherTransform) {\n\t    stream = cipherTransform.createStream(stream, length);\n\t   }\n\t   stream = this.filter(stream, dict, length);\n\t   stream.dict = dict;\n\t   return stream;\n\t  },\n\t  filter: function Parser_filter(stream, dict, length) {\n\t   var filter = dict.get('Filter', 'F');\n\t   var params = dict.get('DecodeParms', 'DP');\n\t   if (isName(filter)) {\n\t    if (isArray(params)) {\n\t     params = this.xref.fetchIfRef(params[0]);\n\t    }\n\t    return this.makeFilter(stream, filter.name, length, params);\n\t   }\n\t   var maybeLength = length;\n\t   if (isArray(filter)) {\n\t    var filterArray = filter;\n\t    var paramsArray = params;\n\t    for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n\t     filter = this.xref.fetchIfRef(filterArray[i]);\n\t     if (!isName(filter)) {\n\t      error('Bad filter name: ' + filter);\n\t     }\n\t     params = null;\n\t     if (isArray(paramsArray) && i in paramsArray) {\n\t      params = this.xref.fetchIfRef(paramsArray[i]);\n\t     }\n\t     stream = this.makeFilter(stream, filter.name, maybeLength, params);\n\t     maybeLength = null;\n\t    }\n\t   }\n\t   return stream;\n\t  },\n\t  makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n\t   if (maybeLength === 0) {\n\t    warn('Empty \"' + name + '\" stream.');\n\t    return new NullStream(stream);\n\t   }\n\t   try {\n\t    var xrefStreamStats = this.xref.stats.streamTypes;\n\t    if (name === 'FlateDecode' || name === 'Fl') {\n\t     xrefStreamStats[StreamType.FLATE] = true;\n\t     if (params) {\n\t      return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n\t     }\n\t     return new FlateStream(stream, maybeLength);\n\t    }\n\t    if (name === 'LZWDecode' || name === 'LZW') {\n\t     xrefStreamStats[StreamType.LZW] = true;\n\t     var earlyChange = 1;\n\t     if (params) {\n\t      if (params.has('EarlyChange')) {\n\t       earlyChange = params.get('EarlyChange');\n\t      }\n\t      return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n\t     }\n\t     return new LZWStream(stream, maybeLength, earlyChange);\n\t    }\n\t    if (name === 'DCTDecode' || name === 'DCT') {\n\t     xrefStreamStats[StreamType.DCT] = true;\n\t     return new JpegStream(stream, maybeLength, stream.dict, params);\n\t    }\n\t    if (name === 'JPXDecode' || name === 'JPX') {\n\t     xrefStreamStats[StreamType.JPX] = true;\n\t     return new JpxStream(stream, maybeLength, stream.dict, params);\n\t    }\n\t    if (name === 'ASCII85Decode' || name === 'A85') {\n\t     xrefStreamStats[StreamType.A85] = true;\n\t     return new Ascii85Stream(stream, maybeLength);\n\t    }\n\t    if (name === 'ASCIIHexDecode' || name === 'AHx') {\n\t     xrefStreamStats[StreamType.AHX] = true;\n\t     return new AsciiHexStream(stream, maybeLength);\n\t    }\n\t    if (name === 'CCITTFaxDecode' || name === 'CCF') {\n\t     xrefStreamStats[StreamType.CCF] = true;\n\t     return new CCITTFaxStream(stream, maybeLength, params);\n\t    }\n\t    if (name === 'RunLengthDecode' || name === 'RL') {\n\t     xrefStreamStats[StreamType.RL] = true;\n\t     return new RunLengthStream(stream, maybeLength);\n\t    }\n\t    if (name === 'JBIG2Decode') {\n\t     xrefStreamStats[StreamType.JBIG] = true;\n\t     return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n\t    }\n\t    warn('filter \"' + name + '\" not supported yet');\n\t    return stream;\n\t   } catch (ex) {\n\t    if (ex instanceof MissingDataException) {\n\t     throw ex;\n\t    }\n\t    warn('Invalid stream: \\\"' + ex + '\\\"');\n\t    return new NullStream(stream);\n\t   }\n\t  }\n\t };\n\t return Parser;\n\t}();\n\tvar Lexer = function LexerClosure() {\n\t function Lexer(stream, knownCommands) {\n\t  this.stream = stream;\n\t  this.nextChar();\n\t  this.strBuf = [];\n\t  this.knownCommands = knownCommands;\n\t }\n\t var specialChars = [\n\t  1,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  1,\n\t  1,\n\t  0,\n\t  1,\n\t  1,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  1,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  2,\n\t  0,\n\t  0,\n\t  2,\n\t  2,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  2,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  2,\n\t  0,\n\t  2,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  2,\n\t  0,\n\t  2,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  2,\n\t  0,\n\t  2,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0,\n\t  0\n\t ];\n\t function toHexDigit(ch) {\n\t  if (ch >= 0x30 && ch <= 0x39) {\n\t   return ch & 0x0F;\n\t  }\n\t  if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t   return (ch & 0x0F) + 9;\n\t  }\n\t  return -1;\n\t }\n\t Lexer.prototype = {\n\t  nextChar: function Lexer_nextChar() {\n\t   return this.currentChar = this.stream.getByte();\n\t  },\n\t  peekChar: function Lexer_peekChar() {\n\t   return this.stream.peekByte();\n\t  },\n\t  getNumber: function Lexer_getNumber() {\n\t   var ch = this.currentChar;\n\t   var eNotation = false;\n\t   var divideBy = 0;\n\t   var sign = 1;\n\t   if (ch === 0x2D) {\n\t    sign = -1;\n\t    ch = this.nextChar();\n\t    if (ch === 0x2D) {\n\t     ch = this.nextChar();\n\t    }\n\t   } else if (ch === 0x2B) {\n\t    ch = this.nextChar();\n\t   }\n\t   if (ch === 0x2E) {\n\t    divideBy = 10;\n\t    ch = this.nextChar();\n\t   }\n\t   if (ch < 0x30 || ch > 0x39) {\n\t    error('Invalid number: ' + String.fromCharCode(ch));\n\t    return 0;\n\t   }\n\t   var baseValue = ch - 0x30;\n\t   var powerValue = 0;\n\t   var powerValueSign = 1;\n\t   while ((ch = this.nextChar()) >= 0) {\n\t    if (0x30 <= ch && ch <= 0x39) {\n\t     var currentDigit = ch - 0x30;\n\t     if (eNotation) {\n\t      powerValue = powerValue * 10 + currentDigit;\n\t     } else {\n\t      if (divideBy !== 0) {\n\t       divideBy *= 10;\n\t      }\n\t      baseValue = baseValue * 10 + currentDigit;\n\t     }\n\t    } else if (ch === 0x2E) {\n\t     if (divideBy === 0) {\n\t      divideBy = 1;\n\t     } else {\n\t      break;\n\t     }\n\t    } else if (ch === 0x2D) {\n\t     warn('Badly formatted number');\n\t    } else if (ch === 0x45 || ch === 0x65) {\n\t     ch = this.peekChar();\n\t     if (ch === 0x2B || ch === 0x2D) {\n\t      powerValueSign = ch === 0x2D ? -1 : 1;\n\t      this.nextChar();\n\t     } else if (ch < 0x30 || ch > 0x39) {\n\t      break;\n\t     }\n\t     eNotation = true;\n\t    } else {\n\t     break;\n\t    }\n\t   }\n\t   if (divideBy !== 0) {\n\t    baseValue /= divideBy;\n\t   }\n\t   if (eNotation) {\n\t    baseValue *= Math.pow(10, powerValueSign * powerValue);\n\t   }\n\t   return sign * baseValue;\n\t  },\n\t  getString: function Lexer_getString() {\n\t   var numParen = 1;\n\t   var done = false;\n\t   var strBuf = this.strBuf;\n\t   strBuf.length = 0;\n\t   var ch = this.nextChar();\n\t   while (true) {\n\t    var charBuffered = false;\n\t    switch (ch | 0) {\n\t    case -1:\n\t     warn('Unterminated string');\n\t     done = true;\n\t     break;\n\t    case 0x28:\n\t     ++numParen;\n\t     strBuf.push('(');\n\t     break;\n\t    case 0x29:\n\t     if (--numParen === 0) {\n\t      this.nextChar();\n\t      done = true;\n\t     } else {\n\t      strBuf.push(')');\n\t     }\n\t     break;\n\t    case 0x5C:\n\t     ch = this.nextChar();\n\t     switch (ch) {\n\t     case -1:\n\t      warn('Unterminated string');\n\t      done = true;\n\t      break;\n\t     case 0x6E:\n\t      strBuf.push('\\n');\n\t      break;\n\t     case 0x72:\n\t      strBuf.push('\\r');\n\t      break;\n\t     case 0x74:\n\t      strBuf.push('\\t');\n\t      break;\n\t     case 0x62:\n\t      strBuf.push('\\b');\n\t      break;\n\t     case 0x66:\n\t      strBuf.push('\\f');\n\t      break;\n\t     case 0x5C:\n\t     case 0x28:\n\t     case 0x29:\n\t      strBuf.push(String.fromCharCode(ch));\n\t      break;\n\t     case 0x30:\n\t     case 0x31:\n\t     case 0x32:\n\t     case 0x33:\n\t     case 0x34:\n\t     case 0x35:\n\t     case 0x36:\n\t     case 0x37:\n\t      var x = ch & 0x0F;\n\t      ch = this.nextChar();\n\t      charBuffered = true;\n\t      if (ch >= 0x30 && ch <= 0x37) {\n\t       x = (x << 3) + (ch & 0x0F);\n\t       ch = this.nextChar();\n\t       if (ch >= 0x30 && ch <= 0x37) {\n\t        charBuffered = false;\n\t        x = (x << 3) + (ch & 0x0F);\n\t       }\n\t      }\n\t      strBuf.push(String.fromCharCode(x));\n\t      break;\n\t     case 0x0D:\n\t      if (this.peekChar() === 0x0A) {\n\t       this.nextChar();\n\t      }\n\t      break;\n\t     case 0x0A:\n\t      break;\n\t     default:\n\t      strBuf.push(String.fromCharCode(ch));\n\t      break;\n\t     }\n\t     break;\n\t    default:\n\t     strBuf.push(String.fromCharCode(ch));\n\t     break;\n\t    }\n\t    if (done) {\n\t     break;\n\t    }\n\t    if (!charBuffered) {\n\t     ch = this.nextChar();\n\t    }\n\t   }\n\t   return strBuf.join('');\n\t  },\n\t  getName: function Lexer_getName() {\n\t   var ch, previousCh;\n\t   var strBuf = this.strBuf;\n\t   strBuf.length = 0;\n\t   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t    if (ch === 0x23) {\n\t     ch = this.nextChar();\n\t     if (specialChars[ch]) {\n\t      warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n\t      strBuf.push('#');\n\t      break;\n\t     }\n\t     var x = toHexDigit(ch);\n\t     if (x !== -1) {\n\t      previousCh = ch;\n\t      ch = this.nextChar();\n\t      var x2 = toHexDigit(ch);\n\t      if (x2 === -1) {\n\t       warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n\t       strBuf.push('#', String.fromCharCode(previousCh));\n\t       if (specialChars[ch]) {\n\t        break;\n\t       }\n\t       strBuf.push(String.fromCharCode(ch));\n\t       continue;\n\t      }\n\t      strBuf.push(String.fromCharCode(x << 4 | x2));\n\t     } else {\n\t      strBuf.push('#', String.fromCharCode(ch));\n\t     }\n\t    } else {\n\t     strBuf.push(String.fromCharCode(ch));\n\t    }\n\t   }\n\t   if (strBuf.length > 127) {\n\t    warn('name token is longer than allowed by the spec: ' + strBuf.length);\n\t   }\n\t   return Name.get(strBuf.join(''));\n\t  },\n\t  getHexString: function Lexer_getHexString() {\n\t   var strBuf = this.strBuf;\n\t   strBuf.length = 0;\n\t   var ch = this.currentChar;\n\t   var isFirstHex = true;\n\t   var firstDigit;\n\t   var secondDigit;\n\t   while (true) {\n\t    if (ch < 0) {\n\t     warn('Unterminated hex string');\n\t     break;\n\t    } else if (ch === 0x3E) {\n\t     this.nextChar();\n\t     break;\n\t    } else if (specialChars[ch] === 1) {\n\t     ch = this.nextChar();\n\t     continue;\n\t    } else {\n\t     if (isFirstHex) {\n\t      firstDigit = toHexDigit(ch);\n\t      if (firstDigit === -1) {\n\t       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n\t       ch = this.nextChar();\n\t       continue;\n\t      }\n\t     } else {\n\t      secondDigit = toHexDigit(ch);\n\t      if (secondDigit === -1) {\n\t       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n\t       ch = this.nextChar();\n\t       continue;\n\t      }\n\t      strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n\t     }\n\t     isFirstHex = !isFirstHex;\n\t     ch = this.nextChar();\n\t    }\n\t   }\n\t   return strBuf.join('');\n\t  },\n\t  getObj: function Lexer_getObj() {\n\t   var comment = false;\n\t   var ch = this.currentChar;\n\t   while (true) {\n\t    if (ch < 0) {\n\t     return EOF;\n\t    }\n\t    if (comment) {\n\t     if (ch === 0x0A || ch === 0x0D) {\n\t      comment = false;\n\t     }\n\t    } else if (ch === 0x25) {\n\t     comment = true;\n\t    } else if (specialChars[ch] !== 1) {\n\t     break;\n\t    }\n\t    ch = this.nextChar();\n\t   }\n\t   switch (ch | 0) {\n\t   case 0x30:\n\t   case 0x31:\n\t   case 0x32:\n\t   case 0x33:\n\t   case 0x34:\n\t   case 0x35:\n\t   case 0x36:\n\t   case 0x37:\n\t   case 0x38:\n\t   case 0x39:\n\t   case 0x2B:\n\t   case 0x2D:\n\t   case 0x2E:\n\t    return this.getNumber();\n\t   case 0x28:\n\t    return this.getString();\n\t   case 0x2F:\n\t    return this.getName();\n\t   case 0x5B:\n\t    this.nextChar();\n\t    return Cmd.get('[');\n\t   case 0x5D:\n\t    this.nextChar();\n\t    return Cmd.get(']');\n\t   case 0x3C:\n\t    ch = this.nextChar();\n\t    if (ch === 0x3C) {\n\t     this.nextChar();\n\t     return Cmd.get('<<');\n\t    }\n\t    return this.getHexString();\n\t   case 0x3E:\n\t    ch = this.nextChar();\n\t    if (ch === 0x3E) {\n\t     this.nextChar();\n\t     return Cmd.get('>>');\n\t    }\n\t    return Cmd.get('>');\n\t   case 0x7B:\n\t    this.nextChar();\n\t    return Cmd.get('{');\n\t   case 0x7D:\n\t    this.nextChar();\n\t    return Cmd.get('}');\n\t   case 0x29:\n\t    this.nextChar();\n\t    error('Illegal character: ' + ch);\n\t    break;\n\t   }\n\t   var str = String.fromCharCode(ch);\n\t   var knownCommands = this.knownCommands;\n\t   var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t    var possibleCommand = str + String.fromCharCode(ch);\n\t    if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n\t     break;\n\t    }\n\t    if (str.length === 128) {\n\t     error('Command token too long: ' + str.length);\n\t    }\n\t    str = possibleCommand;\n\t    knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t   }\n\t   if (str === 'true') {\n\t    return true;\n\t   }\n\t   if (str === 'false') {\n\t    return false;\n\t   }\n\t   if (str === 'null') {\n\t    return null;\n\t   }\n\t   return Cmd.get(str);\n\t  },\n\t  skipToNextLine: function Lexer_skipToNextLine() {\n\t   var ch = this.currentChar;\n\t   while (ch >= 0) {\n\t    if (ch === 0x0D) {\n\t     ch = this.nextChar();\n\t     if (ch === 0x0A) {\n\t      this.nextChar();\n\t     }\n\t     break;\n\t    } else if (ch === 0x0A) {\n\t     this.nextChar();\n\t     break;\n\t    }\n\t    ch = this.nextChar();\n\t   }\n\t  }\n\t };\n\t return Lexer;\n\t}();\n\tvar Linearization = {\n\t create: function LinearizationCreate(stream) {\n\t  function getInt(name, allowZeroValue) {\n\t   var obj = linDict.get(name);\n\t   if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n\t    return obj;\n\t   }\n\t   throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n\t  }\n\t  function getHints() {\n\t   var hints = linDict.get('H'), hintsLength, item;\n\t   if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n\t    for (var index = 0; index < hintsLength; index++) {\n\t     if (!(isInt(item = hints[index]) && item > 0)) {\n\t      throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n\t     }\n\t    }\n\t    return hints;\n\t   }\n\t   throw new Error('Hint array in the linearization dictionary is invalid.');\n\t  }\n\t  var parser = new Parser(new Lexer(stream), false, null);\n\t  var obj1 = parser.getObj();\n\t  var obj2 = parser.getObj();\n\t  var obj3 = parser.getObj();\n\t  var linDict = parser.getObj();\n\t  var obj, length;\n\t  if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n\t   return null;\n\t  } else if ((length = getInt('L')) !== stream.length) {\n\t   throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n\t  }\n\t  return {\n\t   length: length,\n\t   hints: getHints(),\n\t   objectNumberFirst: getInt('O'),\n\t   endFirst: getInt('E'),\n\t   numPages: getInt('N'),\n\t   mainXRefEntriesOffset: getInt('T'),\n\t   pageFirst: linDict.has('P') ? getInt('P', true) : 0\n\t  };\n\t }\n\t};\n\texports.Lexer = Lexer;\n\texports.Linearization = Linearization;\n\texports.Parser = Parser;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar corePsParser = __w_pdfjs_require__(34);\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isBool = sharedUtil.isBool;\n\tvar isDict = corePrimitives.isDict;\n\tvar isStream = corePrimitives.isStream;\n\tvar PostScriptLexer = corePsParser.PostScriptLexer;\n\tvar PostScriptParser = corePsParser.PostScriptParser;\n\tvar PDFFunction = function PDFFunctionClosure() {\n\t var CONSTRUCT_SAMPLED = 0;\n\t var CONSTRUCT_INTERPOLATED = 2;\n\t var CONSTRUCT_STICHED = 3;\n\t var CONSTRUCT_POSTSCRIPT = 4;\n\t return {\n\t  getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n\t   var i, ii;\n\t   var length = 1;\n\t   for (i = 0, ii = size.length; i < ii; i++) {\n\t    length *= size[i];\n\t   }\n\t   length *= outputSize;\n\t   var array = new Array(length);\n\t   var codeSize = 0;\n\t   var codeBuf = 0;\n\t   var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\t   var strBytes = str.getBytes((length * bps + 7) / 8);\n\t   var strIdx = 0;\n\t   for (i = 0; i < length; i++) {\n\t    while (codeSize < bps) {\n\t     codeBuf <<= 8;\n\t     codeBuf |= strBytes[strIdx++];\n\t     codeSize += 8;\n\t    }\n\t    codeSize -= bps;\n\t    array[i] = (codeBuf >> codeSize) * sampleMul;\n\t    codeBuf &= (1 << codeSize) - 1;\n\t   }\n\t   return array;\n\t  },\n\t  getIR: function PDFFunction_getIR(xref, fn) {\n\t   var dict = fn.dict;\n\t   if (!dict) {\n\t    dict = fn;\n\t   }\n\t   var types = [\n\t    this.constructSampled,\n\t    null,\n\t    this.constructInterpolated,\n\t    this.constructStiched,\n\t    this.constructPostScript\n\t   ];\n\t   var typeNum = dict.get('FunctionType');\n\t   var typeFn = types[typeNum];\n\t   if (!typeFn) {\n\t    error('Unknown type of function');\n\t   }\n\t   return typeFn.call(this, fn, dict, xref);\n\t  },\n\t  fromIR: function PDFFunction_fromIR(IR) {\n\t   var type = IR[0];\n\t   switch (type) {\n\t   case CONSTRUCT_SAMPLED:\n\t    return this.constructSampledFromIR(IR);\n\t   case CONSTRUCT_INTERPOLATED:\n\t    return this.constructInterpolatedFromIR(IR);\n\t   case CONSTRUCT_STICHED:\n\t    return this.constructStichedFromIR(IR);\n\t   default:\n\t    return this.constructPostScriptFromIR(IR);\n\t   }\n\t  },\n\t  parse: function PDFFunction_parse(xref, fn) {\n\t   var IR = this.getIR(xref, fn);\n\t   return this.fromIR(IR);\n\t  },\n\t  parseArray: function PDFFunction_parseArray(xref, fnObj) {\n\t   if (!isArray(fnObj)) {\n\t    return this.parse(xref, fnObj);\n\t   }\n\t   var fnArray = [];\n\t   for (var j = 0, jj = fnObj.length; j < jj; j++) {\n\t    var obj = xref.fetchIfRef(fnObj[j]);\n\t    fnArray.push(PDFFunction.parse(xref, obj));\n\t   }\n\t   return function (src, srcOffset, dest, destOffset) {\n\t    for (var i = 0, ii = fnArray.length; i < ii; i++) {\n\t     fnArray[i](src, srcOffset, dest, destOffset + i);\n\t    }\n\t   };\n\t  },\n\t  constructSampled: function PDFFunction_constructSampled(str, dict) {\n\t   function toMultiArray(arr) {\n\t    var inputLength = arr.length;\n\t    var out = [];\n\t    var index = 0;\n\t    for (var i = 0; i < inputLength; i += 2) {\n\t     out[index] = [\n\t      arr[i],\n\t      arr[i + 1]\n\t     ];\n\t     ++index;\n\t    }\n\t    return out;\n\t   }\n\t   var domain = dict.getArray('Domain');\n\t   var range = dict.getArray('Range');\n\t   if (!domain || !range) {\n\t    error('No domain or range');\n\t   }\n\t   var inputSize = domain.length / 2;\n\t   var outputSize = range.length / 2;\n\t   domain = toMultiArray(domain);\n\t   range = toMultiArray(range);\n\t   var size = dict.get('Size');\n\t   var bps = dict.get('BitsPerSample');\n\t   var order = dict.get('Order') || 1;\n\t   if (order !== 1) {\n\t    info('No support for cubic spline interpolation: ' + order);\n\t   }\n\t   var encode = dict.getArray('Encode');\n\t   if (!encode) {\n\t    encode = [];\n\t    for (var i = 0; i < inputSize; ++i) {\n\t     encode.push(0);\n\t     encode.push(size[i] - 1);\n\t    }\n\t   }\n\t   encode = toMultiArray(encode);\n\t   var decode = dict.getArray('Decode');\n\t   if (!decode) {\n\t    decode = range;\n\t   } else {\n\t    decode = toMultiArray(decode);\n\t   }\n\t   var samples = this.getSampleArray(size, outputSize, bps, str);\n\t   return [\n\t    CONSTRUCT_SAMPLED,\n\t    inputSize,\n\t    domain,\n\t    encode,\n\t    decode,\n\t    samples,\n\t    size,\n\t    outputSize,\n\t    Math.pow(2, bps) - 1,\n\t    range\n\t   ];\n\t  },\n\t  constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n\t   function interpolate(x, xmin, xmax, ymin, ymax) {\n\t    return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n\t   }\n\t   return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n\t    var m = IR[1];\n\t    var domain = IR[2];\n\t    var encode = IR[3];\n\t    var decode = IR[4];\n\t    var samples = IR[5];\n\t    var size = IR[6];\n\t    var n = IR[7];\n\t    var range = IR[9];\n\t    var cubeVertices = 1 << m;\n\t    var cubeN = new Float64Array(cubeVertices);\n\t    var cubeVertex = new Uint32Array(cubeVertices);\n\t    var i, j;\n\t    for (j = 0; j < cubeVertices; j++) {\n\t     cubeN[j] = 1;\n\t    }\n\t    var k = n, pos = 1;\n\t    for (i = 0; i < m; ++i) {\n\t     var domain_2i = domain[i][0];\n\t     var domain_2i_1 = domain[i][1];\n\t     var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n\t     var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n\t     var size_i = size[i];\n\t     e = Math.min(Math.max(e, 0), size_i - 1);\n\t     var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n\t     var n0 = e0 + 1 - e;\n\t     var n1 = e - e0;\n\t     var offset0 = e0 * k;\n\t     var offset1 = offset0 + k;\n\t     for (j = 0; j < cubeVertices; j++) {\n\t      if (j & pos) {\n\t       cubeN[j] *= n1;\n\t       cubeVertex[j] += offset1;\n\t      } else {\n\t       cubeN[j] *= n0;\n\t       cubeVertex[j] += offset0;\n\t      }\n\t     }\n\t     k *= size_i;\n\t     pos <<= 1;\n\t    }\n\t    for (j = 0; j < n; ++j) {\n\t     var rj = 0;\n\t     for (i = 0; i < cubeVertices; i++) {\n\t      rj += samples[cubeVertex[i] + j] * cubeN[i];\n\t     }\n\t     rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\t     dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n\t    }\n\t   };\n\t  },\n\t  constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n\t   var c0 = dict.getArray('C0') || [0];\n\t   var c1 = dict.getArray('C1') || [1];\n\t   var n = dict.get('N');\n\t   if (!isArray(c0) || !isArray(c1)) {\n\t    error('Illegal dictionary for interpolated function');\n\t   }\n\t   var length = c0.length;\n\t   var diff = [];\n\t   for (var i = 0; i < length; ++i) {\n\t    diff.push(c1[i] - c0[i]);\n\t   }\n\t   return [\n\t    CONSTRUCT_INTERPOLATED,\n\t    c0,\n\t    diff,\n\t    n\n\t   ];\n\t  },\n\t  constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n\t   var c0 = IR[1];\n\t   var diff = IR[2];\n\t   var n = IR[3];\n\t   var length = diff.length;\n\t   return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n\t    var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\t    for (var j = 0; j < length; ++j) {\n\t     dest[destOffset + j] = c0[j] + x * diff[j];\n\t    }\n\t   };\n\t  },\n\t  constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n\t   var domain = dict.getArray('Domain');\n\t   if (!domain) {\n\t    error('No domain');\n\t   }\n\t   var inputSize = domain.length / 2;\n\t   if (inputSize !== 1) {\n\t    error('Bad domain for stiched function');\n\t   }\n\t   var fnRefs = dict.get('Functions');\n\t   var fns = [];\n\t   for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n\t    fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n\t   }\n\t   var bounds = dict.getArray('Bounds');\n\t   var encode = dict.getArray('Encode');\n\t   return [\n\t    CONSTRUCT_STICHED,\n\t    domain,\n\t    bounds,\n\t    encode,\n\t    fns\n\t   ];\n\t  },\n\t  constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n\t   var domain = IR[1];\n\t   var bounds = IR[2];\n\t   var encode = IR[3];\n\t   var fnsIR = IR[4];\n\t   var fns = [];\n\t   var tmpBuf = new Float32Array(1);\n\t   for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n\t    fns.push(PDFFunction.fromIR(fnsIR[i]));\n\t   }\n\t   return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n\t    var clip = function constructStichedFromIRClip(v, min, max) {\n\t     if (v > max) {\n\t      v = max;\n\t     } else if (v < min) {\n\t      v = min;\n\t     }\n\t     return v;\n\t    };\n\t    var v = clip(src[srcOffset], domain[0], domain[1]);\n\t    for (var i = 0, ii = bounds.length; i < ii; ++i) {\n\t     if (v < bounds[i]) {\n\t      break;\n\t     }\n\t    }\n\t    var dmin = domain[0];\n\t    if (i > 0) {\n\t     dmin = bounds[i - 1];\n\t    }\n\t    var dmax = domain[1];\n\t    if (i < bounds.length) {\n\t     dmax = bounds[i];\n\t    }\n\t    var rmin = encode[2 * i];\n\t    var rmax = encode[2 * i + 1];\n\t    tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\t    fns[i](tmpBuf, 0, dest, destOffset);\n\t   };\n\t  },\n\t  constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n\t   var domain = dict.getArray('Domain');\n\t   var range = dict.getArray('Range');\n\t   if (!domain) {\n\t    error('No domain.');\n\t   }\n\t   if (!range) {\n\t    error('No range.');\n\t   }\n\t   var lexer = new PostScriptLexer(fn);\n\t   var parser = new PostScriptParser(lexer);\n\t   var code = parser.parse();\n\t   return [\n\t    CONSTRUCT_POSTSCRIPT,\n\t    domain,\n\t    range,\n\t    code\n\t   ];\n\t  },\n\t  constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n\t   var domain = IR[1];\n\t   var range = IR[2];\n\t   var code = IR[3];\n\t   var compiled = new PostScriptCompiler().compile(code, domain, range);\n\t   if (compiled) {\n\t    return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n\t   }\n\t   info('Unable to compile PS function');\n\t   var numOutputs = range.length >> 1;\n\t   var numInputs = domain.length >> 1;\n\t   var evaluator = new PostScriptEvaluator(code);\n\t   var cache = Object.create(null);\n\t   var MAX_CACHE_SIZE = 2048 * 4;\n\t   var cache_available = MAX_CACHE_SIZE;\n\t   var tmpBuf = new Float32Array(numInputs);\n\t   return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n\t    var i, value;\n\t    var key = '';\n\t    var input = tmpBuf;\n\t    for (i = 0; i < numInputs; i++) {\n\t     value = src[srcOffset + i];\n\t     input[i] = value;\n\t     key += value + '_';\n\t    }\n\t    var cachedValue = cache[key];\n\t    if (cachedValue !== undefined) {\n\t     dest.set(cachedValue, destOffset);\n\t     return;\n\t    }\n\t    var output = new Float32Array(numOutputs);\n\t    var stack = evaluator.execute(input);\n\t    var stackIndex = stack.length - numOutputs;\n\t    for (i = 0; i < numOutputs; i++) {\n\t     value = stack[stackIndex + i];\n\t     var bound = range[i * 2];\n\t     if (value < bound) {\n\t      value = bound;\n\t     } else {\n\t      bound = range[i * 2 + 1];\n\t      if (value > bound) {\n\t       value = bound;\n\t      }\n\t     }\n\t     output[i] = value;\n\t    }\n\t    if (cache_available > 0) {\n\t     cache_available--;\n\t     cache[key] = output;\n\t    }\n\t    dest.set(output, destOffset);\n\t   };\n\t  }\n\t };\n\t}();\n\tfunction isPDFFunction(v) {\n\t var fnDict;\n\t if (typeof v !== 'object') {\n\t  return false;\n\t } else if (isDict(v)) {\n\t  fnDict = v;\n\t } else if (isStream(v)) {\n\t  fnDict = v.dict;\n\t } else {\n\t  return false;\n\t }\n\t return fnDict.has('FunctionType');\n\t}\n\tvar PostScriptStack = function PostScriptStackClosure() {\n\t var MAX_STACK_SIZE = 100;\n\t function PostScriptStack(initialStack) {\n\t  this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n\t }\n\t PostScriptStack.prototype = {\n\t  push: function PostScriptStack_push(value) {\n\t   if (this.stack.length >= MAX_STACK_SIZE) {\n\t    error('PostScript function stack overflow.');\n\t   }\n\t   this.stack.push(value);\n\t  },\n\t  pop: function PostScriptStack_pop() {\n\t   if (this.stack.length <= 0) {\n\t    error('PostScript function stack underflow.');\n\t   }\n\t   return this.stack.pop();\n\t  },\n\t  copy: function PostScriptStack_copy(n) {\n\t   if (this.stack.length + n >= MAX_STACK_SIZE) {\n\t    error('PostScript function stack overflow.');\n\t   }\n\t   var stack = this.stack;\n\t   for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n\t    stack.push(stack[i]);\n\t   }\n\t  },\n\t  index: function PostScriptStack_index(n) {\n\t   this.push(this.stack[this.stack.length - n - 1]);\n\t  },\n\t  roll: function PostScriptStack_roll(n, p) {\n\t   var stack = this.stack;\n\t   var l = stack.length - n;\n\t   var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n\t   for (i = l, j = r; i < j; i++, j--) {\n\t    t = stack[i];\n\t    stack[i] = stack[j];\n\t    stack[j] = t;\n\t   }\n\t   for (i = l, j = c - 1; i < j; i++, j--) {\n\t    t = stack[i];\n\t    stack[i] = stack[j];\n\t    stack[j] = t;\n\t   }\n\t   for (i = c, j = r; i < j; i++, j--) {\n\t    t = stack[i];\n\t    stack[i] = stack[j];\n\t    stack[j] = t;\n\t   }\n\t  }\n\t };\n\t return PostScriptStack;\n\t}();\n\tvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n\t function PostScriptEvaluator(operators) {\n\t  this.operators = operators;\n\t }\n\t PostScriptEvaluator.prototype = {\n\t  execute: function PostScriptEvaluator_execute(initialStack) {\n\t   var stack = new PostScriptStack(initialStack);\n\t   var counter = 0;\n\t   var operators = this.operators;\n\t   var length = operators.length;\n\t   var operator, a, b;\n\t   while (counter < length) {\n\t    operator = operators[counter++];\n\t    if (typeof operator === 'number') {\n\t     stack.push(operator);\n\t     continue;\n\t    }\n\t    switch (operator) {\n\t    case 'jz':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     if (!a) {\n\t      counter = b;\n\t     }\n\t     break;\n\t    case 'j':\n\t     a = stack.pop();\n\t     counter = a;\n\t     break;\n\t    case 'abs':\n\t     a = stack.pop();\n\t     stack.push(Math.abs(a));\n\t     break;\n\t    case 'add':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a + b);\n\t     break;\n\t    case 'and':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     if (isBool(a) && isBool(b)) {\n\t      stack.push(a && b);\n\t     } else {\n\t      stack.push(a & b);\n\t     }\n\t     break;\n\t    case 'atan':\n\t     a = stack.pop();\n\t     stack.push(Math.atan(a));\n\t     break;\n\t    case 'bitshift':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     if (a > 0) {\n\t      stack.push(a << b);\n\t     } else {\n\t      stack.push(a >> b);\n\t     }\n\t     break;\n\t    case 'ceiling':\n\t     a = stack.pop();\n\t     stack.push(Math.ceil(a));\n\t     break;\n\t    case 'copy':\n\t     a = stack.pop();\n\t     stack.copy(a);\n\t     break;\n\t    case 'cos':\n\t     a = stack.pop();\n\t     stack.push(Math.cos(a));\n\t     break;\n\t    case 'cvi':\n\t     a = stack.pop() | 0;\n\t     stack.push(a);\n\t     break;\n\t    case 'cvr':\n\t     break;\n\t    case 'div':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a / b);\n\t     break;\n\t    case 'dup':\n\t     stack.copy(1);\n\t     break;\n\t    case 'eq':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a === b);\n\t     break;\n\t    case 'exch':\n\t     stack.roll(2, 1);\n\t     break;\n\t    case 'exp':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(Math.pow(a, b));\n\t     break;\n\t    case 'false':\n\t     stack.push(false);\n\t     break;\n\t    case 'floor':\n\t     a = stack.pop();\n\t     stack.push(Math.floor(a));\n\t     break;\n\t    case 'ge':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a >= b);\n\t     break;\n\t    case 'gt':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a > b);\n\t     break;\n\t    case 'idiv':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a / b | 0);\n\t     break;\n\t    case 'index':\n\t     a = stack.pop();\n\t     stack.index(a);\n\t     break;\n\t    case 'le':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a <= b);\n\t     break;\n\t    case 'ln':\n\t     a = stack.pop();\n\t     stack.push(Math.log(a));\n\t     break;\n\t    case 'log':\n\t     a = stack.pop();\n\t     stack.push(Math.log(a) / Math.LN10);\n\t     break;\n\t    case 'lt':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a < b);\n\t     break;\n\t    case 'mod':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a % b);\n\t     break;\n\t    case 'mul':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a * b);\n\t     break;\n\t    case 'ne':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a !== b);\n\t     break;\n\t    case 'neg':\n\t     a = stack.pop();\n\t     stack.push(-a);\n\t     break;\n\t    case 'not':\n\t     a = stack.pop();\n\t     if (isBool(a)) {\n\t      stack.push(!a);\n\t     } else {\n\t      stack.push(~a);\n\t     }\n\t     break;\n\t    case 'or':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     if (isBool(a) && isBool(b)) {\n\t      stack.push(a || b);\n\t     } else {\n\t      stack.push(a | b);\n\t     }\n\t     break;\n\t    case 'pop':\n\t     stack.pop();\n\t     break;\n\t    case 'roll':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.roll(a, b);\n\t     break;\n\t    case 'round':\n\t     a = stack.pop();\n\t     stack.push(Math.round(a));\n\t     break;\n\t    case 'sin':\n\t     a = stack.pop();\n\t     stack.push(Math.sin(a));\n\t     break;\n\t    case 'sqrt':\n\t     a = stack.pop();\n\t     stack.push(Math.sqrt(a));\n\t     break;\n\t    case 'sub':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     stack.push(a - b);\n\t     break;\n\t    case 'true':\n\t     stack.push(true);\n\t     break;\n\t    case 'truncate':\n\t     a = stack.pop();\n\t     a = a < 0 ? Math.ceil(a) : Math.floor(a);\n\t     stack.push(a);\n\t     break;\n\t    case 'xor':\n\t     b = stack.pop();\n\t     a = stack.pop();\n\t     if (isBool(a) && isBool(b)) {\n\t      stack.push(a !== b);\n\t     } else {\n\t      stack.push(a ^ b);\n\t     }\n\t     break;\n\t    default:\n\t     error('Unknown operator ' + operator);\n\t     break;\n\t    }\n\t   }\n\t   return stack.stack;\n\t  }\n\t };\n\t return PostScriptEvaluator;\n\t}();\n\tvar PostScriptCompiler = function PostScriptCompilerClosure() {\n\t function AstNode(type) {\n\t  this.type = type;\n\t }\n\t AstNode.prototype.visit = function (visitor) {\n\t  throw new Error('abstract method');\n\t };\n\t function AstArgument(index, min, max) {\n\t  AstNode.call(this, 'args');\n\t  this.index = index;\n\t  this.min = min;\n\t  this.max = max;\n\t }\n\t AstArgument.prototype = Object.create(AstNode.prototype);\n\t AstArgument.prototype.visit = function (visitor) {\n\t  visitor.visitArgument(this);\n\t };\n\t function AstLiteral(number) {\n\t  AstNode.call(this, 'literal');\n\t  this.number = number;\n\t  this.min = number;\n\t  this.max = number;\n\t }\n\t AstLiteral.prototype = Object.create(AstNode.prototype);\n\t AstLiteral.prototype.visit = function (visitor) {\n\t  visitor.visitLiteral(this);\n\t };\n\t function AstBinaryOperation(op, arg1, arg2, min, max) {\n\t  AstNode.call(this, 'binary');\n\t  this.op = op;\n\t  this.arg1 = arg1;\n\t  this.arg2 = arg2;\n\t  this.min = min;\n\t  this.max = max;\n\t }\n\t AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\t AstBinaryOperation.prototype.visit = function (visitor) {\n\t  visitor.visitBinaryOperation(this);\n\t };\n\t function AstMin(arg, max) {\n\t  AstNode.call(this, 'max');\n\t  this.arg = arg;\n\t  this.min = arg.min;\n\t  this.max = max;\n\t }\n\t AstMin.prototype = Object.create(AstNode.prototype);\n\t AstMin.prototype.visit = function (visitor) {\n\t  visitor.visitMin(this);\n\t };\n\t function AstVariable(index, min, max) {\n\t  AstNode.call(this, 'var');\n\t  this.index = index;\n\t  this.min = min;\n\t  this.max = max;\n\t }\n\t AstVariable.prototype = Object.create(AstNode.prototype);\n\t AstVariable.prototype.visit = function (visitor) {\n\t  visitor.visitVariable(this);\n\t };\n\t function AstVariableDefinition(variable, arg) {\n\t  AstNode.call(this, 'definition');\n\t  this.variable = variable;\n\t  this.arg = arg;\n\t }\n\t AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\t AstVariableDefinition.prototype.visit = function (visitor) {\n\t  visitor.visitVariableDefinition(this);\n\t };\n\t function ExpressionBuilderVisitor() {\n\t  this.parts = [];\n\t }\n\t ExpressionBuilderVisitor.prototype = {\n\t  visitArgument: function (arg) {\n\t   this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n\t  },\n\t  visitVariable: function (variable) {\n\t   this.parts.push('v', variable.index);\n\t  },\n\t  visitLiteral: function (literal) {\n\t   this.parts.push(literal.number);\n\t  },\n\t  visitBinaryOperation: function (operation) {\n\t   this.parts.push('(');\n\t   operation.arg1.visit(this);\n\t   this.parts.push(' ', operation.op, ' ');\n\t   operation.arg2.visit(this);\n\t   this.parts.push(')');\n\t  },\n\t  visitVariableDefinition: function (definition) {\n\t   this.parts.push('var ');\n\t   definition.variable.visit(this);\n\t   this.parts.push(' = ');\n\t   definition.arg.visit(this);\n\t   this.parts.push(';');\n\t  },\n\t  visitMin: function (max) {\n\t   this.parts.push('Math.min(');\n\t   max.arg.visit(this);\n\t   this.parts.push(', ', max.max, ')');\n\t  },\n\t  toString: function () {\n\t   return this.parts.join('');\n\t  }\n\t };\n\t function buildAddOperation(num1, num2) {\n\t  if (num2.type === 'literal' && num2.number === 0) {\n\t   return num1;\n\t  }\n\t  if (num1.type === 'literal' && num1.number === 0) {\n\t   return num2;\n\t  }\n\t  if (num2.type === 'literal' && num1.type === 'literal') {\n\t   return new AstLiteral(num1.number + num2.number);\n\t  }\n\t  return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n\t }\n\t function buildMulOperation(num1, num2) {\n\t  if (num2.type === 'literal') {\n\t   if (num2.number === 0) {\n\t    return new AstLiteral(0);\n\t   } else if (num2.number === 1) {\n\t    return num1;\n\t   } else if (num1.type === 'literal') {\n\t    return new AstLiteral(num1.number * num2.number);\n\t   }\n\t  }\n\t  if (num1.type === 'literal') {\n\t   if (num1.number === 0) {\n\t    return new AstLiteral(0);\n\t   } else if (num1.number === 1) {\n\t    return num2;\n\t   }\n\t  }\n\t  var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t  var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t  return new AstBinaryOperation('*', num1, num2, min, max);\n\t }\n\t function buildSubOperation(num1, num2) {\n\t  if (num2.type === 'literal') {\n\t   if (num2.number === 0) {\n\t    return num1;\n\t   } else if (num1.type === 'literal') {\n\t    return new AstLiteral(num1.number - num2.number);\n\t   }\n\t  }\n\t  if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n\t   return num2.arg2;\n\t  }\n\t  return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n\t }\n\t function buildMinOperation(num1, max) {\n\t  if (num1.min >= max) {\n\t   return new AstLiteral(max);\n\t  } else if (num1.max <= max) {\n\t   return num1;\n\t  }\n\t  return new AstMin(num1, max);\n\t }\n\t function PostScriptCompiler() {\n\t }\n\t PostScriptCompiler.prototype = {\n\t  compile: function PostScriptCompiler_compile(code, domain, range) {\n\t   var stack = [];\n\t   var i, ii;\n\t   var instructions = [];\n\t   var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n\t   var lastRegister = 0;\n\t   var n, j;\n\t   var num1, num2, ast1, ast2, tmpVar, item;\n\t   for (i = 0; i < inputSize; i++) {\n\t    stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n\t   }\n\t   for (i = 0, ii = code.length; i < ii; i++) {\n\t    item = code[i];\n\t    if (typeof item === 'number') {\n\t     stack.push(new AstLiteral(item));\n\t     continue;\n\t    }\n\t    switch (item) {\n\t    case 'add':\n\t     if (stack.length < 2) {\n\t      return null;\n\t     }\n\t     num2 = stack.pop();\n\t     num1 = stack.pop();\n\t     stack.push(buildAddOperation(num1, num2));\n\t     break;\n\t    case 'cvr':\n\t     if (stack.length < 1) {\n\t      return null;\n\t     }\n\t     break;\n\t    case 'mul':\n\t     if (stack.length < 2) {\n\t      return null;\n\t     }\n\t     num2 = stack.pop();\n\t     num1 = stack.pop();\n\t     stack.push(buildMulOperation(num1, num2));\n\t     break;\n\t    case 'sub':\n\t     if (stack.length < 2) {\n\t      return null;\n\t     }\n\t     num2 = stack.pop();\n\t     num1 = stack.pop();\n\t     stack.push(buildSubOperation(num1, num2));\n\t     break;\n\t    case 'exch':\n\t     if (stack.length < 2) {\n\t      return null;\n\t     }\n\t     ast1 = stack.pop();\n\t     ast2 = stack.pop();\n\t     stack.push(ast1, ast2);\n\t     break;\n\t    case 'pop':\n\t     if (stack.length < 1) {\n\t      return null;\n\t     }\n\t     stack.pop();\n\t     break;\n\t    case 'index':\n\t     if (stack.length < 1) {\n\t      return null;\n\t     }\n\t     num1 = stack.pop();\n\t     if (num1.type !== 'literal') {\n\t      return null;\n\t     }\n\t     n = num1.number;\n\t     if (n < 0 || (n | 0) !== n || stack.length < n) {\n\t      return null;\n\t     }\n\t     ast1 = stack[stack.length - n - 1];\n\t     if (ast1.type === 'literal' || ast1.type === 'var') {\n\t      stack.push(ast1);\n\t      break;\n\t     }\n\t     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t     stack[stack.length - n - 1] = tmpVar;\n\t     stack.push(tmpVar);\n\t     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t     break;\n\t    case 'dup':\n\t     if (stack.length < 1) {\n\t      return null;\n\t     }\n\t     if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n\t      num1 = stack.pop();\n\t      stack.push(buildMinOperation(num1, code[i + 1]));\n\t      i += 6;\n\t      break;\n\t     }\n\t     ast1 = stack[stack.length - 1];\n\t     if (ast1.type === 'literal' || ast1.type === 'var') {\n\t      stack.push(ast1);\n\t      break;\n\t     }\n\t     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t     stack[stack.length - 1] = tmpVar;\n\t     stack.push(tmpVar);\n\t     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t     break;\n\t    case 'roll':\n\t     if (stack.length < 2) {\n\t      return null;\n\t     }\n\t     num2 = stack.pop();\n\t     num1 = stack.pop();\n\t     if (num2.type !== 'literal' || num1.type !== 'literal') {\n\t      return null;\n\t     }\n\t     j = num2.number;\n\t     n = num1.number;\n\t     if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n\t      return null;\n\t     }\n\t     j = (j % n + n) % n;\n\t     if (j === 0) {\n\t      break;\n\t     }\n\t     Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n\t     break;\n\t    default:\n\t     return null;\n\t    }\n\t   }\n\t   if (stack.length !== outputSize) {\n\t    return null;\n\t   }\n\t   var result = [];\n\t   instructions.forEach(function (instruction) {\n\t    var statementBuilder = new ExpressionBuilderVisitor();\n\t    instruction.visit(statementBuilder);\n\t    result.push(statementBuilder.toString());\n\t   });\n\t   stack.forEach(function (expr, i) {\n\t    var statementBuilder = new ExpressionBuilderVisitor();\n\t    expr.visit(statementBuilder);\n\t    var min = range[i * 2], max = range[i * 2 + 1];\n\t    var out = [statementBuilder.toString()];\n\t    if (min > expr.min) {\n\t     out.unshift('Math.max(', min, ', ');\n\t     out.push(')');\n\t    }\n\t    if (max < expr.max) {\n\t     out.unshift('Math.min(', max, ', ');\n\t     out.push(')');\n\t    }\n\t    out.unshift('dest[destOffset + ', i, '] = ');\n\t    out.push(';');\n\t    result.push(out.join(''));\n\t   });\n\t   return result.join('\\n');\n\t  }\n\t };\n\t return PostScriptCompiler;\n\t}();\n\texports.isPDFFunction = isPDFFunction;\n\texports.PDFFunction = PDFFunction;\n\texports.PostScriptEvaluator = PostScriptEvaluator;\n\texports.PostScriptCompiler = PostScriptCompiler;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\tvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n\t t['A'] = 0x0041;\n\t t['AE'] = 0x00C6;\n\t t['AEacute'] = 0x01FC;\n\t t['AEmacron'] = 0x01E2;\n\t t['AEsmall'] = 0xF7E6;\n\t t['Aacute'] = 0x00C1;\n\t t['Aacutesmall'] = 0xF7E1;\n\t t['Abreve'] = 0x0102;\n\t t['Abreveacute'] = 0x1EAE;\n\t t['Abrevecyrillic'] = 0x04D0;\n\t t['Abrevedotbelow'] = 0x1EB6;\n\t t['Abrevegrave'] = 0x1EB0;\n\t t['Abrevehookabove'] = 0x1EB2;\n\t t['Abrevetilde'] = 0x1EB4;\n\t t['Acaron'] = 0x01CD;\n\t t['Acircle'] = 0x24B6;\n\t t['Acircumflex'] = 0x00C2;\n\t t['Acircumflexacute'] = 0x1EA4;\n\t t['Acircumflexdotbelow'] = 0x1EAC;\n\t t['Acircumflexgrave'] = 0x1EA6;\n\t t['Acircumflexhookabove'] = 0x1EA8;\n\t t['Acircumflexsmall'] = 0xF7E2;\n\t t['Acircumflextilde'] = 0x1EAA;\n\t t['Acute'] = 0xF6C9;\n\t t['Acutesmall'] = 0xF7B4;\n\t t['Acyrillic'] = 0x0410;\n\t t['Adblgrave'] = 0x0200;\n\t t['Adieresis'] = 0x00C4;\n\t t['Adieresiscyrillic'] = 0x04D2;\n\t t['Adieresismacron'] = 0x01DE;\n\t t['Adieresissmall'] = 0xF7E4;\n\t t['Adotbelow'] = 0x1EA0;\n\t t['Adotmacron'] = 0x01E0;\n\t t['Agrave'] = 0x00C0;\n\t t['Agravesmall'] = 0xF7E0;\n\t t['Ahookabove'] = 0x1EA2;\n\t t['Aiecyrillic'] = 0x04D4;\n\t t['Ainvertedbreve'] = 0x0202;\n\t t['Alpha'] = 0x0391;\n\t t['Alphatonos'] = 0x0386;\n\t t['Amacron'] = 0x0100;\n\t t['Amonospace'] = 0xFF21;\n\t t['Aogonek'] = 0x0104;\n\t t['Aring'] = 0x00C5;\n\t t['Aringacute'] = 0x01FA;\n\t t['Aringbelow'] = 0x1E00;\n\t t['Aringsmall'] = 0xF7E5;\n\t t['Asmall'] = 0xF761;\n\t t['Atilde'] = 0x00C3;\n\t t['Atildesmall'] = 0xF7E3;\n\t t['Aybarmenian'] = 0x0531;\n\t t['B'] = 0x0042;\n\t t['Bcircle'] = 0x24B7;\n\t t['Bdotaccent'] = 0x1E02;\n\t t['Bdotbelow'] = 0x1E04;\n\t t['Becyrillic'] = 0x0411;\n\t t['Benarmenian'] = 0x0532;\n\t t['Beta'] = 0x0392;\n\t t['Bhook'] = 0x0181;\n\t t['Blinebelow'] = 0x1E06;\n\t t['Bmonospace'] = 0xFF22;\n\t t['Brevesmall'] = 0xF6F4;\n\t t['Bsmall'] = 0xF762;\n\t t['Btopbar'] = 0x0182;\n\t t['C'] = 0x0043;\n\t t['Caarmenian'] = 0x053E;\n\t t['Cacute'] = 0x0106;\n\t t['Caron'] = 0xF6CA;\n\t t['Caronsmall'] = 0xF6F5;\n\t t['Ccaron'] = 0x010C;\n\t t['Ccedilla'] = 0x00C7;\n\t t['Ccedillaacute'] = 0x1E08;\n\t t['Ccedillasmall'] = 0xF7E7;\n\t t['Ccircle'] = 0x24B8;\n\t t['Ccircumflex'] = 0x0108;\n\t t['Cdot'] = 0x010A;\n\t t['Cdotaccent'] = 0x010A;\n\t t['Cedillasmall'] = 0xF7B8;\n\t t['Chaarmenian'] = 0x0549;\n\t t['Cheabkhasiancyrillic'] = 0x04BC;\n\t t['Checyrillic'] = 0x0427;\n\t t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n\t t['Chedescendercyrillic'] = 0x04B6;\n\t t['Chedieresiscyrillic'] = 0x04F4;\n\t t['Cheharmenian'] = 0x0543;\n\t t['Chekhakassiancyrillic'] = 0x04CB;\n\t t['Cheverticalstrokecyrillic'] = 0x04B8;\n\t t['Chi'] = 0x03A7;\n\t t['Chook'] = 0x0187;\n\t t['Circumflexsmall'] = 0xF6F6;\n\t t['Cmonospace'] = 0xFF23;\n\t t['Coarmenian'] = 0x0551;\n\t t['Csmall'] = 0xF763;\n\t t['D'] = 0x0044;\n\t t['DZ'] = 0x01F1;\n\t t['DZcaron'] = 0x01C4;\n\t t['Daarmenian'] = 0x0534;\n\t t['Dafrican'] = 0x0189;\n\t t['Dcaron'] = 0x010E;\n\t t['Dcedilla'] = 0x1E10;\n\t t['Dcircle'] = 0x24B9;\n\t t['Dcircumflexbelow'] = 0x1E12;\n\t t['Dcroat'] = 0x0110;\n\t t['Ddotaccent'] = 0x1E0A;\n\t t['Ddotbelow'] = 0x1E0C;\n\t t['Decyrillic'] = 0x0414;\n\t t['Deicoptic'] = 0x03EE;\n\t t['Delta'] = 0x2206;\n\t t['Deltagreek'] = 0x0394;\n\t t['Dhook'] = 0x018A;\n\t t['Dieresis'] = 0xF6CB;\n\t t['DieresisAcute'] = 0xF6CC;\n\t t['DieresisGrave'] = 0xF6CD;\n\t t['Dieresissmall'] = 0xF7A8;\n\t t['Digammagreek'] = 0x03DC;\n\t t['Djecyrillic'] = 0x0402;\n\t t['Dlinebelow'] = 0x1E0E;\n\t t['Dmonospace'] = 0xFF24;\n\t t['Dotaccentsmall'] = 0xF6F7;\n\t t['Dslash'] = 0x0110;\n\t t['Dsmall'] = 0xF764;\n\t t['Dtopbar'] = 0x018B;\n\t t['Dz'] = 0x01F2;\n\t t['Dzcaron'] = 0x01C5;\n\t t['Dzeabkhasiancyrillic'] = 0x04E0;\n\t t['Dzecyrillic'] = 0x0405;\n\t t['Dzhecyrillic'] = 0x040F;\n\t t['E'] = 0x0045;\n\t t['Eacute'] = 0x00C9;\n\t t['Eacutesmall'] = 0xF7E9;\n\t t['Ebreve'] = 0x0114;\n\t t['Ecaron'] = 0x011A;\n\t t['Ecedillabreve'] = 0x1E1C;\n\t t['Echarmenian'] = 0x0535;\n\t t['Ecircle'] = 0x24BA;\n\t t['Ecircumflex'] = 0x00CA;\n\t t['Ecircumflexacute'] = 0x1EBE;\n\t t['Ecircumflexbelow'] = 0x1E18;\n\t t['Ecircumflexdotbelow'] = 0x1EC6;\n\t t['Ecircumflexgrave'] = 0x1EC0;\n\t t['Ecircumflexhookabove'] = 0x1EC2;\n\t t['Ecircumflexsmall'] = 0xF7EA;\n\t t['Ecircumflextilde'] = 0x1EC4;\n\t t['Ecyrillic'] = 0x0404;\n\t t['Edblgrave'] = 0x0204;\n\t t['Edieresis'] = 0x00CB;\n\t t['Edieresissmall'] = 0xF7EB;\n\t t['Edot'] = 0x0116;\n\t t['Edotaccent'] = 0x0116;\n\t t['Edotbelow'] = 0x1EB8;\n\t t['Efcyrillic'] = 0x0424;\n\t t['Egrave'] = 0x00C8;\n\t t['Egravesmall'] = 0xF7E8;\n\t t['Eharmenian'] = 0x0537;\n\t t['Ehookabove'] = 0x1EBA;\n\t t['Eightroman'] = 0x2167;\n\t t['Einvertedbreve'] = 0x0206;\n\t t['Eiotifiedcyrillic'] = 0x0464;\n\t t['Elcyrillic'] = 0x041B;\n\t t['Elevenroman'] = 0x216A;\n\t t['Emacron'] = 0x0112;\n\t t['Emacronacute'] = 0x1E16;\n\t t['Emacrongrave'] = 0x1E14;\n\t t['Emcyrillic'] = 0x041C;\n\t t['Emonospace'] = 0xFF25;\n\t t['Encyrillic'] = 0x041D;\n\t t['Endescendercyrillic'] = 0x04A2;\n\t t['Eng'] = 0x014A;\n\t t['Enghecyrillic'] = 0x04A4;\n\t t['Enhookcyrillic'] = 0x04C7;\n\t t['Eogonek'] = 0x0118;\n\t t['Eopen'] = 0x0190;\n\t t['Epsilon'] = 0x0395;\n\t t['Epsilontonos'] = 0x0388;\n\t t['Ercyrillic'] = 0x0420;\n\t t['Ereversed'] = 0x018E;\n\t t['Ereversedcyrillic'] = 0x042D;\n\t t['Escyrillic'] = 0x0421;\n\t t['Esdescendercyrillic'] = 0x04AA;\n\t t['Esh'] = 0x01A9;\n\t t['Esmall'] = 0xF765;\n\t t['Eta'] = 0x0397;\n\t t['Etarmenian'] = 0x0538;\n\t t['Etatonos'] = 0x0389;\n\t t['Eth'] = 0x00D0;\n\t t['Ethsmall'] = 0xF7F0;\n\t t['Etilde'] = 0x1EBC;\n\t t['Etildebelow'] = 0x1E1A;\n\t t['Euro'] = 0x20AC;\n\t t['Ezh'] = 0x01B7;\n\t t['Ezhcaron'] = 0x01EE;\n\t t['Ezhreversed'] = 0x01B8;\n\t t['F'] = 0x0046;\n\t t['Fcircle'] = 0x24BB;\n\t t['Fdotaccent'] = 0x1E1E;\n\t t['Feharmenian'] = 0x0556;\n\t t['Feicoptic'] = 0x03E4;\n\t t['Fhook'] = 0x0191;\n\t t['Fitacyrillic'] = 0x0472;\n\t t['Fiveroman'] = 0x2164;\n\t t['Fmonospace'] = 0xFF26;\n\t t['Fourroman'] = 0x2163;\n\t t['Fsmall'] = 0xF766;\n\t t['G'] = 0x0047;\n\t t['GBsquare'] = 0x3387;\n\t t['Gacute'] = 0x01F4;\n\t t['Gamma'] = 0x0393;\n\t t['Gammaafrican'] = 0x0194;\n\t t['Gangiacoptic'] = 0x03EA;\n\t t['Gbreve'] = 0x011E;\n\t t['Gcaron'] = 0x01E6;\n\t t['Gcedilla'] = 0x0122;\n\t t['Gcircle'] = 0x24BC;\n\t t['Gcircumflex'] = 0x011C;\n\t t['Gcommaaccent'] = 0x0122;\n\t t['Gdot'] = 0x0120;\n\t t['Gdotaccent'] = 0x0120;\n\t t['Gecyrillic'] = 0x0413;\n\t t['Ghadarmenian'] = 0x0542;\n\t t['Ghemiddlehookcyrillic'] = 0x0494;\n\t t['Ghestrokecyrillic'] = 0x0492;\n\t t['Gheupturncyrillic'] = 0x0490;\n\t t['Ghook'] = 0x0193;\n\t t['Gimarmenian'] = 0x0533;\n\t t['Gjecyrillic'] = 0x0403;\n\t t['Gmacron'] = 0x1E20;\n\t t['Gmonospace'] = 0xFF27;\n\t t['Grave'] = 0xF6CE;\n\t t['Gravesmall'] = 0xF760;\n\t t['Gsmall'] = 0xF767;\n\t t['Gsmallhook'] = 0x029B;\n\t t['Gstroke'] = 0x01E4;\n\t t['H'] = 0x0048;\n\t t['H18533'] = 0x25CF;\n\t t['H18543'] = 0x25AA;\n\t t['H18551'] = 0x25AB;\n\t t['H22073'] = 0x25A1;\n\t t['HPsquare'] = 0x33CB;\n\t t['Haabkhasiancyrillic'] = 0x04A8;\n\t t['Hadescendercyrillic'] = 0x04B2;\n\t t['Hardsigncyrillic'] = 0x042A;\n\t t['Hbar'] = 0x0126;\n\t t['Hbrevebelow'] = 0x1E2A;\n\t t['Hcedilla'] = 0x1E28;\n\t t['Hcircle'] = 0x24BD;\n\t t['Hcircumflex'] = 0x0124;\n\t t['Hdieresis'] = 0x1E26;\n\t t['Hdotaccent'] = 0x1E22;\n\t t['Hdotbelow'] = 0x1E24;\n\t t['Hmonospace'] = 0xFF28;\n\t t['Hoarmenian'] = 0x0540;\n\t t['Horicoptic'] = 0x03E8;\n\t t['Hsmall'] = 0xF768;\n\t t['Hungarumlaut'] = 0xF6CF;\n\t t['Hungarumlautsmall'] = 0xF6F8;\n\t t['Hzsquare'] = 0x3390;\n\t t['I'] = 0x0049;\n\t t['IAcyrillic'] = 0x042F;\n\t t['IJ'] = 0x0132;\n\t t['IUcyrillic'] = 0x042E;\n\t t['Iacute'] = 0x00CD;\n\t t['Iacutesmall'] = 0xF7ED;\n\t t['Ibreve'] = 0x012C;\n\t t['Icaron'] = 0x01CF;\n\t t['Icircle'] = 0x24BE;\n\t t['Icircumflex'] = 0x00CE;\n\t t['Icircumflexsmall'] = 0xF7EE;\n\t t['Icyrillic'] = 0x0406;\n\t t['Idblgrave'] = 0x0208;\n\t t['Idieresis'] = 0x00CF;\n\t t['Idieresisacute'] = 0x1E2E;\n\t t['Idieresiscyrillic'] = 0x04E4;\n\t t['Idieresissmall'] = 0xF7EF;\n\t t['Idot'] = 0x0130;\n\t t['Idotaccent'] = 0x0130;\n\t t['Idotbelow'] = 0x1ECA;\n\t t['Iebrevecyrillic'] = 0x04D6;\n\t t['Iecyrillic'] = 0x0415;\n\t t['Ifraktur'] = 0x2111;\n\t t['Igrave'] = 0x00CC;\n\t t['Igravesmall'] = 0xF7EC;\n\t t['Ihookabove'] = 0x1EC8;\n\t t['Iicyrillic'] = 0x0418;\n\t t['Iinvertedbreve'] = 0x020A;\n\t t['Iishortcyrillic'] = 0x0419;\n\t t['Imacron'] = 0x012A;\n\t t['Imacroncyrillic'] = 0x04E2;\n\t t['Imonospace'] = 0xFF29;\n\t t['Iniarmenian'] = 0x053B;\n\t t['Iocyrillic'] = 0x0401;\n\t t['Iogonek'] = 0x012E;\n\t t['Iota'] = 0x0399;\n\t t['Iotaafrican'] = 0x0196;\n\t t['Iotadieresis'] = 0x03AA;\n\t t['Iotatonos'] = 0x038A;\n\t t['Ismall'] = 0xF769;\n\t t['Istroke'] = 0x0197;\n\t t['Itilde'] = 0x0128;\n\t t['Itildebelow'] = 0x1E2C;\n\t t['Izhitsacyrillic'] = 0x0474;\n\t t['Izhitsadblgravecyrillic'] = 0x0476;\n\t t['J'] = 0x004A;\n\t t['Jaarmenian'] = 0x0541;\n\t t['Jcircle'] = 0x24BF;\n\t t['Jcircumflex'] = 0x0134;\n\t t['Jecyrillic'] = 0x0408;\n\t t['Jheharmenian'] = 0x054B;\n\t t['Jmonospace'] = 0xFF2A;\n\t t['Jsmall'] = 0xF76A;\n\t t['K'] = 0x004B;\n\t t['KBsquare'] = 0x3385;\n\t t['KKsquare'] = 0x33CD;\n\t t['Kabashkircyrillic'] = 0x04A0;\n\t t['Kacute'] = 0x1E30;\n\t t['Kacyrillic'] = 0x041A;\n\t t['Kadescendercyrillic'] = 0x049A;\n\t t['Kahookcyrillic'] = 0x04C3;\n\t t['Kappa'] = 0x039A;\n\t t['Kastrokecyrillic'] = 0x049E;\n\t t['Kaverticalstrokecyrillic'] = 0x049C;\n\t t['Kcaron'] = 0x01E8;\n\t t['Kcedilla'] = 0x0136;\n\t t['Kcircle'] = 0x24C0;\n\t t['Kcommaaccent'] = 0x0136;\n\t t['Kdotbelow'] = 0x1E32;\n\t t['Keharmenian'] = 0x0554;\n\t t['Kenarmenian'] = 0x053F;\n\t t['Khacyrillic'] = 0x0425;\n\t t['Kheicoptic'] = 0x03E6;\n\t t['Khook'] = 0x0198;\n\t t['Kjecyrillic'] = 0x040C;\n\t t['Klinebelow'] = 0x1E34;\n\t t['Kmonospace'] = 0xFF2B;\n\t t['Koppacyrillic'] = 0x0480;\n\t t['Koppagreek'] = 0x03DE;\n\t t['Ksicyrillic'] = 0x046E;\n\t t['Ksmall'] = 0xF76B;\n\t t['L'] = 0x004C;\n\t t['LJ'] = 0x01C7;\n\t t['LL'] = 0xF6BF;\n\t t['Lacute'] = 0x0139;\n\t t['Lambda'] = 0x039B;\n\t t['Lcaron'] = 0x013D;\n\t t['Lcedilla'] = 0x013B;\n\t t['Lcircle'] = 0x24C1;\n\t t['Lcircumflexbelow'] = 0x1E3C;\n\t t['Lcommaaccent'] = 0x013B;\n\t t['Ldot'] = 0x013F;\n\t t['Ldotaccent'] = 0x013F;\n\t t['Ldotbelow'] = 0x1E36;\n\t t['Ldotbelowmacron'] = 0x1E38;\n\t t['Liwnarmenian'] = 0x053C;\n\t t['Lj'] = 0x01C8;\n\t t['Ljecyrillic'] = 0x0409;\n\t t['Llinebelow'] = 0x1E3A;\n\t t['Lmonospace'] = 0xFF2C;\n\t t['Lslash'] = 0x0141;\n\t t['Lslashsmall'] = 0xF6F9;\n\t t['Lsmall'] = 0xF76C;\n\t t['M'] = 0x004D;\n\t t['MBsquare'] = 0x3386;\n\t t['Macron'] = 0xF6D0;\n\t t['Macronsmall'] = 0xF7AF;\n\t t['Macute'] = 0x1E3E;\n\t t['Mcircle'] = 0x24C2;\n\t t['Mdotaccent'] = 0x1E40;\n\t t['Mdotbelow'] = 0x1E42;\n\t t['Menarmenian'] = 0x0544;\n\t t['Mmonospace'] = 0xFF2D;\n\t t['Msmall'] = 0xF76D;\n\t t['Mturned'] = 0x019C;\n\t t['Mu'] = 0x039C;\n\t t['N'] = 0x004E;\n\t t['NJ'] = 0x01CA;\n\t t['Nacute'] = 0x0143;\n\t t['Ncaron'] = 0x0147;\n\t t['Ncedilla'] = 0x0145;\n\t t['Ncircle'] = 0x24C3;\n\t t['Ncircumflexbelow'] = 0x1E4A;\n\t t['Ncommaaccent'] = 0x0145;\n\t t['Ndotaccent'] = 0x1E44;\n\t t['Ndotbelow'] = 0x1E46;\n\t t['Nhookleft'] = 0x019D;\n\t t['Nineroman'] = 0x2168;\n\t t['Nj'] = 0x01CB;\n\t t['Njecyrillic'] = 0x040A;\n\t t['Nlinebelow'] = 0x1E48;\n\t t['Nmonospace'] = 0xFF2E;\n\t t['Nowarmenian'] = 0x0546;\n\t t['Nsmall'] = 0xF76E;\n\t t['Ntilde'] = 0x00D1;\n\t t['Ntildesmall'] = 0xF7F1;\n\t t['Nu'] = 0x039D;\n\t t['O'] = 0x004F;\n\t t['OE'] = 0x0152;\n\t t['OEsmall'] = 0xF6FA;\n\t t['Oacute'] = 0x00D3;\n\t t['Oacutesmall'] = 0xF7F3;\n\t t['Obarredcyrillic'] = 0x04E8;\n\t t['Obarreddieresiscyrillic'] = 0x04EA;\n\t t['Obreve'] = 0x014E;\n\t t['Ocaron'] = 0x01D1;\n\t t['Ocenteredtilde'] = 0x019F;\n\t t['Ocircle'] = 0x24C4;\n\t t['Ocircumflex'] = 0x00D4;\n\t t['Ocircumflexacute'] = 0x1ED0;\n\t t['Ocircumflexdotbelow'] = 0x1ED8;\n\t t['Ocircumflexgrave'] = 0x1ED2;\n\t t['Ocircumflexhookabove'] = 0x1ED4;\n\t t['Ocircumflexsmall'] = 0xF7F4;\n\t t['Ocircumflextilde'] = 0x1ED6;\n\t t['Ocyrillic'] = 0x041E;\n\t t['Odblacute'] = 0x0150;\n\t t['Odblgrave'] = 0x020C;\n\t t['Odieresis'] = 0x00D6;\n\t t['Odieresiscyrillic'] = 0x04E6;\n\t t['Odieresissmall'] = 0xF7F6;\n\t t['Odotbelow'] = 0x1ECC;\n\t t['Ogoneksmall'] = 0xF6FB;\n\t t['Ograve'] = 0x00D2;\n\t t['Ogravesmall'] = 0xF7F2;\n\t t['Oharmenian'] = 0x0555;\n\t t['Ohm'] = 0x2126;\n\t t['Ohookabove'] = 0x1ECE;\n\t t['Ohorn'] = 0x01A0;\n\t t['Ohornacute'] = 0x1EDA;\n\t t['Ohorndotbelow'] = 0x1EE2;\n\t t['Ohorngrave'] = 0x1EDC;\n\t t['Ohornhookabove'] = 0x1EDE;\n\t t['Ohorntilde'] = 0x1EE0;\n\t t['Ohungarumlaut'] = 0x0150;\n\t t['Oi'] = 0x01A2;\n\t t['Oinvertedbreve'] = 0x020E;\n\t t['Omacron'] = 0x014C;\n\t t['Omacronacute'] = 0x1E52;\n\t t['Omacrongrave'] = 0x1E50;\n\t t['Omega'] = 0x2126;\n\t t['Omegacyrillic'] = 0x0460;\n\t t['Omegagreek'] = 0x03A9;\n\t t['Omegaroundcyrillic'] = 0x047A;\n\t t['Omegatitlocyrillic'] = 0x047C;\n\t t['Omegatonos'] = 0x038F;\n\t t['Omicron'] = 0x039F;\n\t t['Omicrontonos'] = 0x038C;\n\t t['Omonospace'] = 0xFF2F;\n\t t['Oneroman'] = 0x2160;\n\t t['Oogonek'] = 0x01EA;\n\t t['Oogonekmacron'] = 0x01EC;\n\t t['Oopen'] = 0x0186;\n\t t['Oslash'] = 0x00D8;\n\t t['Oslashacute'] = 0x01FE;\n\t t['Oslashsmall'] = 0xF7F8;\n\t t['Osmall'] = 0xF76F;\n\t t['Ostrokeacute'] = 0x01FE;\n\t t['Otcyrillic'] = 0x047E;\n\t t['Otilde'] = 0x00D5;\n\t t['Otildeacute'] = 0x1E4C;\n\t t['Otildedieresis'] = 0x1E4E;\n\t t['Otildesmall'] = 0xF7F5;\n\t t['P'] = 0x0050;\n\t t['Pacute'] = 0x1E54;\n\t t['Pcircle'] = 0x24C5;\n\t t['Pdotaccent'] = 0x1E56;\n\t t['Pecyrillic'] = 0x041F;\n\t t['Peharmenian'] = 0x054A;\n\t t['Pemiddlehookcyrillic'] = 0x04A6;\n\t t['Phi'] = 0x03A6;\n\t t['Phook'] = 0x01A4;\n\t t['Pi'] = 0x03A0;\n\t t['Piwrarmenian'] = 0x0553;\n\t t['Pmonospace'] = 0xFF30;\n\t t['Psi'] = 0x03A8;\n\t t['Psicyrillic'] = 0x0470;\n\t t['Psmall'] = 0xF770;\n\t t['Q'] = 0x0051;\n\t t['Qcircle'] = 0x24C6;\n\t t['Qmonospace'] = 0xFF31;\n\t t['Qsmall'] = 0xF771;\n\t t['R'] = 0x0052;\n\t t['Raarmenian'] = 0x054C;\n\t t['Racute'] = 0x0154;\n\t t['Rcaron'] = 0x0158;\n\t t['Rcedilla'] = 0x0156;\n\t t['Rcircle'] = 0x24C7;\n\t t['Rcommaaccent'] = 0x0156;\n\t t['Rdblgrave'] = 0x0210;\n\t t['Rdotaccent'] = 0x1E58;\n\t t['Rdotbelow'] = 0x1E5A;\n\t t['Rdotbelowmacron'] = 0x1E5C;\n\t t['Reharmenian'] = 0x0550;\n\t t['Rfraktur'] = 0x211C;\n\t t['Rho'] = 0x03A1;\n\t t['Ringsmall'] = 0xF6FC;\n\t t['Rinvertedbreve'] = 0x0212;\n\t t['Rlinebelow'] = 0x1E5E;\n\t t['Rmonospace'] = 0xFF32;\n\t t['Rsmall'] = 0xF772;\n\t t['Rsmallinverted'] = 0x0281;\n\t t['Rsmallinvertedsuperior'] = 0x02B6;\n\t t['S'] = 0x0053;\n\t t['SF010000'] = 0x250C;\n\t t['SF020000'] = 0x2514;\n\t t['SF030000'] = 0x2510;\n\t t['SF040000'] = 0x2518;\n\t t['SF050000'] = 0x253C;\n\t t['SF060000'] = 0x252C;\n\t t['SF070000'] = 0x2534;\n\t t['SF080000'] = 0x251C;\n\t t['SF090000'] = 0x2524;\n\t t['SF100000'] = 0x2500;\n\t t['SF110000'] = 0x2502;\n\t t['SF190000'] = 0x2561;\n\t t['SF200000'] = 0x2562;\n\t t['SF210000'] = 0x2556;\n\t t['SF220000'] = 0x2555;\n\t t['SF230000'] = 0x2563;\n\t t['SF240000'] = 0x2551;\n\t t['SF250000'] = 0x2557;\n\t t['SF260000'] = 0x255D;\n\t t['SF270000'] = 0x255C;\n\t t['SF280000'] = 0x255B;\n\t t['SF360000'] = 0x255E;\n\t t['SF370000'] = 0x255F;\n\t t['SF380000'] = 0x255A;\n\t t['SF390000'] = 0x2554;\n\t t['SF400000'] = 0x2569;\n\t t['SF410000'] = 0x2566;\n\t t['SF420000'] = 0x2560;\n\t t['SF430000'] = 0x2550;\n\t t['SF440000'] = 0x256C;\n\t t['SF450000'] = 0x2567;\n\t t['SF460000'] = 0x2568;\n\t t['SF470000'] = 0x2564;\n\t t['SF480000'] = 0x2565;\n\t t['SF490000'] = 0x2559;\n\t t['SF500000'] = 0x2558;\n\t t['SF510000'] = 0x2552;\n\t t['SF520000'] = 0x2553;\n\t t['SF530000'] = 0x256B;\n\t t['SF540000'] = 0x256A;\n\t t['Sacute'] = 0x015A;\n\t t['Sacutedotaccent'] = 0x1E64;\n\t t['Sampigreek'] = 0x03E0;\n\t t['Scaron'] = 0x0160;\n\t t['Scarondotaccent'] = 0x1E66;\n\t t['Scaronsmall'] = 0xF6FD;\n\t t['Scedilla'] = 0x015E;\n\t t['Schwa'] = 0x018F;\n\t t['Schwacyrillic'] = 0x04D8;\n\t t['Schwadieresiscyrillic'] = 0x04DA;\n\t t['Scircle'] = 0x24C8;\n\t t['Scircumflex'] = 0x015C;\n\t t['Scommaaccent'] = 0x0218;\n\t t['Sdotaccent'] = 0x1E60;\n\t t['Sdotbelow'] = 0x1E62;\n\t t['Sdotbelowdotaccent'] = 0x1E68;\n\t t['Seharmenian'] = 0x054D;\n\t t['Sevenroman'] = 0x2166;\n\t t['Shaarmenian'] = 0x0547;\n\t t['Shacyrillic'] = 0x0428;\n\t t['Shchacyrillic'] = 0x0429;\n\t t['Sheicoptic'] = 0x03E2;\n\t t['Shhacyrillic'] = 0x04BA;\n\t t['Shimacoptic'] = 0x03EC;\n\t t['Sigma'] = 0x03A3;\n\t t['Sixroman'] = 0x2165;\n\t t['Smonospace'] = 0xFF33;\n\t t['Softsigncyrillic'] = 0x042C;\n\t t['Ssmall'] = 0xF773;\n\t t['Stigmagreek'] = 0x03DA;\n\t t['T'] = 0x0054;\n\t t['Tau'] = 0x03A4;\n\t t['Tbar'] = 0x0166;\n\t t['Tcaron'] = 0x0164;\n\t t['Tcedilla'] = 0x0162;\n\t t['Tcircle'] = 0x24C9;\n\t t['Tcircumflexbelow'] = 0x1E70;\n\t t['Tcommaaccent'] = 0x0162;\n\t t['Tdotaccent'] = 0x1E6A;\n\t t['Tdotbelow'] = 0x1E6C;\n\t t['Tecyrillic'] = 0x0422;\n\t t['Tedescendercyrillic'] = 0x04AC;\n\t t['Tenroman'] = 0x2169;\n\t t['Tetsecyrillic'] = 0x04B4;\n\t t['Theta'] = 0x0398;\n\t t['Thook'] = 0x01AC;\n\t t['Thorn'] = 0x00DE;\n\t t['Thornsmall'] = 0xF7FE;\n\t t['Threeroman'] = 0x2162;\n\t t['Tildesmall'] = 0xF6FE;\n\t t['Tiwnarmenian'] = 0x054F;\n\t t['Tlinebelow'] = 0x1E6E;\n\t t['Tmonospace'] = 0xFF34;\n\t t['Toarmenian'] = 0x0539;\n\t t['Tonefive'] = 0x01BC;\n\t t['Tonesix'] = 0x0184;\n\t t['Tonetwo'] = 0x01A7;\n\t t['Tretroflexhook'] = 0x01AE;\n\t t['Tsecyrillic'] = 0x0426;\n\t t['Tshecyrillic'] = 0x040B;\n\t t['Tsmall'] = 0xF774;\n\t t['Twelveroman'] = 0x216B;\n\t t['Tworoman'] = 0x2161;\n\t t['U'] = 0x0055;\n\t t['Uacute'] = 0x00DA;\n\t t['Uacutesmall'] = 0xF7FA;\n\t t['Ubreve'] = 0x016C;\n\t t['Ucaron'] = 0x01D3;\n\t t['Ucircle'] = 0x24CA;\n\t t['Ucircumflex'] = 0x00DB;\n\t t['Ucircumflexbelow'] = 0x1E76;\n\t t['Ucircumflexsmall'] = 0xF7FB;\n\t t['Ucyrillic'] = 0x0423;\n\t t['Udblacute'] = 0x0170;\n\t t['Udblgrave'] = 0x0214;\n\t t['Udieresis'] = 0x00DC;\n\t t['Udieresisacute'] = 0x01D7;\n\t t['Udieresisbelow'] = 0x1E72;\n\t t['Udieresiscaron'] = 0x01D9;\n\t t['Udieresiscyrillic'] = 0x04F0;\n\t t['Udieresisgrave'] = 0x01DB;\n\t t['Udieresismacron'] = 0x01D5;\n\t t['Udieresissmall'] = 0xF7FC;\n\t t['Udotbelow'] = 0x1EE4;\n\t t['Ugrave'] = 0x00D9;\n\t t['Ugravesmall'] = 0xF7F9;\n\t t['Uhookabove'] = 0x1EE6;\n\t t['Uhorn'] = 0x01AF;\n\t t['Uhornacute'] = 0x1EE8;\n\t t['Uhorndotbelow'] = 0x1EF0;\n\t t['Uhorngrave'] = 0x1EEA;\n\t t['Uhornhookabove'] = 0x1EEC;\n\t t['Uhorntilde'] = 0x1EEE;\n\t t['Uhungarumlaut'] = 0x0170;\n\t t['Uhungarumlautcyrillic'] = 0x04F2;\n\t t['Uinvertedbreve'] = 0x0216;\n\t t['Ukcyrillic'] = 0x0478;\n\t t['Umacron'] = 0x016A;\n\t t['Umacroncyrillic'] = 0x04EE;\n\t t['Umacrondieresis'] = 0x1E7A;\n\t t['Umonospace'] = 0xFF35;\n\t t['Uogonek'] = 0x0172;\n\t t['Upsilon'] = 0x03A5;\n\t t['Upsilon1'] = 0x03D2;\n\t t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n\t t['Upsilonafrican'] = 0x01B1;\n\t t['Upsilondieresis'] = 0x03AB;\n\t t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n\t t['Upsilonhooksymbol'] = 0x03D2;\n\t t['Upsilontonos'] = 0x038E;\n\t t['Uring'] = 0x016E;\n\t t['Ushortcyrillic'] = 0x040E;\n\t t['Usmall'] = 0xF775;\n\t t['Ustraightcyrillic'] = 0x04AE;\n\t t['Ustraightstrokecyrillic'] = 0x04B0;\n\t t['Utilde'] = 0x0168;\n\t t['Utildeacute'] = 0x1E78;\n\t t['Utildebelow'] = 0x1E74;\n\t t['V'] = 0x0056;\n\t t['Vcircle'] = 0x24CB;\n\t t['Vdotbelow'] = 0x1E7E;\n\t t['Vecyrillic'] = 0x0412;\n\t t['Vewarmenian'] = 0x054E;\n\t t['Vhook'] = 0x01B2;\n\t t['Vmonospace'] = 0xFF36;\n\t t['Voarmenian'] = 0x0548;\n\t t['Vsmall'] = 0xF776;\n\t t['Vtilde'] = 0x1E7C;\n\t t['W'] = 0x0057;\n\t t['Wacute'] = 0x1E82;\n\t t['Wcircle'] = 0x24CC;\n\t t['Wcircumflex'] = 0x0174;\n\t t['Wdieresis'] = 0x1E84;\n\t t['Wdotaccent'] = 0x1E86;\n\t t['Wdotbelow'] = 0x1E88;\n\t t['Wgrave'] = 0x1E80;\n\t t['Wmonospace'] = 0xFF37;\n\t t['Wsmall'] = 0xF777;\n\t t['X'] = 0x0058;\n\t t['Xcircle'] = 0x24CD;\n\t t['Xdieresis'] = 0x1E8C;\n\t t['Xdotaccent'] = 0x1E8A;\n\t t['Xeharmenian'] = 0x053D;\n\t t['Xi'] = 0x039E;\n\t t['Xmonospace'] = 0xFF38;\n\t t['Xsmall'] = 0xF778;\n\t t['Y'] = 0x0059;\n\t t['Yacute'] = 0x00DD;\n\t t['Yacutesmall'] = 0xF7FD;\n\t t['Yatcyrillic'] = 0x0462;\n\t t['Ycircle'] = 0x24CE;\n\t t['Ycircumflex'] = 0x0176;\n\t t['Ydieresis'] = 0x0178;\n\t t['Ydieresissmall'] = 0xF7FF;\n\t t['Ydotaccent'] = 0x1E8E;\n\t t['Ydotbelow'] = 0x1EF4;\n\t t['Yericyrillic'] = 0x042B;\n\t t['Yerudieresiscyrillic'] = 0x04F8;\n\t t['Ygrave'] = 0x1EF2;\n\t t['Yhook'] = 0x01B3;\n\t t['Yhookabove'] = 0x1EF6;\n\t t['Yiarmenian'] = 0x0545;\n\t t['Yicyrillic'] = 0x0407;\n\t t['Yiwnarmenian'] = 0x0552;\n\t t['Ymonospace'] = 0xFF39;\n\t t['Ysmall'] = 0xF779;\n\t t['Ytilde'] = 0x1EF8;\n\t t['Yusbigcyrillic'] = 0x046A;\n\t t['Yusbigiotifiedcyrillic'] = 0x046C;\n\t t['Yuslittlecyrillic'] = 0x0466;\n\t t['Yuslittleiotifiedcyrillic'] = 0x0468;\n\t t['Z'] = 0x005A;\n\t t['Zaarmenian'] = 0x0536;\n\t t['Zacute'] = 0x0179;\n\t t['Zcaron'] = 0x017D;\n\t t['Zcaronsmall'] = 0xF6FF;\n\t t['Zcircle'] = 0x24CF;\n\t t['Zcircumflex'] = 0x1E90;\n\t t['Zdot'] = 0x017B;\n\t t['Zdotaccent'] = 0x017B;\n\t t['Zdotbelow'] = 0x1E92;\n\t t['Zecyrillic'] = 0x0417;\n\t t['Zedescendercyrillic'] = 0x0498;\n\t t['Zedieresiscyrillic'] = 0x04DE;\n\t t['Zeta'] = 0x0396;\n\t t['Zhearmenian'] = 0x053A;\n\t t['Zhebrevecyrillic'] = 0x04C1;\n\t t['Zhecyrillic'] = 0x0416;\n\t t['Zhedescendercyrillic'] = 0x0496;\n\t t['Zhedieresiscyrillic'] = 0x04DC;\n\t t['Zlinebelow'] = 0x1E94;\n\t t['Zmonospace'] = 0xFF3A;\n\t t['Zsmall'] = 0xF77A;\n\t t['Zstroke'] = 0x01B5;\n\t t['a'] = 0x0061;\n\t t['aabengali'] = 0x0986;\n\t t['aacute'] = 0x00E1;\n\t t['aadeva'] = 0x0906;\n\t t['aagujarati'] = 0x0A86;\n\t t['aagurmukhi'] = 0x0A06;\n\t t['aamatragurmukhi'] = 0x0A3E;\n\t t['aarusquare'] = 0x3303;\n\t t['aavowelsignbengali'] = 0x09BE;\n\t t['aavowelsigndeva'] = 0x093E;\n\t t['aavowelsigngujarati'] = 0x0ABE;\n\t t['abbreviationmarkarmenian'] = 0x055F;\n\t t['abbreviationsigndeva'] = 0x0970;\n\t t['abengali'] = 0x0985;\n\t t['abopomofo'] = 0x311A;\n\t t['abreve'] = 0x0103;\n\t t['abreveacute'] = 0x1EAF;\n\t t['abrevecyrillic'] = 0x04D1;\n\t t['abrevedotbelow'] = 0x1EB7;\n\t t['abrevegrave'] = 0x1EB1;\n\t t['abrevehookabove'] = 0x1EB3;\n\t t['abrevetilde'] = 0x1EB5;\n\t t['acaron'] = 0x01CE;\n\t t['acircle'] = 0x24D0;\n\t t['acircumflex'] = 0x00E2;\n\t t['acircumflexacute'] = 0x1EA5;\n\t t['acircumflexdotbelow'] = 0x1EAD;\n\t t['acircumflexgrave'] = 0x1EA7;\n\t t['acircumflexhookabove'] = 0x1EA9;\n\t t['acircumflextilde'] = 0x1EAB;\n\t t['acute'] = 0x00B4;\n\t t['acutebelowcmb'] = 0x0317;\n\t t['acutecmb'] = 0x0301;\n\t t['acutecomb'] = 0x0301;\n\t t['acutedeva'] = 0x0954;\n\t t['acutelowmod'] = 0x02CF;\n\t t['acutetonecmb'] = 0x0341;\n\t t['acyrillic'] = 0x0430;\n\t t['adblgrave'] = 0x0201;\n\t t['addakgurmukhi'] = 0x0A71;\n\t t['adeva'] = 0x0905;\n\t t['adieresis'] = 0x00E4;\n\t t['adieresiscyrillic'] = 0x04D3;\n\t t['adieresismacron'] = 0x01DF;\n\t t['adotbelow'] = 0x1EA1;\n\t t['adotmacron'] = 0x01E1;\n\t t['ae'] = 0x00E6;\n\t t['aeacute'] = 0x01FD;\n\t t['aekorean'] = 0x3150;\n\t t['aemacron'] = 0x01E3;\n\t t['afii00208'] = 0x2015;\n\t t['afii08941'] = 0x20A4;\n\t t['afii10017'] = 0x0410;\n\t t['afii10018'] = 0x0411;\n\t t['afii10019'] = 0x0412;\n\t t['afii10020'] = 0x0413;\n\t t['afii10021'] = 0x0414;\n\t t['afii10022'] = 0x0415;\n\t t['afii10023'] = 0x0401;\n\t t['afii10024'] = 0x0416;\n\t t['afii10025'] = 0x0417;\n\t t['afii10026'] = 0x0418;\n\t t['afii10027'] = 0x0419;\n\t t['afii10028'] = 0x041A;\n\t t['afii10029'] = 0x041B;\n\t t['afii10030'] = 0x041C;\n\t t['afii10031'] = 0x041D;\n\t t['afii10032'] = 0x041E;\n\t t['afii10033'] = 0x041F;\n\t t['afii10034'] = 0x0420;\n\t t['afii10035'] = 0x0421;\n\t t['afii10036'] = 0x0422;\n\t t['afii10037'] = 0x0423;\n\t t['afii10038'] = 0x0424;\n\t t['afii10039'] = 0x0425;\n\t t['afii10040'] = 0x0426;\n\t t['afii10041'] = 0x0427;\n\t t['afii10042'] = 0x0428;\n\t t['afii10043'] = 0x0429;\n\t t['afii10044'] = 0x042A;\n\t t['afii10045'] = 0x042B;\n\t t['afii10046'] = 0x042C;\n\t t['afii10047'] = 0x042D;\n\t t['afii10048'] = 0x042E;\n\t t['afii10049'] = 0x042F;\n\t t['afii10050'] = 0x0490;\n\t t['afii10051'] = 0x0402;\n\t t['afii10052'] = 0x0403;\n\t t['afii10053'] = 0x0404;\n\t t['afii10054'] = 0x0405;\n\t t['afii10055'] = 0x0406;\n\t t['afii10056'] = 0x0407;\n\t t['afii10057'] = 0x0408;\n\t t['afii10058'] = 0x0409;\n\t t['afii10059'] = 0x040A;\n\t t['afii10060'] = 0x040B;\n\t t['afii10061'] = 0x040C;\n\t t['afii10062'] = 0x040E;\n\t t['afii10063'] = 0xF6C4;\n\t t['afii10064'] = 0xF6C5;\n\t t['afii10065'] = 0x0430;\n\t t['afii10066'] = 0x0431;\n\t t['afii10067'] = 0x0432;\n\t t['afii10068'] = 0x0433;\n\t t['afii10069'] = 0x0434;\n\t t['afii10070'] = 0x0435;\n\t t['afii10071'] = 0x0451;\n\t t['afii10072'] = 0x0436;\n\t t['afii10073'] = 0x0437;\n\t t['afii10074'] = 0x0438;\n\t t['afii10075'] = 0x0439;\n\t t['afii10076'] = 0x043A;\n\t t['afii10077'] = 0x043B;\n\t t['afii10078'] = 0x043C;\n\t t['afii10079'] = 0x043D;\n\t t['afii10080'] = 0x043E;\n\t t['afii10081'] = 0x043F;\n\t t['afii10082'] = 0x0440;\n\t t['afii10083'] = 0x0441;\n\t t['afii10084'] = 0x0442;\n\t t['afii10085'] = 0x0443;\n\t t['afii10086'] = 0x0444;\n\t t['afii10087'] = 0x0445;\n\t t['afii10088'] = 0x0446;\n\t t['afii10089'] = 0x0447;\n\t t['afii10090'] = 0x0448;\n\t t['afii10091'] = 0x0449;\n\t t['afii10092'] = 0x044A;\n\t t['afii10093'] = 0x044B;\n\t t['afii10094'] = 0x044C;\n\t t['afii10095'] = 0x044D;\n\t t['afii10096'] = 0x044E;\n\t t['afii10097'] = 0x044F;\n\t t['afii10098'] = 0x0491;\n\t t['afii10099'] = 0x0452;\n\t t['afii10100'] = 0x0453;\n\t t['afii10101'] = 0x0454;\n\t t['afii10102'] = 0x0455;\n\t t['afii10103'] = 0x0456;\n\t t['afii10104'] = 0x0457;\n\t t['afii10105'] = 0x0458;\n\t t['afii10106'] = 0x0459;\n\t t['afii10107'] = 0x045A;\n\t t['afii10108'] = 0x045B;\n\t t['afii10109'] = 0x045C;\n\t t['afii10110'] = 0x045E;\n\t t['afii10145'] = 0x040F;\n\t t['afii10146'] = 0x0462;\n\t t['afii10147'] = 0x0472;\n\t t['afii10148'] = 0x0474;\n\t t['afii10192'] = 0xF6C6;\n\t t['afii10193'] = 0x045F;\n\t t['afii10194'] = 0x0463;\n\t t['afii10195'] = 0x0473;\n\t t['afii10196'] = 0x0475;\n\t t['afii10831'] = 0xF6C7;\n\t t['afii10832'] = 0xF6C8;\n\t t['afii10846'] = 0x04D9;\n\t t['afii299'] = 0x200E;\n\t t['afii300'] = 0x200F;\n\t t['afii301'] = 0x200D;\n\t t['afii57381'] = 0x066A;\n\t t['afii57388'] = 0x060C;\n\t t['afii57392'] = 0x0660;\n\t t['afii57393'] = 0x0661;\n\t t['afii57394'] = 0x0662;\n\t t['afii57395'] = 0x0663;\n\t t['afii57396'] = 0x0664;\n\t t['afii57397'] = 0x0665;\n\t t['afii57398'] = 0x0666;\n\t t['afii57399'] = 0x0667;\n\t t['afii57400'] = 0x0668;\n\t t['afii57401'] = 0x0669;\n\t t['afii57403'] = 0x061B;\n\t t['afii57407'] = 0x061F;\n\t t['afii57409'] = 0x0621;\n\t t['afii57410'] = 0x0622;\n\t t['afii57411'] = 0x0623;\n\t t['afii57412'] = 0x0624;\n\t t['afii57413'] = 0x0625;\n\t t['afii57414'] = 0x0626;\n\t t['afii57415'] = 0x0627;\n\t t['afii57416'] = 0x0628;\n\t t['afii57417'] = 0x0629;\n\t t['afii57418'] = 0x062A;\n\t t['afii57419'] = 0x062B;\n\t t['afii57420'] = 0x062C;\n\t t['afii57421'] = 0x062D;\n\t t['afii57422'] = 0x062E;\n\t t['afii57423'] = 0x062F;\n\t t['afii57424'] = 0x0630;\n\t t['afii57425'] = 0x0631;\n\t t['afii57426'] = 0x0632;\n\t t['afii57427'] = 0x0633;\n\t t['afii57428'] = 0x0634;\n\t t['afii57429'] = 0x0635;\n\t t['afii57430'] = 0x0636;\n\t t['afii57431'] = 0x0637;\n\t t['afii57432'] = 0x0638;\n\t t['afii57433'] = 0x0639;\n\t t['afii57434'] = 0x063A;\n\t t['afii57440'] = 0x0640;\n\t t['afii57441'] = 0x0641;\n\t t['afii57442'] = 0x0642;\n\t t['afii57443'] = 0x0643;\n\t t['afii57444'] = 0x0644;\n\t t['afii57445'] = 0x0645;\n\t t['afii57446'] = 0x0646;\n\t t['afii57448'] = 0x0648;\n\t t['afii57449'] = 0x0649;\n\t t['afii57450'] = 0x064A;\n\t t['afii57451'] = 0x064B;\n\t t['afii57452'] = 0x064C;\n\t t['afii57453'] = 0x064D;\n\t t['afii57454'] = 0x064E;\n\t t['afii57455'] = 0x064F;\n\t t['afii57456'] = 0x0650;\n\t t['afii57457'] = 0x0651;\n\t t['afii57458'] = 0x0652;\n\t t['afii57470'] = 0x0647;\n\t t['afii57505'] = 0x06A4;\n\t t['afii57506'] = 0x067E;\n\t t['afii57507'] = 0x0686;\n\t t['afii57508'] = 0x0698;\n\t t['afii57509'] = 0x06AF;\n\t t['afii57511'] = 0x0679;\n\t t['afii57512'] = 0x0688;\n\t t['afii57513'] = 0x0691;\n\t t['afii57514'] = 0x06BA;\n\t t['afii57519'] = 0x06D2;\n\t t['afii57534'] = 0x06D5;\n\t t['afii57636'] = 0x20AA;\n\t t['afii57645'] = 0x05BE;\n\t t['afii57658'] = 0x05C3;\n\t t['afii57664'] = 0x05D0;\n\t t['afii57665'] = 0x05D1;\n\t t['afii57666'] = 0x05D2;\n\t t['afii57667'] = 0x05D3;\n\t t['afii57668'] = 0x05D4;\n\t t['afii57669'] = 0x05D5;\n\t t['afii57670'] = 0x05D6;\n\t t['afii57671'] = 0x05D7;\n\t t['afii57672'] = 0x05D8;\n\t t['afii57673'] = 0x05D9;\n\t t['afii57674'] = 0x05DA;\n\t t['afii57675'] = 0x05DB;\n\t t['afii57676'] = 0x05DC;\n\t t['afii57677'] = 0x05DD;\n\t t['afii57678'] = 0x05DE;\n\t t['afii57679'] = 0x05DF;\n\t t['afii57680'] = 0x05E0;\n\t t['afii57681'] = 0x05E1;\n\t t['afii57682'] = 0x05E2;\n\t t['afii57683'] = 0x05E3;\n\t t['afii57684'] = 0x05E4;\n\t t['afii57685'] = 0x05E5;\n\t t['afii57686'] = 0x05E6;\n\t t['afii57687'] = 0x05E7;\n\t t['afii57688'] = 0x05E8;\n\t t['afii57689'] = 0x05E9;\n\t t['afii57690'] = 0x05EA;\n\t t['afii57694'] = 0xFB2A;\n\t t['afii57695'] = 0xFB2B;\n\t t['afii57700'] = 0xFB4B;\n\t t['afii57705'] = 0xFB1F;\n\t t['afii57716'] = 0x05F0;\n\t t['afii57717'] = 0x05F1;\n\t t['afii57718'] = 0x05F2;\n\t t['afii57723'] = 0xFB35;\n\t t['afii57793'] = 0x05B4;\n\t t['afii57794'] = 0x05B5;\n\t t['afii57795'] = 0x05B6;\n\t t['afii57796'] = 0x05BB;\n\t t['afii57797'] = 0x05B8;\n\t t['afii57798'] = 0x05B7;\n\t t['afii57799'] = 0x05B0;\n\t t['afii57800'] = 0x05B2;\n\t t['afii57801'] = 0x05B1;\n\t t['afii57802'] = 0x05B3;\n\t t['afii57803'] = 0x05C2;\n\t t['afii57804'] = 0x05C1;\n\t t['afii57806'] = 0x05B9;\n\t t['afii57807'] = 0x05BC;\n\t t['afii57839'] = 0x05BD;\n\t t['afii57841'] = 0x05BF;\n\t t['afii57842'] = 0x05C0;\n\t t['afii57929'] = 0x02BC;\n\t t['afii61248'] = 0x2105;\n\t t['afii61289'] = 0x2113;\n\t t['afii61352'] = 0x2116;\n\t t['afii61573'] = 0x202C;\n\t t['afii61574'] = 0x202D;\n\t t['afii61575'] = 0x202E;\n\t t['afii61664'] = 0x200C;\n\t t['afii63167'] = 0x066D;\n\t t['afii64937'] = 0x02BD;\n\t t['agrave'] = 0x00E0;\n\t t['agujarati'] = 0x0A85;\n\t t['agurmukhi'] = 0x0A05;\n\t t['ahiragana'] = 0x3042;\n\t t['ahookabove'] = 0x1EA3;\n\t t['aibengali'] = 0x0990;\n\t t['aibopomofo'] = 0x311E;\n\t t['aideva'] = 0x0910;\n\t t['aiecyrillic'] = 0x04D5;\n\t t['aigujarati'] = 0x0A90;\n\t t['aigurmukhi'] = 0x0A10;\n\t t['aimatragurmukhi'] = 0x0A48;\n\t t['ainarabic'] = 0x0639;\n\t t['ainfinalarabic'] = 0xFECA;\n\t t['aininitialarabic'] = 0xFECB;\n\t t['ainmedialarabic'] = 0xFECC;\n\t t['ainvertedbreve'] = 0x0203;\n\t t['aivowelsignbengali'] = 0x09C8;\n\t t['aivowelsigndeva'] = 0x0948;\n\t t['aivowelsigngujarati'] = 0x0AC8;\n\t t['akatakana'] = 0x30A2;\n\t t['akatakanahalfwidth'] = 0xFF71;\n\t t['akorean'] = 0x314F;\n\t t['alef'] = 0x05D0;\n\t t['alefarabic'] = 0x0627;\n\t t['alefdageshhebrew'] = 0xFB30;\n\t t['aleffinalarabic'] = 0xFE8E;\n\t t['alefhamzaabovearabic'] = 0x0623;\n\t t['alefhamzaabovefinalarabic'] = 0xFE84;\n\t t['alefhamzabelowarabic'] = 0x0625;\n\t t['alefhamzabelowfinalarabic'] = 0xFE88;\n\t t['alefhebrew'] = 0x05D0;\n\t t['aleflamedhebrew'] = 0xFB4F;\n\t t['alefmaddaabovearabic'] = 0x0622;\n\t t['alefmaddaabovefinalarabic'] = 0xFE82;\n\t t['alefmaksuraarabic'] = 0x0649;\n\t t['alefmaksurafinalarabic'] = 0xFEF0;\n\t t['alefmaksurainitialarabic'] = 0xFEF3;\n\t t['alefmaksuramedialarabic'] = 0xFEF4;\n\t t['alefpatahhebrew'] = 0xFB2E;\n\t t['alefqamatshebrew'] = 0xFB2F;\n\t t['aleph'] = 0x2135;\n\t t['allequal'] = 0x224C;\n\t t['alpha'] = 0x03B1;\n\t t['alphatonos'] = 0x03AC;\n\t t['amacron'] = 0x0101;\n\t t['amonospace'] = 0xFF41;\n\t t['ampersand'] = 0x0026;\n\t t['ampersandmonospace'] = 0xFF06;\n\t t['ampersandsmall'] = 0xF726;\n\t t['amsquare'] = 0x33C2;\n\t t['anbopomofo'] = 0x3122;\n\t t['angbopomofo'] = 0x3124;\n\t t['angbracketleft'] = 0x3008;\n\t t['angbracketright'] = 0x3009;\n\t t['angkhankhuthai'] = 0x0E5A;\n\t t['angle'] = 0x2220;\n\t t['anglebracketleft'] = 0x3008;\n\t t['anglebracketleftvertical'] = 0xFE3F;\n\t t['anglebracketright'] = 0x3009;\n\t t['anglebracketrightvertical'] = 0xFE40;\n\t t['angleleft'] = 0x2329;\n\t t['angleright'] = 0x232A;\n\t t['angstrom'] = 0x212B;\n\t t['anoteleia'] = 0x0387;\n\t t['anudattadeva'] = 0x0952;\n\t t['anusvarabengali'] = 0x0982;\n\t t['anusvaradeva'] = 0x0902;\n\t t['anusvaragujarati'] = 0x0A82;\n\t t['aogonek'] = 0x0105;\n\t t['apaatosquare'] = 0x3300;\n\t t['aparen'] = 0x249C;\n\t t['apostrophearmenian'] = 0x055A;\n\t t['apostrophemod'] = 0x02BC;\n\t t['apple'] = 0xF8FF;\n\t t['approaches'] = 0x2250;\n\t t['approxequal'] = 0x2248;\n\t t['approxequalorimage'] = 0x2252;\n\t t['approximatelyequal'] = 0x2245;\n\t t['araeaekorean'] = 0x318E;\n\t t['araeakorean'] = 0x318D;\n\t t['arc'] = 0x2312;\n\t t['arighthalfring'] = 0x1E9A;\n\t t['aring'] = 0x00E5;\n\t t['aringacute'] = 0x01FB;\n\t t['aringbelow'] = 0x1E01;\n\t t['arrowboth'] = 0x2194;\n\t t['arrowdashdown'] = 0x21E3;\n\t t['arrowdashleft'] = 0x21E0;\n\t t['arrowdashright'] = 0x21E2;\n\t t['arrowdashup'] = 0x21E1;\n\t t['arrowdblboth'] = 0x21D4;\n\t t['arrowdbldown'] = 0x21D3;\n\t t['arrowdblleft'] = 0x21D0;\n\t t['arrowdblright'] = 0x21D2;\n\t t['arrowdblup'] = 0x21D1;\n\t t['arrowdown'] = 0x2193;\n\t t['arrowdownleft'] = 0x2199;\n\t t['arrowdownright'] = 0x2198;\n\t t['arrowdownwhite'] = 0x21E9;\n\t t['arrowheaddownmod'] = 0x02C5;\n\t t['arrowheadleftmod'] = 0x02C2;\n\t t['arrowheadrightmod'] = 0x02C3;\n\t t['arrowheadupmod'] = 0x02C4;\n\t t['arrowhorizex'] = 0xF8E7;\n\t t['arrowleft'] = 0x2190;\n\t t['arrowleftdbl'] = 0x21D0;\n\t t['arrowleftdblstroke'] = 0x21CD;\n\t t['arrowleftoverright'] = 0x21C6;\n\t t['arrowleftwhite'] = 0x21E6;\n\t t['arrowright'] = 0x2192;\n\t t['arrowrightdblstroke'] = 0x21CF;\n\t t['arrowrightheavy'] = 0x279E;\n\t t['arrowrightoverleft'] = 0x21C4;\n\t t['arrowrightwhite'] = 0x21E8;\n\t t['arrowtableft'] = 0x21E4;\n\t t['arrowtabright'] = 0x21E5;\n\t t['arrowup'] = 0x2191;\n\t t['arrowupdn'] = 0x2195;\n\t t['arrowupdnbse'] = 0x21A8;\n\t t['arrowupdownbase'] = 0x21A8;\n\t t['arrowupleft'] = 0x2196;\n\t t['arrowupleftofdown'] = 0x21C5;\n\t t['arrowupright'] = 0x2197;\n\t t['arrowupwhite'] = 0x21E7;\n\t t['arrowvertex'] = 0xF8E6;\n\t t['asciicircum'] = 0x005E;\n\t t['asciicircummonospace'] = 0xFF3E;\n\t t['asciitilde'] = 0x007E;\n\t t['asciitildemonospace'] = 0xFF5E;\n\t t['ascript'] = 0x0251;\n\t t['ascriptturned'] = 0x0252;\n\t t['asmallhiragana'] = 0x3041;\n\t t['asmallkatakana'] = 0x30A1;\n\t t['asmallkatakanahalfwidth'] = 0xFF67;\n\t t['asterisk'] = 0x002A;\n\t t['asteriskaltonearabic'] = 0x066D;\n\t t['asteriskarabic'] = 0x066D;\n\t t['asteriskmath'] = 0x2217;\n\t t['asteriskmonospace'] = 0xFF0A;\n\t t['asterisksmall'] = 0xFE61;\n\t t['asterism'] = 0x2042;\n\t t['asuperior'] = 0xF6E9;\n\t t['asymptoticallyequal'] = 0x2243;\n\t t['at'] = 0x0040;\n\t t['atilde'] = 0x00E3;\n\t t['atmonospace'] = 0xFF20;\n\t t['atsmall'] = 0xFE6B;\n\t t['aturned'] = 0x0250;\n\t t['aubengali'] = 0x0994;\n\t t['aubopomofo'] = 0x3120;\n\t t['audeva'] = 0x0914;\n\t t['augujarati'] = 0x0A94;\n\t t['augurmukhi'] = 0x0A14;\n\t t['aulengthmarkbengali'] = 0x09D7;\n\t t['aumatragurmukhi'] = 0x0A4C;\n\t t['auvowelsignbengali'] = 0x09CC;\n\t t['auvowelsigndeva'] = 0x094C;\n\t t['auvowelsigngujarati'] = 0x0ACC;\n\t t['avagrahadeva'] = 0x093D;\n\t t['aybarmenian'] = 0x0561;\n\t t['ayin'] = 0x05E2;\n\t t['ayinaltonehebrew'] = 0xFB20;\n\t t['ayinhebrew'] = 0x05E2;\n\t t['b'] = 0x0062;\n\t t['babengali'] = 0x09AC;\n\t t['backslash'] = 0x005C;\n\t t['backslashmonospace'] = 0xFF3C;\n\t t['badeva'] = 0x092C;\n\t t['bagujarati'] = 0x0AAC;\n\t t['bagurmukhi'] = 0x0A2C;\n\t t['bahiragana'] = 0x3070;\n\t t['bahtthai'] = 0x0E3F;\n\t t['bakatakana'] = 0x30D0;\n\t t['bar'] = 0x007C;\n\t t['barmonospace'] = 0xFF5C;\n\t t['bbopomofo'] = 0x3105;\n\t t['bcircle'] = 0x24D1;\n\t t['bdotaccent'] = 0x1E03;\n\t t['bdotbelow'] = 0x1E05;\n\t t['beamedsixteenthnotes'] = 0x266C;\n\t t['because'] = 0x2235;\n\t t['becyrillic'] = 0x0431;\n\t t['beharabic'] = 0x0628;\n\t t['behfinalarabic'] = 0xFE90;\n\t t['behinitialarabic'] = 0xFE91;\n\t t['behiragana'] = 0x3079;\n\t t['behmedialarabic'] = 0xFE92;\n\t t['behmeeminitialarabic'] = 0xFC9F;\n\t t['behmeemisolatedarabic'] = 0xFC08;\n\t t['behnoonfinalarabic'] = 0xFC6D;\n\t t['bekatakana'] = 0x30D9;\n\t t['benarmenian'] = 0x0562;\n\t t['bet'] = 0x05D1;\n\t t['beta'] = 0x03B2;\n\t t['betasymbolgreek'] = 0x03D0;\n\t t['betdagesh'] = 0xFB31;\n\t t['betdageshhebrew'] = 0xFB31;\n\t t['bethebrew'] = 0x05D1;\n\t t['betrafehebrew'] = 0xFB4C;\n\t t['bhabengali'] = 0x09AD;\n\t t['bhadeva'] = 0x092D;\n\t t['bhagujarati'] = 0x0AAD;\n\t t['bhagurmukhi'] = 0x0A2D;\n\t t['bhook'] = 0x0253;\n\t t['bihiragana'] = 0x3073;\n\t t['bikatakana'] = 0x30D3;\n\t t['bilabialclick'] = 0x0298;\n\t t['bindigurmukhi'] = 0x0A02;\n\t t['birusquare'] = 0x3331;\n\t t['blackcircle'] = 0x25CF;\n\t t['blackdiamond'] = 0x25C6;\n\t t['blackdownpointingtriangle'] = 0x25BC;\n\t t['blackleftpointingpointer'] = 0x25C4;\n\t t['blackleftpointingtriangle'] = 0x25C0;\n\t t['blacklenticularbracketleft'] = 0x3010;\n\t t['blacklenticularbracketleftvertical'] = 0xFE3B;\n\t t['blacklenticularbracketright'] = 0x3011;\n\t t['blacklenticularbracketrightvertical'] = 0xFE3C;\n\t t['blacklowerlefttriangle'] = 0x25E3;\n\t t['blacklowerrighttriangle'] = 0x25E2;\n\t t['blackrectangle'] = 0x25AC;\n\t t['blackrightpointingpointer'] = 0x25BA;\n\t t['blackrightpointingtriangle'] = 0x25B6;\n\t t['blacksmallsquare'] = 0x25AA;\n\t t['blacksmilingface'] = 0x263B;\n\t t['blacksquare'] = 0x25A0;\n\t t['blackstar'] = 0x2605;\n\t t['blackupperlefttriangle'] = 0x25E4;\n\t t['blackupperrighttriangle'] = 0x25E5;\n\t t['blackuppointingsmalltriangle'] = 0x25B4;\n\t t['blackuppointingtriangle'] = 0x25B2;\n\t t['blank'] = 0x2423;\n\t t['blinebelow'] = 0x1E07;\n\t t['block'] = 0x2588;\n\t t['bmonospace'] = 0xFF42;\n\t t['bobaimaithai'] = 0x0E1A;\n\t t['bohiragana'] = 0x307C;\n\t t['bokatakana'] = 0x30DC;\n\t t['bparen'] = 0x249D;\n\t t['bqsquare'] = 0x33C3;\n\t t['braceex'] = 0xF8F4;\n\t t['braceleft'] = 0x007B;\n\t t['braceleftbt'] = 0xF8F3;\n\t t['braceleftmid'] = 0xF8F2;\n\t t['braceleftmonospace'] = 0xFF5B;\n\t t['braceleftsmall'] = 0xFE5B;\n\t t['bracelefttp'] = 0xF8F1;\n\t t['braceleftvertical'] = 0xFE37;\n\t t['braceright'] = 0x007D;\n\t t['bracerightbt'] = 0xF8FE;\n\t t['bracerightmid'] = 0xF8FD;\n\t t['bracerightmonospace'] = 0xFF5D;\n\t t['bracerightsmall'] = 0xFE5C;\n\t t['bracerighttp'] = 0xF8FC;\n\t t['bracerightvertical'] = 0xFE38;\n\t t['bracketleft'] = 0x005B;\n\t t['bracketleftbt'] = 0xF8F0;\n\t t['bracketleftex'] = 0xF8EF;\n\t t['bracketleftmonospace'] = 0xFF3B;\n\t t['bracketlefttp'] = 0xF8EE;\n\t t['bracketright'] = 0x005D;\n\t t['bracketrightbt'] = 0xF8FB;\n\t t['bracketrightex'] = 0xF8FA;\n\t t['bracketrightmonospace'] = 0xFF3D;\n\t t['bracketrighttp'] = 0xF8F9;\n\t t['breve'] = 0x02D8;\n\t t['brevebelowcmb'] = 0x032E;\n\t t['brevecmb'] = 0x0306;\n\t t['breveinvertedbelowcmb'] = 0x032F;\n\t t['breveinvertedcmb'] = 0x0311;\n\t t['breveinverteddoublecmb'] = 0x0361;\n\t t['bridgebelowcmb'] = 0x032A;\n\t t['bridgeinvertedbelowcmb'] = 0x033A;\n\t t['brokenbar'] = 0x00A6;\n\t t['bstroke'] = 0x0180;\n\t t['bsuperior'] = 0xF6EA;\n\t t['btopbar'] = 0x0183;\n\t t['buhiragana'] = 0x3076;\n\t t['bukatakana'] = 0x30D6;\n\t t['bullet'] = 0x2022;\n\t t['bulletinverse'] = 0x25D8;\n\t t['bulletoperator'] = 0x2219;\n\t t['bullseye'] = 0x25CE;\n\t t['c'] = 0x0063;\n\t t['caarmenian'] = 0x056E;\n\t t['cabengali'] = 0x099A;\n\t t['cacute'] = 0x0107;\n\t t['cadeva'] = 0x091A;\n\t t['cagujarati'] = 0x0A9A;\n\t t['cagurmukhi'] = 0x0A1A;\n\t t['calsquare'] = 0x3388;\n\t t['candrabindubengali'] = 0x0981;\n\t t['candrabinducmb'] = 0x0310;\n\t t['candrabindudeva'] = 0x0901;\n\t t['candrabindugujarati'] = 0x0A81;\n\t t['capslock'] = 0x21EA;\n\t t['careof'] = 0x2105;\n\t t['caron'] = 0x02C7;\n\t t['caronbelowcmb'] = 0x032C;\n\t t['caroncmb'] = 0x030C;\n\t t['carriagereturn'] = 0x21B5;\n\t t['cbopomofo'] = 0x3118;\n\t t['ccaron'] = 0x010D;\n\t t['ccedilla'] = 0x00E7;\n\t t['ccedillaacute'] = 0x1E09;\n\t t['ccircle'] = 0x24D2;\n\t t['ccircumflex'] = 0x0109;\n\t t['ccurl'] = 0x0255;\n\t t['cdot'] = 0x010B;\n\t t['cdotaccent'] = 0x010B;\n\t t['cdsquare'] = 0x33C5;\n\t t['cedilla'] = 0x00B8;\n\t t['cedillacmb'] = 0x0327;\n\t t['cent'] = 0x00A2;\n\t t['centigrade'] = 0x2103;\n\t t['centinferior'] = 0xF6DF;\n\t t['centmonospace'] = 0xFFE0;\n\t t['centoldstyle'] = 0xF7A2;\n\t t['centsuperior'] = 0xF6E0;\n\t t['chaarmenian'] = 0x0579;\n\t t['chabengali'] = 0x099B;\n\t t['chadeva'] = 0x091B;\n\t t['chagujarati'] = 0x0A9B;\n\t t['chagurmukhi'] = 0x0A1B;\n\t t['chbopomofo'] = 0x3114;\n\t t['cheabkhasiancyrillic'] = 0x04BD;\n\t t['checkmark'] = 0x2713;\n\t t['checyrillic'] = 0x0447;\n\t t['chedescenderabkhasiancyrillic'] = 0x04BF;\n\t t['chedescendercyrillic'] = 0x04B7;\n\t t['chedieresiscyrillic'] = 0x04F5;\n\t t['cheharmenian'] = 0x0573;\n\t t['chekhakassiancyrillic'] = 0x04CC;\n\t t['cheverticalstrokecyrillic'] = 0x04B9;\n\t t['chi'] = 0x03C7;\n\t t['chieuchacirclekorean'] = 0x3277;\n\t t['chieuchaparenkorean'] = 0x3217;\n\t t['chieuchcirclekorean'] = 0x3269;\n\t t['chieuchkorean'] = 0x314A;\n\t t['chieuchparenkorean'] = 0x3209;\n\t t['chochangthai'] = 0x0E0A;\n\t t['chochanthai'] = 0x0E08;\n\t t['chochingthai'] = 0x0E09;\n\t t['chochoethai'] = 0x0E0C;\n\t t['chook'] = 0x0188;\n\t t['cieucacirclekorean'] = 0x3276;\n\t t['cieucaparenkorean'] = 0x3216;\n\t t['cieuccirclekorean'] = 0x3268;\n\t t['cieuckorean'] = 0x3148;\n\t t['cieucparenkorean'] = 0x3208;\n\t t['cieucuparenkorean'] = 0x321C;\n\t t['circle'] = 0x25CB;\n\t t['circlecopyrt'] = 0x00A9;\n\t t['circlemultiply'] = 0x2297;\n\t t['circleot'] = 0x2299;\n\t t['circleplus'] = 0x2295;\n\t t['circlepostalmark'] = 0x3036;\n\t t['circlewithlefthalfblack'] = 0x25D0;\n\t t['circlewithrighthalfblack'] = 0x25D1;\n\t t['circumflex'] = 0x02C6;\n\t t['circumflexbelowcmb'] = 0x032D;\n\t t['circumflexcmb'] = 0x0302;\n\t t['clear'] = 0x2327;\n\t t['clickalveolar'] = 0x01C2;\n\t t['clickdental'] = 0x01C0;\n\t t['clicklateral'] = 0x01C1;\n\t t['clickretroflex'] = 0x01C3;\n\t t['club'] = 0x2663;\n\t t['clubsuitblack'] = 0x2663;\n\t t['clubsuitwhite'] = 0x2667;\n\t t['cmcubedsquare'] = 0x33A4;\n\t t['cmonospace'] = 0xFF43;\n\t t['cmsquaredsquare'] = 0x33A0;\n\t t['coarmenian'] = 0x0581;\n\t t['colon'] = 0x003A;\n\t t['colonmonetary'] = 0x20A1;\n\t t['colonmonospace'] = 0xFF1A;\n\t t['colonsign'] = 0x20A1;\n\t t['colonsmall'] = 0xFE55;\n\t t['colontriangularhalfmod'] = 0x02D1;\n\t t['colontriangularmod'] = 0x02D0;\n\t t['comma'] = 0x002C;\n\t t['commaabovecmb'] = 0x0313;\n\t t['commaaboverightcmb'] = 0x0315;\n\t t['commaaccent'] = 0xF6C3;\n\t t['commaarabic'] = 0x060C;\n\t t['commaarmenian'] = 0x055D;\n\t t['commainferior'] = 0xF6E1;\n\t t['commamonospace'] = 0xFF0C;\n\t t['commareversedabovecmb'] = 0x0314;\n\t t['commareversedmod'] = 0x02BD;\n\t t['commasmall'] = 0xFE50;\n\t t['commasuperior'] = 0xF6E2;\n\t t['commaturnedabovecmb'] = 0x0312;\n\t t['commaturnedmod'] = 0x02BB;\n\t t['compass'] = 0x263C;\n\t t['congruent'] = 0x2245;\n\t t['contourintegral'] = 0x222E;\n\t t['control'] = 0x2303;\n\t t['controlACK'] = 0x0006;\n\t t['controlBEL'] = 0x0007;\n\t t['controlBS'] = 0x0008;\n\t t['controlCAN'] = 0x0018;\n\t t['controlCR'] = 0x000D;\n\t t['controlDC1'] = 0x0011;\n\t t['controlDC2'] = 0x0012;\n\t t['controlDC3'] = 0x0013;\n\t t['controlDC4'] = 0x0014;\n\t t['controlDEL'] = 0x007F;\n\t t['controlDLE'] = 0x0010;\n\t t['controlEM'] = 0x0019;\n\t t['controlENQ'] = 0x0005;\n\t t['controlEOT'] = 0x0004;\n\t t['controlESC'] = 0x001B;\n\t t['controlETB'] = 0x0017;\n\t t['controlETX'] = 0x0003;\n\t t['controlFF'] = 0x000C;\n\t t['controlFS'] = 0x001C;\n\t t['controlGS'] = 0x001D;\n\t t['controlHT'] = 0x0009;\n\t t['controlLF'] = 0x000A;\n\t t['controlNAK'] = 0x0015;\n\t t['controlNULL'] = 0x0000;\n\t t['controlRS'] = 0x001E;\n\t t['controlSI'] = 0x000F;\n\t t['controlSO'] = 0x000E;\n\t t['controlSOT'] = 0x0002;\n\t t['controlSTX'] = 0x0001;\n\t t['controlSUB'] = 0x001A;\n\t t['controlSYN'] = 0x0016;\n\t t['controlUS'] = 0x001F;\n\t t['controlVT'] = 0x000B;\n\t t['copyright'] = 0x00A9;\n\t t['copyrightsans'] = 0xF8E9;\n\t t['copyrightserif'] = 0xF6D9;\n\t t['cornerbracketleft'] = 0x300C;\n\t t['cornerbracketlefthalfwidth'] = 0xFF62;\n\t t['cornerbracketleftvertical'] = 0xFE41;\n\t t['cornerbracketright'] = 0x300D;\n\t t['cornerbracketrighthalfwidth'] = 0xFF63;\n\t t['cornerbracketrightvertical'] = 0xFE42;\n\t t['corporationsquare'] = 0x337F;\n\t t['cosquare'] = 0x33C7;\n\t t['coverkgsquare'] = 0x33C6;\n\t t['cparen'] = 0x249E;\n\t t['cruzeiro'] = 0x20A2;\n\t t['cstretched'] = 0x0297;\n\t t['curlyand'] = 0x22CF;\n\t t['curlyor'] = 0x22CE;\n\t t['currency'] = 0x00A4;\n\t t['cyrBreve'] = 0xF6D1;\n\t t['cyrFlex'] = 0xF6D2;\n\t t['cyrbreve'] = 0xF6D4;\n\t t['cyrflex'] = 0xF6D5;\n\t t['d'] = 0x0064;\n\t t['daarmenian'] = 0x0564;\n\t t['dabengali'] = 0x09A6;\n\t t['dadarabic'] = 0x0636;\n\t t['dadeva'] = 0x0926;\n\t t['dadfinalarabic'] = 0xFEBE;\n\t t['dadinitialarabic'] = 0xFEBF;\n\t t['dadmedialarabic'] = 0xFEC0;\n\t t['dagesh'] = 0x05BC;\n\t t['dageshhebrew'] = 0x05BC;\n\t t['dagger'] = 0x2020;\n\t t['daggerdbl'] = 0x2021;\n\t t['dagujarati'] = 0x0AA6;\n\t t['dagurmukhi'] = 0x0A26;\n\t t['dahiragana'] = 0x3060;\n\t t['dakatakana'] = 0x30C0;\n\t t['dalarabic'] = 0x062F;\n\t t['dalet'] = 0x05D3;\n\t t['daletdagesh'] = 0xFB33;\n\t t['daletdageshhebrew'] = 0xFB33;\n\t t['dalethebrew'] = 0x05D3;\n\t t['dalfinalarabic'] = 0xFEAA;\n\t t['dammaarabic'] = 0x064F;\n\t t['dammalowarabic'] = 0x064F;\n\t t['dammatanaltonearabic'] = 0x064C;\n\t t['dammatanarabic'] = 0x064C;\n\t t['danda'] = 0x0964;\n\t t['dargahebrew'] = 0x05A7;\n\t t['dargalefthebrew'] = 0x05A7;\n\t t['dasiapneumatacyrilliccmb'] = 0x0485;\n\t t['dblGrave'] = 0xF6D3;\n\t t['dblanglebracketleft'] = 0x300A;\n\t t['dblanglebracketleftvertical'] = 0xFE3D;\n\t t['dblanglebracketright'] = 0x300B;\n\t t['dblanglebracketrightvertical'] = 0xFE3E;\n\t t['dblarchinvertedbelowcmb'] = 0x032B;\n\t t['dblarrowleft'] = 0x21D4;\n\t t['dblarrowright'] = 0x21D2;\n\t t['dbldanda'] = 0x0965;\n\t t['dblgrave'] = 0xF6D6;\n\t t['dblgravecmb'] = 0x030F;\n\t t['dblintegral'] = 0x222C;\n\t t['dbllowline'] = 0x2017;\n\t t['dbllowlinecmb'] = 0x0333;\n\t t['dbloverlinecmb'] = 0x033F;\n\t t['dblprimemod'] = 0x02BA;\n\t t['dblverticalbar'] = 0x2016;\n\t t['dblverticallineabovecmb'] = 0x030E;\n\t t['dbopomofo'] = 0x3109;\n\t t['dbsquare'] = 0x33C8;\n\t t['dcaron'] = 0x010F;\n\t t['dcedilla'] = 0x1E11;\n\t t['dcircle'] = 0x24D3;\n\t t['dcircumflexbelow'] = 0x1E13;\n\t t['dcroat'] = 0x0111;\n\t t['ddabengali'] = 0x09A1;\n\t t['ddadeva'] = 0x0921;\n\t t['ddagujarati'] = 0x0AA1;\n\t t['ddagurmukhi'] = 0x0A21;\n\t t['ddalarabic'] = 0x0688;\n\t t['ddalfinalarabic'] = 0xFB89;\n\t t['dddhadeva'] = 0x095C;\n\t t['ddhabengali'] = 0x09A2;\n\t t['ddhadeva'] = 0x0922;\n\t t['ddhagujarati'] = 0x0AA2;\n\t t['ddhagurmukhi'] = 0x0A22;\n\t t['ddotaccent'] = 0x1E0B;\n\t t['ddotbelow'] = 0x1E0D;\n\t t['decimalseparatorarabic'] = 0x066B;\n\t t['decimalseparatorpersian'] = 0x066B;\n\t t['decyrillic'] = 0x0434;\n\t t['degree'] = 0x00B0;\n\t t['dehihebrew'] = 0x05AD;\n\t t['dehiragana'] = 0x3067;\n\t t['deicoptic'] = 0x03EF;\n\t t['dekatakana'] = 0x30C7;\n\t t['deleteleft'] = 0x232B;\n\t t['deleteright'] = 0x2326;\n\t t['delta'] = 0x03B4;\n\t t['deltaturned'] = 0x018D;\n\t t['denominatorminusonenumeratorbengali'] = 0x09F8;\n\t t['dezh'] = 0x02A4;\n\t t['dhabengali'] = 0x09A7;\n\t t['dhadeva'] = 0x0927;\n\t t['dhagujarati'] = 0x0AA7;\n\t t['dhagurmukhi'] = 0x0A27;\n\t t['dhook'] = 0x0257;\n\t t['dialytikatonos'] = 0x0385;\n\t t['dialytikatonoscmb'] = 0x0344;\n\t t['diamond'] = 0x2666;\n\t t['diamondsuitwhite'] = 0x2662;\n\t t['dieresis'] = 0x00A8;\n\t t['dieresisacute'] = 0xF6D7;\n\t t['dieresisbelowcmb'] = 0x0324;\n\t t['dieresiscmb'] = 0x0308;\n\t t['dieresisgrave'] = 0xF6D8;\n\t t['dieresistonos'] = 0x0385;\n\t t['dihiragana'] = 0x3062;\n\t t['dikatakana'] = 0x30C2;\n\t t['dittomark'] = 0x3003;\n\t t['divide'] = 0x00F7;\n\t t['divides'] = 0x2223;\n\t t['divisionslash'] = 0x2215;\n\t t['djecyrillic'] = 0x0452;\n\t t['dkshade'] = 0x2593;\n\t t['dlinebelow'] = 0x1E0F;\n\t t['dlsquare'] = 0x3397;\n\t t['dmacron'] = 0x0111;\n\t t['dmonospace'] = 0xFF44;\n\t t['dnblock'] = 0x2584;\n\t t['dochadathai'] = 0x0E0E;\n\t t['dodekthai'] = 0x0E14;\n\t t['dohiragana'] = 0x3069;\n\t t['dokatakana'] = 0x30C9;\n\t t['dollar'] = 0x0024;\n\t t['dollarinferior'] = 0xF6E3;\n\t t['dollarmonospace'] = 0xFF04;\n\t t['dollaroldstyle'] = 0xF724;\n\t t['dollarsmall'] = 0xFE69;\n\t t['dollarsuperior'] = 0xF6E4;\n\t t['dong'] = 0x20AB;\n\t t['dorusquare'] = 0x3326;\n\t t['dotaccent'] = 0x02D9;\n\t t['dotaccentcmb'] = 0x0307;\n\t t['dotbelowcmb'] = 0x0323;\n\t t['dotbelowcomb'] = 0x0323;\n\t t['dotkatakana'] = 0x30FB;\n\t t['dotlessi'] = 0x0131;\n\t t['dotlessj'] = 0xF6BE;\n\t t['dotlessjstrokehook'] = 0x0284;\n\t t['dotmath'] = 0x22C5;\n\t t['dottedcircle'] = 0x25CC;\n\t t['doubleyodpatah'] = 0xFB1F;\n\t t['doubleyodpatahhebrew'] = 0xFB1F;\n\t t['downtackbelowcmb'] = 0x031E;\n\t t['downtackmod'] = 0x02D5;\n\t t['dparen'] = 0x249F;\n\t t['dsuperior'] = 0xF6EB;\n\t t['dtail'] = 0x0256;\n\t t['dtopbar'] = 0x018C;\n\t t['duhiragana'] = 0x3065;\n\t t['dukatakana'] = 0x30C5;\n\t t['dz'] = 0x01F3;\n\t t['dzaltone'] = 0x02A3;\n\t t['dzcaron'] = 0x01C6;\n\t t['dzcurl'] = 0x02A5;\n\t t['dzeabkhasiancyrillic'] = 0x04E1;\n\t t['dzecyrillic'] = 0x0455;\n\t t['dzhecyrillic'] = 0x045F;\n\t t['e'] = 0x0065;\n\t t['eacute'] = 0x00E9;\n\t t['earth'] = 0x2641;\n\t t['ebengali'] = 0x098F;\n\t t['ebopomofo'] = 0x311C;\n\t t['ebreve'] = 0x0115;\n\t t['ecandradeva'] = 0x090D;\n\t t['ecandragujarati'] = 0x0A8D;\n\t t['ecandravowelsigndeva'] = 0x0945;\n\t t['ecandravowelsigngujarati'] = 0x0AC5;\n\t t['ecaron'] = 0x011B;\n\t t['ecedillabreve'] = 0x1E1D;\n\t t['echarmenian'] = 0x0565;\n\t t['echyiwnarmenian'] = 0x0587;\n\t t['ecircle'] = 0x24D4;\n\t t['ecircumflex'] = 0x00EA;\n\t t['ecircumflexacute'] = 0x1EBF;\n\t t['ecircumflexbelow'] = 0x1E19;\n\t t['ecircumflexdotbelow'] = 0x1EC7;\n\t t['ecircumflexgrave'] = 0x1EC1;\n\t t['ecircumflexhookabove'] = 0x1EC3;\n\t t['ecircumflextilde'] = 0x1EC5;\n\t t['ecyrillic'] = 0x0454;\n\t t['edblgrave'] = 0x0205;\n\t t['edeva'] = 0x090F;\n\t t['edieresis'] = 0x00EB;\n\t t['edot'] = 0x0117;\n\t t['edotaccent'] = 0x0117;\n\t t['edotbelow'] = 0x1EB9;\n\t t['eegurmukhi'] = 0x0A0F;\n\t t['eematragurmukhi'] = 0x0A47;\n\t t['efcyrillic'] = 0x0444;\n\t t['egrave'] = 0x00E8;\n\t t['egujarati'] = 0x0A8F;\n\t t['eharmenian'] = 0x0567;\n\t t['ehbopomofo'] = 0x311D;\n\t t['ehiragana'] = 0x3048;\n\t t['ehookabove'] = 0x1EBB;\n\t t['eibopomofo'] = 0x311F;\n\t t['eight'] = 0x0038;\n\t t['eightarabic'] = 0x0668;\n\t t['eightbengali'] = 0x09EE;\n\t t['eightcircle'] = 0x2467;\n\t t['eightcircleinversesansserif'] = 0x2791;\n\t t['eightdeva'] = 0x096E;\n\t t['eighteencircle'] = 0x2471;\n\t t['eighteenparen'] = 0x2485;\n\t t['eighteenperiod'] = 0x2499;\n\t t['eightgujarati'] = 0x0AEE;\n\t t['eightgurmukhi'] = 0x0A6E;\n\t t['eighthackarabic'] = 0x0668;\n\t t['eighthangzhou'] = 0x3028;\n\t t['eighthnotebeamed'] = 0x266B;\n\t t['eightideographicparen'] = 0x3227;\n\t t['eightinferior'] = 0x2088;\n\t t['eightmonospace'] = 0xFF18;\n\t t['eightoldstyle'] = 0xF738;\n\t t['eightparen'] = 0x247B;\n\t t['eightperiod'] = 0x248F;\n\t t['eightpersian'] = 0x06F8;\n\t t['eightroman'] = 0x2177;\n\t t['eightsuperior'] = 0x2078;\n\t t['eightthai'] = 0x0E58;\n\t t['einvertedbreve'] = 0x0207;\n\t t['eiotifiedcyrillic'] = 0x0465;\n\t t['ekatakana'] = 0x30A8;\n\t t['ekatakanahalfwidth'] = 0xFF74;\n\t t['ekonkargurmukhi'] = 0x0A74;\n\t t['ekorean'] = 0x3154;\n\t t['elcyrillic'] = 0x043B;\n\t t['element'] = 0x2208;\n\t t['elevencircle'] = 0x246A;\n\t t['elevenparen'] = 0x247E;\n\t t['elevenperiod'] = 0x2492;\n\t t['elevenroman'] = 0x217A;\n\t t['ellipsis'] = 0x2026;\n\t t['ellipsisvertical'] = 0x22EE;\n\t t['emacron'] = 0x0113;\n\t t['emacronacute'] = 0x1E17;\n\t t['emacrongrave'] = 0x1E15;\n\t t['emcyrillic'] = 0x043C;\n\t t['emdash'] = 0x2014;\n\t t['emdashvertical'] = 0xFE31;\n\t t['emonospace'] = 0xFF45;\n\t t['emphasismarkarmenian'] = 0x055B;\n\t t['emptyset'] = 0x2205;\n\t t['enbopomofo'] = 0x3123;\n\t t['encyrillic'] = 0x043D;\n\t t['endash'] = 0x2013;\n\t t['endashvertical'] = 0xFE32;\n\t t['endescendercyrillic'] = 0x04A3;\n\t t['eng'] = 0x014B;\n\t t['engbopomofo'] = 0x3125;\n\t t['enghecyrillic'] = 0x04A5;\n\t t['enhookcyrillic'] = 0x04C8;\n\t t['enspace'] = 0x2002;\n\t t['eogonek'] = 0x0119;\n\t t['eokorean'] = 0x3153;\n\t t['eopen'] = 0x025B;\n\t t['eopenclosed'] = 0x029A;\n\t t['eopenreversed'] = 0x025C;\n\t t['eopenreversedclosed'] = 0x025E;\n\t t['eopenreversedhook'] = 0x025D;\n\t t['eparen'] = 0x24A0;\n\t t['epsilon'] = 0x03B5;\n\t t['epsilontonos'] = 0x03AD;\n\t t['equal'] = 0x003D;\n\t t['equalmonospace'] = 0xFF1D;\n\t t['equalsmall'] = 0xFE66;\n\t t['equalsuperior'] = 0x207C;\n\t t['equivalence'] = 0x2261;\n\t t['erbopomofo'] = 0x3126;\n\t t['ercyrillic'] = 0x0440;\n\t t['ereversed'] = 0x0258;\n\t t['ereversedcyrillic'] = 0x044D;\n\t t['escyrillic'] = 0x0441;\n\t t['esdescendercyrillic'] = 0x04AB;\n\t t['esh'] = 0x0283;\n\t t['eshcurl'] = 0x0286;\n\t t['eshortdeva'] = 0x090E;\n\t t['eshortvowelsigndeva'] = 0x0946;\n\t t['eshreversedloop'] = 0x01AA;\n\t t['eshsquatreversed'] = 0x0285;\n\t t['esmallhiragana'] = 0x3047;\n\t t['esmallkatakana'] = 0x30A7;\n\t t['esmallkatakanahalfwidth'] = 0xFF6A;\n\t t['estimated'] = 0x212E;\n\t t['esuperior'] = 0xF6EC;\n\t t['eta'] = 0x03B7;\n\t t['etarmenian'] = 0x0568;\n\t t['etatonos'] = 0x03AE;\n\t t['eth'] = 0x00F0;\n\t t['etilde'] = 0x1EBD;\n\t t['etildebelow'] = 0x1E1B;\n\t t['etnahtafoukhhebrew'] = 0x0591;\n\t t['etnahtafoukhlefthebrew'] = 0x0591;\n\t t['etnahtahebrew'] = 0x0591;\n\t t['etnahtalefthebrew'] = 0x0591;\n\t t['eturned'] = 0x01DD;\n\t t['eukorean'] = 0x3161;\n\t t['euro'] = 0x20AC;\n\t t['evowelsignbengali'] = 0x09C7;\n\t t['evowelsigndeva'] = 0x0947;\n\t t['evowelsigngujarati'] = 0x0AC7;\n\t t['exclam'] = 0x0021;\n\t t['exclamarmenian'] = 0x055C;\n\t t['exclamdbl'] = 0x203C;\n\t t['exclamdown'] = 0x00A1;\n\t t['exclamdownsmall'] = 0xF7A1;\n\t t['exclammonospace'] = 0xFF01;\n\t t['exclamsmall'] = 0xF721;\n\t t['existential'] = 0x2203;\n\t t['ezh'] = 0x0292;\n\t t['ezhcaron'] = 0x01EF;\n\t t['ezhcurl'] = 0x0293;\n\t t['ezhreversed'] = 0x01B9;\n\t t['ezhtail'] = 0x01BA;\n\t t['f'] = 0x0066;\n\t t['fadeva'] = 0x095E;\n\t t['fagurmukhi'] = 0x0A5E;\n\t t['fahrenheit'] = 0x2109;\n\t t['fathaarabic'] = 0x064E;\n\t t['fathalowarabic'] = 0x064E;\n\t t['fathatanarabic'] = 0x064B;\n\t t['fbopomofo'] = 0x3108;\n\t t['fcircle'] = 0x24D5;\n\t t['fdotaccent'] = 0x1E1F;\n\t t['feharabic'] = 0x0641;\n\t t['feharmenian'] = 0x0586;\n\t t['fehfinalarabic'] = 0xFED2;\n\t t['fehinitialarabic'] = 0xFED3;\n\t t['fehmedialarabic'] = 0xFED4;\n\t t['feicoptic'] = 0x03E5;\n\t t['female'] = 0x2640;\n\t t['ff'] = 0xFB00;\n\t t['ffi'] = 0xFB03;\n\t t['ffl'] = 0xFB04;\n\t t['fi'] = 0xFB01;\n\t t['fifteencircle'] = 0x246E;\n\t t['fifteenparen'] = 0x2482;\n\t t['fifteenperiod'] = 0x2496;\n\t t['figuredash'] = 0x2012;\n\t t['filledbox'] = 0x25A0;\n\t t['filledrect'] = 0x25AC;\n\t t['finalkaf'] = 0x05DA;\n\t t['finalkafdagesh'] = 0xFB3A;\n\t t['finalkafdageshhebrew'] = 0xFB3A;\n\t t['finalkafhebrew'] = 0x05DA;\n\t t['finalmem'] = 0x05DD;\n\t t['finalmemhebrew'] = 0x05DD;\n\t t['finalnun'] = 0x05DF;\n\t t['finalnunhebrew'] = 0x05DF;\n\t t['finalpe'] = 0x05E3;\n\t t['finalpehebrew'] = 0x05E3;\n\t t['finaltsadi'] = 0x05E5;\n\t t['finaltsadihebrew'] = 0x05E5;\n\t t['firsttonechinese'] = 0x02C9;\n\t t['fisheye'] = 0x25C9;\n\t t['fitacyrillic'] = 0x0473;\n\t t['five'] = 0x0035;\n\t t['fivearabic'] = 0x0665;\n\t t['fivebengali'] = 0x09EB;\n\t t['fivecircle'] = 0x2464;\n\t t['fivecircleinversesansserif'] = 0x278E;\n\t t['fivedeva'] = 0x096B;\n\t t['fiveeighths'] = 0x215D;\n\t t['fivegujarati'] = 0x0AEB;\n\t t['fivegurmukhi'] = 0x0A6B;\n\t t['fivehackarabic'] = 0x0665;\n\t t['fivehangzhou'] = 0x3025;\n\t t['fiveideographicparen'] = 0x3224;\n\t t['fiveinferior'] = 0x2085;\n\t t['fivemonospace'] = 0xFF15;\n\t t['fiveoldstyle'] = 0xF735;\n\t t['fiveparen'] = 0x2478;\n\t t['fiveperiod'] = 0x248C;\n\t t['fivepersian'] = 0x06F5;\n\t t['fiveroman'] = 0x2174;\n\t t['fivesuperior'] = 0x2075;\n\t t['fivethai'] = 0x0E55;\n\t t['fl'] = 0xFB02;\n\t t['florin'] = 0x0192;\n\t t['fmonospace'] = 0xFF46;\n\t t['fmsquare'] = 0x3399;\n\t t['fofanthai'] = 0x0E1F;\n\t t['fofathai'] = 0x0E1D;\n\t t['fongmanthai'] = 0x0E4F;\n\t t['forall'] = 0x2200;\n\t t['four'] = 0x0034;\n\t t['fourarabic'] = 0x0664;\n\t t['fourbengali'] = 0x09EA;\n\t t['fourcircle'] = 0x2463;\n\t t['fourcircleinversesansserif'] = 0x278D;\n\t t['fourdeva'] = 0x096A;\n\t t['fourgujarati'] = 0x0AEA;\n\t t['fourgurmukhi'] = 0x0A6A;\n\t t['fourhackarabic'] = 0x0664;\n\t t['fourhangzhou'] = 0x3024;\n\t t['fourideographicparen'] = 0x3223;\n\t t['fourinferior'] = 0x2084;\n\t t['fourmonospace'] = 0xFF14;\n\t t['fournumeratorbengali'] = 0x09F7;\n\t t['fouroldstyle'] = 0xF734;\n\t t['fourparen'] = 0x2477;\n\t t['fourperiod'] = 0x248B;\n\t t['fourpersian'] = 0x06F4;\n\t t['fourroman'] = 0x2173;\n\t t['foursuperior'] = 0x2074;\n\t t['fourteencircle'] = 0x246D;\n\t t['fourteenparen'] = 0x2481;\n\t t['fourteenperiod'] = 0x2495;\n\t t['fourthai'] = 0x0E54;\n\t t['fourthtonechinese'] = 0x02CB;\n\t t['fparen'] = 0x24A1;\n\t t['fraction'] = 0x2044;\n\t t['franc'] = 0x20A3;\n\t t['g'] = 0x0067;\n\t t['gabengali'] = 0x0997;\n\t t['gacute'] = 0x01F5;\n\t t['gadeva'] = 0x0917;\n\t t['gafarabic'] = 0x06AF;\n\t t['gaffinalarabic'] = 0xFB93;\n\t t['gafinitialarabic'] = 0xFB94;\n\t t['gafmedialarabic'] = 0xFB95;\n\t t['gagujarati'] = 0x0A97;\n\t t['gagurmukhi'] = 0x0A17;\n\t t['gahiragana'] = 0x304C;\n\t t['gakatakana'] = 0x30AC;\n\t t['gamma'] = 0x03B3;\n\t t['gammalatinsmall'] = 0x0263;\n\t t['gammasuperior'] = 0x02E0;\n\t t['gangiacoptic'] = 0x03EB;\n\t t['gbopomofo'] = 0x310D;\n\t t['gbreve'] = 0x011F;\n\t t['gcaron'] = 0x01E7;\n\t t['gcedilla'] = 0x0123;\n\t t['gcircle'] = 0x24D6;\n\t t['gcircumflex'] = 0x011D;\n\t t['gcommaaccent'] = 0x0123;\n\t t['gdot'] = 0x0121;\n\t t['gdotaccent'] = 0x0121;\n\t t['gecyrillic'] = 0x0433;\n\t t['gehiragana'] = 0x3052;\n\t t['gekatakana'] = 0x30B2;\n\t t['geometricallyequal'] = 0x2251;\n\t t['gereshaccenthebrew'] = 0x059C;\n\t t['gereshhebrew'] = 0x05F3;\n\t t['gereshmuqdamhebrew'] = 0x059D;\n\t t['germandbls'] = 0x00DF;\n\t t['gershayimaccenthebrew'] = 0x059E;\n\t t['gershayimhebrew'] = 0x05F4;\n\t t['getamark'] = 0x3013;\n\t t['ghabengali'] = 0x0998;\n\t t['ghadarmenian'] = 0x0572;\n\t t['ghadeva'] = 0x0918;\n\t t['ghagujarati'] = 0x0A98;\n\t t['ghagurmukhi'] = 0x0A18;\n\t t['ghainarabic'] = 0x063A;\n\t t['ghainfinalarabic'] = 0xFECE;\n\t t['ghaininitialarabic'] = 0xFECF;\n\t t['ghainmedialarabic'] = 0xFED0;\n\t t['ghemiddlehookcyrillic'] = 0x0495;\n\t t['ghestrokecyrillic'] = 0x0493;\n\t t['gheupturncyrillic'] = 0x0491;\n\t t['ghhadeva'] = 0x095A;\n\t t['ghhagurmukhi'] = 0x0A5A;\n\t t['ghook'] = 0x0260;\n\t t['ghzsquare'] = 0x3393;\n\t t['gihiragana'] = 0x304E;\n\t t['gikatakana'] = 0x30AE;\n\t t['gimarmenian'] = 0x0563;\n\t t['gimel'] = 0x05D2;\n\t t['gimeldagesh'] = 0xFB32;\n\t t['gimeldageshhebrew'] = 0xFB32;\n\t t['gimelhebrew'] = 0x05D2;\n\t t['gjecyrillic'] = 0x0453;\n\t t['glottalinvertedstroke'] = 0x01BE;\n\t t['glottalstop'] = 0x0294;\n\t t['glottalstopinverted'] = 0x0296;\n\t t['glottalstopmod'] = 0x02C0;\n\t t['glottalstopreversed'] = 0x0295;\n\t t['glottalstopreversedmod'] = 0x02C1;\n\t t['glottalstopreversedsuperior'] = 0x02E4;\n\t t['glottalstopstroke'] = 0x02A1;\n\t t['glottalstopstrokereversed'] = 0x02A2;\n\t t['gmacron'] = 0x1E21;\n\t t['gmonospace'] = 0xFF47;\n\t t['gohiragana'] = 0x3054;\n\t t['gokatakana'] = 0x30B4;\n\t t['gparen'] = 0x24A2;\n\t t['gpasquare'] = 0x33AC;\n\t t['gradient'] = 0x2207;\n\t t['grave'] = 0x0060;\n\t t['gravebelowcmb'] = 0x0316;\n\t t['gravecmb'] = 0x0300;\n\t t['gravecomb'] = 0x0300;\n\t t['gravedeva'] = 0x0953;\n\t t['gravelowmod'] = 0x02CE;\n\t t['gravemonospace'] = 0xFF40;\n\t t['gravetonecmb'] = 0x0340;\n\t t['greater'] = 0x003E;\n\t t['greaterequal'] = 0x2265;\n\t t['greaterequalorless'] = 0x22DB;\n\t t['greatermonospace'] = 0xFF1E;\n\t t['greaterorequivalent'] = 0x2273;\n\t t['greaterorless'] = 0x2277;\n\t t['greateroverequal'] = 0x2267;\n\t t['greatersmall'] = 0xFE65;\n\t t['gscript'] = 0x0261;\n\t t['gstroke'] = 0x01E5;\n\t t['guhiragana'] = 0x3050;\n\t t['guillemotleft'] = 0x00AB;\n\t t['guillemotright'] = 0x00BB;\n\t t['guilsinglleft'] = 0x2039;\n\t t['guilsinglright'] = 0x203A;\n\t t['gukatakana'] = 0x30B0;\n\t t['guramusquare'] = 0x3318;\n\t t['gysquare'] = 0x33C9;\n\t t['h'] = 0x0068;\n\t t['haabkhasiancyrillic'] = 0x04A9;\n\t t['haaltonearabic'] = 0x06C1;\n\t t['habengali'] = 0x09B9;\n\t t['hadescendercyrillic'] = 0x04B3;\n\t t['hadeva'] = 0x0939;\n\t t['hagujarati'] = 0x0AB9;\n\t t['hagurmukhi'] = 0x0A39;\n\t t['haharabic'] = 0x062D;\n\t t['hahfinalarabic'] = 0xFEA2;\n\t t['hahinitialarabic'] = 0xFEA3;\n\t t['hahiragana'] = 0x306F;\n\t t['hahmedialarabic'] = 0xFEA4;\n\t t['haitusquare'] = 0x332A;\n\t t['hakatakana'] = 0x30CF;\n\t t['hakatakanahalfwidth'] = 0xFF8A;\n\t t['halantgurmukhi'] = 0x0A4D;\n\t t['hamzaarabic'] = 0x0621;\n\t t['hamzalowarabic'] = 0x0621;\n\t t['hangulfiller'] = 0x3164;\n\t t['hardsigncyrillic'] = 0x044A;\n\t t['harpoonleftbarbup'] = 0x21BC;\n\t t['harpoonrightbarbup'] = 0x21C0;\n\t t['hasquare'] = 0x33CA;\n\t t['hatafpatah'] = 0x05B2;\n\t t['hatafpatah16'] = 0x05B2;\n\t t['hatafpatah23'] = 0x05B2;\n\t t['hatafpatah2f'] = 0x05B2;\n\t t['hatafpatahhebrew'] = 0x05B2;\n\t t['hatafpatahnarrowhebrew'] = 0x05B2;\n\t t['hatafpatahquarterhebrew'] = 0x05B2;\n\t t['hatafpatahwidehebrew'] = 0x05B2;\n\t t['hatafqamats'] = 0x05B3;\n\t t['hatafqamats1b'] = 0x05B3;\n\t t['hatafqamats28'] = 0x05B3;\n\t t['hatafqamats34'] = 0x05B3;\n\t t['hatafqamatshebrew'] = 0x05B3;\n\t t['hatafqamatsnarrowhebrew'] = 0x05B3;\n\t t['hatafqamatsquarterhebrew'] = 0x05B3;\n\t t['hatafqamatswidehebrew'] = 0x05B3;\n\t t['hatafsegol'] = 0x05B1;\n\t t['hatafsegol17'] = 0x05B1;\n\t t['hatafsegol24'] = 0x05B1;\n\t t['hatafsegol30'] = 0x05B1;\n\t t['hatafsegolhebrew'] = 0x05B1;\n\t t['hatafsegolnarrowhebrew'] = 0x05B1;\n\t t['hatafsegolquarterhebrew'] = 0x05B1;\n\t t['hatafsegolwidehebrew'] = 0x05B1;\n\t t['hbar'] = 0x0127;\n\t t['hbopomofo'] = 0x310F;\n\t t['hbrevebelow'] = 0x1E2B;\n\t t['hcedilla'] = 0x1E29;\n\t t['hcircle'] = 0x24D7;\n\t t['hcircumflex'] = 0x0125;\n\t t['hdieresis'] = 0x1E27;\n\t t['hdotaccent'] = 0x1E23;\n\t t['hdotbelow'] = 0x1E25;\n\t t['he'] = 0x05D4;\n\t t['heart'] = 0x2665;\n\t t['heartsuitblack'] = 0x2665;\n\t t['heartsuitwhite'] = 0x2661;\n\t t['hedagesh'] = 0xFB34;\n\t t['hedageshhebrew'] = 0xFB34;\n\t t['hehaltonearabic'] = 0x06C1;\n\t t['heharabic'] = 0x0647;\n\t t['hehebrew'] = 0x05D4;\n\t t['hehfinalaltonearabic'] = 0xFBA7;\n\t t['hehfinalalttwoarabic'] = 0xFEEA;\n\t t['hehfinalarabic'] = 0xFEEA;\n\t t['hehhamzaabovefinalarabic'] = 0xFBA5;\n\t t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n\t t['hehinitialaltonearabic'] = 0xFBA8;\n\t t['hehinitialarabic'] = 0xFEEB;\n\t t['hehiragana'] = 0x3078;\n\t t['hehmedialaltonearabic'] = 0xFBA9;\n\t t['hehmedialarabic'] = 0xFEEC;\n\t t['heiseierasquare'] = 0x337B;\n\t t['hekatakana'] = 0x30D8;\n\t t['hekatakanahalfwidth'] = 0xFF8D;\n\t t['hekutaarusquare'] = 0x3336;\n\t t['henghook'] = 0x0267;\n\t t['herutusquare'] = 0x3339;\n\t t['het'] = 0x05D7;\n\t t['hethebrew'] = 0x05D7;\n\t t['hhook'] = 0x0266;\n\t t['hhooksuperior'] = 0x02B1;\n\t t['hieuhacirclekorean'] = 0x327B;\n\t t['hieuhaparenkorean'] = 0x321B;\n\t t['hieuhcirclekorean'] = 0x326D;\n\t t['hieuhkorean'] = 0x314E;\n\t t['hieuhparenkorean'] = 0x320D;\n\t t['hihiragana'] = 0x3072;\n\t t['hikatakana'] = 0x30D2;\n\t t['hikatakanahalfwidth'] = 0xFF8B;\n\t t['hiriq'] = 0x05B4;\n\t t['hiriq14'] = 0x05B4;\n\t t['hiriq21'] = 0x05B4;\n\t t['hiriq2d'] = 0x05B4;\n\t t['hiriqhebrew'] = 0x05B4;\n\t t['hiriqnarrowhebrew'] = 0x05B4;\n\t t['hiriqquarterhebrew'] = 0x05B4;\n\t t['hiriqwidehebrew'] = 0x05B4;\n\t t['hlinebelow'] = 0x1E96;\n\t t['hmonospace'] = 0xFF48;\n\t t['hoarmenian'] = 0x0570;\n\t t['hohipthai'] = 0x0E2B;\n\t t['hohiragana'] = 0x307B;\n\t t['hokatakana'] = 0x30DB;\n\t t['hokatakanahalfwidth'] = 0xFF8E;\n\t t['holam'] = 0x05B9;\n\t t['holam19'] = 0x05B9;\n\t t['holam26'] = 0x05B9;\n\t t['holam32'] = 0x05B9;\n\t t['holamhebrew'] = 0x05B9;\n\t t['holamnarrowhebrew'] = 0x05B9;\n\t t['holamquarterhebrew'] = 0x05B9;\n\t t['holamwidehebrew'] = 0x05B9;\n\t t['honokhukthai'] = 0x0E2E;\n\t t['hookabovecomb'] = 0x0309;\n\t t['hookcmb'] = 0x0309;\n\t t['hookpalatalizedbelowcmb'] = 0x0321;\n\t t['hookretroflexbelowcmb'] = 0x0322;\n\t t['hoonsquare'] = 0x3342;\n\t t['horicoptic'] = 0x03E9;\n\t t['horizontalbar'] = 0x2015;\n\t t['horncmb'] = 0x031B;\n\t t['hotsprings'] = 0x2668;\n\t t['house'] = 0x2302;\n\t t['hparen'] = 0x24A3;\n\t t['hsuperior'] = 0x02B0;\n\t t['hturned'] = 0x0265;\n\t t['huhiragana'] = 0x3075;\n\t t['huiitosquare'] = 0x3333;\n\t t['hukatakana'] = 0x30D5;\n\t t['hukatakanahalfwidth'] = 0xFF8C;\n\t t['hungarumlaut'] = 0x02DD;\n\t t['hungarumlautcmb'] = 0x030B;\n\t t['hv'] = 0x0195;\n\t t['hyphen'] = 0x002D;\n\t t['hypheninferior'] = 0xF6E5;\n\t t['hyphenmonospace'] = 0xFF0D;\n\t t['hyphensmall'] = 0xFE63;\n\t t['hyphensuperior'] = 0xF6E6;\n\t t['hyphentwo'] = 0x2010;\n\t t['i'] = 0x0069;\n\t t['iacute'] = 0x00ED;\n\t t['iacyrillic'] = 0x044F;\n\t t['ibengali'] = 0x0987;\n\t t['ibopomofo'] = 0x3127;\n\t t['ibreve'] = 0x012D;\n\t t['icaron'] = 0x01D0;\n\t t['icircle'] = 0x24D8;\n\t t['icircumflex'] = 0x00EE;\n\t t['icyrillic'] = 0x0456;\n\t t['idblgrave'] = 0x0209;\n\t t['ideographearthcircle'] = 0x328F;\n\t t['ideographfirecircle'] = 0x328B;\n\t t['ideographicallianceparen'] = 0x323F;\n\t t['ideographiccallparen'] = 0x323A;\n\t t['ideographiccentrecircle'] = 0x32A5;\n\t t['ideographicclose'] = 0x3006;\n\t t['ideographiccomma'] = 0x3001;\n\t t['ideographiccommaleft'] = 0xFF64;\n\t t['ideographiccongratulationparen'] = 0x3237;\n\t t['ideographiccorrectcircle'] = 0x32A3;\n\t t['ideographicearthparen'] = 0x322F;\n\t t['ideographicenterpriseparen'] = 0x323D;\n\t t['ideographicexcellentcircle'] = 0x329D;\n\t t['ideographicfestivalparen'] = 0x3240;\n\t t['ideographicfinancialcircle'] = 0x3296;\n\t t['ideographicfinancialparen'] = 0x3236;\n\t t['ideographicfireparen'] = 0x322B;\n\t t['ideographichaveparen'] = 0x3232;\n\t t['ideographichighcircle'] = 0x32A4;\n\t t['ideographiciterationmark'] = 0x3005;\n\t t['ideographiclaborcircle'] = 0x3298;\n\t t['ideographiclaborparen'] = 0x3238;\n\t t['ideographicleftcircle'] = 0x32A7;\n\t t['ideographiclowcircle'] = 0x32A6;\n\t t['ideographicmedicinecircle'] = 0x32A9;\n\t t['ideographicmetalparen'] = 0x322E;\n\t t['ideographicmoonparen'] = 0x322A;\n\t t['ideographicnameparen'] = 0x3234;\n\t t['ideographicperiod'] = 0x3002;\n\t t['ideographicprintcircle'] = 0x329E;\n\t t['ideographicreachparen'] = 0x3243;\n\t t['ideographicrepresentparen'] = 0x3239;\n\t t['ideographicresourceparen'] = 0x323E;\n\t t['ideographicrightcircle'] = 0x32A8;\n\t t['ideographicsecretcircle'] = 0x3299;\n\t t['ideographicselfparen'] = 0x3242;\n\t t['ideographicsocietyparen'] = 0x3233;\n\t t['ideographicspace'] = 0x3000;\n\t t['ideographicspecialparen'] = 0x3235;\n\t t['ideographicstockparen'] = 0x3231;\n\t t['ideographicstudyparen'] = 0x323B;\n\t t['ideographicsunparen'] = 0x3230;\n\t t['ideographicsuperviseparen'] = 0x323C;\n\t t['ideographicwaterparen'] = 0x322C;\n\t t['ideographicwoodparen'] = 0x322D;\n\t t['ideographiczero'] = 0x3007;\n\t t['ideographmetalcircle'] = 0x328E;\n\t t['ideographmooncircle'] = 0x328A;\n\t t['ideographnamecircle'] = 0x3294;\n\t t['ideographsuncircle'] = 0x3290;\n\t t['ideographwatercircle'] = 0x328C;\n\t t['ideographwoodcircle'] = 0x328D;\n\t t['ideva'] = 0x0907;\n\t t['idieresis'] = 0x00EF;\n\t t['idieresisacute'] = 0x1E2F;\n\t t['idieresiscyrillic'] = 0x04E5;\n\t t['idotbelow'] = 0x1ECB;\n\t t['iebrevecyrillic'] = 0x04D7;\n\t t['iecyrillic'] = 0x0435;\n\t t['ieungacirclekorean'] = 0x3275;\n\t t['ieungaparenkorean'] = 0x3215;\n\t t['ieungcirclekorean'] = 0x3267;\n\t t['ieungkorean'] = 0x3147;\n\t t['ieungparenkorean'] = 0x3207;\n\t t['igrave'] = 0x00EC;\n\t t['igujarati'] = 0x0A87;\n\t t['igurmukhi'] = 0x0A07;\n\t t['ihiragana'] = 0x3044;\n\t t['ihookabove'] = 0x1EC9;\n\t t['iibengali'] = 0x0988;\n\t t['iicyrillic'] = 0x0438;\n\t t['iideva'] = 0x0908;\n\t t['iigujarati'] = 0x0A88;\n\t t['iigurmukhi'] = 0x0A08;\n\t t['iimatragurmukhi'] = 0x0A40;\n\t t['iinvertedbreve'] = 0x020B;\n\t t['iishortcyrillic'] = 0x0439;\n\t t['iivowelsignbengali'] = 0x09C0;\n\t t['iivowelsigndeva'] = 0x0940;\n\t t['iivowelsigngujarati'] = 0x0AC0;\n\t t['ij'] = 0x0133;\n\t t['ikatakana'] = 0x30A4;\n\t t['ikatakanahalfwidth'] = 0xFF72;\n\t t['ikorean'] = 0x3163;\n\t t['ilde'] = 0x02DC;\n\t t['iluyhebrew'] = 0x05AC;\n\t t['imacron'] = 0x012B;\n\t t['imacroncyrillic'] = 0x04E3;\n\t t['imageorapproximatelyequal'] = 0x2253;\n\t t['imatragurmukhi'] = 0x0A3F;\n\t t['imonospace'] = 0xFF49;\n\t t['increment'] = 0x2206;\n\t t['infinity'] = 0x221E;\n\t t['iniarmenian'] = 0x056B;\n\t t['integral'] = 0x222B;\n\t t['integralbottom'] = 0x2321;\n\t t['integralbt'] = 0x2321;\n\t t['integralex'] = 0xF8F5;\n\t t['integraltop'] = 0x2320;\n\t t['integraltp'] = 0x2320;\n\t t['intersection'] = 0x2229;\n\t t['intisquare'] = 0x3305;\n\t t['invbullet'] = 0x25D8;\n\t t['invcircle'] = 0x25D9;\n\t t['invsmileface'] = 0x263B;\n\t t['iocyrillic'] = 0x0451;\n\t t['iogonek'] = 0x012F;\n\t t['iota'] = 0x03B9;\n\t t['iotadieresis'] = 0x03CA;\n\t t['iotadieresistonos'] = 0x0390;\n\t t['iotalatin'] = 0x0269;\n\t t['iotatonos'] = 0x03AF;\n\t t['iparen'] = 0x24A4;\n\t t['irigurmukhi'] = 0x0A72;\n\t t['ismallhiragana'] = 0x3043;\n\t t['ismallkatakana'] = 0x30A3;\n\t t['ismallkatakanahalfwidth'] = 0xFF68;\n\t t['issharbengali'] = 0x09FA;\n\t t['istroke'] = 0x0268;\n\t t['isuperior'] = 0xF6ED;\n\t t['iterationhiragana'] = 0x309D;\n\t t['iterationkatakana'] = 0x30FD;\n\t t['itilde'] = 0x0129;\n\t t['itildebelow'] = 0x1E2D;\n\t t['iubopomofo'] = 0x3129;\n\t t['iucyrillic'] = 0x044E;\n\t t['ivowelsignbengali'] = 0x09BF;\n\t t['ivowelsigndeva'] = 0x093F;\n\t t['ivowelsigngujarati'] = 0x0ABF;\n\t t['izhitsacyrillic'] = 0x0475;\n\t t['izhitsadblgravecyrillic'] = 0x0477;\n\t t['j'] = 0x006A;\n\t t['jaarmenian'] = 0x0571;\n\t t['jabengali'] = 0x099C;\n\t t['jadeva'] = 0x091C;\n\t t['jagujarati'] = 0x0A9C;\n\t t['jagurmukhi'] = 0x0A1C;\n\t t['jbopomofo'] = 0x3110;\n\t t['jcaron'] = 0x01F0;\n\t t['jcircle'] = 0x24D9;\n\t t['jcircumflex'] = 0x0135;\n\t t['jcrossedtail'] = 0x029D;\n\t t['jdotlessstroke'] = 0x025F;\n\t t['jecyrillic'] = 0x0458;\n\t t['jeemarabic'] = 0x062C;\n\t t['jeemfinalarabic'] = 0xFE9E;\n\t t['jeeminitialarabic'] = 0xFE9F;\n\t t['jeemmedialarabic'] = 0xFEA0;\n\t t['jeharabic'] = 0x0698;\n\t t['jehfinalarabic'] = 0xFB8B;\n\t t['jhabengali'] = 0x099D;\n\t t['jhadeva'] = 0x091D;\n\t t['jhagujarati'] = 0x0A9D;\n\t t['jhagurmukhi'] = 0x0A1D;\n\t t['jheharmenian'] = 0x057B;\n\t t['jis'] = 0x3004;\n\t t['jmonospace'] = 0xFF4A;\n\t t['jparen'] = 0x24A5;\n\t t['jsuperior'] = 0x02B2;\n\t t['k'] = 0x006B;\n\t t['kabashkircyrillic'] = 0x04A1;\n\t t['kabengali'] = 0x0995;\n\t t['kacute'] = 0x1E31;\n\t t['kacyrillic'] = 0x043A;\n\t t['kadescendercyrillic'] = 0x049B;\n\t t['kadeva'] = 0x0915;\n\t t['kaf'] = 0x05DB;\n\t t['kafarabic'] = 0x0643;\n\t t['kafdagesh'] = 0xFB3B;\n\t t['kafdageshhebrew'] = 0xFB3B;\n\t t['kaffinalarabic'] = 0xFEDA;\n\t t['kafhebrew'] = 0x05DB;\n\t t['kafinitialarabic'] = 0xFEDB;\n\t t['kafmedialarabic'] = 0xFEDC;\n\t t['kafrafehebrew'] = 0xFB4D;\n\t t['kagujarati'] = 0x0A95;\n\t t['kagurmukhi'] = 0x0A15;\n\t t['kahiragana'] = 0x304B;\n\t t['kahookcyrillic'] = 0x04C4;\n\t t['kakatakana'] = 0x30AB;\n\t t['kakatakanahalfwidth'] = 0xFF76;\n\t t['kappa'] = 0x03BA;\n\t t['kappasymbolgreek'] = 0x03F0;\n\t t['kapyeounmieumkorean'] = 0x3171;\n\t t['kapyeounphieuphkorean'] = 0x3184;\n\t t['kapyeounpieupkorean'] = 0x3178;\n\t t['kapyeounssangpieupkorean'] = 0x3179;\n\t t['karoriisquare'] = 0x330D;\n\t t['kashidaautoarabic'] = 0x0640;\n\t t['kashidaautonosidebearingarabic'] = 0x0640;\n\t t['kasmallkatakana'] = 0x30F5;\n\t t['kasquare'] = 0x3384;\n\t t['kasraarabic'] = 0x0650;\n\t t['kasratanarabic'] = 0x064D;\n\t t['kastrokecyrillic'] = 0x049F;\n\t t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n\t t['kaverticalstrokecyrillic'] = 0x049D;\n\t t['kbopomofo'] = 0x310E;\n\t t['kcalsquare'] = 0x3389;\n\t t['kcaron'] = 0x01E9;\n\t t['kcedilla'] = 0x0137;\n\t t['kcircle'] = 0x24DA;\n\t t['kcommaaccent'] = 0x0137;\n\t t['kdotbelow'] = 0x1E33;\n\t t['keharmenian'] = 0x0584;\n\t t['kehiragana'] = 0x3051;\n\t t['kekatakana'] = 0x30B1;\n\t t['kekatakanahalfwidth'] = 0xFF79;\n\t t['kenarmenian'] = 0x056F;\n\t t['kesmallkatakana'] = 0x30F6;\n\t t['kgreenlandic'] = 0x0138;\n\t t['khabengali'] = 0x0996;\n\t t['khacyrillic'] = 0x0445;\n\t t['khadeva'] = 0x0916;\n\t t['khagujarati'] = 0x0A96;\n\t t['khagurmukhi'] = 0x0A16;\n\t t['khaharabic'] = 0x062E;\n\t t['khahfinalarabic'] = 0xFEA6;\n\t t['khahinitialarabic'] = 0xFEA7;\n\t t['khahmedialarabic'] = 0xFEA8;\n\t t['kheicoptic'] = 0x03E7;\n\t t['khhadeva'] = 0x0959;\n\t t['khhagurmukhi'] = 0x0A59;\n\t t['khieukhacirclekorean'] = 0x3278;\n\t t['khieukhaparenkorean'] = 0x3218;\n\t t['khieukhcirclekorean'] = 0x326A;\n\t t['khieukhkorean'] = 0x314B;\n\t t['khieukhparenkorean'] = 0x320A;\n\t t['khokhaithai'] = 0x0E02;\n\t t['khokhonthai'] = 0x0E05;\n\t t['khokhuatthai'] = 0x0E03;\n\t t['khokhwaithai'] = 0x0E04;\n\t t['khomutthai'] = 0x0E5B;\n\t t['khook'] = 0x0199;\n\t t['khorakhangthai'] = 0x0E06;\n\t t['khzsquare'] = 0x3391;\n\t t['kihiragana'] = 0x304D;\n\t t['kikatakana'] = 0x30AD;\n\t t['kikatakanahalfwidth'] = 0xFF77;\n\t t['kiroguramusquare'] = 0x3315;\n\t t['kiromeetorusquare'] = 0x3316;\n\t t['kirosquare'] = 0x3314;\n\t t['kiyeokacirclekorean'] = 0x326E;\n\t t['kiyeokaparenkorean'] = 0x320E;\n\t t['kiyeokcirclekorean'] = 0x3260;\n\t t['kiyeokkorean'] = 0x3131;\n\t t['kiyeokparenkorean'] = 0x3200;\n\t t['kiyeoksioskorean'] = 0x3133;\n\t t['kjecyrillic'] = 0x045C;\n\t t['klinebelow'] = 0x1E35;\n\t t['klsquare'] = 0x3398;\n\t t['kmcubedsquare'] = 0x33A6;\n\t t['kmonospace'] = 0xFF4B;\n\t t['kmsquaredsquare'] = 0x33A2;\n\t t['kohiragana'] = 0x3053;\n\t t['kohmsquare'] = 0x33C0;\n\t t['kokaithai'] = 0x0E01;\n\t t['kokatakana'] = 0x30B3;\n\t t['kokatakanahalfwidth'] = 0xFF7A;\n\t t['kooposquare'] = 0x331E;\n\t t['koppacyrillic'] = 0x0481;\n\t t['koreanstandardsymbol'] = 0x327F;\n\t t['koroniscmb'] = 0x0343;\n\t t['kparen'] = 0x24A6;\n\t t['kpasquare'] = 0x33AA;\n\t t['ksicyrillic'] = 0x046F;\n\t t['ktsquare'] = 0x33CF;\n\t t['kturned'] = 0x029E;\n\t t['kuhiragana'] = 0x304F;\n\t t['kukatakana'] = 0x30AF;\n\t t['kukatakanahalfwidth'] = 0xFF78;\n\t t['kvsquare'] = 0x33B8;\n\t t['kwsquare'] = 0x33BE;\n\t t['l'] = 0x006C;\n\t t['labengali'] = 0x09B2;\n\t t['lacute'] = 0x013A;\n\t t['ladeva'] = 0x0932;\n\t t['lagujarati'] = 0x0AB2;\n\t t['lagurmukhi'] = 0x0A32;\n\t t['lakkhangyaothai'] = 0x0E45;\n\t t['lamaleffinalarabic'] = 0xFEFC;\n\t t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n\t t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n\t t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n\t t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n\t t['lamalefisolatedarabic'] = 0xFEFB;\n\t t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n\t t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n\t t['lamarabic'] = 0x0644;\n\t t['lambda'] = 0x03BB;\n\t t['lambdastroke'] = 0x019B;\n\t t['lamed'] = 0x05DC;\n\t t['lameddagesh'] = 0xFB3C;\n\t t['lameddageshhebrew'] = 0xFB3C;\n\t t['lamedhebrew'] = 0x05DC;\n\t t['lamfinalarabic'] = 0xFEDE;\n\t t['lamhahinitialarabic'] = 0xFCCA;\n\t t['laminitialarabic'] = 0xFEDF;\n\t t['lamjeeminitialarabic'] = 0xFCC9;\n\t t['lamkhahinitialarabic'] = 0xFCCB;\n\t t['lamlamhehisolatedarabic'] = 0xFDF2;\n\t t['lammedialarabic'] = 0xFEE0;\n\t t['lammeemhahinitialarabic'] = 0xFD88;\n\t t['lammeeminitialarabic'] = 0xFCCC;\n\t t['largecircle'] = 0x25EF;\n\t t['lbar'] = 0x019A;\n\t t['lbelt'] = 0x026C;\n\t t['lbopomofo'] = 0x310C;\n\t t['lcaron'] = 0x013E;\n\t t['lcedilla'] = 0x013C;\n\t t['lcircle'] = 0x24DB;\n\t t['lcircumflexbelow'] = 0x1E3D;\n\t t['lcommaaccent'] = 0x013C;\n\t t['ldot'] = 0x0140;\n\t t['ldotaccent'] = 0x0140;\n\t t['ldotbelow'] = 0x1E37;\n\t t['ldotbelowmacron'] = 0x1E39;\n\t t['leftangleabovecmb'] = 0x031A;\n\t t['lefttackbelowcmb'] = 0x0318;\n\t t['less'] = 0x003C;\n\t t['lessequal'] = 0x2264;\n\t t['lessequalorgreater'] = 0x22DA;\n\t t['lessmonospace'] = 0xFF1C;\n\t t['lessorequivalent'] = 0x2272;\n\t t['lessorgreater'] = 0x2276;\n\t t['lessoverequal'] = 0x2266;\n\t t['lesssmall'] = 0xFE64;\n\t t['lezh'] = 0x026E;\n\t t['lfblock'] = 0x258C;\n\t t['lhookretroflex'] = 0x026D;\n\t t['lira'] = 0x20A4;\n\t t['liwnarmenian'] = 0x056C;\n\t t['lj'] = 0x01C9;\n\t t['ljecyrillic'] = 0x0459;\n\t t['ll'] = 0xF6C0;\n\t t['lladeva'] = 0x0933;\n\t t['llagujarati'] = 0x0AB3;\n\t t['llinebelow'] = 0x1E3B;\n\t t['llladeva'] = 0x0934;\n\t t['llvocalicbengali'] = 0x09E1;\n\t t['llvocalicdeva'] = 0x0961;\n\t t['llvocalicvowelsignbengali'] = 0x09E3;\n\t t['llvocalicvowelsigndeva'] = 0x0963;\n\t t['lmiddletilde'] = 0x026B;\n\t t['lmonospace'] = 0xFF4C;\n\t t['lmsquare'] = 0x33D0;\n\t t['lochulathai'] = 0x0E2C;\n\t t['logicaland'] = 0x2227;\n\t t['logicalnot'] = 0x00AC;\n\t t['logicalnotreversed'] = 0x2310;\n\t t['logicalor'] = 0x2228;\n\t t['lolingthai'] = 0x0E25;\n\t t['longs'] = 0x017F;\n\t t['lowlinecenterline'] = 0xFE4E;\n\t t['lowlinecmb'] = 0x0332;\n\t t['lowlinedashed'] = 0xFE4D;\n\t t['lozenge'] = 0x25CA;\n\t t['lparen'] = 0x24A7;\n\t t['lslash'] = 0x0142;\n\t t['lsquare'] = 0x2113;\n\t t['lsuperior'] = 0xF6EE;\n\t t['ltshade'] = 0x2591;\n\t t['luthai'] = 0x0E26;\n\t t['lvocalicbengali'] = 0x098C;\n\t t['lvocalicdeva'] = 0x090C;\n\t t['lvocalicvowelsignbengali'] = 0x09E2;\n\t t['lvocalicvowelsigndeva'] = 0x0962;\n\t t['lxsquare'] = 0x33D3;\n\t t['m'] = 0x006D;\n\t t['mabengali'] = 0x09AE;\n\t t['macron'] = 0x00AF;\n\t t['macronbelowcmb'] = 0x0331;\n\t t['macroncmb'] = 0x0304;\n\t t['macronlowmod'] = 0x02CD;\n\t t['macronmonospace'] = 0xFFE3;\n\t t['macute'] = 0x1E3F;\n\t t['madeva'] = 0x092E;\n\t t['magujarati'] = 0x0AAE;\n\t t['magurmukhi'] = 0x0A2E;\n\t t['mahapakhhebrew'] = 0x05A4;\n\t t['mahapakhlefthebrew'] = 0x05A4;\n\t t['mahiragana'] = 0x307E;\n\t t['maichattawalowleftthai'] = 0xF895;\n\t t['maichattawalowrightthai'] = 0xF894;\n\t t['maichattawathai'] = 0x0E4B;\n\t t['maichattawaupperleftthai'] = 0xF893;\n\t t['maieklowleftthai'] = 0xF88C;\n\t t['maieklowrightthai'] = 0xF88B;\n\t t['maiekthai'] = 0x0E48;\n\t t['maiekupperleftthai'] = 0xF88A;\n\t t['maihanakatleftthai'] = 0xF884;\n\t t['maihanakatthai'] = 0x0E31;\n\t t['maitaikhuleftthai'] = 0xF889;\n\t t['maitaikhuthai'] = 0x0E47;\n\t t['maitholowleftthai'] = 0xF88F;\n\t t['maitholowrightthai'] = 0xF88E;\n\t t['maithothai'] = 0x0E49;\n\t t['maithoupperleftthai'] = 0xF88D;\n\t t['maitrilowleftthai'] = 0xF892;\n\t t['maitrilowrightthai'] = 0xF891;\n\t t['maitrithai'] = 0x0E4A;\n\t t['maitriupperleftthai'] = 0xF890;\n\t t['maiyamokthai'] = 0x0E46;\n\t t['makatakana'] = 0x30DE;\n\t t['makatakanahalfwidth'] = 0xFF8F;\n\t t['male'] = 0x2642;\n\t t['mansyonsquare'] = 0x3347;\n\t t['maqafhebrew'] = 0x05BE;\n\t t['mars'] = 0x2642;\n\t t['masoracirclehebrew'] = 0x05AF;\n\t t['masquare'] = 0x3383;\n\t t['mbopomofo'] = 0x3107;\n\t t['mbsquare'] = 0x33D4;\n\t t['mcircle'] = 0x24DC;\n\t t['mcubedsquare'] = 0x33A5;\n\t t['mdotaccent'] = 0x1E41;\n\t t['mdotbelow'] = 0x1E43;\n\t t['meemarabic'] = 0x0645;\n\t t['meemfinalarabic'] = 0xFEE2;\n\t t['meeminitialarabic'] = 0xFEE3;\n\t t['meemmedialarabic'] = 0xFEE4;\n\t t['meemmeeminitialarabic'] = 0xFCD1;\n\t t['meemmeemisolatedarabic'] = 0xFC48;\n\t t['meetorusquare'] = 0x334D;\n\t t['mehiragana'] = 0x3081;\n\t t['meizierasquare'] = 0x337E;\n\t t['mekatakana'] = 0x30E1;\n\t t['mekatakanahalfwidth'] = 0xFF92;\n\t t['mem'] = 0x05DE;\n\t t['memdagesh'] = 0xFB3E;\n\t t['memdageshhebrew'] = 0xFB3E;\n\t t['memhebrew'] = 0x05DE;\n\t t['menarmenian'] = 0x0574;\n\t t['merkhahebrew'] = 0x05A5;\n\t t['merkhakefulahebrew'] = 0x05A6;\n\t t['merkhakefulalefthebrew'] = 0x05A6;\n\t t['merkhalefthebrew'] = 0x05A5;\n\t t['mhook'] = 0x0271;\n\t t['mhzsquare'] = 0x3392;\n\t t['middledotkatakanahalfwidth'] = 0xFF65;\n\t t['middot'] = 0x00B7;\n\t t['mieumacirclekorean'] = 0x3272;\n\t t['mieumaparenkorean'] = 0x3212;\n\t t['mieumcirclekorean'] = 0x3264;\n\t t['mieumkorean'] = 0x3141;\n\t t['mieumpansioskorean'] = 0x3170;\n\t t['mieumparenkorean'] = 0x3204;\n\t t['mieumpieupkorean'] = 0x316E;\n\t t['mieumsioskorean'] = 0x316F;\n\t t['mihiragana'] = 0x307F;\n\t t['mikatakana'] = 0x30DF;\n\t t['mikatakanahalfwidth'] = 0xFF90;\n\t t['minus'] = 0x2212;\n\t t['minusbelowcmb'] = 0x0320;\n\t t['minuscircle'] = 0x2296;\n\t t['minusmod'] = 0x02D7;\n\t t['minusplus'] = 0x2213;\n\t t['minute'] = 0x2032;\n\t t['miribaarusquare'] = 0x334A;\n\t t['mirisquare'] = 0x3349;\n\t t['mlonglegturned'] = 0x0270;\n\t t['mlsquare'] = 0x3396;\n\t t['mmcubedsquare'] = 0x33A3;\n\t t['mmonospace'] = 0xFF4D;\n\t t['mmsquaredsquare'] = 0x339F;\n\t t['mohiragana'] = 0x3082;\n\t t['mohmsquare'] = 0x33C1;\n\t t['mokatakana'] = 0x30E2;\n\t t['mokatakanahalfwidth'] = 0xFF93;\n\t t['molsquare'] = 0x33D6;\n\t t['momathai'] = 0x0E21;\n\t t['moverssquare'] = 0x33A7;\n\t t['moverssquaredsquare'] = 0x33A8;\n\t t['mparen'] = 0x24A8;\n\t t['mpasquare'] = 0x33AB;\n\t t['mssquare'] = 0x33B3;\n\t t['msuperior'] = 0xF6EF;\n\t t['mturned'] = 0x026F;\n\t t['mu'] = 0x00B5;\n\t t['mu1'] = 0x00B5;\n\t t['muasquare'] = 0x3382;\n\t t['muchgreater'] = 0x226B;\n\t t['muchless'] = 0x226A;\n\t t['mufsquare'] = 0x338C;\n\t t['mugreek'] = 0x03BC;\n\t t['mugsquare'] = 0x338D;\n\t t['muhiragana'] = 0x3080;\n\t t['mukatakana'] = 0x30E0;\n\t t['mukatakanahalfwidth'] = 0xFF91;\n\t t['mulsquare'] = 0x3395;\n\t t['multiply'] = 0x00D7;\n\t t['mumsquare'] = 0x339B;\n\t t['munahhebrew'] = 0x05A3;\n\t t['munahlefthebrew'] = 0x05A3;\n\t t['musicalnote'] = 0x266A;\n\t t['musicalnotedbl'] = 0x266B;\n\t t['musicflatsign'] = 0x266D;\n\t t['musicsharpsign'] = 0x266F;\n\t t['mussquare'] = 0x33B2;\n\t t['muvsquare'] = 0x33B6;\n\t t['muwsquare'] = 0x33BC;\n\t t['mvmegasquare'] = 0x33B9;\n\t t['mvsquare'] = 0x33B7;\n\t t['mwmegasquare'] = 0x33BF;\n\t t['mwsquare'] = 0x33BD;\n\t t['n'] = 0x006E;\n\t t['nabengali'] = 0x09A8;\n\t t['nabla'] = 0x2207;\n\t t['nacute'] = 0x0144;\n\t t['nadeva'] = 0x0928;\n\t t['nagujarati'] = 0x0AA8;\n\t t['nagurmukhi'] = 0x0A28;\n\t t['nahiragana'] = 0x306A;\n\t t['nakatakana'] = 0x30CA;\n\t t['nakatakanahalfwidth'] = 0xFF85;\n\t t['napostrophe'] = 0x0149;\n\t t['nasquare'] = 0x3381;\n\t t['nbopomofo'] = 0x310B;\n\t t['nbspace'] = 0x00A0;\n\t t['ncaron'] = 0x0148;\n\t t['ncedilla'] = 0x0146;\n\t t['ncircle'] = 0x24DD;\n\t t['ncircumflexbelow'] = 0x1E4B;\n\t t['ncommaaccent'] = 0x0146;\n\t t['ndotaccent'] = 0x1E45;\n\t t['ndotbelow'] = 0x1E47;\n\t t['nehiragana'] = 0x306D;\n\t t['nekatakana'] = 0x30CD;\n\t t['nekatakanahalfwidth'] = 0xFF88;\n\t t['newsheqelsign'] = 0x20AA;\n\t t['nfsquare'] = 0x338B;\n\t t['ngabengali'] = 0x0999;\n\t t['ngadeva'] = 0x0919;\n\t t['ngagujarati'] = 0x0A99;\n\t t['ngagurmukhi'] = 0x0A19;\n\t t['ngonguthai'] = 0x0E07;\n\t t['nhiragana'] = 0x3093;\n\t t['nhookleft'] = 0x0272;\n\t t['nhookretroflex'] = 0x0273;\n\t t['nieunacirclekorean'] = 0x326F;\n\t t['nieunaparenkorean'] = 0x320F;\n\t t['nieuncieuckorean'] = 0x3135;\n\t t['nieuncirclekorean'] = 0x3261;\n\t t['nieunhieuhkorean'] = 0x3136;\n\t t['nieunkorean'] = 0x3134;\n\t t['nieunpansioskorean'] = 0x3168;\n\t t['nieunparenkorean'] = 0x3201;\n\t t['nieunsioskorean'] = 0x3167;\n\t t['nieuntikeutkorean'] = 0x3166;\n\t t['nihiragana'] = 0x306B;\n\t t['nikatakana'] = 0x30CB;\n\t t['nikatakanahalfwidth'] = 0xFF86;\n\t t['nikhahitleftthai'] = 0xF899;\n\t t['nikhahitthai'] = 0x0E4D;\n\t t['nine'] = 0x0039;\n\t t['ninearabic'] = 0x0669;\n\t t['ninebengali'] = 0x09EF;\n\t t['ninecircle'] = 0x2468;\n\t t['ninecircleinversesansserif'] = 0x2792;\n\t t['ninedeva'] = 0x096F;\n\t t['ninegujarati'] = 0x0AEF;\n\t t['ninegurmukhi'] = 0x0A6F;\n\t t['ninehackarabic'] = 0x0669;\n\t t['ninehangzhou'] = 0x3029;\n\t t['nineideographicparen'] = 0x3228;\n\t t['nineinferior'] = 0x2089;\n\t t['ninemonospace'] = 0xFF19;\n\t t['nineoldstyle'] = 0xF739;\n\t t['nineparen'] = 0x247C;\n\t t['nineperiod'] = 0x2490;\n\t t['ninepersian'] = 0x06F9;\n\t t['nineroman'] = 0x2178;\n\t t['ninesuperior'] = 0x2079;\n\t t['nineteencircle'] = 0x2472;\n\t t['nineteenparen'] = 0x2486;\n\t t['nineteenperiod'] = 0x249A;\n\t t['ninethai'] = 0x0E59;\n\t t['nj'] = 0x01CC;\n\t t['njecyrillic'] = 0x045A;\n\t t['nkatakana'] = 0x30F3;\n\t t['nkatakanahalfwidth'] = 0xFF9D;\n\t t['nlegrightlong'] = 0x019E;\n\t t['nlinebelow'] = 0x1E49;\n\t t['nmonospace'] = 0xFF4E;\n\t t['nmsquare'] = 0x339A;\n\t t['nnabengali'] = 0x09A3;\n\t t['nnadeva'] = 0x0923;\n\t t['nnagujarati'] = 0x0AA3;\n\t t['nnagurmukhi'] = 0x0A23;\n\t t['nnnadeva'] = 0x0929;\n\t t['nohiragana'] = 0x306E;\n\t t['nokatakana'] = 0x30CE;\n\t t['nokatakanahalfwidth'] = 0xFF89;\n\t t['nonbreakingspace'] = 0x00A0;\n\t t['nonenthai'] = 0x0E13;\n\t t['nonuthai'] = 0x0E19;\n\t t['noonarabic'] = 0x0646;\n\t t['noonfinalarabic'] = 0xFEE6;\n\t t['noonghunnaarabic'] = 0x06BA;\n\t t['noonghunnafinalarabic'] = 0xFB9F;\n\t t['nooninitialarabic'] = 0xFEE7;\n\t t['noonjeeminitialarabic'] = 0xFCD2;\n\t t['noonjeemisolatedarabic'] = 0xFC4B;\n\t t['noonmedialarabic'] = 0xFEE8;\n\t t['noonmeeminitialarabic'] = 0xFCD5;\n\t t['noonmeemisolatedarabic'] = 0xFC4E;\n\t t['noonnoonfinalarabic'] = 0xFC8D;\n\t t['notcontains'] = 0x220C;\n\t t['notelement'] = 0x2209;\n\t t['notelementof'] = 0x2209;\n\t t['notequal'] = 0x2260;\n\t t['notgreater'] = 0x226F;\n\t t['notgreaternorequal'] = 0x2271;\n\t t['notgreaternorless'] = 0x2279;\n\t t['notidentical'] = 0x2262;\n\t t['notless'] = 0x226E;\n\t t['notlessnorequal'] = 0x2270;\n\t t['notparallel'] = 0x2226;\n\t t['notprecedes'] = 0x2280;\n\t t['notsubset'] = 0x2284;\n\t t['notsucceeds'] = 0x2281;\n\t t['notsuperset'] = 0x2285;\n\t t['nowarmenian'] = 0x0576;\n\t t['nparen'] = 0x24A9;\n\t t['nssquare'] = 0x33B1;\n\t t['nsuperior'] = 0x207F;\n\t t['ntilde'] = 0x00F1;\n\t t['nu'] = 0x03BD;\n\t t['nuhiragana'] = 0x306C;\n\t t['nukatakana'] = 0x30CC;\n\t t['nukatakanahalfwidth'] = 0xFF87;\n\t t['nuktabengali'] = 0x09BC;\n\t t['nuktadeva'] = 0x093C;\n\t t['nuktagujarati'] = 0x0ABC;\n\t t['nuktagurmukhi'] = 0x0A3C;\n\t t['numbersign'] = 0x0023;\n\t t['numbersignmonospace'] = 0xFF03;\n\t t['numbersignsmall'] = 0xFE5F;\n\t t['numeralsigngreek'] = 0x0374;\n\t t['numeralsignlowergreek'] = 0x0375;\n\t t['numero'] = 0x2116;\n\t t['nun'] = 0x05E0;\n\t t['nundagesh'] = 0xFB40;\n\t t['nundageshhebrew'] = 0xFB40;\n\t t['nunhebrew'] = 0x05E0;\n\t t['nvsquare'] = 0x33B5;\n\t t['nwsquare'] = 0x33BB;\n\t t['nyabengali'] = 0x099E;\n\t t['nyadeva'] = 0x091E;\n\t t['nyagujarati'] = 0x0A9E;\n\t t['nyagurmukhi'] = 0x0A1E;\n\t t['o'] = 0x006F;\n\t t['oacute'] = 0x00F3;\n\t t['oangthai'] = 0x0E2D;\n\t t['obarred'] = 0x0275;\n\t t['obarredcyrillic'] = 0x04E9;\n\t t['obarreddieresiscyrillic'] = 0x04EB;\n\t t['obengali'] = 0x0993;\n\t t['obopomofo'] = 0x311B;\n\t t['obreve'] = 0x014F;\n\t t['ocandradeva'] = 0x0911;\n\t t['ocandragujarati'] = 0x0A91;\n\t t['ocandravowelsigndeva'] = 0x0949;\n\t t['ocandravowelsigngujarati'] = 0x0AC9;\n\t t['ocaron'] = 0x01D2;\n\t t['ocircle'] = 0x24DE;\n\t t['ocircumflex'] = 0x00F4;\n\t t['ocircumflexacute'] = 0x1ED1;\n\t t['ocircumflexdotbelow'] = 0x1ED9;\n\t t['ocircumflexgrave'] = 0x1ED3;\n\t t['ocircumflexhookabove'] = 0x1ED5;\n\t t['ocircumflextilde'] = 0x1ED7;\n\t t['ocyrillic'] = 0x043E;\n\t t['odblacute'] = 0x0151;\n\t t['odblgrave'] = 0x020D;\n\t t['odeva'] = 0x0913;\n\t t['odieresis'] = 0x00F6;\n\t t['odieresiscyrillic'] = 0x04E7;\n\t t['odotbelow'] = 0x1ECD;\n\t t['oe'] = 0x0153;\n\t t['oekorean'] = 0x315A;\n\t t['ogonek'] = 0x02DB;\n\t t['ogonekcmb'] = 0x0328;\n\t t['ograve'] = 0x00F2;\n\t t['ogujarati'] = 0x0A93;\n\t t['oharmenian'] = 0x0585;\n\t t['ohiragana'] = 0x304A;\n\t t['ohookabove'] = 0x1ECF;\n\t t['ohorn'] = 0x01A1;\n\t t['ohornacute'] = 0x1EDB;\n\t t['ohorndotbelow'] = 0x1EE3;\n\t t['ohorngrave'] = 0x1EDD;\n\t t['ohornhookabove'] = 0x1EDF;\n\t t['ohorntilde'] = 0x1EE1;\n\t t['ohungarumlaut'] = 0x0151;\n\t t['oi'] = 0x01A3;\n\t t['oinvertedbreve'] = 0x020F;\n\t t['okatakana'] = 0x30AA;\n\t t['okatakanahalfwidth'] = 0xFF75;\n\t t['okorean'] = 0x3157;\n\t t['olehebrew'] = 0x05AB;\n\t t['omacron'] = 0x014D;\n\t t['omacronacute'] = 0x1E53;\n\t t['omacrongrave'] = 0x1E51;\n\t t['omdeva'] = 0x0950;\n\t t['omega'] = 0x03C9;\n\t t['omega1'] = 0x03D6;\n\t t['omegacyrillic'] = 0x0461;\n\t t['omegalatinclosed'] = 0x0277;\n\t t['omegaroundcyrillic'] = 0x047B;\n\t t['omegatitlocyrillic'] = 0x047D;\n\t t['omegatonos'] = 0x03CE;\n\t t['omgujarati'] = 0x0AD0;\n\t t['omicron'] = 0x03BF;\n\t t['omicrontonos'] = 0x03CC;\n\t t['omonospace'] = 0xFF4F;\n\t t['one'] = 0x0031;\n\t t['onearabic'] = 0x0661;\n\t t['onebengali'] = 0x09E7;\n\t t['onecircle'] = 0x2460;\n\t t['onecircleinversesansserif'] = 0x278A;\n\t t['onedeva'] = 0x0967;\n\t t['onedotenleader'] = 0x2024;\n\t t['oneeighth'] = 0x215B;\n\t t['onefitted'] = 0xF6DC;\n\t t['onegujarati'] = 0x0AE7;\n\t t['onegurmukhi'] = 0x0A67;\n\t t['onehackarabic'] = 0x0661;\n\t t['onehalf'] = 0x00BD;\n\t t['onehangzhou'] = 0x3021;\n\t t['oneideographicparen'] = 0x3220;\n\t t['oneinferior'] = 0x2081;\n\t t['onemonospace'] = 0xFF11;\n\t t['onenumeratorbengali'] = 0x09F4;\n\t t['oneoldstyle'] = 0xF731;\n\t t['oneparen'] = 0x2474;\n\t t['oneperiod'] = 0x2488;\n\t t['onepersian'] = 0x06F1;\n\t t['onequarter'] = 0x00BC;\n\t t['oneroman'] = 0x2170;\n\t t['onesuperior'] = 0x00B9;\n\t t['onethai'] = 0x0E51;\n\t t['onethird'] = 0x2153;\n\t t['oogonek'] = 0x01EB;\n\t t['oogonekmacron'] = 0x01ED;\n\t t['oogurmukhi'] = 0x0A13;\n\t t['oomatragurmukhi'] = 0x0A4B;\n\t t['oopen'] = 0x0254;\n\t t['oparen'] = 0x24AA;\n\t t['openbullet'] = 0x25E6;\n\t t['option'] = 0x2325;\n\t t['ordfeminine'] = 0x00AA;\n\t t['ordmasculine'] = 0x00BA;\n\t t['orthogonal'] = 0x221F;\n\t t['oshortdeva'] = 0x0912;\n\t t['oshortvowelsigndeva'] = 0x094A;\n\t t['oslash'] = 0x00F8;\n\t t['oslashacute'] = 0x01FF;\n\t t['osmallhiragana'] = 0x3049;\n\t t['osmallkatakana'] = 0x30A9;\n\t t['osmallkatakanahalfwidth'] = 0xFF6B;\n\t t['ostrokeacute'] = 0x01FF;\n\t t['osuperior'] = 0xF6F0;\n\t t['otcyrillic'] = 0x047F;\n\t t['otilde'] = 0x00F5;\n\t t['otildeacute'] = 0x1E4D;\n\t t['otildedieresis'] = 0x1E4F;\n\t t['oubopomofo'] = 0x3121;\n\t t['overline'] = 0x203E;\n\t t['overlinecenterline'] = 0xFE4A;\n\t t['overlinecmb'] = 0x0305;\n\t t['overlinedashed'] = 0xFE49;\n\t t['overlinedblwavy'] = 0xFE4C;\n\t t['overlinewavy'] = 0xFE4B;\n\t t['overscore'] = 0x00AF;\n\t t['ovowelsignbengali'] = 0x09CB;\n\t t['ovowelsigndeva'] = 0x094B;\n\t t['ovowelsigngujarati'] = 0x0ACB;\n\t t['p'] = 0x0070;\n\t t['paampssquare'] = 0x3380;\n\t t['paasentosquare'] = 0x332B;\n\t t['pabengali'] = 0x09AA;\n\t t['pacute'] = 0x1E55;\n\t t['padeva'] = 0x092A;\n\t t['pagedown'] = 0x21DF;\n\t t['pageup'] = 0x21DE;\n\t t['pagujarati'] = 0x0AAA;\n\t t['pagurmukhi'] = 0x0A2A;\n\t t['pahiragana'] = 0x3071;\n\t t['paiyannoithai'] = 0x0E2F;\n\t t['pakatakana'] = 0x30D1;\n\t t['palatalizationcyrilliccmb'] = 0x0484;\n\t t['palochkacyrillic'] = 0x04C0;\n\t t['pansioskorean'] = 0x317F;\n\t t['paragraph'] = 0x00B6;\n\t t['parallel'] = 0x2225;\n\t t['parenleft'] = 0x0028;\n\t t['parenleftaltonearabic'] = 0xFD3E;\n\t t['parenleftbt'] = 0xF8ED;\n\t t['parenleftex'] = 0xF8EC;\n\t t['parenleftinferior'] = 0x208D;\n\t t['parenleftmonospace'] = 0xFF08;\n\t t['parenleftsmall'] = 0xFE59;\n\t t['parenleftsuperior'] = 0x207D;\n\t t['parenlefttp'] = 0xF8EB;\n\t t['parenleftvertical'] = 0xFE35;\n\t t['parenright'] = 0x0029;\n\t t['parenrightaltonearabic'] = 0xFD3F;\n\t t['parenrightbt'] = 0xF8F8;\n\t t['parenrightex'] = 0xF8F7;\n\t t['parenrightinferior'] = 0x208E;\n\t t['parenrightmonospace'] = 0xFF09;\n\t t['parenrightsmall'] = 0xFE5A;\n\t t['parenrightsuperior'] = 0x207E;\n\t t['parenrighttp'] = 0xF8F6;\n\t t['parenrightvertical'] = 0xFE36;\n\t t['partialdiff'] = 0x2202;\n\t t['paseqhebrew'] = 0x05C0;\n\t t['pashtahebrew'] = 0x0599;\n\t t['pasquare'] = 0x33A9;\n\t t['patah'] = 0x05B7;\n\t t['patah11'] = 0x05B7;\n\t t['patah1d'] = 0x05B7;\n\t t['patah2a'] = 0x05B7;\n\t t['patahhebrew'] = 0x05B7;\n\t t['patahnarrowhebrew'] = 0x05B7;\n\t t['patahquarterhebrew'] = 0x05B7;\n\t t['patahwidehebrew'] = 0x05B7;\n\t t['pazerhebrew'] = 0x05A1;\n\t t['pbopomofo'] = 0x3106;\n\t t['pcircle'] = 0x24DF;\n\t t['pdotaccent'] = 0x1E57;\n\t t['pe'] = 0x05E4;\n\t t['pecyrillic'] = 0x043F;\n\t t['pedagesh'] = 0xFB44;\n\t t['pedageshhebrew'] = 0xFB44;\n\t t['peezisquare'] = 0x333B;\n\t t['pefinaldageshhebrew'] = 0xFB43;\n\t t['peharabic'] = 0x067E;\n\t t['peharmenian'] = 0x057A;\n\t t['pehebrew'] = 0x05E4;\n\t t['pehfinalarabic'] = 0xFB57;\n\t t['pehinitialarabic'] = 0xFB58;\n\t t['pehiragana'] = 0x307A;\n\t t['pehmedialarabic'] = 0xFB59;\n\t t['pekatakana'] = 0x30DA;\n\t t['pemiddlehookcyrillic'] = 0x04A7;\n\t t['perafehebrew'] = 0xFB4E;\n\t t['percent'] = 0x0025;\n\t t['percentarabic'] = 0x066A;\n\t t['percentmonospace'] = 0xFF05;\n\t t['percentsmall'] = 0xFE6A;\n\t t['period'] = 0x002E;\n\t t['periodarmenian'] = 0x0589;\n\t t['periodcentered'] = 0x00B7;\n\t t['periodhalfwidth'] = 0xFF61;\n\t t['periodinferior'] = 0xF6E7;\n\t t['periodmonospace'] = 0xFF0E;\n\t t['periodsmall'] = 0xFE52;\n\t t['periodsuperior'] = 0xF6E8;\n\t t['perispomenigreekcmb'] = 0x0342;\n\t t['perpendicular'] = 0x22A5;\n\t t['perthousand'] = 0x2030;\n\t t['peseta'] = 0x20A7;\n\t t['pfsquare'] = 0x338A;\n\t t['phabengali'] = 0x09AB;\n\t t['phadeva'] = 0x092B;\n\t t['phagujarati'] = 0x0AAB;\n\t t['phagurmukhi'] = 0x0A2B;\n\t t['phi'] = 0x03C6;\n\t t['phi1'] = 0x03D5;\n\t t['phieuphacirclekorean'] = 0x327A;\n\t t['phieuphaparenkorean'] = 0x321A;\n\t t['phieuphcirclekorean'] = 0x326C;\n\t t['phieuphkorean'] = 0x314D;\n\t t['phieuphparenkorean'] = 0x320C;\n\t t['philatin'] = 0x0278;\n\t t['phinthuthai'] = 0x0E3A;\n\t t['phisymbolgreek'] = 0x03D5;\n\t t['phook'] = 0x01A5;\n\t t['phophanthai'] = 0x0E1E;\n\t t['phophungthai'] = 0x0E1C;\n\t t['phosamphaothai'] = 0x0E20;\n\t t['pi'] = 0x03C0;\n\t t['pieupacirclekorean'] = 0x3273;\n\t t['pieupaparenkorean'] = 0x3213;\n\t t['pieupcieuckorean'] = 0x3176;\n\t t['pieupcirclekorean'] = 0x3265;\n\t t['pieupkiyeokkorean'] = 0x3172;\n\t t['pieupkorean'] = 0x3142;\n\t t['pieupparenkorean'] = 0x3205;\n\t t['pieupsioskiyeokkorean'] = 0x3174;\n\t t['pieupsioskorean'] = 0x3144;\n\t t['pieupsiostikeutkorean'] = 0x3175;\n\t t['pieupthieuthkorean'] = 0x3177;\n\t t['pieuptikeutkorean'] = 0x3173;\n\t t['pihiragana'] = 0x3074;\n\t t['pikatakana'] = 0x30D4;\n\t t['pisymbolgreek'] = 0x03D6;\n\t t['piwrarmenian'] = 0x0583;\n\t t['plus'] = 0x002B;\n\t t['plusbelowcmb'] = 0x031F;\n\t t['pluscircle'] = 0x2295;\n\t t['plusminus'] = 0x00B1;\n\t t['plusmod'] = 0x02D6;\n\t t['plusmonospace'] = 0xFF0B;\n\t t['plussmall'] = 0xFE62;\n\t t['plussuperior'] = 0x207A;\n\t t['pmonospace'] = 0xFF50;\n\t t['pmsquare'] = 0x33D8;\n\t t['pohiragana'] = 0x307D;\n\t t['pointingindexdownwhite'] = 0x261F;\n\t t['pointingindexleftwhite'] = 0x261C;\n\t t['pointingindexrightwhite'] = 0x261E;\n\t t['pointingindexupwhite'] = 0x261D;\n\t t['pokatakana'] = 0x30DD;\n\t t['poplathai'] = 0x0E1B;\n\t t['postalmark'] = 0x3012;\n\t t['postalmarkface'] = 0x3020;\n\t t['pparen'] = 0x24AB;\n\t t['precedes'] = 0x227A;\n\t t['prescription'] = 0x211E;\n\t t['primemod'] = 0x02B9;\n\t t['primereversed'] = 0x2035;\n\t t['product'] = 0x220F;\n\t t['projective'] = 0x2305;\n\t t['prolongedkana'] = 0x30FC;\n\t t['propellor'] = 0x2318;\n\t t['propersubset'] = 0x2282;\n\t t['propersuperset'] = 0x2283;\n\t t['proportion'] = 0x2237;\n\t t['proportional'] = 0x221D;\n\t t['psi'] = 0x03C8;\n\t t['psicyrillic'] = 0x0471;\n\t t['psilipneumatacyrilliccmb'] = 0x0486;\n\t t['pssquare'] = 0x33B0;\n\t t['puhiragana'] = 0x3077;\n\t t['pukatakana'] = 0x30D7;\n\t t['pvsquare'] = 0x33B4;\n\t t['pwsquare'] = 0x33BA;\n\t t['q'] = 0x0071;\n\t t['qadeva'] = 0x0958;\n\t t['qadmahebrew'] = 0x05A8;\n\t t['qafarabic'] = 0x0642;\n\t t['qaffinalarabic'] = 0xFED6;\n\t t['qafinitialarabic'] = 0xFED7;\n\t t['qafmedialarabic'] = 0xFED8;\n\t t['qamats'] = 0x05B8;\n\t t['qamats10'] = 0x05B8;\n\t t['qamats1a'] = 0x05B8;\n\t t['qamats1c'] = 0x05B8;\n\t t['qamats27'] = 0x05B8;\n\t t['qamats29'] = 0x05B8;\n\t t['qamats33'] = 0x05B8;\n\t t['qamatsde'] = 0x05B8;\n\t t['qamatshebrew'] = 0x05B8;\n\t t['qamatsnarrowhebrew'] = 0x05B8;\n\t t['qamatsqatanhebrew'] = 0x05B8;\n\t t['qamatsqatannarrowhebrew'] = 0x05B8;\n\t t['qamatsqatanquarterhebrew'] = 0x05B8;\n\t t['qamatsqatanwidehebrew'] = 0x05B8;\n\t t['qamatsquarterhebrew'] = 0x05B8;\n\t t['qamatswidehebrew'] = 0x05B8;\n\t t['qarneyparahebrew'] = 0x059F;\n\t t['qbopomofo'] = 0x3111;\n\t t['qcircle'] = 0x24E0;\n\t t['qhook'] = 0x02A0;\n\t t['qmonospace'] = 0xFF51;\n\t t['qof'] = 0x05E7;\n\t t['qofdagesh'] = 0xFB47;\n\t t['qofdageshhebrew'] = 0xFB47;\n\t t['qofhebrew'] = 0x05E7;\n\t t['qparen'] = 0x24AC;\n\t t['quarternote'] = 0x2669;\n\t t['qubuts'] = 0x05BB;\n\t t['qubuts18'] = 0x05BB;\n\t t['qubuts25'] = 0x05BB;\n\t t['qubuts31'] = 0x05BB;\n\t t['qubutshebrew'] = 0x05BB;\n\t t['qubutsnarrowhebrew'] = 0x05BB;\n\t t['qubutsquarterhebrew'] = 0x05BB;\n\t t['qubutswidehebrew'] = 0x05BB;\n\t t['question'] = 0x003F;\n\t t['questionarabic'] = 0x061F;\n\t t['questionarmenian'] = 0x055E;\n\t t['questiondown'] = 0x00BF;\n\t t['questiondownsmall'] = 0xF7BF;\n\t t['questiongreek'] = 0x037E;\n\t t['questionmonospace'] = 0xFF1F;\n\t t['questionsmall'] = 0xF73F;\n\t t['quotedbl'] = 0x0022;\n\t t['quotedblbase'] = 0x201E;\n\t t['quotedblleft'] = 0x201C;\n\t t['quotedblmonospace'] = 0xFF02;\n\t t['quotedblprime'] = 0x301E;\n\t t['quotedblprimereversed'] = 0x301D;\n\t t['quotedblright'] = 0x201D;\n\t t['quoteleft'] = 0x2018;\n\t t['quoteleftreversed'] = 0x201B;\n\t t['quotereversed'] = 0x201B;\n\t t['quoteright'] = 0x2019;\n\t t['quoterightn'] = 0x0149;\n\t t['quotesinglbase'] = 0x201A;\n\t t['quotesingle'] = 0x0027;\n\t t['quotesinglemonospace'] = 0xFF07;\n\t t['r'] = 0x0072;\n\t t['raarmenian'] = 0x057C;\n\t t['rabengali'] = 0x09B0;\n\t t['racute'] = 0x0155;\n\t t['radeva'] = 0x0930;\n\t t['radical'] = 0x221A;\n\t t['radicalex'] = 0xF8E5;\n\t t['radoverssquare'] = 0x33AE;\n\t t['radoverssquaredsquare'] = 0x33AF;\n\t t['radsquare'] = 0x33AD;\n\t t['rafe'] = 0x05BF;\n\t t['rafehebrew'] = 0x05BF;\n\t t['ragujarati'] = 0x0AB0;\n\t t['ragurmukhi'] = 0x0A30;\n\t t['rahiragana'] = 0x3089;\n\t t['rakatakana'] = 0x30E9;\n\t t['rakatakanahalfwidth'] = 0xFF97;\n\t t['ralowerdiagonalbengali'] = 0x09F1;\n\t t['ramiddlediagonalbengali'] = 0x09F0;\n\t t['ramshorn'] = 0x0264;\n\t t['ratio'] = 0x2236;\n\t t['rbopomofo'] = 0x3116;\n\t t['rcaron'] = 0x0159;\n\t t['rcedilla'] = 0x0157;\n\t t['rcircle'] = 0x24E1;\n\t t['rcommaaccent'] = 0x0157;\n\t t['rdblgrave'] = 0x0211;\n\t t['rdotaccent'] = 0x1E59;\n\t t['rdotbelow'] = 0x1E5B;\n\t t['rdotbelowmacron'] = 0x1E5D;\n\t t['referencemark'] = 0x203B;\n\t t['reflexsubset'] = 0x2286;\n\t t['reflexsuperset'] = 0x2287;\n\t t['registered'] = 0x00AE;\n\t t['registersans'] = 0xF8E8;\n\t t['registerserif'] = 0xF6DA;\n\t t['reharabic'] = 0x0631;\n\t t['reharmenian'] = 0x0580;\n\t t['rehfinalarabic'] = 0xFEAE;\n\t t['rehiragana'] = 0x308C;\n\t t['rekatakana'] = 0x30EC;\n\t t['rekatakanahalfwidth'] = 0xFF9A;\n\t t['resh'] = 0x05E8;\n\t t['reshdageshhebrew'] = 0xFB48;\n\t t['reshhebrew'] = 0x05E8;\n\t t['reversedtilde'] = 0x223D;\n\t t['reviahebrew'] = 0x0597;\n\t t['reviamugrashhebrew'] = 0x0597;\n\t t['revlogicalnot'] = 0x2310;\n\t t['rfishhook'] = 0x027E;\n\t t['rfishhookreversed'] = 0x027F;\n\t t['rhabengali'] = 0x09DD;\n\t t['rhadeva'] = 0x095D;\n\t t['rho'] = 0x03C1;\n\t t['rhook'] = 0x027D;\n\t t['rhookturned'] = 0x027B;\n\t t['rhookturnedsuperior'] = 0x02B5;\n\t t['rhosymbolgreek'] = 0x03F1;\n\t t['rhotichookmod'] = 0x02DE;\n\t t['rieulacirclekorean'] = 0x3271;\n\t t['rieulaparenkorean'] = 0x3211;\n\t t['rieulcirclekorean'] = 0x3263;\n\t t['rieulhieuhkorean'] = 0x3140;\n\t t['rieulkiyeokkorean'] = 0x313A;\n\t t['rieulkiyeoksioskorean'] = 0x3169;\n\t t['rieulkorean'] = 0x3139;\n\t t['rieulmieumkorean'] = 0x313B;\n\t t['rieulpansioskorean'] = 0x316C;\n\t t['rieulparenkorean'] = 0x3203;\n\t t['rieulphieuphkorean'] = 0x313F;\n\t t['rieulpieupkorean'] = 0x313C;\n\t t['rieulpieupsioskorean'] = 0x316B;\n\t t['rieulsioskorean'] = 0x313D;\n\t t['rieulthieuthkorean'] = 0x313E;\n\t t['rieultikeutkorean'] = 0x316A;\n\t t['rieulyeorinhieuhkorean'] = 0x316D;\n\t t['rightangle'] = 0x221F;\n\t t['righttackbelowcmb'] = 0x0319;\n\t t['righttriangle'] = 0x22BF;\n\t t['rihiragana'] = 0x308A;\n\t t['rikatakana'] = 0x30EA;\n\t t['rikatakanahalfwidth'] = 0xFF98;\n\t t['ring'] = 0x02DA;\n\t t['ringbelowcmb'] = 0x0325;\n\t t['ringcmb'] = 0x030A;\n\t t['ringhalfleft'] = 0x02BF;\n\t t['ringhalfleftarmenian'] = 0x0559;\n\t t['ringhalfleftbelowcmb'] = 0x031C;\n\t t['ringhalfleftcentered'] = 0x02D3;\n\t t['ringhalfright'] = 0x02BE;\n\t t['ringhalfrightbelowcmb'] = 0x0339;\n\t t['ringhalfrightcentered'] = 0x02D2;\n\t t['rinvertedbreve'] = 0x0213;\n\t t['rittorusquare'] = 0x3351;\n\t t['rlinebelow'] = 0x1E5F;\n\t t['rlongleg'] = 0x027C;\n\t t['rlonglegturned'] = 0x027A;\n\t t['rmonospace'] = 0xFF52;\n\t t['rohiragana'] = 0x308D;\n\t t['rokatakana'] = 0x30ED;\n\t t['rokatakanahalfwidth'] = 0xFF9B;\n\t t['roruathai'] = 0x0E23;\n\t t['rparen'] = 0x24AD;\n\t t['rrabengali'] = 0x09DC;\n\t t['rradeva'] = 0x0931;\n\t t['rragurmukhi'] = 0x0A5C;\n\t t['rreharabic'] = 0x0691;\n\t t['rrehfinalarabic'] = 0xFB8D;\n\t t['rrvocalicbengali'] = 0x09E0;\n\t t['rrvocalicdeva'] = 0x0960;\n\t t['rrvocalicgujarati'] = 0x0AE0;\n\t t['rrvocalicvowelsignbengali'] = 0x09C4;\n\t t['rrvocalicvowelsigndeva'] = 0x0944;\n\t t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n\t t['rsuperior'] = 0xF6F1;\n\t t['rtblock'] = 0x2590;\n\t t['rturned'] = 0x0279;\n\t t['rturnedsuperior'] = 0x02B4;\n\t t['ruhiragana'] = 0x308B;\n\t t['rukatakana'] = 0x30EB;\n\t t['rukatakanahalfwidth'] = 0xFF99;\n\t t['rupeemarkbengali'] = 0x09F2;\n\t t['rupeesignbengali'] = 0x09F3;\n\t t['rupiah'] = 0xF6DD;\n\t t['ruthai'] = 0x0E24;\n\t t['rvocalicbengali'] = 0x098B;\n\t t['rvocalicdeva'] = 0x090B;\n\t t['rvocalicgujarati'] = 0x0A8B;\n\t t['rvocalicvowelsignbengali'] = 0x09C3;\n\t t['rvocalicvowelsigndeva'] = 0x0943;\n\t t['rvocalicvowelsigngujarati'] = 0x0AC3;\n\t t['s'] = 0x0073;\n\t t['sabengali'] = 0x09B8;\n\t t['sacute'] = 0x015B;\n\t t['sacutedotaccent'] = 0x1E65;\n\t t['sadarabic'] = 0x0635;\n\t t['sadeva'] = 0x0938;\n\t t['sadfinalarabic'] = 0xFEBA;\n\t t['sadinitialarabic'] = 0xFEBB;\n\t t['sadmedialarabic'] = 0xFEBC;\n\t t['sagujarati'] = 0x0AB8;\n\t t['sagurmukhi'] = 0x0A38;\n\t t['sahiragana'] = 0x3055;\n\t t['sakatakana'] = 0x30B5;\n\t t['sakatakanahalfwidth'] = 0xFF7B;\n\t t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n\t t['samekh'] = 0x05E1;\n\t t['samekhdagesh'] = 0xFB41;\n\t t['samekhdageshhebrew'] = 0xFB41;\n\t t['samekhhebrew'] = 0x05E1;\n\t t['saraaathai'] = 0x0E32;\n\t t['saraaethai'] = 0x0E41;\n\t t['saraaimaimalaithai'] = 0x0E44;\n\t t['saraaimaimuanthai'] = 0x0E43;\n\t t['saraamthai'] = 0x0E33;\n\t t['saraathai'] = 0x0E30;\n\t t['saraethai'] = 0x0E40;\n\t t['saraiileftthai'] = 0xF886;\n\t t['saraiithai'] = 0x0E35;\n\t t['saraileftthai'] = 0xF885;\n\t t['saraithai'] = 0x0E34;\n\t t['saraothai'] = 0x0E42;\n\t t['saraueeleftthai'] = 0xF888;\n\t t['saraueethai'] = 0x0E37;\n\t t['saraueleftthai'] = 0xF887;\n\t t['sarauethai'] = 0x0E36;\n\t t['sarauthai'] = 0x0E38;\n\t t['sarauuthai'] = 0x0E39;\n\t t['sbopomofo'] = 0x3119;\n\t t['scaron'] = 0x0161;\n\t t['scarondotaccent'] = 0x1E67;\n\t t['scedilla'] = 0x015F;\n\t t['schwa'] = 0x0259;\n\t t['schwacyrillic'] = 0x04D9;\n\t t['schwadieresiscyrillic'] = 0x04DB;\n\t t['schwahook'] = 0x025A;\n\t t['scircle'] = 0x24E2;\n\t t['scircumflex'] = 0x015D;\n\t t['scommaaccent'] = 0x0219;\n\t t['sdotaccent'] = 0x1E61;\n\t t['sdotbelow'] = 0x1E63;\n\t t['sdotbelowdotaccent'] = 0x1E69;\n\t t['seagullbelowcmb'] = 0x033C;\n\t t['second'] = 0x2033;\n\t t['secondtonechinese'] = 0x02CA;\n\t t['section'] = 0x00A7;\n\t t['seenarabic'] = 0x0633;\n\t t['seenfinalarabic'] = 0xFEB2;\n\t t['seeninitialarabic'] = 0xFEB3;\n\t t['seenmedialarabic'] = 0xFEB4;\n\t t['segol'] = 0x05B6;\n\t t['segol13'] = 0x05B6;\n\t t['segol1f'] = 0x05B6;\n\t t['segol2c'] = 0x05B6;\n\t t['segolhebrew'] = 0x05B6;\n\t t['segolnarrowhebrew'] = 0x05B6;\n\t t['segolquarterhebrew'] = 0x05B6;\n\t t['segoltahebrew'] = 0x0592;\n\t t['segolwidehebrew'] = 0x05B6;\n\t t['seharmenian'] = 0x057D;\n\t t['sehiragana'] = 0x305B;\n\t t['sekatakana'] = 0x30BB;\n\t t['sekatakanahalfwidth'] = 0xFF7E;\n\t t['semicolon'] = 0x003B;\n\t t['semicolonarabic'] = 0x061B;\n\t t['semicolonmonospace'] = 0xFF1B;\n\t t['semicolonsmall'] = 0xFE54;\n\t t['semivoicedmarkkana'] = 0x309C;\n\t t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n\t t['sentisquare'] = 0x3322;\n\t t['sentosquare'] = 0x3323;\n\t t['seven'] = 0x0037;\n\t t['sevenarabic'] = 0x0667;\n\t t['sevenbengali'] = 0x09ED;\n\t t['sevencircle'] = 0x2466;\n\t t['sevencircleinversesansserif'] = 0x2790;\n\t t['sevendeva'] = 0x096D;\n\t t['seveneighths'] = 0x215E;\n\t t['sevengujarati'] = 0x0AED;\n\t t['sevengurmukhi'] = 0x0A6D;\n\t t['sevenhackarabic'] = 0x0667;\n\t t['sevenhangzhou'] = 0x3027;\n\t t['sevenideographicparen'] = 0x3226;\n\t t['seveninferior'] = 0x2087;\n\t t['sevenmonospace'] = 0xFF17;\n\t t['sevenoldstyle'] = 0xF737;\n\t t['sevenparen'] = 0x247A;\n\t t['sevenperiod'] = 0x248E;\n\t t['sevenpersian'] = 0x06F7;\n\t t['sevenroman'] = 0x2176;\n\t t['sevensuperior'] = 0x2077;\n\t t['seventeencircle'] = 0x2470;\n\t t['seventeenparen'] = 0x2484;\n\t t['seventeenperiod'] = 0x2498;\n\t t['seventhai'] = 0x0E57;\n\t t['sfthyphen'] = 0x00AD;\n\t t['shaarmenian'] = 0x0577;\n\t t['shabengali'] = 0x09B6;\n\t t['shacyrillic'] = 0x0448;\n\t t['shaddaarabic'] = 0x0651;\n\t t['shaddadammaarabic'] = 0xFC61;\n\t t['shaddadammatanarabic'] = 0xFC5E;\n\t t['shaddafathaarabic'] = 0xFC60;\n\t t['shaddakasraarabic'] = 0xFC62;\n\t t['shaddakasratanarabic'] = 0xFC5F;\n\t t['shade'] = 0x2592;\n\t t['shadedark'] = 0x2593;\n\t t['shadelight'] = 0x2591;\n\t t['shademedium'] = 0x2592;\n\t t['shadeva'] = 0x0936;\n\t t['shagujarati'] = 0x0AB6;\n\t t['shagurmukhi'] = 0x0A36;\n\t t['shalshelethebrew'] = 0x0593;\n\t t['shbopomofo'] = 0x3115;\n\t t['shchacyrillic'] = 0x0449;\n\t t['sheenarabic'] = 0x0634;\n\t t['sheenfinalarabic'] = 0xFEB6;\n\t t['sheeninitialarabic'] = 0xFEB7;\n\t t['sheenmedialarabic'] = 0xFEB8;\n\t t['sheicoptic'] = 0x03E3;\n\t t['sheqel'] = 0x20AA;\n\t t['sheqelhebrew'] = 0x20AA;\n\t t['sheva'] = 0x05B0;\n\t t['sheva115'] = 0x05B0;\n\t t['sheva15'] = 0x05B0;\n\t t['sheva22'] = 0x05B0;\n\t t['sheva2e'] = 0x05B0;\n\t t['shevahebrew'] = 0x05B0;\n\t t['shevanarrowhebrew'] = 0x05B0;\n\t t['shevaquarterhebrew'] = 0x05B0;\n\t t['shevawidehebrew'] = 0x05B0;\n\t t['shhacyrillic'] = 0x04BB;\n\t t['shimacoptic'] = 0x03ED;\n\t t['shin'] = 0x05E9;\n\t t['shindagesh'] = 0xFB49;\n\t t['shindageshhebrew'] = 0xFB49;\n\t t['shindageshshindot'] = 0xFB2C;\n\t t['shindageshshindothebrew'] = 0xFB2C;\n\t t['shindageshsindot'] = 0xFB2D;\n\t t['shindageshsindothebrew'] = 0xFB2D;\n\t t['shindothebrew'] = 0x05C1;\n\t t['shinhebrew'] = 0x05E9;\n\t t['shinshindot'] = 0xFB2A;\n\t t['shinshindothebrew'] = 0xFB2A;\n\t t['shinsindot'] = 0xFB2B;\n\t t['shinsindothebrew'] = 0xFB2B;\n\t t['shook'] = 0x0282;\n\t t['sigma'] = 0x03C3;\n\t t['sigma1'] = 0x03C2;\n\t t['sigmafinal'] = 0x03C2;\n\t t['sigmalunatesymbolgreek'] = 0x03F2;\n\t t['sihiragana'] = 0x3057;\n\t t['sikatakana'] = 0x30B7;\n\t t['sikatakanahalfwidth'] = 0xFF7C;\n\t t['siluqhebrew'] = 0x05BD;\n\t t['siluqlefthebrew'] = 0x05BD;\n\t t['similar'] = 0x223C;\n\t t['sindothebrew'] = 0x05C2;\n\t t['siosacirclekorean'] = 0x3274;\n\t t['siosaparenkorean'] = 0x3214;\n\t t['sioscieuckorean'] = 0x317E;\n\t t['sioscirclekorean'] = 0x3266;\n\t t['sioskiyeokkorean'] = 0x317A;\n\t t['sioskorean'] = 0x3145;\n\t t['siosnieunkorean'] = 0x317B;\n\t t['siosparenkorean'] = 0x3206;\n\t t['siospieupkorean'] = 0x317D;\n\t t['siostikeutkorean'] = 0x317C;\n\t t['six'] = 0x0036;\n\t t['sixarabic'] = 0x0666;\n\t t['sixbengali'] = 0x09EC;\n\t t['sixcircle'] = 0x2465;\n\t t['sixcircleinversesansserif'] = 0x278F;\n\t t['sixdeva'] = 0x096C;\n\t t['sixgujarati'] = 0x0AEC;\n\t t['sixgurmukhi'] = 0x0A6C;\n\t t['sixhackarabic'] = 0x0666;\n\t t['sixhangzhou'] = 0x3026;\n\t t['sixideographicparen'] = 0x3225;\n\t t['sixinferior'] = 0x2086;\n\t t['sixmonospace'] = 0xFF16;\n\t t['sixoldstyle'] = 0xF736;\n\t t['sixparen'] = 0x2479;\n\t t['sixperiod'] = 0x248D;\n\t t['sixpersian'] = 0x06F6;\n\t t['sixroman'] = 0x2175;\n\t t['sixsuperior'] = 0x2076;\n\t t['sixteencircle'] = 0x246F;\n\t t['sixteencurrencydenominatorbengali'] = 0x09F9;\n\t t['sixteenparen'] = 0x2483;\n\t t['sixteenperiod'] = 0x2497;\n\t t['sixthai'] = 0x0E56;\n\t t['slash'] = 0x002F;\n\t t['slashmonospace'] = 0xFF0F;\n\t t['slong'] = 0x017F;\n\t t['slongdotaccent'] = 0x1E9B;\n\t t['smileface'] = 0x263A;\n\t t['smonospace'] = 0xFF53;\n\t t['sofpasuqhebrew'] = 0x05C3;\n\t t['softhyphen'] = 0x00AD;\n\t t['softsigncyrillic'] = 0x044C;\n\t t['sohiragana'] = 0x305D;\n\t t['sokatakana'] = 0x30BD;\n\t t['sokatakanahalfwidth'] = 0xFF7F;\n\t t['soliduslongoverlaycmb'] = 0x0338;\n\t t['solidusshortoverlaycmb'] = 0x0337;\n\t t['sorusithai'] = 0x0E29;\n\t t['sosalathai'] = 0x0E28;\n\t t['sosothai'] = 0x0E0B;\n\t t['sosuathai'] = 0x0E2A;\n\t t['space'] = 0x0020;\n\t t['spacehackarabic'] = 0x0020;\n\t t['spade'] = 0x2660;\n\t t['spadesuitblack'] = 0x2660;\n\t t['spadesuitwhite'] = 0x2664;\n\t t['sparen'] = 0x24AE;\n\t t['squarebelowcmb'] = 0x033B;\n\t t['squarecc'] = 0x33C4;\n\t t['squarecm'] = 0x339D;\n\t t['squarediagonalcrosshatchfill'] = 0x25A9;\n\t t['squarehorizontalfill'] = 0x25A4;\n\t t['squarekg'] = 0x338F;\n\t t['squarekm'] = 0x339E;\n\t t['squarekmcapital'] = 0x33CE;\n\t t['squareln'] = 0x33D1;\n\t t['squarelog'] = 0x33D2;\n\t t['squaremg'] = 0x338E;\n\t t['squaremil'] = 0x33D5;\n\t t['squaremm'] = 0x339C;\n\t t['squaremsquared'] = 0x33A1;\n\t t['squareorthogonalcrosshatchfill'] = 0x25A6;\n\t t['squareupperlefttolowerrightfill'] = 0x25A7;\n\t t['squareupperrighttolowerleftfill'] = 0x25A8;\n\t t['squareverticalfill'] = 0x25A5;\n\t t['squarewhitewithsmallblack'] = 0x25A3;\n\t t['srsquare'] = 0x33DB;\n\t t['ssabengali'] = 0x09B7;\n\t t['ssadeva'] = 0x0937;\n\t t['ssagujarati'] = 0x0AB7;\n\t t['ssangcieuckorean'] = 0x3149;\n\t t['ssanghieuhkorean'] = 0x3185;\n\t t['ssangieungkorean'] = 0x3180;\n\t t['ssangkiyeokkorean'] = 0x3132;\n\t t['ssangnieunkorean'] = 0x3165;\n\t t['ssangpieupkorean'] = 0x3143;\n\t t['ssangsioskorean'] = 0x3146;\n\t t['ssangtikeutkorean'] = 0x3138;\n\t t['ssuperior'] = 0xF6F2;\n\t t['sterling'] = 0x00A3;\n\t t['sterlingmonospace'] = 0xFFE1;\n\t t['strokelongoverlaycmb'] = 0x0336;\n\t t['strokeshortoverlaycmb'] = 0x0335;\n\t t['subset'] = 0x2282;\n\t t['subsetnotequal'] = 0x228A;\n\t t['subsetorequal'] = 0x2286;\n\t t['succeeds'] = 0x227B;\n\t t['suchthat'] = 0x220B;\n\t t['suhiragana'] = 0x3059;\n\t t['sukatakana'] = 0x30B9;\n\t t['sukatakanahalfwidth'] = 0xFF7D;\n\t t['sukunarabic'] = 0x0652;\n\t t['summation'] = 0x2211;\n\t t['sun'] = 0x263C;\n\t t['superset'] = 0x2283;\n\t t['supersetnotequal'] = 0x228B;\n\t t['supersetorequal'] = 0x2287;\n\t t['svsquare'] = 0x33DC;\n\t t['syouwaerasquare'] = 0x337C;\n\t t['t'] = 0x0074;\n\t t['tabengali'] = 0x09A4;\n\t t['tackdown'] = 0x22A4;\n\t t['tackleft'] = 0x22A3;\n\t t['tadeva'] = 0x0924;\n\t t['tagujarati'] = 0x0AA4;\n\t t['tagurmukhi'] = 0x0A24;\n\t t['taharabic'] = 0x0637;\n\t t['tahfinalarabic'] = 0xFEC2;\n\t t['tahinitialarabic'] = 0xFEC3;\n\t t['tahiragana'] = 0x305F;\n\t t['tahmedialarabic'] = 0xFEC4;\n\t t['taisyouerasquare'] = 0x337D;\n\t t['takatakana'] = 0x30BF;\n\t t['takatakanahalfwidth'] = 0xFF80;\n\t t['tatweelarabic'] = 0x0640;\n\t t['tau'] = 0x03C4;\n\t t['tav'] = 0x05EA;\n\t t['tavdages'] = 0xFB4A;\n\t t['tavdagesh'] = 0xFB4A;\n\t t['tavdageshhebrew'] = 0xFB4A;\n\t t['tavhebrew'] = 0x05EA;\n\t t['tbar'] = 0x0167;\n\t t['tbopomofo'] = 0x310A;\n\t t['tcaron'] = 0x0165;\n\t t['tccurl'] = 0x02A8;\n\t t['tcedilla'] = 0x0163;\n\t t['tcheharabic'] = 0x0686;\n\t t['tchehfinalarabic'] = 0xFB7B;\n\t t['tchehinitialarabic'] = 0xFB7C;\n\t t['tchehmedialarabic'] = 0xFB7D;\n\t t['tcircle'] = 0x24E3;\n\t t['tcircumflexbelow'] = 0x1E71;\n\t t['tcommaaccent'] = 0x0163;\n\t t['tdieresis'] = 0x1E97;\n\t t['tdotaccent'] = 0x1E6B;\n\t t['tdotbelow'] = 0x1E6D;\n\t t['tecyrillic'] = 0x0442;\n\t t['tedescendercyrillic'] = 0x04AD;\n\t t['teharabic'] = 0x062A;\n\t t['tehfinalarabic'] = 0xFE96;\n\t t['tehhahinitialarabic'] = 0xFCA2;\n\t t['tehhahisolatedarabic'] = 0xFC0C;\n\t t['tehinitialarabic'] = 0xFE97;\n\t t['tehiragana'] = 0x3066;\n\t t['tehjeeminitialarabic'] = 0xFCA1;\n\t t['tehjeemisolatedarabic'] = 0xFC0B;\n\t t['tehmarbutaarabic'] = 0x0629;\n\t t['tehmarbutafinalarabic'] = 0xFE94;\n\t t['tehmedialarabic'] = 0xFE98;\n\t t['tehmeeminitialarabic'] = 0xFCA4;\n\t t['tehmeemisolatedarabic'] = 0xFC0E;\n\t t['tehnoonfinalarabic'] = 0xFC73;\n\t t['tekatakana'] = 0x30C6;\n\t t['tekatakanahalfwidth'] = 0xFF83;\n\t t['telephone'] = 0x2121;\n\t t['telephoneblack'] = 0x260E;\n\t t['telishagedolahebrew'] = 0x05A0;\n\t t['telishaqetanahebrew'] = 0x05A9;\n\t t['tencircle'] = 0x2469;\n\t t['tenideographicparen'] = 0x3229;\n\t t['tenparen'] = 0x247D;\n\t t['tenperiod'] = 0x2491;\n\t t['tenroman'] = 0x2179;\n\t t['tesh'] = 0x02A7;\n\t t['tet'] = 0x05D8;\n\t t['tetdagesh'] = 0xFB38;\n\t t['tetdageshhebrew'] = 0xFB38;\n\t t['tethebrew'] = 0x05D8;\n\t t['tetsecyrillic'] = 0x04B5;\n\t t['tevirhebrew'] = 0x059B;\n\t t['tevirlefthebrew'] = 0x059B;\n\t t['thabengali'] = 0x09A5;\n\t t['thadeva'] = 0x0925;\n\t t['thagujarati'] = 0x0AA5;\n\t t['thagurmukhi'] = 0x0A25;\n\t t['thalarabic'] = 0x0630;\n\t t['thalfinalarabic'] = 0xFEAC;\n\t t['thanthakhatlowleftthai'] = 0xF898;\n\t t['thanthakhatlowrightthai'] = 0xF897;\n\t t['thanthakhatthai'] = 0x0E4C;\n\t t['thanthakhatupperleftthai'] = 0xF896;\n\t t['theharabic'] = 0x062B;\n\t t['thehfinalarabic'] = 0xFE9A;\n\t t['thehinitialarabic'] = 0xFE9B;\n\t t['thehmedialarabic'] = 0xFE9C;\n\t t['thereexists'] = 0x2203;\n\t t['therefore'] = 0x2234;\n\t t['theta'] = 0x03B8;\n\t t['theta1'] = 0x03D1;\n\t t['thetasymbolgreek'] = 0x03D1;\n\t t['thieuthacirclekorean'] = 0x3279;\n\t t['thieuthaparenkorean'] = 0x3219;\n\t t['thieuthcirclekorean'] = 0x326B;\n\t t['thieuthkorean'] = 0x314C;\n\t t['thieuthparenkorean'] = 0x320B;\n\t t['thirteencircle'] = 0x246C;\n\t t['thirteenparen'] = 0x2480;\n\t t['thirteenperiod'] = 0x2494;\n\t t['thonangmonthothai'] = 0x0E11;\n\t t['thook'] = 0x01AD;\n\t t['thophuthaothai'] = 0x0E12;\n\t t['thorn'] = 0x00FE;\n\t t['thothahanthai'] = 0x0E17;\n\t t['thothanthai'] = 0x0E10;\n\t t['thothongthai'] = 0x0E18;\n\t t['thothungthai'] = 0x0E16;\n\t t['thousandcyrillic'] = 0x0482;\n\t t['thousandsseparatorarabic'] = 0x066C;\n\t t['thousandsseparatorpersian'] = 0x066C;\n\t t['three'] = 0x0033;\n\t t['threearabic'] = 0x0663;\n\t t['threebengali'] = 0x09E9;\n\t t['threecircle'] = 0x2462;\n\t t['threecircleinversesansserif'] = 0x278C;\n\t t['threedeva'] = 0x0969;\n\t t['threeeighths'] = 0x215C;\n\t t['threegujarati'] = 0x0AE9;\n\t t['threegurmukhi'] = 0x0A69;\n\t t['threehackarabic'] = 0x0663;\n\t t['threehangzhou'] = 0x3023;\n\t t['threeideographicparen'] = 0x3222;\n\t t['threeinferior'] = 0x2083;\n\t t['threemonospace'] = 0xFF13;\n\t t['threenumeratorbengali'] = 0x09F6;\n\t t['threeoldstyle'] = 0xF733;\n\t t['threeparen'] = 0x2476;\n\t t['threeperiod'] = 0x248A;\n\t t['threepersian'] = 0x06F3;\n\t t['threequarters'] = 0x00BE;\n\t t['threequartersemdash'] = 0xF6DE;\n\t t['threeroman'] = 0x2172;\n\t t['threesuperior'] = 0x00B3;\n\t t['threethai'] = 0x0E53;\n\t t['thzsquare'] = 0x3394;\n\t t['tihiragana'] = 0x3061;\n\t t['tikatakana'] = 0x30C1;\n\t t['tikatakanahalfwidth'] = 0xFF81;\n\t t['tikeutacirclekorean'] = 0x3270;\n\t t['tikeutaparenkorean'] = 0x3210;\n\t t['tikeutcirclekorean'] = 0x3262;\n\t t['tikeutkorean'] = 0x3137;\n\t t['tikeutparenkorean'] = 0x3202;\n\t t['tilde'] = 0x02DC;\n\t t['tildebelowcmb'] = 0x0330;\n\t t['tildecmb'] = 0x0303;\n\t t['tildecomb'] = 0x0303;\n\t t['tildedoublecmb'] = 0x0360;\n\t t['tildeoperator'] = 0x223C;\n\t t['tildeoverlaycmb'] = 0x0334;\n\t t['tildeverticalcmb'] = 0x033E;\n\t t['timescircle'] = 0x2297;\n\t t['tipehahebrew'] = 0x0596;\n\t t['tipehalefthebrew'] = 0x0596;\n\t t['tippigurmukhi'] = 0x0A70;\n\t t['titlocyrilliccmb'] = 0x0483;\n\t t['tiwnarmenian'] = 0x057F;\n\t t['tlinebelow'] = 0x1E6F;\n\t t['tmonospace'] = 0xFF54;\n\t t['toarmenian'] = 0x0569;\n\t t['tohiragana'] = 0x3068;\n\t t['tokatakana'] = 0x30C8;\n\t t['tokatakanahalfwidth'] = 0xFF84;\n\t t['tonebarextrahighmod'] = 0x02E5;\n\t t['tonebarextralowmod'] = 0x02E9;\n\t t['tonebarhighmod'] = 0x02E6;\n\t t['tonebarlowmod'] = 0x02E8;\n\t t['tonebarmidmod'] = 0x02E7;\n\t t['tonefive'] = 0x01BD;\n\t t['tonesix'] = 0x0185;\n\t t['tonetwo'] = 0x01A8;\n\t t['tonos'] = 0x0384;\n\t t['tonsquare'] = 0x3327;\n\t t['topatakthai'] = 0x0E0F;\n\t t['tortoiseshellbracketleft'] = 0x3014;\n\t t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n\t t['tortoiseshellbracketleftvertical'] = 0xFE39;\n\t t['tortoiseshellbracketright'] = 0x3015;\n\t t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n\t t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n\t t['totaothai'] = 0x0E15;\n\t t['tpalatalhook'] = 0x01AB;\n\t t['tparen'] = 0x24AF;\n\t t['trademark'] = 0x2122;\n\t t['trademarksans'] = 0xF8EA;\n\t t['trademarkserif'] = 0xF6DB;\n\t t['tretroflexhook'] = 0x0288;\n\t t['triagdn'] = 0x25BC;\n\t t['triaglf'] = 0x25C4;\n\t t['triagrt'] = 0x25BA;\n\t t['triagup'] = 0x25B2;\n\t t['ts'] = 0x02A6;\n\t t['tsadi'] = 0x05E6;\n\t t['tsadidagesh'] = 0xFB46;\n\t t['tsadidageshhebrew'] = 0xFB46;\n\t t['tsadihebrew'] = 0x05E6;\n\t t['tsecyrillic'] = 0x0446;\n\t t['tsere'] = 0x05B5;\n\t t['tsere12'] = 0x05B5;\n\t t['tsere1e'] = 0x05B5;\n\t t['tsere2b'] = 0x05B5;\n\t t['tserehebrew'] = 0x05B5;\n\t t['tserenarrowhebrew'] = 0x05B5;\n\t t['tserequarterhebrew'] = 0x05B5;\n\t t['tserewidehebrew'] = 0x05B5;\n\t t['tshecyrillic'] = 0x045B;\n\t t['tsuperior'] = 0xF6F3;\n\t t['ttabengali'] = 0x099F;\n\t t['ttadeva'] = 0x091F;\n\t t['ttagujarati'] = 0x0A9F;\n\t t['ttagurmukhi'] = 0x0A1F;\n\t t['tteharabic'] = 0x0679;\n\t t['ttehfinalarabic'] = 0xFB67;\n\t t['ttehinitialarabic'] = 0xFB68;\n\t t['ttehmedialarabic'] = 0xFB69;\n\t t['tthabengali'] = 0x09A0;\n\t t['tthadeva'] = 0x0920;\n\t t['tthagujarati'] = 0x0AA0;\n\t t['tthagurmukhi'] = 0x0A20;\n\t t['tturned'] = 0x0287;\n\t t['tuhiragana'] = 0x3064;\n\t t['tukatakana'] = 0x30C4;\n\t t['tukatakanahalfwidth'] = 0xFF82;\n\t t['tusmallhiragana'] = 0x3063;\n\t t['tusmallkatakana'] = 0x30C3;\n\t t['tusmallkatakanahalfwidth'] = 0xFF6F;\n\t t['twelvecircle'] = 0x246B;\n\t t['twelveparen'] = 0x247F;\n\t t['twelveperiod'] = 0x2493;\n\t t['twelveroman'] = 0x217B;\n\t t['twentycircle'] = 0x2473;\n\t t['twentyhangzhou'] = 0x5344;\n\t t['twentyparen'] = 0x2487;\n\t t['twentyperiod'] = 0x249B;\n\t t['two'] = 0x0032;\n\t t['twoarabic'] = 0x0662;\n\t t['twobengali'] = 0x09E8;\n\t t['twocircle'] = 0x2461;\n\t t['twocircleinversesansserif'] = 0x278B;\n\t t['twodeva'] = 0x0968;\n\t t['twodotenleader'] = 0x2025;\n\t t['twodotleader'] = 0x2025;\n\t t['twodotleadervertical'] = 0xFE30;\n\t t['twogujarati'] = 0x0AE8;\n\t t['twogurmukhi'] = 0x0A68;\n\t t['twohackarabic'] = 0x0662;\n\t t['twohangzhou'] = 0x3022;\n\t t['twoideographicparen'] = 0x3221;\n\t t['twoinferior'] = 0x2082;\n\t t['twomonospace'] = 0xFF12;\n\t t['twonumeratorbengali'] = 0x09F5;\n\t t['twooldstyle'] = 0xF732;\n\t t['twoparen'] = 0x2475;\n\t t['twoperiod'] = 0x2489;\n\t t['twopersian'] = 0x06F2;\n\t t['tworoman'] = 0x2171;\n\t t['twostroke'] = 0x01BB;\n\t t['twosuperior'] = 0x00B2;\n\t t['twothai'] = 0x0E52;\n\t t['twothirds'] = 0x2154;\n\t t['u'] = 0x0075;\n\t t['uacute'] = 0x00FA;\n\t t['ubar'] = 0x0289;\n\t t['ubengali'] = 0x0989;\n\t t['ubopomofo'] = 0x3128;\n\t t['ubreve'] = 0x016D;\n\t t['ucaron'] = 0x01D4;\n\t t['ucircle'] = 0x24E4;\n\t t['ucircumflex'] = 0x00FB;\n\t t['ucircumflexbelow'] = 0x1E77;\n\t t['ucyrillic'] = 0x0443;\n\t t['udattadeva'] = 0x0951;\n\t t['udblacute'] = 0x0171;\n\t t['udblgrave'] = 0x0215;\n\t t['udeva'] = 0x0909;\n\t t['udieresis'] = 0x00FC;\n\t t['udieresisacute'] = 0x01D8;\n\t t['udieresisbelow'] = 0x1E73;\n\t t['udieresiscaron'] = 0x01DA;\n\t t['udieresiscyrillic'] = 0x04F1;\n\t t['udieresisgrave'] = 0x01DC;\n\t t['udieresismacron'] = 0x01D6;\n\t t['udotbelow'] = 0x1EE5;\n\t t['ugrave'] = 0x00F9;\n\t t['ugujarati'] = 0x0A89;\n\t t['ugurmukhi'] = 0x0A09;\n\t t['uhiragana'] = 0x3046;\n\t t['uhookabove'] = 0x1EE7;\n\t t['uhorn'] = 0x01B0;\n\t t['uhornacute'] = 0x1EE9;\n\t t['uhorndotbelow'] = 0x1EF1;\n\t t['uhorngrave'] = 0x1EEB;\n\t t['uhornhookabove'] = 0x1EED;\n\t t['uhorntilde'] = 0x1EEF;\n\t t['uhungarumlaut'] = 0x0171;\n\t t['uhungarumlautcyrillic'] = 0x04F3;\n\t t['uinvertedbreve'] = 0x0217;\n\t t['ukatakana'] = 0x30A6;\n\t t['ukatakanahalfwidth'] = 0xFF73;\n\t t['ukcyrillic'] = 0x0479;\n\t t['ukorean'] = 0x315C;\n\t t['umacron'] = 0x016B;\n\t t['umacroncyrillic'] = 0x04EF;\n\t t['umacrondieresis'] = 0x1E7B;\n\t t['umatragurmukhi'] = 0x0A41;\n\t t['umonospace'] = 0xFF55;\n\t t['underscore'] = 0x005F;\n\t t['underscoredbl'] = 0x2017;\n\t t['underscoremonospace'] = 0xFF3F;\n\t t['underscorevertical'] = 0xFE33;\n\t t['underscorewavy'] = 0xFE4F;\n\t t['union'] = 0x222A;\n\t t['universal'] = 0x2200;\n\t t['uogonek'] = 0x0173;\n\t t['uparen'] = 0x24B0;\n\t t['upblock'] = 0x2580;\n\t t['upperdothebrew'] = 0x05C4;\n\t t['upsilon'] = 0x03C5;\n\t t['upsilondieresis'] = 0x03CB;\n\t t['upsilondieresistonos'] = 0x03B0;\n\t t['upsilonlatin'] = 0x028A;\n\t t['upsilontonos'] = 0x03CD;\n\t t['uptackbelowcmb'] = 0x031D;\n\t t['uptackmod'] = 0x02D4;\n\t t['uragurmukhi'] = 0x0A73;\n\t t['uring'] = 0x016F;\n\t t['ushortcyrillic'] = 0x045E;\n\t t['usmallhiragana'] = 0x3045;\n\t t['usmallkatakana'] = 0x30A5;\n\t t['usmallkatakanahalfwidth'] = 0xFF69;\n\t t['ustraightcyrillic'] = 0x04AF;\n\t t['ustraightstrokecyrillic'] = 0x04B1;\n\t t['utilde'] = 0x0169;\n\t t['utildeacute'] = 0x1E79;\n\t t['utildebelow'] = 0x1E75;\n\t t['uubengali'] = 0x098A;\n\t t['uudeva'] = 0x090A;\n\t t['uugujarati'] = 0x0A8A;\n\t t['uugurmukhi'] = 0x0A0A;\n\t t['uumatragurmukhi'] = 0x0A42;\n\t t['uuvowelsignbengali'] = 0x09C2;\n\t t['uuvowelsigndeva'] = 0x0942;\n\t t['uuvowelsigngujarati'] = 0x0AC2;\n\t t['uvowelsignbengali'] = 0x09C1;\n\t t['uvowelsigndeva'] = 0x0941;\n\t t['uvowelsigngujarati'] = 0x0AC1;\n\t t['v'] = 0x0076;\n\t t['vadeva'] = 0x0935;\n\t t['vagujarati'] = 0x0AB5;\n\t t['vagurmukhi'] = 0x0A35;\n\t t['vakatakana'] = 0x30F7;\n\t t['vav'] = 0x05D5;\n\t t['vavdagesh'] = 0xFB35;\n\t t['vavdagesh65'] = 0xFB35;\n\t t['vavdageshhebrew'] = 0xFB35;\n\t t['vavhebrew'] = 0x05D5;\n\t t['vavholam'] = 0xFB4B;\n\t t['vavholamhebrew'] = 0xFB4B;\n\t t['vavvavhebrew'] = 0x05F0;\n\t t['vavyodhebrew'] = 0x05F1;\n\t t['vcircle'] = 0x24E5;\n\t t['vdotbelow'] = 0x1E7F;\n\t t['vecyrillic'] = 0x0432;\n\t t['veharabic'] = 0x06A4;\n\t t['vehfinalarabic'] = 0xFB6B;\n\t t['vehinitialarabic'] = 0xFB6C;\n\t t['vehmedialarabic'] = 0xFB6D;\n\t t['vekatakana'] = 0x30F9;\n\t t['venus'] = 0x2640;\n\t t['verticalbar'] = 0x007C;\n\t t['verticallineabovecmb'] = 0x030D;\n\t t['verticallinebelowcmb'] = 0x0329;\n\t t['verticallinelowmod'] = 0x02CC;\n\t t['verticallinemod'] = 0x02C8;\n\t t['vewarmenian'] = 0x057E;\n\t t['vhook'] = 0x028B;\n\t t['vikatakana'] = 0x30F8;\n\t t['viramabengali'] = 0x09CD;\n\t t['viramadeva'] = 0x094D;\n\t t['viramagujarati'] = 0x0ACD;\n\t t['visargabengali'] = 0x0983;\n\t t['visargadeva'] = 0x0903;\n\t t['visargagujarati'] = 0x0A83;\n\t t['vmonospace'] = 0xFF56;\n\t t['voarmenian'] = 0x0578;\n\t t['voicediterationhiragana'] = 0x309E;\n\t t['voicediterationkatakana'] = 0x30FE;\n\t t['voicedmarkkana'] = 0x309B;\n\t t['voicedmarkkanahalfwidth'] = 0xFF9E;\n\t t['vokatakana'] = 0x30FA;\n\t t['vparen'] = 0x24B1;\n\t t['vtilde'] = 0x1E7D;\n\t t['vturned'] = 0x028C;\n\t t['vuhiragana'] = 0x3094;\n\t t['vukatakana'] = 0x30F4;\n\t t['w'] = 0x0077;\n\t t['wacute'] = 0x1E83;\n\t t['waekorean'] = 0x3159;\n\t t['wahiragana'] = 0x308F;\n\t t['wakatakana'] = 0x30EF;\n\t t['wakatakanahalfwidth'] = 0xFF9C;\n\t t['wakorean'] = 0x3158;\n\t t['wasmallhiragana'] = 0x308E;\n\t t['wasmallkatakana'] = 0x30EE;\n\t t['wattosquare'] = 0x3357;\n\t t['wavedash'] = 0x301C;\n\t t['wavyunderscorevertical'] = 0xFE34;\n\t t['wawarabic'] = 0x0648;\n\t t['wawfinalarabic'] = 0xFEEE;\n\t t['wawhamzaabovearabic'] = 0x0624;\n\t t['wawhamzaabovefinalarabic'] = 0xFE86;\n\t t['wbsquare'] = 0x33DD;\n\t t['wcircle'] = 0x24E6;\n\t t['wcircumflex'] = 0x0175;\n\t t['wdieresis'] = 0x1E85;\n\t t['wdotaccent'] = 0x1E87;\n\t t['wdotbelow'] = 0x1E89;\n\t t['wehiragana'] = 0x3091;\n\t t['weierstrass'] = 0x2118;\n\t t['wekatakana'] = 0x30F1;\n\t t['wekorean'] = 0x315E;\n\t t['weokorean'] = 0x315D;\n\t t['wgrave'] = 0x1E81;\n\t t['whitebullet'] = 0x25E6;\n\t t['whitecircle'] = 0x25CB;\n\t t['whitecircleinverse'] = 0x25D9;\n\t t['whitecornerbracketleft'] = 0x300E;\n\t t['whitecornerbracketleftvertical'] = 0xFE43;\n\t t['whitecornerbracketright'] = 0x300F;\n\t t['whitecornerbracketrightvertical'] = 0xFE44;\n\t t['whitediamond'] = 0x25C7;\n\t t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n\t t['whitedownpointingsmalltriangle'] = 0x25BF;\n\t t['whitedownpointingtriangle'] = 0x25BD;\n\t t['whiteleftpointingsmalltriangle'] = 0x25C3;\n\t t['whiteleftpointingtriangle'] = 0x25C1;\n\t t['whitelenticularbracketleft'] = 0x3016;\n\t t['whitelenticularbracketright'] = 0x3017;\n\t t['whiterightpointingsmalltriangle'] = 0x25B9;\n\t t['whiterightpointingtriangle'] = 0x25B7;\n\t t['whitesmallsquare'] = 0x25AB;\n\t t['whitesmilingface'] = 0x263A;\n\t t['whitesquare'] = 0x25A1;\n\t t['whitestar'] = 0x2606;\n\t t['whitetelephone'] = 0x260F;\n\t t['whitetortoiseshellbracketleft'] = 0x3018;\n\t t['whitetortoiseshellbracketright'] = 0x3019;\n\t t['whiteuppointingsmalltriangle'] = 0x25B5;\n\t t['whiteuppointingtriangle'] = 0x25B3;\n\t t['wihiragana'] = 0x3090;\n\t t['wikatakana'] = 0x30F0;\n\t t['wikorean'] = 0x315F;\n\t t['wmonospace'] = 0xFF57;\n\t t['wohiragana'] = 0x3092;\n\t t['wokatakana'] = 0x30F2;\n\t t['wokatakanahalfwidth'] = 0xFF66;\n\t t['won'] = 0x20A9;\n\t t['wonmonospace'] = 0xFFE6;\n\t t['wowaenthai'] = 0x0E27;\n\t t['wparen'] = 0x24B2;\n\t t['wring'] = 0x1E98;\n\t t['wsuperior'] = 0x02B7;\n\t t['wturned'] = 0x028D;\n\t t['wynn'] = 0x01BF;\n\t t['x'] = 0x0078;\n\t t['xabovecmb'] = 0x033D;\n\t t['xbopomofo'] = 0x3112;\n\t t['xcircle'] = 0x24E7;\n\t t['xdieresis'] = 0x1E8D;\n\t t['xdotaccent'] = 0x1E8B;\n\t t['xeharmenian'] = 0x056D;\n\t t['xi'] = 0x03BE;\n\t t['xmonospace'] = 0xFF58;\n\t t['xparen'] = 0x24B3;\n\t t['xsuperior'] = 0x02E3;\n\t t['y'] = 0x0079;\n\t t['yaadosquare'] = 0x334E;\n\t t['yabengali'] = 0x09AF;\n\t t['yacute'] = 0x00FD;\n\t t['yadeva'] = 0x092F;\n\t t['yaekorean'] = 0x3152;\n\t t['yagujarati'] = 0x0AAF;\n\t t['yagurmukhi'] = 0x0A2F;\n\t t['yahiragana'] = 0x3084;\n\t t['yakatakana'] = 0x30E4;\n\t t['yakatakanahalfwidth'] = 0xFF94;\n\t t['yakorean'] = 0x3151;\n\t t['yamakkanthai'] = 0x0E4E;\n\t t['yasmallhiragana'] = 0x3083;\n\t t['yasmallkatakana'] = 0x30E3;\n\t t['yasmallkatakanahalfwidth'] = 0xFF6C;\n\t t['yatcyrillic'] = 0x0463;\n\t t['ycircle'] = 0x24E8;\n\t t['ycircumflex'] = 0x0177;\n\t t['ydieresis'] = 0x00FF;\n\t t['ydotaccent'] = 0x1E8F;\n\t t['ydotbelow'] = 0x1EF5;\n\t t['yeharabic'] = 0x064A;\n\t t['yehbarreearabic'] = 0x06D2;\n\t t['yehbarreefinalarabic'] = 0xFBAF;\n\t t['yehfinalarabic'] = 0xFEF2;\n\t t['yehhamzaabovearabic'] = 0x0626;\n\t t['yehhamzaabovefinalarabic'] = 0xFE8A;\n\t t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n\t t['yehhamzaabovemedialarabic'] = 0xFE8C;\n\t t['yehinitialarabic'] = 0xFEF3;\n\t t['yehmedialarabic'] = 0xFEF4;\n\t t['yehmeeminitialarabic'] = 0xFCDD;\n\t t['yehmeemisolatedarabic'] = 0xFC58;\n\t t['yehnoonfinalarabic'] = 0xFC94;\n\t t['yehthreedotsbelowarabic'] = 0x06D1;\n\t t['yekorean'] = 0x3156;\n\t t['yen'] = 0x00A5;\n\t t['yenmonospace'] = 0xFFE5;\n\t t['yeokorean'] = 0x3155;\n\t t['yeorinhieuhkorean'] = 0x3186;\n\t t['yerahbenyomohebrew'] = 0x05AA;\n\t t['yerahbenyomolefthebrew'] = 0x05AA;\n\t t['yericyrillic'] = 0x044B;\n\t t['yerudieresiscyrillic'] = 0x04F9;\n\t t['yesieungkorean'] = 0x3181;\n\t t['yesieungpansioskorean'] = 0x3183;\n\t t['yesieungsioskorean'] = 0x3182;\n\t t['yetivhebrew'] = 0x059A;\n\t t['ygrave'] = 0x1EF3;\n\t t['yhook'] = 0x01B4;\n\t t['yhookabove'] = 0x1EF7;\n\t t['yiarmenian'] = 0x0575;\n\t t['yicyrillic'] = 0x0457;\n\t t['yikorean'] = 0x3162;\n\t t['yinyang'] = 0x262F;\n\t t['yiwnarmenian'] = 0x0582;\n\t t['ymonospace'] = 0xFF59;\n\t t['yod'] = 0x05D9;\n\t t['yoddagesh'] = 0xFB39;\n\t t['yoddageshhebrew'] = 0xFB39;\n\t t['yodhebrew'] = 0x05D9;\n\t t['yodyodhebrew'] = 0x05F2;\n\t t['yodyodpatahhebrew'] = 0xFB1F;\n\t t['yohiragana'] = 0x3088;\n\t t['yoikorean'] = 0x3189;\n\t t['yokatakana'] = 0x30E8;\n\t t['yokatakanahalfwidth'] = 0xFF96;\n\t t['yokorean'] = 0x315B;\n\t t['yosmallhiragana'] = 0x3087;\n\t t['yosmallkatakana'] = 0x30E7;\n\t t['yosmallkatakanahalfwidth'] = 0xFF6E;\n\t t['yotgreek'] = 0x03F3;\n\t t['yoyaekorean'] = 0x3188;\n\t t['yoyakorean'] = 0x3187;\n\t t['yoyakthai'] = 0x0E22;\n\t t['yoyingthai'] = 0x0E0D;\n\t t['yparen'] = 0x24B4;\n\t t['ypogegrammeni'] = 0x037A;\n\t t['ypogegrammenigreekcmb'] = 0x0345;\n\t t['yr'] = 0x01A6;\n\t t['yring'] = 0x1E99;\n\t t['ysuperior'] = 0x02B8;\n\t t['ytilde'] = 0x1EF9;\n\t t['yturned'] = 0x028E;\n\t t['yuhiragana'] = 0x3086;\n\t t['yuikorean'] = 0x318C;\n\t t['yukatakana'] = 0x30E6;\n\t t['yukatakanahalfwidth'] = 0xFF95;\n\t t['yukorean'] = 0x3160;\n\t t['yusbigcyrillic'] = 0x046B;\n\t t['yusbigiotifiedcyrillic'] = 0x046D;\n\t t['yuslittlecyrillic'] = 0x0467;\n\t t['yuslittleiotifiedcyrillic'] = 0x0469;\n\t t['yusmallhiragana'] = 0x3085;\n\t t['yusmallkatakana'] = 0x30E5;\n\t t['yusmallkatakanahalfwidth'] = 0xFF6D;\n\t t['yuyekorean'] = 0x318B;\n\t t['yuyeokorean'] = 0x318A;\n\t t['yyabengali'] = 0x09DF;\n\t t['yyadeva'] = 0x095F;\n\t t['z'] = 0x007A;\n\t t['zaarmenian'] = 0x0566;\n\t t['zacute'] = 0x017A;\n\t t['zadeva'] = 0x095B;\n\t t['zagurmukhi'] = 0x0A5B;\n\t t['zaharabic'] = 0x0638;\n\t t['zahfinalarabic'] = 0xFEC6;\n\t t['zahinitialarabic'] = 0xFEC7;\n\t t['zahiragana'] = 0x3056;\n\t t['zahmedialarabic'] = 0xFEC8;\n\t t['zainarabic'] = 0x0632;\n\t t['zainfinalarabic'] = 0xFEB0;\n\t t['zakatakana'] = 0x30B6;\n\t t['zaqefgadolhebrew'] = 0x0595;\n\t t['zaqefqatanhebrew'] = 0x0594;\n\t t['zarqahebrew'] = 0x0598;\n\t t['zayin'] = 0x05D6;\n\t t['zayindagesh'] = 0xFB36;\n\t t['zayindageshhebrew'] = 0xFB36;\n\t t['zayinhebrew'] = 0x05D6;\n\t t['zbopomofo'] = 0x3117;\n\t t['zcaron'] = 0x017E;\n\t t['zcircle'] = 0x24E9;\n\t t['zcircumflex'] = 0x1E91;\n\t t['zcurl'] = 0x0291;\n\t t['zdot'] = 0x017C;\n\t t['zdotaccent'] = 0x017C;\n\t t['zdotbelow'] = 0x1E93;\n\t t['zecyrillic'] = 0x0437;\n\t t['zedescendercyrillic'] = 0x0499;\n\t t['zedieresiscyrillic'] = 0x04DF;\n\t t['zehiragana'] = 0x305C;\n\t t['zekatakana'] = 0x30BC;\n\t t['zero'] = 0x0030;\n\t t['zeroarabic'] = 0x0660;\n\t t['zerobengali'] = 0x09E6;\n\t t['zerodeva'] = 0x0966;\n\t t['zerogujarati'] = 0x0AE6;\n\t t['zerogurmukhi'] = 0x0A66;\n\t t['zerohackarabic'] = 0x0660;\n\t t['zeroinferior'] = 0x2080;\n\t t['zeromonospace'] = 0xFF10;\n\t t['zerooldstyle'] = 0xF730;\n\t t['zeropersian'] = 0x06F0;\n\t t['zerosuperior'] = 0x2070;\n\t t['zerothai'] = 0x0E50;\n\t t['zerowidthjoiner'] = 0xFEFF;\n\t t['zerowidthnonjoiner'] = 0x200C;\n\t t['zerowidthspace'] = 0x200B;\n\t t['zeta'] = 0x03B6;\n\t t['zhbopomofo'] = 0x3113;\n\t t['zhearmenian'] = 0x056A;\n\t t['zhebrevecyrillic'] = 0x04C2;\n\t t['zhecyrillic'] = 0x0436;\n\t t['zhedescendercyrillic'] = 0x0497;\n\t t['zhedieresiscyrillic'] = 0x04DD;\n\t t['zihiragana'] = 0x3058;\n\t t['zikatakana'] = 0x30B8;\n\t t['zinorhebrew'] = 0x05AE;\n\t t['zlinebelow'] = 0x1E95;\n\t t['zmonospace'] = 0xFF5A;\n\t t['zohiragana'] = 0x305E;\n\t t['zokatakana'] = 0x30BE;\n\t t['zparen'] = 0x24B5;\n\t t['zretroflexhook'] = 0x0290;\n\t t['zstroke'] = 0x01B6;\n\t t['zuhiragana'] = 0x305A;\n\t t['zukatakana'] = 0x30BA;\n\t t['.notdef'] = 0x0000;\n\t t['angbracketleftbig'] = 0x2329;\n\t t['angbracketleftBig'] = 0x2329;\n\t t['angbracketleftbigg'] = 0x2329;\n\t t['angbracketleftBigg'] = 0x2329;\n\t t['angbracketrightBig'] = 0x232A;\n\t t['angbracketrightbig'] = 0x232A;\n\t t['angbracketrightBigg'] = 0x232A;\n\t t['angbracketrightbigg'] = 0x232A;\n\t t['arrowhookleft'] = 0x21AA;\n\t t['arrowhookright'] = 0x21A9;\n\t t['arrowlefttophalf'] = 0x21BC;\n\t t['arrowleftbothalf'] = 0x21BD;\n\t t['arrownortheast'] = 0x2197;\n\t t['arrownorthwest'] = 0x2196;\n\t t['arrowrighttophalf'] = 0x21C0;\n\t t['arrowrightbothalf'] = 0x21C1;\n\t t['arrowsoutheast'] = 0x2198;\n\t t['arrowsouthwest'] = 0x2199;\n\t t['backslashbig'] = 0x2216;\n\t t['backslashBig'] = 0x2216;\n\t t['backslashBigg'] = 0x2216;\n\t t['backslashbigg'] = 0x2216;\n\t t['bardbl'] = 0x2016;\n\t t['bracehtipdownleft'] = 0xFE37;\n\t t['bracehtipdownright'] = 0xFE37;\n\t t['bracehtipupleft'] = 0xFE38;\n\t t['bracehtipupright'] = 0xFE38;\n\t t['braceleftBig'] = 0x007B;\n\t t['braceleftbig'] = 0x007B;\n\t t['braceleftbigg'] = 0x007B;\n\t t['braceleftBigg'] = 0x007B;\n\t t['bracerightBig'] = 0x007D;\n\t t['bracerightbig'] = 0x007D;\n\t t['bracerightbigg'] = 0x007D;\n\t t['bracerightBigg'] = 0x007D;\n\t t['bracketleftbig'] = 0x005B;\n\t t['bracketleftBig'] = 0x005B;\n\t t['bracketleftbigg'] = 0x005B;\n\t t['bracketleftBigg'] = 0x005B;\n\t t['bracketrightBig'] = 0x005D;\n\t t['bracketrightbig'] = 0x005D;\n\t t['bracketrightbigg'] = 0x005D;\n\t t['bracketrightBigg'] = 0x005D;\n\t t['ceilingleftbig'] = 0x2308;\n\t t['ceilingleftBig'] = 0x2308;\n\t t['ceilingleftBigg'] = 0x2308;\n\t t['ceilingleftbigg'] = 0x2308;\n\t t['ceilingrightbig'] = 0x2309;\n\t t['ceilingrightBig'] = 0x2309;\n\t t['ceilingrightbigg'] = 0x2309;\n\t t['ceilingrightBigg'] = 0x2309;\n\t t['circledotdisplay'] = 0x2299;\n\t t['circledottext'] = 0x2299;\n\t t['circlemultiplydisplay'] = 0x2297;\n\t t['circlemultiplytext'] = 0x2297;\n\t t['circleplusdisplay'] = 0x2295;\n\t t['circleplustext'] = 0x2295;\n\t t['contintegraldisplay'] = 0x222E;\n\t t['contintegraltext'] = 0x222E;\n\t t['coproductdisplay'] = 0x2210;\n\t t['coproducttext'] = 0x2210;\n\t t['floorleftBig'] = 0x230A;\n\t t['floorleftbig'] = 0x230A;\n\t t['floorleftbigg'] = 0x230A;\n\t t['floorleftBigg'] = 0x230A;\n\t t['floorrightbig'] = 0x230B;\n\t t['floorrightBig'] = 0x230B;\n\t t['floorrightBigg'] = 0x230B;\n\t t['floorrightbigg'] = 0x230B;\n\t t['hatwide'] = 0x0302;\n\t t['hatwider'] = 0x0302;\n\t t['hatwidest'] = 0x0302;\n\t t['intercal'] = 0x1D40;\n\t t['integraldisplay'] = 0x222B;\n\t t['integraltext'] = 0x222B;\n\t t['intersectiondisplay'] = 0x22C2;\n\t t['intersectiontext'] = 0x22C2;\n\t t['logicalanddisplay'] = 0x2227;\n\t t['logicalandtext'] = 0x2227;\n\t t['logicalordisplay'] = 0x2228;\n\t t['logicalortext'] = 0x2228;\n\t t['parenleftBig'] = 0x0028;\n\t t['parenleftbig'] = 0x0028;\n\t t['parenleftBigg'] = 0x0028;\n\t t['parenleftbigg'] = 0x0028;\n\t t['parenrightBig'] = 0x0029;\n\t t['parenrightbig'] = 0x0029;\n\t t['parenrightBigg'] = 0x0029;\n\t t['parenrightbigg'] = 0x0029;\n\t t['prime'] = 0x2032;\n\t t['productdisplay'] = 0x220F;\n\t t['producttext'] = 0x220F;\n\t t['radicalbig'] = 0x221A;\n\t t['radicalBig'] = 0x221A;\n\t t['radicalBigg'] = 0x221A;\n\t t['radicalbigg'] = 0x221A;\n\t t['radicalbt'] = 0x221A;\n\t t['radicaltp'] = 0x221A;\n\t t['radicalvertex'] = 0x221A;\n\t t['slashbig'] = 0x002F;\n\t t['slashBig'] = 0x002F;\n\t t['slashBigg'] = 0x002F;\n\t t['slashbigg'] = 0x002F;\n\t t['summationdisplay'] = 0x2211;\n\t t['summationtext'] = 0x2211;\n\t t['tildewide'] = 0x02DC;\n\t t['tildewider'] = 0x02DC;\n\t t['tildewidest'] = 0x02DC;\n\t t['uniondisplay'] = 0x22C3;\n\t t['unionmultidisplay'] = 0x228E;\n\t t['unionmultitext'] = 0x228E;\n\t t['unionsqdisplay'] = 0x2294;\n\t t['unionsqtext'] = 0x2294;\n\t t['uniontext'] = 0x22C3;\n\t t['vextenddouble'] = 0x2225;\n\t t['vextendsingle'] = 0x2223;\n\t});\n\tvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n\t t['space'] = 0x0020;\n\t t['a1'] = 0x2701;\n\t t['a2'] = 0x2702;\n\t t['a202'] = 0x2703;\n\t t['a3'] = 0x2704;\n\t t['a4'] = 0x260E;\n\t t['a5'] = 0x2706;\n\t t['a119'] = 0x2707;\n\t t['a118'] = 0x2708;\n\t t['a117'] = 0x2709;\n\t t['a11'] = 0x261B;\n\t t['a12'] = 0x261E;\n\t t['a13'] = 0x270C;\n\t t['a14'] = 0x270D;\n\t t['a15'] = 0x270E;\n\t t['a16'] = 0x270F;\n\t t['a105'] = 0x2710;\n\t t['a17'] = 0x2711;\n\t t['a18'] = 0x2712;\n\t t['a19'] = 0x2713;\n\t t['a20'] = 0x2714;\n\t t['a21'] = 0x2715;\n\t t['a22'] = 0x2716;\n\t t['a23'] = 0x2717;\n\t t['a24'] = 0x2718;\n\t t['a25'] = 0x2719;\n\t t['a26'] = 0x271A;\n\t t['a27'] = 0x271B;\n\t t['a28'] = 0x271C;\n\t t['a6'] = 0x271D;\n\t t['a7'] = 0x271E;\n\t t['a8'] = 0x271F;\n\t t['a9'] = 0x2720;\n\t t['a10'] = 0x2721;\n\t t['a29'] = 0x2722;\n\t t['a30'] = 0x2723;\n\t t['a31'] = 0x2724;\n\t t['a32'] = 0x2725;\n\t t['a33'] = 0x2726;\n\t t['a34'] = 0x2727;\n\t t['a35'] = 0x2605;\n\t t['a36'] = 0x2729;\n\t t['a37'] = 0x272A;\n\t t['a38'] = 0x272B;\n\t t['a39'] = 0x272C;\n\t t['a40'] = 0x272D;\n\t t['a41'] = 0x272E;\n\t t['a42'] = 0x272F;\n\t t['a43'] = 0x2730;\n\t t['a44'] = 0x2731;\n\t t['a45'] = 0x2732;\n\t t['a46'] = 0x2733;\n\t t['a47'] = 0x2734;\n\t t['a48'] = 0x2735;\n\t t['a49'] = 0x2736;\n\t t['a50'] = 0x2737;\n\t t['a51'] = 0x2738;\n\t t['a52'] = 0x2739;\n\t t['a53'] = 0x273A;\n\t t['a54'] = 0x273B;\n\t t['a55'] = 0x273C;\n\t t['a56'] = 0x273D;\n\t t['a57'] = 0x273E;\n\t t['a58'] = 0x273F;\n\t t['a59'] = 0x2740;\n\t t['a60'] = 0x2741;\n\t t['a61'] = 0x2742;\n\t t['a62'] = 0x2743;\n\t t['a63'] = 0x2744;\n\t t['a64'] = 0x2745;\n\t t['a65'] = 0x2746;\n\t t['a66'] = 0x2747;\n\t t['a67'] = 0x2748;\n\t t['a68'] = 0x2749;\n\t t['a69'] = 0x274A;\n\t t['a70'] = 0x274B;\n\t t['a71'] = 0x25CF;\n\t t['a72'] = 0x274D;\n\t t['a73'] = 0x25A0;\n\t t['a74'] = 0x274F;\n\t t['a203'] = 0x2750;\n\t t['a75'] = 0x2751;\n\t t['a204'] = 0x2752;\n\t t['a76'] = 0x25B2;\n\t t['a77'] = 0x25BC;\n\t t['a78'] = 0x25C6;\n\t t['a79'] = 0x2756;\n\t t['a81'] = 0x25D7;\n\t t['a82'] = 0x2758;\n\t t['a83'] = 0x2759;\n\t t['a84'] = 0x275A;\n\t t['a97'] = 0x275B;\n\t t['a98'] = 0x275C;\n\t t['a99'] = 0x275D;\n\t t['a100'] = 0x275E;\n\t t['a101'] = 0x2761;\n\t t['a102'] = 0x2762;\n\t t['a103'] = 0x2763;\n\t t['a104'] = 0x2764;\n\t t['a106'] = 0x2765;\n\t t['a107'] = 0x2766;\n\t t['a108'] = 0x2767;\n\t t['a112'] = 0x2663;\n\t t['a111'] = 0x2666;\n\t t['a110'] = 0x2665;\n\t t['a109'] = 0x2660;\n\t t['a120'] = 0x2460;\n\t t['a121'] = 0x2461;\n\t t['a122'] = 0x2462;\n\t t['a123'] = 0x2463;\n\t t['a124'] = 0x2464;\n\t t['a125'] = 0x2465;\n\t t['a126'] = 0x2466;\n\t t['a127'] = 0x2467;\n\t t['a128'] = 0x2468;\n\t t['a129'] = 0x2469;\n\t t['a130'] = 0x2776;\n\t t['a131'] = 0x2777;\n\t t['a132'] = 0x2778;\n\t t['a133'] = 0x2779;\n\t t['a134'] = 0x277A;\n\t t['a135'] = 0x277B;\n\t t['a136'] = 0x277C;\n\t t['a137'] = 0x277D;\n\t t['a138'] = 0x277E;\n\t t['a139'] = 0x277F;\n\t t['a140'] = 0x2780;\n\t t['a141'] = 0x2781;\n\t t['a142'] = 0x2782;\n\t t['a143'] = 0x2783;\n\t t['a144'] = 0x2784;\n\t t['a145'] = 0x2785;\n\t t['a146'] = 0x2786;\n\t t['a147'] = 0x2787;\n\t t['a148'] = 0x2788;\n\t t['a149'] = 0x2789;\n\t t['a150'] = 0x278A;\n\t t['a151'] = 0x278B;\n\t t['a152'] = 0x278C;\n\t t['a153'] = 0x278D;\n\t t['a154'] = 0x278E;\n\t t['a155'] = 0x278F;\n\t t['a156'] = 0x2790;\n\t t['a157'] = 0x2791;\n\t t['a158'] = 0x2792;\n\t t['a159'] = 0x2793;\n\t t['a160'] = 0x2794;\n\t t['a161'] = 0x2192;\n\t t['a163'] = 0x2194;\n\t t['a164'] = 0x2195;\n\t t['a196'] = 0x2798;\n\t t['a165'] = 0x2799;\n\t t['a192'] = 0x279A;\n\t t['a166'] = 0x279B;\n\t t['a167'] = 0x279C;\n\t t['a168'] = 0x279D;\n\t t['a169'] = 0x279E;\n\t t['a170'] = 0x279F;\n\t t['a171'] = 0x27A0;\n\t t['a172'] = 0x27A1;\n\t t['a173'] = 0x27A2;\n\t t['a162'] = 0x27A3;\n\t t['a174'] = 0x27A4;\n\t t['a175'] = 0x27A5;\n\t t['a176'] = 0x27A6;\n\t t['a177'] = 0x27A7;\n\t t['a178'] = 0x27A8;\n\t t['a179'] = 0x27A9;\n\t t['a193'] = 0x27AA;\n\t t['a180'] = 0x27AB;\n\t t['a199'] = 0x27AC;\n\t t['a181'] = 0x27AD;\n\t t['a200'] = 0x27AE;\n\t t['a182'] = 0x27AF;\n\t t['a201'] = 0x27B1;\n\t t['a183'] = 0x27B2;\n\t t['a184'] = 0x27B3;\n\t t['a197'] = 0x27B4;\n\t t['a185'] = 0x27B5;\n\t t['a194'] = 0x27B6;\n\t t['a198'] = 0x27B7;\n\t t['a186'] = 0x27B8;\n\t t['a195'] = 0x27B9;\n\t t['a187'] = 0x27BA;\n\t t['a188'] = 0x27BB;\n\t t['a189'] = 0x27BC;\n\t t['a190'] = 0x27BD;\n\t t['a191'] = 0x27BE;\n\t t['a89'] = 0x2768;\n\t t['a90'] = 0x2769;\n\t t['a93'] = 0x276A;\n\t t['a94'] = 0x276B;\n\t t['a91'] = 0x276C;\n\t t['a92'] = 0x276D;\n\t t['a205'] = 0x276E;\n\t t['a85'] = 0x276F;\n\t t['a206'] = 0x2770;\n\t t['a86'] = 0x2771;\n\t t['a87'] = 0x2772;\n\t t['a88'] = 0x2773;\n\t t['a95'] = 0x2774;\n\t t['a96'] = 0x2775;\n\t t['.notdef'] = 0x0000;\n\t});\n\texports.getGlyphsUnicode = getGlyphsUnicode;\n\texports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar corePdfManager = __w_pdfjs_require__(33);\n\tvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\tvar InvalidPDFException = sharedUtil.InvalidPDFException;\n\tvar MessageHandler = sharedUtil.MessageHandler;\n\tvar MissingPDFException = sharedUtil.MissingPDFException;\n\tvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n\tvar PasswordException = sharedUtil.PasswordException;\n\tvar UnknownErrorException = sharedUtil.UnknownErrorException;\n\tvar XRefParseException = sharedUtil.XRefParseException;\n\tvar arrayByteLength = sharedUtil.arrayByteLength;\n\tvar arraysToBytes = sharedUtil.arraysToBytes;\n\tvar assert = sharedUtil.assert;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar warn = sharedUtil.warn;\n\tvar setVerbosityLevel = sharedUtil.setVerbosityLevel;\n\tvar isNodeJS = sharedUtil.isNodeJS;\n\tvar Ref = corePrimitives.Ref;\n\tvar LocalPdfManager = corePdfManager.LocalPdfManager;\n\tvar NetworkPdfManager = corePdfManager.NetworkPdfManager;\n\tvar globalScope = sharedUtil.globalScope;\n\tvar WorkerTask = function WorkerTaskClosure() {\n\t function WorkerTask(name) {\n\t  this.name = name;\n\t  this.terminated = false;\n\t  this._capability = createPromiseCapability();\n\t }\n\t WorkerTask.prototype = {\n\t  get finished() {\n\t   return this._capability.promise;\n\t  },\n\t  finish: function () {\n\t   this._capability.resolve();\n\t  },\n\t  terminate: function () {\n\t   this.terminated = true;\n\t  },\n\t  ensureNotTerminated: function () {\n\t   if (this.terminated) {\n\t    throw new Error('Worker task was terminated');\n\t   }\n\t  }\n\t };\n\t return WorkerTask;\n\t}();\n\tvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n\t function PDFWorkerStream(params, msgHandler) {\n\t  this._queuedChunks = [];\n\t  var initialData = params.initialData;\n\t  if (initialData && initialData.length > 0) {\n\t   this._queuedChunks.push(initialData);\n\t  }\n\t  this._msgHandler = msgHandler;\n\t  this._isRangeSupported = !params.disableRange;\n\t  this._isStreamingSupported = !params.disableStream;\n\t  this._contentLength = params.length;\n\t  this._fullRequestReader = null;\n\t  this._rangeReaders = [];\n\t  msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n\t  msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n\t }\n\t PDFWorkerStream.prototype = {\n\t  _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n\t   if (args.begin === undefined) {\n\t    if (this._fullRequestReader) {\n\t     this._fullRequestReader._enqueue(args.chunk);\n\t    } else {\n\t     this._queuedChunks.push(args.chunk);\n\t    }\n\t   } else {\n\t    var found = this._rangeReaders.some(function (rangeReader) {\n\t     if (rangeReader._begin !== args.begin) {\n\t      return false;\n\t     }\n\t     rangeReader._enqueue(args.chunk);\n\t     return true;\n\t    });\n\t    assert(found);\n\t   }\n\t  },\n\t  _onProgress: function PDFWorkerStream_onProgress(evt) {\n\t   if (this._rangeReaders.length > 0) {\n\t    var firstReader = this._rangeReaders[0];\n\t    if (firstReader.onProgress) {\n\t     firstReader.onProgress({ loaded: evt.loaded });\n\t    }\n\t   }\n\t  },\n\t  _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n\t   var i = this._rangeReaders.indexOf(reader);\n\t   if (i >= 0) {\n\t    this._rangeReaders.splice(i, 1);\n\t   }\n\t  },\n\t  getFullReader: function PDFWorkerStream_getFullReader() {\n\t   assert(!this._fullRequestReader);\n\t   var queuedChunks = this._queuedChunks;\n\t   this._queuedChunks = null;\n\t   return new PDFWorkerStreamReader(this, queuedChunks);\n\t  },\n\t  getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n\t   var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n\t   this._msgHandler.send('RequestDataRange', {\n\t    begin: begin,\n\t    end: end\n\t   });\n\t   this._rangeReaders.push(reader);\n\t   return reader;\n\t  },\n\t  cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n\t   if (this._fullRequestReader) {\n\t    this._fullRequestReader.cancel(reason);\n\t   }\n\t   var readers = this._rangeReaders.slice(0);\n\t   readers.forEach(function (rangeReader) {\n\t    rangeReader.cancel(reason);\n\t   });\n\t  }\n\t };\n\t function PDFWorkerStreamReader(stream, queuedChunks) {\n\t  this._stream = stream;\n\t  this._done = false;\n\t  this._queuedChunks = queuedChunks || [];\n\t  this._requests = [];\n\t  this._headersReady = Promise.resolve();\n\t  stream._fullRequestReader = this;\n\t  this.onProgress = null;\n\t }\n\t PDFWorkerStreamReader.prototype = {\n\t  _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n\t   if (this._done) {\n\t    return;\n\t   }\n\t   if (this._requests.length > 0) {\n\t    var requestCapability = this._requests.shift();\n\t    requestCapability.resolve({\n\t     value: chunk,\n\t     done: false\n\t    });\n\t    return;\n\t   }\n\t   this._queuedChunks.push(chunk);\n\t  },\n\t  get headersReady() {\n\t   return this._headersReady;\n\t  },\n\t  get isRangeSupported() {\n\t   return this._stream._isRangeSupported;\n\t  },\n\t  get isStreamingSupported() {\n\t   return this._stream._isStreamingSupported;\n\t  },\n\t  get contentLength() {\n\t   return this._stream._contentLength;\n\t  },\n\t  read: function PDFWorkerStreamReader_read() {\n\t   if (this._queuedChunks.length > 0) {\n\t    var chunk = this._queuedChunks.shift();\n\t    return Promise.resolve({\n\t     value: chunk,\n\t     done: false\n\t    });\n\t   }\n\t   if (this._done) {\n\t    return Promise.resolve({\n\t     value: undefined,\n\t     done: true\n\t    });\n\t   }\n\t   var requestCapability = createPromiseCapability();\n\t   this._requests.push(requestCapability);\n\t   return requestCapability.promise;\n\t  },\n\t  cancel: function PDFWorkerStreamReader_cancel(reason) {\n\t   this._done = true;\n\t   this._requests.forEach(function (requestCapability) {\n\t    requestCapability.resolve({\n\t     value: undefined,\n\t     done: true\n\t    });\n\t   });\n\t   this._requests = [];\n\t  }\n\t };\n\t function PDFWorkerStreamRangeReader(stream, begin, end) {\n\t  this._stream = stream;\n\t  this._begin = begin;\n\t  this._end = end;\n\t  this._queuedChunk = null;\n\t  this._requests = [];\n\t  this._done = false;\n\t  this.onProgress = null;\n\t }\n\t PDFWorkerStreamRangeReader.prototype = {\n\t  _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n\t   if (this._done) {\n\t    return;\n\t   }\n\t   if (this._requests.length === 0) {\n\t    this._queuedChunk = chunk;\n\t   } else {\n\t    var requestsCapability = this._requests.shift();\n\t    requestsCapability.resolve({\n\t     value: chunk,\n\t     done: false\n\t    });\n\t    this._requests.forEach(function (requestCapability) {\n\t     requestCapability.resolve({\n\t      value: undefined,\n\t      done: true\n\t     });\n\t    });\n\t    this._requests = [];\n\t   }\n\t   this._done = true;\n\t   this._stream._removeRangeReader(this);\n\t  },\n\t  get isStreamingSupported() {\n\t   return false;\n\t  },\n\t  read: function PDFWorkerStreamRangeReader_read() {\n\t   if (this._queuedChunk) {\n\t    return Promise.resolve({\n\t     value: this._queuedChunk,\n\t     done: false\n\t    });\n\t   }\n\t   if (this._done) {\n\t    return Promise.resolve({\n\t     value: undefined,\n\t     done: true\n\t    });\n\t   }\n\t   var requestCapability = createPromiseCapability();\n\t   this._requests.push(requestCapability);\n\t   return requestCapability.promise;\n\t  },\n\t  cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n\t   this._done = true;\n\t   this._requests.forEach(function (requestCapability) {\n\t    requestCapability.resolve({\n\t     value: undefined,\n\t     done: true\n\t    });\n\t   });\n\t   this._requests = [];\n\t   this._stream._removeRangeReader(this);\n\t  }\n\t };\n\t return PDFWorkerStream;\n\t}();\n\tvar PDFNetworkStream;\n\tfunction setPDFNetworkStreamClass(cls) {\n\t PDFNetworkStream = cls;\n\t}\n\tvar WorkerMessageHandler = {\n\t setup: function wphSetup(handler, port) {\n\t  var testMessageProcessed = false;\n\t  handler.on('test', function wphSetupTest(data) {\n\t   if (testMessageProcessed) {\n\t    return;\n\t   }\n\t   testMessageProcessed = true;\n\t   if (!(data instanceof Uint8Array)) {\n\t    handler.send('test', 'main', false);\n\t    return;\n\t   }\n\t   var supportTransfers = data[0] === 255;\n\t   handler.postMessageTransfers = supportTransfers;\n\t   var xhr = new XMLHttpRequest();\n\t   var responseExists = 'response' in xhr;\n\t   try {\n\t    xhr.responseType;\n\t   } catch (e) {\n\t    responseExists = false;\n\t   }\n\t   if (!responseExists) {\n\t    handler.send('test', false);\n\t    return;\n\t   }\n\t   handler.send('test', {\n\t    supportTypedArray: true,\n\t    supportTransfers: supportTransfers\n\t   });\n\t  });\n\t  handler.on('configure', function wphConfigure(data) {\n\t   setVerbosityLevel(data.verbosity);\n\t  });\n\t  handler.on('GetDocRequest', function wphSetupDoc(data) {\n\t   return WorkerMessageHandler.createDocumentHandler(data, port);\n\t  });\n\t },\n\t createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n\t  var pdfManager;\n\t  var terminated = false;\n\t  var cancelXHRs = null;\n\t  var WorkerTasks = [];\n\t  var docId = docParams.docId;\n\t  var docBaseUrl = docParams.docBaseUrl;\n\t  var workerHandlerName = docParams.docId + '_worker';\n\t  var handler = new MessageHandler(workerHandlerName, docId, port);\n\t  handler.postMessageTransfers = docParams.postMessageTransfers;\n\t  function ensureNotTerminated() {\n\t   if (terminated) {\n\t    throw new Error('Worker was terminated');\n\t   }\n\t  }\n\t  function startWorkerTask(task) {\n\t   WorkerTasks.push(task);\n\t  }\n\t  function finishWorkerTask(task) {\n\t   task.finish();\n\t   var i = WorkerTasks.indexOf(task);\n\t   WorkerTasks.splice(i, 1);\n\t  }\n\t  function loadDocument(recoveryMode) {\n\t   var loadDocumentCapability = createPromiseCapability();\n\t   var parseSuccess = function parseSuccess() {\n\t    var numPagesPromise = pdfManager.ensureDoc('numPages');\n\t    var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n\t    var encryptedPromise = pdfManager.ensureXRef('encrypt');\n\t    Promise.all([\n\t     numPagesPromise,\n\t     fingerprintPromise,\n\t     encryptedPromise\n\t    ]).then(function onDocReady(results) {\n\t     var doc = {\n\t      numPages: results[0],\n\t      fingerprint: results[1],\n\t      encrypted: !!results[2]\n\t     };\n\t     loadDocumentCapability.resolve(doc);\n\t    }, parseFailure);\n\t   };\n\t   var parseFailure = function parseFailure(e) {\n\t    loadDocumentCapability.reject(e);\n\t   };\n\t   pdfManager.ensureDoc('checkHeader', []).then(function () {\n\t    pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n\t     pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n\t    }, parseFailure);\n\t   }, parseFailure);\n\t   return loadDocumentCapability.promise;\n\t  }\n\t  function getPdfManager(data, evaluatorOptions) {\n\t   var pdfManagerCapability = createPromiseCapability();\n\t   var pdfManager;\n\t   var source = data.source;\n\t   if (source.data) {\n\t    try {\n\t     pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n\t     pdfManagerCapability.resolve(pdfManager);\n\t    } catch (ex) {\n\t     pdfManagerCapability.reject(ex);\n\t    }\n\t    return pdfManagerCapability.promise;\n\t   }\n\t   var pdfStream;\n\t   try {\n\t    if (source.chunkedViewerLoading) {\n\t     pdfStream = new PDFWorkerStream(source, handler);\n\t    } else {\n\t     assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n\t     pdfStream = new PDFNetworkStream(data);\n\t    }\n\t   } catch (ex) {\n\t    pdfManagerCapability.reject(ex);\n\t    return pdfManagerCapability.promise;\n\t   }\n\t   var fullRequest = pdfStream.getFullReader();\n\t   fullRequest.headersReady.then(function () {\n\t    if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n\t     fullRequest.onProgress = function (evt) {\n\t      handler.send('DocProgress', {\n\t       loaded: evt.loaded,\n\t       total: evt.total\n\t      });\n\t     };\n\t    }\n\t    if (!fullRequest.isRangeSupported) {\n\t     return;\n\t    }\n\t    var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n\t    pdfManager = new NetworkPdfManager(docId, pdfStream, {\n\t     msgHandler: handler,\n\t     url: source.url,\n\t     password: source.password,\n\t     length: fullRequest.contentLength,\n\t     disableAutoFetch: disableAutoFetch,\n\t     rangeChunkSize: source.rangeChunkSize\n\t    }, evaluatorOptions, docBaseUrl);\n\t    pdfManagerCapability.resolve(pdfManager);\n\t    cancelXHRs = null;\n\t   }).catch(function (reason) {\n\t    pdfManagerCapability.reject(reason);\n\t    cancelXHRs = null;\n\t   });\n\t   var cachedChunks = [], loaded = 0;\n\t   var flushChunks = function () {\n\t    var pdfFile = arraysToBytes(cachedChunks);\n\t    if (source.length && pdfFile.length !== source.length) {\n\t     warn('reported HTTP length is different from actual');\n\t    }\n\t    try {\n\t     pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n\t     pdfManagerCapability.resolve(pdfManager);\n\t    } catch (ex) {\n\t     pdfManagerCapability.reject(ex);\n\t    }\n\t    cachedChunks = [];\n\t   };\n\t   var readPromise = new Promise(function (resolve, reject) {\n\t    var readChunk = function (chunk) {\n\t     try {\n\t      ensureNotTerminated();\n\t      if (chunk.done) {\n\t       if (!pdfManager) {\n\t        flushChunks();\n\t       }\n\t       cancelXHRs = null;\n\t       return;\n\t      }\n\t      var data = chunk.value;\n\t      loaded += arrayByteLength(data);\n\t      if (!fullRequest.isStreamingSupported) {\n\t       handler.send('DocProgress', {\n\t        loaded: loaded,\n\t        total: Math.max(loaded, fullRequest.contentLength || 0)\n\t       });\n\t      }\n\t      if (pdfManager) {\n\t       pdfManager.sendProgressiveData(data);\n\t      } else {\n\t       cachedChunks.push(data);\n\t      }\n\t      fullRequest.read().then(readChunk, reject);\n\t     } catch (e) {\n\t      reject(e);\n\t     }\n\t    };\n\t    fullRequest.read().then(readChunk, reject);\n\t   });\n\t   readPromise.catch(function (e) {\n\t    pdfManagerCapability.reject(e);\n\t    cancelXHRs = null;\n\t   });\n\t   cancelXHRs = function () {\n\t    pdfStream.cancelAllRequests('abort');\n\t   };\n\t   return pdfManagerCapability.promise;\n\t  }\n\t  function setupDoc(data) {\n\t   function onSuccess(doc) {\n\t    ensureNotTerminated();\n\t    handler.send('GetDoc', { pdfInfo: doc });\n\t   }\n\t   function onFailure(e) {\n\t    if (e instanceof PasswordException) {\n\t     var task = new WorkerTask('PasswordException: response ' + e.code);\n\t     startWorkerTask(task);\n\t     handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n\t      finishWorkerTask(task);\n\t      pdfManager.updatePassword(data.password);\n\t      pdfManagerReady();\n\t     }).catch(function (ex) {\n\t      finishWorkerTask(task);\n\t      handler.send('PasswordException', ex);\n\t     }.bind(null, e));\n\t    } else if (e instanceof InvalidPDFException) {\n\t     handler.send('InvalidPDF', e);\n\t    } else if (e instanceof MissingPDFException) {\n\t     handler.send('MissingPDF', e);\n\t    } else if (e instanceof UnexpectedResponseException) {\n\t     handler.send('UnexpectedResponse', e);\n\t    } else {\n\t     handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n\t    }\n\t   }\n\t   function pdfManagerReady() {\n\t    ensureNotTerminated();\n\t    loadDocument(false).then(onSuccess, function loadFailure(ex) {\n\t     ensureNotTerminated();\n\t     if (!(ex instanceof XRefParseException)) {\n\t      onFailure(ex);\n\t      return;\n\t     }\n\t     pdfManager.requestLoadedStream();\n\t     pdfManager.onLoadedStream().then(function () {\n\t      ensureNotTerminated();\n\t      loadDocument(true).then(onSuccess, onFailure);\n\t     });\n\t    }, onFailure);\n\t   }\n\t   ensureNotTerminated();\n\t   var evaluatorOptions = {\n\t    forceDataSchema: data.disableCreateObjectURL,\n\t    maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n\t    disableFontFace: data.disableFontFace,\n\t    disableNativeImageDecoder: data.disableNativeImageDecoder\n\t   };\n\t   getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n\t    if (terminated) {\n\t     newPdfManager.terminate();\n\t     throw new Error('Worker was terminated');\n\t    }\n\t    pdfManager = newPdfManager;\n\t    handler.send('PDFManagerReady', null);\n\t    pdfManager.onLoadedStream().then(function (stream) {\n\t     handler.send('DataLoaded', { length: stream.bytes.byteLength });\n\t    });\n\t   }).then(pdfManagerReady, onFailure);\n\t  }\n\t  handler.on('GetPage', function wphSetupGetPage(data) {\n\t   return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t    var rotatePromise = pdfManager.ensure(page, 'rotate');\n\t    var refPromise = pdfManager.ensure(page, 'ref');\n\t    var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n\t    var viewPromise = pdfManager.ensure(page, 'view');\n\t    return Promise.all([\n\t     rotatePromise,\n\t     refPromise,\n\t     userUnitPromise,\n\t     viewPromise\n\t    ]).then(function (results) {\n\t     return {\n\t      rotate: results[0],\n\t      ref: results[1],\n\t      userUnit: results[2],\n\t      view: results[3]\n\t     };\n\t    });\n\t   });\n\t  });\n\t  handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n\t   var ref = new Ref(data.ref.num, data.ref.gen);\n\t   var catalog = pdfManager.pdfDocument.catalog;\n\t   return catalog.getPageIndex(ref);\n\t  });\n\t  handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n\t   return pdfManager.ensureCatalog('destinations');\n\t  });\n\t  handler.on('GetDestination', function wphSetupGetDestination(data) {\n\t   return pdfManager.ensureCatalog('getDestination', [data.id]);\n\t  });\n\t  handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n\t   return pdfManager.ensureCatalog('pageLabels');\n\t  });\n\t  handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n\t   return pdfManager.ensureCatalog('attachments');\n\t  });\n\t  handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n\t   return pdfManager.ensureCatalog('javaScript');\n\t  });\n\t  handler.on('GetOutline', function wphSetupGetOutline(data) {\n\t   return pdfManager.ensureCatalog('documentOutline');\n\t  });\n\t  handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n\t   return Promise.all([\n\t    pdfManager.ensureDoc('documentInfo'),\n\t    pdfManager.ensureCatalog('metadata')\n\t   ]);\n\t  });\n\t  handler.on('GetData', function wphSetupGetData(data) {\n\t   pdfManager.requestLoadedStream();\n\t   return pdfManager.onLoadedStream().then(function (stream) {\n\t    return stream.bytes;\n\t   });\n\t  });\n\t  handler.on('GetStats', function wphSetupGetStats(data) {\n\t   return pdfManager.pdfDocument.xref.stats;\n\t  });\n\t  handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n\t   return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t    return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n\t   });\n\t  });\n\t  handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n\t   var pageIndex = data.pageIndex;\n\t   pdfManager.getPage(pageIndex).then(function (page) {\n\t    var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n\t    startWorkerTask(task);\n\t    var pageNum = pageIndex + 1;\n\t    var start = Date.now();\n\t    page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n\t     finishWorkerTask(task);\n\t     info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n\t    }, function (e) {\n\t     finishWorkerTask(task);\n\t     if (task.terminated) {\n\t      return;\n\t     }\n\t     handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n\t     var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n\t     var wrappedException;\n\t     if (typeof e === 'string') {\n\t      wrappedException = {\n\t       message: e,\n\t       stack: minimumStackMessage\n\t      };\n\t     } else if (typeof e === 'object') {\n\t      wrappedException = {\n\t       message: e.message || e.toString(),\n\t       stack: e.stack || minimumStackMessage\n\t      };\n\t     } else {\n\t      wrappedException = {\n\t       message: 'Unknown exception type: ' + typeof e,\n\t       stack: minimumStackMessage\n\t      };\n\t     }\n\t     handler.send('PageError', {\n\t      pageNum: pageNum,\n\t      error: wrappedException,\n\t      intent: data.intent\n\t     });\n\t    });\n\t   });\n\t  }, this);\n\t  handler.on('GetTextContent', function wphExtractText(data) {\n\t   var pageIndex = data.pageIndex;\n\t   var normalizeWhitespace = data.normalizeWhitespace;\n\t   var combineTextItems = data.combineTextItems;\n\t   return pdfManager.getPage(pageIndex).then(function (page) {\n\t    var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n\t    startWorkerTask(task);\n\t    var pageNum = pageIndex + 1;\n\t    var start = Date.now();\n\t    return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n\t     finishWorkerTask(task);\n\t     info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n\t     return textContent;\n\t    }, function (reason) {\n\t     finishWorkerTask(task);\n\t     if (task.terminated) {\n\t      return;\n\t     }\n\t     throw reason;\n\t    });\n\t   });\n\t  });\n\t  handler.on('Cleanup', function wphCleanup(data) {\n\t   return pdfManager.cleanup();\n\t  });\n\t  handler.on('Terminate', function wphTerminate(data) {\n\t   terminated = true;\n\t   if (pdfManager) {\n\t    pdfManager.terminate();\n\t    pdfManager = null;\n\t   }\n\t   if (cancelXHRs) {\n\t    cancelXHRs();\n\t   }\n\t   var waitOn = [];\n\t   WorkerTasks.forEach(function (task) {\n\t    waitOn.push(task.finished);\n\t    task.terminate();\n\t   });\n\t   return Promise.all(waitOn).then(function () {\n\t    handler.destroy();\n\t    handler = null;\n\t   });\n\t  });\n\t  handler.on('Ready', function wphReady(data) {\n\t   setupDoc(docParams);\n\t   docParams = null;\n\t  });\n\t  return workerHandlerName;\n\t }\n\t};\n\tfunction initializeWorker() {\n\t if (!('console' in globalScope)) {\n\t  var consoleTimer = {};\n\t  var workerConsole = {\n\t   log: function log() {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    globalScope.postMessage({\n\t     targetName: 'main',\n\t     action: 'console_log',\n\t     data: args\n\t    });\n\t   },\n\t   error: function error() {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    globalScope.postMessage({\n\t     targetName: 'main',\n\t     action: 'console_error',\n\t     data: args\n\t    });\n\t    throw 'pdf.js execution error';\n\t   },\n\t   time: function time(name) {\n\t    consoleTimer[name] = Date.now();\n\t   },\n\t   timeEnd: function timeEnd(name) {\n\t    var time = consoleTimer[name];\n\t    if (!time) {\n\t     error('Unknown timer name ' + name);\n\t    }\n\t    this.log('Timer:', name, Date.now() - time);\n\t   }\n\t  };\n\t  globalScope.console = workerConsole;\n\t }\n\t var handler = new MessageHandler('worker', 'main', self);\n\t WorkerMessageHandler.setup(handler, self);\n\t handler.send('ready', null);\n\t}\n\tif (typeof window === 'undefined' && !isNodeJS()) {\n\t initializeWorker();\n\t}\n\texports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\n\texports.WorkerTask = WorkerTask;\n\texports.WorkerMessageHandler = WorkerMessageHandler;\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n\t var QeTable = [\n\t  {\n\t   qe: 0x5601,\n\t   nmps: 1,\n\t   nlps: 1,\n\t   switchFlag: 1\n\t  },\n\t  {\n\t   qe: 0x3401,\n\t   nmps: 2,\n\t   nlps: 6,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1801,\n\t   nmps: 3,\n\t   nlps: 9,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0AC1,\n\t   nmps: 4,\n\t   nlps: 12,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0521,\n\t   nmps: 5,\n\t   nlps: 29,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0221,\n\t   nmps: 38,\n\t   nlps: 33,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x5601,\n\t   nmps: 7,\n\t   nlps: 6,\n\t   switchFlag: 1\n\t  },\n\t  {\n\t   qe: 0x5401,\n\t   nmps: 8,\n\t   nlps: 14,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x4801,\n\t   nmps: 9,\n\t   nlps: 14,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x3801,\n\t   nmps: 10,\n\t   nlps: 14,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x3001,\n\t   nmps: 11,\n\t   nlps: 17,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x2401,\n\t   nmps: 12,\n\t   nlps: 18,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1C01,\n\t   nmps: 13,\n\t   nlps: 20,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1601,\n\t   nmps: 29,\n\t   nlps: 21,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x5601,\n\t   nmps: 15,\n\t   nlps: 14,\n\t   switchFlag: 1\n\t  },\n\t  {\n\t   qe: 0x5401,\n\t   nmps: 16,\n\t   nlps: 14,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x5101,\n\t   nmps: 17,\n\t   nlps: 15,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x4801,\n\t   nmps: 18,\n\t   nlps: 16,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x3801,\n\t   nmps: 19,\n\t   nlps: 17,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x3401,\n\t   nmps: 20,\n\t   nlps: 18,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x3001,\n\t   nmps: 21,\n\t   nlps: 19,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x2801,\n\t   nmps: 22,\n\t   nlps: 19,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x2401,\n\t   nmps: 23,\n\t   nlps: 20,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x2201,\n\t   nmps: 24,\n\t   nlps: 21,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1C01,\n\t   nmps: 25,\n\t   nlps: 22,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1801,\n\t   nmps: 26,\n\t   nlps: 23,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1601,\n\t   nmps: 27,\n\t   nlps: 24,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1401,\n\t   nmps: 28,\n\t   nlps: 25,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1201,\n\t   nmps: 29,\n\t   nlps: 26,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x1101,\n\t   nmps: 30,\n\t   nlps: 27,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0AC1,\n\t   nmps: 31,\n\t   nlps: 28,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x09C1,\n\t   nmps: 32,\n\t   nlps: 29,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x08A1,\n\t   nmps: 33,\n\t   nlps: 30,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0521,\n\t   nmps: 34,\n\t   nlps: 31,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0441,\n\t   nmps: 35,\n\t   nlps: 32,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x02A1,\n\t   nmps: 36,\n\t   nlps: 33,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0221,\n\t   nmps: 37,\n\t   nlps: 34,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0141,\n\t   nmps: 38,\n\t   nlps: 35,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0111,\n\t   nmps: 39,\n\t   nlps: 36,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0085,\n\t   nmps: 40,\n\t   nlps: 37,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0049,\n\t   nmps: 41,\n\t   nlps: 38,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0025,\n\t   nmps: 42,\n\t   nlps: 39,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0015,\n\t   nmps: 43,\n\t   nlps: 40,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0009,\n\t   nmps: 44,\n\t   nlps: 41,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0005,\n\t   nmps: 45,\n\t   nlps: 42,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x0001,\n\t   nmps: 45,\n\t   nlps: 43,\n\t   switchFlag: 0\n\t  },\n\t  {\n\t   qe: 0x5601,\n\t   nmps: 46,\n\t   nlps: 46,\n\t   switchFlag: 0\n\t  }\n\t ];\n\t function ArithmeticDecoder(data, start, end) {\n\t  this.data = data;\n\t  this.bp = start;\n\t  this.dataEnd = end;\n\t  this.chigh = data[start];\n\t  this.clow = 0;\n\t  this.byteIn();\n\t  this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n\t  this.clow = this.clow << 7 & 0xFFFF;\n\t  this.ct -= 7;\n\t  this.a = 0x8000;\n\t }\n\t ArithmeticDecoder.prototype = {\n\t  byteIn: function ArithmeticDecoder_byteIn() {\n\t   var data = this.data;\n\t   var bp = this.bp;\n\t   if (data[bp] === 0xFF) {\n\t    var b1 = data[bp + 1];\n\t    if (b1 > 0x8F) {\n\t     this.clow += 0xFF00;\n\t     this.ct = 8;\n\t    } else {\n\t     bp++;\n\t     this.clow += data[bp] << 9;\n\t     this.ct = 7;\n\t     this.bp = bp;\n\t    }\n\t   } else {\n\t    bp++;\n\t    this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n\t    this.ct = 8;\n\t    this.bp = bp;\n\t   }\n\t   if (this.clow > 0xFFFF) {\n\t    this.chigh += this.clow >> 16;\n\t    this.clow &= 0xFFFF;\n\t   }\n\t  },\n\t  readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n\t   var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n\t   var qeTableIcx = QeTable[cx_index];\n\t   var qeIcx = qeTableIcx.qe;\n\t   var d;\n\t   var a = this.a - qeIcx;\n\t   if (this.chigh < qeIcx) {\n\t    if (a < qeIcx) {\n\t     a = qeIcx;\n\t     d = cx_mps;\n\t     cx_index = qeTableIcx.nmps;\n\t    } else {\n\t     a = qeIcx;\n\t     d = 1 ^ cx_mps;\n\t     if (qeTableIcx.switchFlag === 1) {\n\t      cx_mps = d;\n\t     }\n\t     cx_index = qeTableIcx.nlps;\n\t    }\n\t   } else {\n\t    this.chigh -= qeIcx;\n\t    if ((a & 0x8000) !== 0) {\n\t     this.a = a;\n\t     return cx_mps;\n\t    }\n\t    if (a < qeIcx) {\n\t     d = 1 ^ cx_mps;\n\t     if (qeTableIcx.switchFlag === 1) {\n\t      cx_mps = d;\n\t     }\n\t     cx_index = qeTableIcx.nlps;\n\t    } else {\n\t     d = cx_mps;\n\t     cx_index = qeTableIcx.nmps;\n\t    }\n\t   }\n\t   do {\n\t    if (this.ct === 0) {\n\t     this.byteIn();\n\t    }\n\t    a <<= 1;\n\t    this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n\t    this.clow = this.clow << 1 & 0xFFFF;\n\t    this.ct--;\n\t   } while ((a & 0x8000) === 0);\n\t   this.a = a;\n\t   contexts[pos] = cx_index << 1 | cx_mps;\n\t   return d;\n\t  }\n\t };\n\t return ArithmeticDecoder;\n\t}();\n\texports.ArithmeticDecoder = ArithmeticDecoder;\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreCharsets = __w_pdfjs_require__(22);\n\tvar coreEncodings = __w_pdfjs_require__(4);\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar bytesToString = sharedUtil.bytesToString;\n\tvar warn = sharedUtil.warn;\n\tvar isArray = sharedUtil.isArray;\n\tvar Util = sharedUtil.Util;\n\tvar stringToBytes = sharedUtil.stringToBytes;\n\tvar assert = sharedUtil.assert;\n\tvar ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\n\tvar ExpertCharset = coreCharsets.ExpertCharset;\n\tvar ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\n\tvar StandardEncoding = coreEncodings.StandardEncoding;\n\tvar ExpertEncoding = coreEncodings.ExpertEncoding;\n\tvar MAX_SUBR_NESTING = 10;\n\tvar CFFStandardStrings = [\n\t '.notdef',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quoteright',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'quoteleft',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t 'exclamdown',\n\t 'cent',\n\t 'sterling',\n\t 'fraction',\n\t 'yen',\n\t 'florin',\n\t 'section',\n\t 'currency',\n\t 'quotesingle',\n\t 'quotedblleft',\n\t 'guillemotleft',\n\t 'guilsinglleft',\n\t 'guilsinglright',\n\t 'fi',\n\t 'fl',\n\t 'endash',\n\t 'dagger',\n\t 'daggerdbl',\n\t 'periodcentered',\n\t 'paragraph',\n\t 'bullet',\n\t 'quotesinglbase',\n\t 'quotedblbase',\n\t 'quotedblright',\n\t 'guillemotright',\n\t 'ellipsis',\n\t 'perthousand',\n\t 'questiondown',\n\t 'grave',\n\t 'acute',\n\t 'circumflex',\n\t 'tilde',\n\t 'macron',\n\t 'breve',\n\t 'dotaccent',\n\t 'dieresis',\n\t 'ring',\n\t 'cedilla',\n\t 'hungarumlaut',\n\t 'ogonek',\n\t 'caron',\n\t 'emdash',\n\t 'AE',\n\t 'ordfeminine',\n\t 'Lslash',\n\t 'Oslash',\n\t 'OE',\n\t 'ordmasculine',\n\t 'ae',\n\t 'dotlessi',\n\t 'lslash',\n\t 'oslash',\n\t 'oe',\n\t 'germandbls',\n\t 'onesuperior',\n\t 'logicalnot',\n\t 'mu',\n\t 'trademark',\n\t 'Eth',\n\t 'onehalf',\n\t 'plusminus',\n\t 'Thorn',\n\t 'onequarter',\n\t 'divide',\n\t 'brokenbar',\n\t 'degree',\n\t 'thorn',\n\t 'threequarters',\n\t 'twosuperior',\n\t 'registered',\n\t 'minus',\n\t 'eth',\n\t 'multiply',\n\t 'threesuperior',\n\t 'copyright',\n\t 'Aacute',\n\t 'Acircumflex',\n\t 'Adieresis',\n\t 'Agrave',\n\t 'Aring',\n\t 'Atilde',\n\t 'Ccedilla',\n\t 'Eacute',\n\t 'Ecircumflex',\n\t 'Edieresis',\n\t 'Egrave',\n\t 'Iacute',\n\t 'Icircumflex',\n\t 'Idieresis',\n\t 'Igrave',\n\t 'Ntilde',\n\t 'Oacute',\n\t 'Ocircumflex',\n\t 'Odieresis',\n\t 'Ograve',\n\t 'Otilde',\n\t 'Scaron',\n\t 'Uacute',\n\t 'Ucircumflex',\n\t 'Udieresis',\n\t 'Ugrave',\n\t 'Yacute',\n\t 'Ydieresis',\n\t 'Zcaron',\n\t 'aacute',\n\t 'acircumflex',\n\t 'adieresis',\n\t 'agrave',\n\t 'aring',\n\t 'atilde',\n\t 'ccedilla',\n\t 'eacute',\n\t 'ecircumflex',\n\t 'edieresis',\n\t 'egrave',\n\t 'iacute',\n\t 'icircumflex',\n\t 'idieresis',\n\t 'igrave',\n\t 'ntilde',\n\t 'oacute',\n\t 'ocircumflex',\n\t 'odieresis',\n\t 'ograve',\n\t 'otilde',\n\t 'scaron',\n\t 'uacute',\n\t 'ucircumflex',\n\t 'udieresis',\n\t 'ugrave',\n\t 'yacute',\n\t 'ydieresis',\n\t 'zcaron',\n\t 'exclamsmall',\n\t 'Hungarumlautsmall',\n\t 'dollaroldstyle',\n\t 'dollarsuperior',\n\t 'ampersandsmall',\n\t 'Acutesmall',\n\t 'parenleftsuperior',\n\t 'parenrightsuperior',\n\t 'twodotenleader',\n\t 'onedotenleader',\n\t 'zerooldstyle',\n\t 'oneoldstyle',\n\t 'twooldstyle',\n\t 'threeoldstyle',\n\t 'fouroldstyle',\n\t 'fiveoldstyle',\n\t 'sixoldstyle',\n\t 'sevenoldstyle',\n\t 'eightoldstyle',\n\t 'nineoldstyle',\n\t 'commasuperior',\n\t 'threequartersemdash',\n\t 'periodsuperior',\n\t 'questionsmall',\n\t 'asuperior',\n\t 'bsuperior',\n\t 'centsuperior',\n\t 'dsuperior',\n\t 'esuperior',\n\t 'isuperior',\n\t 'lsuperior',\n\t 'msuperior',\n\t 'nsuperior',\n\t 'osuperior',\n\t 'rsuperior',\n\t 'ssuperior',\n\t 'tsuperior',\n\t 'ff',\n\t 'ffi',\n\t 'ffl',\n\t 'parenleftinferior',\n\t 'parenrightinferior',\n\t 'Circumflexsmall',\n\t 'hyphensuperior',\n\t 'Gravesmall',\n\t 'Asmall',\n\t 'Bsmall',\n\t 'Csmall',\n\t 'Dsmall',\n\t 'Esmall',\n\t 'Fsmall',\n\t 'Gsmall',\n\t 'Hsmall',\n\t 'Ismall',\n\t 'Jsmall',\n\t 'Ksmall',\n\t 'Lsmall',\n\t 'Msmall',\n\t 'Nsmall',\n\t 'Osmall',\n\t 'Psmall',\n\t 'Qsmall',\n\t 'Rsmall',\n\t 'Ssmall',\n\t 'Tsmall',\n\t 'Usmall',\n\t 'Vsmall',\n\t 'Wsmall',\n\t 'Xsmall',\n\t 'Ysmall',\n\t 'Zsmall',\n\t 'colonmonetary',\n\t 'onefitted',\n\t 'rupiah',\n\t 'Tildesmall',\n\t 'exclamdownsmall',\n\t 'centoldstyle',\n\t 'Lslashsmall',\n\t 'Scaronsmall',\n\t 'Zcaronsmall',\n\t 'Dieresissmall',\n\t 'Brevesmall',\n\t 'Caronsmall',\n\t 'Dotaccentsmall',\n\t 'Macronsmall',\n\t 'figuredash',\n\t 'hypheninferior',\n\t 'Ogoneksmall',\n\t 'Ringsmall',\n\t 'Cedillasmall',\n\t 'questiondownsmall',\n\t 'oneeighth',\n\t 'threeeighths',\n\t 'fiveeighths',\n\t 'seveneighths',\n\t 'onethird',\n\t 'twothirds',\n\t 'zerosuperior',\n\t 'foursuperior',\n\t 'fivesuperior',\n\t 'sixsuperior',\n\t 'sevensuperior',\n\t 'eightsuperior',\n\t 'ninesuperior',\n\t 'zeroinferior',\n\t 'oneinferior',\n\t 'twoinferior',\n\t 'threeinferior',\n\t 'fourinferior',\n\t 'fiveinferior',\n\t 'sixinferior',\n\t 'seveninferior',\n\t 'eightinferior',\n\t 'nineinferior',\n\t 'centinferior',\n\t 'dollarinferior',\n\t 'periodinferior',\n\t 'commainferior',\n\t 'Agravesmall',\n\t 'Aacutesmall',\n\t 'Acircumflexsmall',\n\t 'Atildesmall',\n\t 'Adieresissmall',\n\t 'Aringsmall',\n\t 'AEsmall',\n\t 'Ccedillasmall',\n\t 'Egravesmall',\n\t 'Eacutesmall',\n\t 'Ecircumflexsmall',\n\t 'Edieresissmall',\n\t 'Igravesmall',\n\t 'Iacutesmall',\n\t 'Icircumflexsmall',\n\t 'Idieresissmall',\n\t 'Ethsmall',\n\t 'Ntildesmall',\n\t 'Ogravesmall',\n\t 'Oacutesmall',\n\t 'Ocircumflexsmall',\n\t 'Otildesmall',\n\t 'Odieresissmall',\n\t 'OEsmall',\n\t 'Oslashsmall',\n\t 'Ugravesmall',\n\t 'Uacutesmall',\n\t 'Ucircumflexsmall',\n\t 'Udieresissmall',\n\t 'Yacutesmall',\n\t 'Thornsmall',\n\t 'Ydieresissmall',\n\t '001.000',\n\t '001.001',\n\t '001.002',\n\t '001.003',\n\t 'Black',\n\t 'Bold',\n\t 'Book',\n\t 'Light',\n\t 'Medium',\n\t 'Regular',\n\t 'Roman',\n\t 'Semibold'\n\t];\n\tvar CFFParser = function CFFParserClosure() {\n\t var CharstringValidationData = [\n\t  null,\n\t  {\n\t   id: 'hstem',\n\t   min: 2,\n\t   stackClearing: true,\n\t   stem: true\n\t  },\n\t  null,\n\t  {\n\t   id: 'vstem',\n\t   min: 2,\n\t   stackClearing: true,\n\t   stem: true\n\t  },\n\t  {\n\t   id: 'vmoveto',\n\t   min: 1,\n\t   stackClearing: true\n\t  },\n\t  {\n\t   id: 'rlineto',\n\t   min: 2,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'hlineto',\n\t   min: 1,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'vlineto',\n\t   min: 1,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'rrcurveto',\n\t   min: 6,\n\t   resetStack: true\n\t  },\n\t  null,\n\t  {\n\t   id: 'callsubr',\n\t   min: 1,\n\t   undefStack: true\n\t  },\n\t  {\n\t   id: 'return',\n\t   min: 0,\n\t   undefStack: true\n\t  },\n\t  null,\n\t  null,\n\t  {\n\t   id: 'endchar',\n\t   min: 0,\n\t   stackClearing: true\n\t  },\n\t  null,\n\t  null,\n\t  null,\n\t  {\n\t   id: 'hstemhm',\n\t   min: 2,\n\t   stackClearing: true,\n\t   stem: true\n\t  },\n\t  {\n\t   id: 'hintmask',\n\t   min: 0,\n\t   stackClearing: true\n\t  },\n\t  {\n\t   id: 'cntrmask',\n\t   min: 0,\n\t   stackClearing: true\n\t  },\n\t  {\n\t   id: 'rmoveto',\n\t   min: 2,\n\t   stackClearing: true\n\t  },\n\t  {\n\t   id: 'hmoveto',\n\t   min: 1,\n\t   stackClearing: true\n\t  },\n\t  {\n\t   id: 'vstemhm',\n\t   min: 2,\n\t   stackClearing: true,\n\t   stem: true\n\t  },\n\t  {\n\t   id: 'rcurveline',\n\t   min: 8,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'rlinecurve',\n\t   min: 8,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'vvcurveto',\n\t   min: 4,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'hhcurveto',\n\t   min: 4,\n\t   resetStack: true\n\t  },\n\t  null,\n\t  {\n\t   id: 'callgsubr',\n\t   min: 1,\n\t   undefStack: true\n\t  },\n\t  {\n\t   id: 'vhcurveto',\n\t   min: 4,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'hvcurveto',\n\t   min: 4,\n\t   resetStack: true\n\t  }\n\t ];\n\t var CharstringValidationData12 = [\n\t  null,\n\t  null,\n\t  null,\n\t  {\n\t   id: 'and',\n\t   min: 2,\n\t   stackDelta: -1\n\t  },\n\t  {\n\t   id: 'or',\n\t   min: 2,\n\t   stackDelta: -1\n\t  },\n\t  {\n\t   id: 'not',\n\t   min: 1,\n\t   stackDelta: 0\n\t  },\n\t  null,\n\t  null,\n\t  null,\n\t  {\n\t   id: 'abs',\n\t   min: 1,\n\t   stackDelta: 0\n\t  },\n\t  {\n\t   id: 'add',\n\t   min: 2,\n\t   stackDelta: -1,\n\t   stackFn: function stack_div(stack, index) {\n\t    stack[index - 2] = stack[index - 2] + stack[index - 1];\n\t   }\n\t  },\n\t  {\n\t   id: 'sub',\n\t   min: 2,\n\t   stackDelta: -1,\n\t   stackFn: function stack_div(stack, index) {\n\t    stack[index - 2] = stack[index - 2] - stack[index - 1];\n\t   }\n\t  },\n\t  {\n\t   id: 'div',\n\t   min: 2,\n\t   stackDelta: -1,\n\t   stackFn: function stack_div(stack, index) {\n\t    stack[index - 2] = stack[index - 2] / stack[index - 1];\n\t   }\n\t  },\n\t  null,\n\t  {\n\t   id: 'neg',\n\t   min: 1,\n\t   stackDelta: 0,\n\t   stackFn: function stack_div(stack, index) {\n\t    stack[index - 1] = -stack[index - 1];\n\t   }\n\t  },\n\t  {\n\t   id: 'eq',\n\t   min: 2,\n\t   stackDelta: -1\n\t  },\n\t  null,\n\t  null,\n\t  {\n\t   id: 'drop',\n\t   min: 1,\n\t   stackDelta: -1\n\t  },\n\t  null,\n\t  {\n\t   id: 'put',\n\t   min: 2,\n\t   stackDelta: -2\n\t  },\n\t  {\n\t   id: 'get',\n\t   min: 1,\n\t   stackDelta: 0\n\t  },\n\t  {\n\t   id: 'ifelse',\n\t   min: 4,\n\t   stackDelta: -3\n\t  },\n\t  {\n\t   id: 'random',\n\t   min: 0,\n\t   stackDelta: 1\n\t  },\n\t  {\n\t   id: 'mul',\n\t   min: 2,\n\t   stackDelta: -1,\n\t   stackFn: function stack_div(stack, index) {\n\t    stack[index - 2] = stack[index - 2] * stack[index - 1];\n\t   }\n\t  },\n\t  null,\n\t  {\n\t   id: 'sqrt',\n\t   min: 1,\n\t   stackDelta: 0\n\t  },\n\t  {\n\t   id: 'dup',\n\t   min: 1,\n\t   stackDelta: 1\n\t  },\n\t  {\n\t   id: 'exch',\n\t   min: 2,\n\t   stackDelta: 0\n\t  },\n\t  {\n\t   id: 'index',\n\t   min: 2,\n\t   stackDelta: 0\n\t  },\n\t  {\n\t   id: 'roll',\n\t   min: 3,\n\t   stackDelta: -2\n\t  },\n\t  null,\n\t  null,\n\t  null,\n\t  {\n\t   id: 'hflex',\n\t   min: 7,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'flex',\n\t   min: 13,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'hflex1',\n\t   min: 9,\n\t   resetStack: true\n\t  },\n\t  {\n\t   id: 'flex1',\n\t   min: 11,\n\t   resetStack: true\n\t  }\n\t ];\n\t function CFFParser(file, properties, seacAnalysisEnabled) {\n\t  this.bytes = file.getBytes();\n\t  this.properties = properties;\n\t  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t }\n\t CFFParser.prototype = {\n\t  parse: function CFFParser_parse() {\n\t   var properties = this.properties;\n\t   var cff = new CFF();\n\t   this.cff = cff;\n\t   var header = this.parseHeader();\n\t   var nameIndex = this.parseIndex(header.endPos);\n\t   var topDictIndex = this.parseIndex(nameIndex.endPos);\n\t   var stringIndex = this.parseIndex(topDictIndex.endPos);\n\t   var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\t   var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n\t   var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\t   cff.header = header.obj;\n\t   cff.names = this.parseNameIndex(nameIndex.obj);\n\t   cff.strings = this.parseStringIndex(stringIndex.obj);\n\t   cff.topDict = topDict;\n\t   cff.globalSubrIndex = globalSubrIndex.obj;\n\t   this.parsePrivateDict(cff.topDict);\n\t   cff.isCIDFont = topDict.hasName('ROS');\n\t   var charStringOffset = topDict.getByName('CharStrings');\n\t   var charStringIndex = this.parseIndex(charStringOffset).obj;\n\t   var fontMatrix = topDict.getByName('FontMatrix');\n\t   if (fontMatrix) {\n\t    properties.fontMatrix = fontMatrix;\n\t   }\n\t   var fontBBox = topDict.getByName('FontBBox');\n\t   if (fontBBox) {\n\t    properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t    properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t    properties.ascentScaled = true;\n\t   }\n\t   var charset, encoding;\n\t   if (cff.isCIDFont) {\n\t    var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n\t    for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n\t     var dictRaw = fdArrayIndex.get(i);\n\t     var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n\t     this.parsePrivateDict(fontDict);\n\t     cff.fdArray.push(fontDict);\n\t    }\n\t    encoding = null;\n\t    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n\t    cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n\t   } else {\n\t    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n\t    encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n\t   }\n\t   cff.charset = charset;\n\t   cff.encoding = encoding;\n\t   var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n\t   cff.charStrings = charStringsAndSeacs.charStrings;\n\t   cff.seacs = charStringsAndSeacs.seacs;\n\t   cff.widths = charStringsAndSeacs.widths;\n\t   return cff;\n\t  },\n\t  parseHeader: function CFFParser_parseHeader() {\n\t   var bytes = this.bytes;\n\t   var bytesLength = bytes.length;\n\t   var offset = 0;\n\t   while (offset < bytesLength && bytes[offset] !== 1) {\n\t    ++offset;\n\t   }\n\t   if (offset >= bytesLength) {\n\t    error('Invalid CFF header');\n\t   } else if (offset !== 0) {\n\t    info('cff data is shifted');\n\t    bytes = bytes.subarray(offset);\n\t    this.bytes = bytes;\n\t   }\n\t   var major = bytes[0];\n\t   var minor = bytes[1];\n\t   var hdrSize = bytes[2];\n\t   var offSize = bytes[3];\n\t   var header = new CFFHeader(major, minor, hdrSize, offSize);\n\t   return {\n\t    obj: header,\n\t    endPos: hdrSize\n\t   };\n\t  },\n\t  parseDict: function CFFParser_parseDict(dict) {\n\t   var pos = 0;\n\t   function parseOperand() {\n\t    var value = dict[pos++];\n\t    if (value === 30) {\n\t     return parseFloatOperand();\n\t    } else if (value === 28) {\n\t     value = dict[pos++];\n\t     value = (value << 24 | dict[pos++] << 16) >> 16;\n\t     return value;\n\t    } else if (value === 29) {\n\t     value = dict[pos++];\n\t     value = value << 8 | dict[pos++];\n\t     value = value << 8 | dict[pos++];\n\t     value = value << 8 | dict[pos++];\n\t     return value;\n\t    } else if (value >= 32 && value <= 246) {\n\t     return value - 139;\n\t    } else if (value >= 247 && value <= 250) {\n\t     return (value - 247) * 256 + dict[pos++] + 108;\n\t    } else if (value >= 251 && value <= 254) {\n\t     return -((value - 251) * 256) - dict[pos++] - 108;\n\t    }\n\t    warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n\t    return NaN;\n\t   }\n\t   function parseFloatOperand() {\n\t    var str = '';\n\t    var eof = 15;\n\t    var lookup = [\n\t     '0',\n\t     '1',\n\t     '2',\n\t     '3',\n\t     '4',\n\t     '5',\n\t     '6',\n\t     '7',\n\t     '8',\n\t     '9',\n\t     '.',\n\t     'E',\n\t     'E-',\n\t     null,\n\t     '-'\n\t    ];\n\t    var length = dict.length;\n\t    while (pos < length) {\n\t     var b = dict[pos++];\n\t     var b1 = b >> 4;\n\t     var b2 = b & 15;\n\t     if (b1 === eof) {\n\t      break;\n\t     }\n\t     str += lookup[b1];\n\t     if (b2 === eof) {\n\t      break;\n\t     }\n\t     str += lookup[b2];\n\t    }\n\t    return parseFloat(str);\n\t   }\n\t   var operands = [];\n\t   var entries = [];\n\t   pos = 0;\n\t   var end = dict.length;\n\t   while (pos < end) {\n\t    var b = dict[pos];\n\t    if (b <= 21) {\n\t     if (b === 12) {\n\t      b = b << 8 | dict[++pos];\n\t     }\n\t     entries.push([\n\t      b,\n\t      operands\n\t     ]);\n\t     operands = [];\n\t     ++pos;\n\t    } else {\n\t     operands.push(parseOperand());\n\t    }\n\t   }\n\t   return entries;\n\t  },\n\t  parseIndex: function CFFParser_parseIndex(pos) {\n\t   var cffIndex = new CFFIndex();\n\t   var bytes = this.bytes;\n\t   var count = bytes[pos++] << 8 | bytes[pos++];\n\t   var offsets = [];\n\t   var end = pos;\n\t   var i, ii;\n\t   if (count !== 0) {\n\t    var offsetSize = bytes[pos++];\n\t    var startPos = pos + (count + 1) * offsetSize - 1;\n\t    for (i = 0, ii = count + 1; i < ii; ++i) {\n\t     var offset = 0;\n\t     for (var j = 0; j < offsetSize; ++j) {\n\t      offset <<= 8;\n\t      offset += bytes[pos++];\n\t     }\n\t     offsets.push(startPos + offset);\n\t    }\n\t    end = offsets[count];\n\t   }\n\t   for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n\t    var offsetStart = offsets[i];\n\t    var offsetEnd = offsets[i + 1];\n\t    cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n\t   }\n\t   return {\n\t    obj: cffIndex,\n\t    endPos: end\n\t   };\n\t  },\n\t  parseNameIndex: function CFFParser_parseNameIndex(index) {\n\t   var names = [];\n\t   for (var i = 0, ii = index.count; i < ii; ++i) {\n\t    var name = index.get(i);\n\t    var length = Math.min(name.length, 127);\n\t    var data = [];\n\t    for (var j = 0; j < length; ++j) {\n\t     var c = name[j];\n\t     if (j === 0 && c === 0) {\n\t      data[j] = c;\n\t      continue;\n\t     }\n\t     if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35) {\n\t      data[j] = 95;\n\t      continue;\n\t     }\n\t     data[j] = c;\n\t    }\n\t    names.push(bytesToString(data));\n\t   }\n\t   return names;\n\t  },\n\t  parseStringIndex: function CFFParser_parseStringIndex(index) {\n\t   var strings = new CFFStrings();\n\t   for (var i = 0, ii = index.count; i < ii; ++i) {\n\t    var data = index.get(i);\n\t    strings.add(bytesToString(data));\n\t   }\n\t   return strings;\n\t  },\n\t  createDict: function CFFParser_createDict(Type, dict, strings) {\n\t   var cffDict = new Type(strings);\n\t   for (var i = 0, ii = dict.length; i < ii; ++i) {\n\t    var pair = dict[i];\n\t    var key = pair[0];\n\t    var value = pair[1];\n\t    cffDict.setByKey(key, value);\n\t   }\n\t   return cffDict;\n\t  },\n\t  parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n\t   if (state.callDepth > MAX_SUBR_NESTING) {\n\t    return false;\n\t   }\n\t   var stackSize = state.stackSize;\n\t   var stack = state.stack;\n\t   var length = data.length;\n\t   for (var j = 0; j < length;) {\n\t    var value = data[j++];\n\t    var validationCommand = null;\n\t    if (value === 12) {\n\t     var q = data[j++];\n\t     if (q === 0) {\n\t      data[j - 2] = 139;\n\t      data[j - 1] = 22;\n\t      stackSize = 0;\n\t     } else {\n\t      validationCommand = CharstringValidationData12[q];\n\t     }\n\t    } else if (value === 28) {\n\t     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n\t     j += 2;\n\t     stackSize++;\n\t    } else if (value === 14) {\n\t     if (stackSize >= 4) {\n\t      stackSize -= 4;\n\t      if (this.seacAnalysisEnabled) {\n\t       state.seac = stack.slice(stackSize, stackSize + 4);\n\t       return false;\n\t      }\n\t     }\n\t     validationCommand = CharstringValidationData[value];\n\t    } else if (value >= 32 && value <= 246) {\n\t     stack[stackSize] = value - 139;\n\t     stackSize++;\n\t    } else if (value >= 247 && value <= 254) {\n\t     stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n\t     j++;\n\t     stackSize++;\n\t    } else if (value === 255) {\n\t     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n\t     j += 4;\n\t     stackSize++;\n\t    } else if (value === 19 || value === 20) {\n\t     state.hints += stackSize >> 1;\n\t     j += state.hints + 7 >> 3;\n\t     stackSize %= 2;\n\t     validationCommand = CharstringValidationData[value];\n\t    } else if (value === 10 || value === 29) {\n\t     var subrsIndex;\n\t     if (value === 10) {\n\t      subrsIndex = localSubrIndex;\n\t     } else {\n\t      subrsIndex = globalSubrIndex;\n\t     }\n\t     if (!subrsIndex) {\n\t      validationCommand = CharstringValidationData[value];\n\t      warn('Missing subrsIndex for ' + validationCommand.id);\n\t      return false;\n\t     }\n\t     var bias = 32768;\n\t     if (subrsIndex.count < 1240) {\n\t      bias = 107;\n\t     } else if (subrsIndex.count < 33900) {\n\t      bias = 1131;\n\t     }\n\t     var subrNumber = stack[--stackSize] + bias;\n\t     if (subrNumber < 0 || subrNumber >= subrsIndex.count) {\n\t      validationCommand = CharstringValidationData[value];\n\t      warn('Out of bounds subrIndex for ' + validationCommand.id);\n\t      return false;\n\t     }\n\t     state.stackSize = stackSize;\n\t     state.callDepth++;\n\t     var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\t     if (!valid) {\n\t      return false;\n\t     }\n\t     state.callDepth--;\n\t     stackSize = state.stackSize;\n\t     continue;\n\t    } else if (value === 11) {\n\t     state.stackSize = stackSize;\n\t     return true;\n\t    } else {\n\t     validationCommand = CharstringValidationData[value];\n\t    }\n\t    if (validationCommand) {\n\t     if (validationCommand.stem) {\n\t      state.hints += stackSize >> 1;\n\t     }\n\t     if ('min' in validationCommand) {\n\t      if (!state.undefStack && stackSize < validationCommand.min) {\n\t       warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n\t       return false;\n\t      }\n\t     }\n\t     if (state.firstStackClearing && validationCommand.stackClearing) {\n\t      state.firstStackClearing = false;\n\t      stackSize -= validationCommand.min;\n\t      if (stackSize >= 2 && validationCommand.stem) {\n\t       stackSize %= 2;\n\t      } else if (stackSize > 1) {\n\t       warn('Found too many parameters for stack-clearing command');\n\t      }\n\t      if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n\t       state.width = stack[stackSize - 1];\n\t      }\n\t     }\n\t     if ('stackDelta' in validationCommand) {\n\t      if ('stackFn' in validationCommand) {\n\t       validationCommand.stackFn(stack, stackSize);\n\t      }\n\t      stackSize += validationCommand.stackDelta;\n\t     } else if (validationCommand.stackClearing) {\n\t      stackSize = 0;\n\t     } else if (validationCommand.resetStack) {\n\t      stackSize = 0;\n\t      state.undefStack = false;\n\t     } else if (validationCommand.undefStack) {\n\t      stackSize = 0;\n\t      state.undefStack = true;\n\t      state.firstStackClearing = false;\n\t     }\n\t    }\n\t   }\n\t   state.stackSize = stackSize;\n\t   return true;\n\t  },\n\t  parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n\t   var seacs = [];\n\t   var widths = [];\n\t   var count = charStrings.count;\n\t   for (var i = 0; i < count; i++) {\n\t    var charstring = charStrings.get(i);\n\t    var state = {\n\t     callDepth: 0,\n\t     stackSize: 0,\n\t     stack: [],\n\t     undefStack: true,\n\t     hints: 0,\n\t     firstStackClearing: true,\n\t     seac: null,\n\t     width: null\n\t    };\n\t    var valid = true;\n\t    var localSubrToUse = null;\n\t    if (fdSelect && fdArray.length) {\n\t     var fdIndex = fdSelect.getFDIndex(i);\n\t     if (fdIndex === -1) {\n\t      warn('Glyph index is not in fd select.');\n\t      valid = false;\n\t     }\n\t     if (fdIndex >= fdArray.length) {\n\t      warn('Invalid fd index for glyph index.');\n\t      valid = false;\n\t     }\n\t     if (valid) {\n\t      localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n\t     }\n\t    } else if (localSubrIndex) {\n\t     localSubrToUse = localSubrIndex;\n\t    }\n\t    if (valid) {\n\t     valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n\t    }\n\t    if (state.width !== null) {\n\t     widths[i] = state.width;\n\t    }\n\t    if (state.seac !== null) {\n\t     seacs[i] = state.seac;\n\t    }\n\t    if (!valid) {\n\t     charStrings.set(i, new Uint8Array([14]));\n\t    }\n\t   }\n\t   return {\n\t    charStrings: charStrings,\n\t    seacs: seacs,\n\t    widths: widths\n\t   };\n\t  },\n\t  emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n\t   var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n\t   parentDict.setByKey(18, [\n\t    0,\n\t    0\n\t   ]);\n\t   parentDict.privateDict = privateDict;\n\t  },\n\t  parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n\t   if (!parentDict.hasName('Private')) {\n\t    this.emptyPrivateDictionary(parentDict);\n\t    return;\n\t   }\n\t   var privateOffset = parentDict.getByName('Private');\n\t   if (!isArray(privateOffset) || privateOffset.length !== 2) {\n\t    parentDict.removeByName('Private');\n\t    return;\n\t   }\n\t   var size = privateOffset[0];\n\t   var offset = privateOffset[1];\n\t   if (size === 0 || offset >= this.bytes.length) {\n\t    this.emptyPrivateDictionary(parentDict);\n\t    return;\n\t   }\n\t   var privateDictEnd = offset + size;\n\t   var dictData = this.bytes.subarray(offset, privateDictEnd);\n\t   var dict = this.parseDict(dictData);\n\t   var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n\t   parentDict.privateDict = privateDict;\n\t   if (!privateDict.getByName('Subrs')) {\n\t    return;\n\t   }\n\t   var subrsOffset = privateDict.getByName('Subrs');\n\t   var relativeOffset = offset + subrsOffset;\n\t   if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n\t    this.emptyPrivateDictionary(parentDict);\n\t    return;\n\t   }\n\t   var subrsIndex = this.parseIndex(relativeOffset);\n\t   privateDict.subrsIndex = subrsIndex.obj;\n\t  },\n\t  parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n\t   if (pos === 0) {\n\t    return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n\t   } else if (pos === 1) {\n\t    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n\t   } else if (pos === 2) {\n\t    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n\t   }\n\t   var bytes = this.bytes;\n\t   var start = pos;\n\t   var format = bytes[pos++];\n\t   var charset = ['.notdef'];\n\t   var id, count, i;\n\t   length -= 1;\n\t   switch (format) {\n\t   case 0:\n\t    for (i = 0; i < length; i++) {\n\t     id = bytes[pos++] << 8 | bytes[pos++];\n\t     charset.push(cid ? id : strings.get(id));\n\t    }\n\t    break;\n\t   case 1:\n\t    while (charset.length <= length) {\n\t     id = bytes[pos++] << 8 | bytes[pos++];\n\t     count = bytes[pos++];\n\t     for (i = 0; i <= count; i++) {\n\t      charset.push(cid ? id++ : strings.get(id++));\n\t     }\n\t    }\n\t    break;\n\t   case 2:\n\t    while (charset.length <= length) {\n\t     id = bytes[pos++] << 8 | bytes[pos++];\n\t     count = bytes[pos++] << 8 | bytes[pos++];\n\t     for (i = 0; i <= count; i++) {\n\t      charset.push(cid ? id++ : strings.get(id++));\n\t     }\n\t    }\n\t    break;\n\t   default:\n\t    error('Unknown charset format');\n\t   }\n\t   var end = pos;\n\t   var raw = bytes.subarray(start, end);\n\t   return new CFFCharset(false, format, charset, raw);\n\t  },\n\t  parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n\t   var encoding = Object.create(null);\n\t   var bytes = this.bytes;\n\t   var predefined = false;\n\t   var format, i, ii;\n\t   var raw = null;\n\t   function readSupplement() {\n\t    var supplementsCount = bytes[pos++];\n\t    for (i = 0; i < supplementsCount; i++) {\n\t     var code = bytes[pos++];\n\t     var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n\t     encoding[code] = charset.indexOf(strings.get(sid));\n\t    }\n\t   }\n\t   if (pos === 0 || pos === 1) {\n\t    predefined = true;\n\t    format = pos;\n\t    var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n\t    for (i = 0, ii = charset.length; i < ii; i++) {\n\t     var index = baseEncoding.indexOf(charset[i]);\n\t     if (index !== -1) {\n\t      encoding[index] = i;\n\t     }\n\t    }\n\t   } else {\n\t    var dataStart = pos;\n\t    format = bytes[pos++];\n\t    switch (format & 0x7f) {\n\t    case 0:\n\t     var glyphsCount = bytes[pos++];\n\t     for (i = 1; i <= glyphsCount; i++) {\n\t      encoding[bytes[pos++]] = i;\n\t     }\n\t     break;\n\t    case 1:\n\t     var rangesCount = bytes[pos++];\n\t     var gid = 1;\n\t     for (i = 0; i < rangesCount; i++) {\n\t      var start = bytes[pos++];\n\t      var left = bytes[pos++];\n\t      for (var j = start; j <= start + left; j++) {\n\t       encoding[j] = gid++;\n\t      }\n\t     }\n\t     break;\n\t    default:\n\t     error('Unknown encoding format: ' + format + ' in CFF');\n\t     break;\n\t    }\n\t    var dataEnd = pos;\n\t    if (format & 0x80) {\n\t     bytes[dataStart] &= 0x7f;\n\t     readSupplement();\n\t    }\n\t    raw = bytes.subarray(dataStart, dataEnd);\n\t   }\n\t   format = format & 0x7f;\n\t   return new CFFEncoding(predefined, format, encoding, raw);\n\t  },\n\t  parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n\t   var start = pos;\n\t   var bytes = this.bytes;\n\t   var format = bytes[pos++];\n\t   var fdSelect = [], rawBytes;\n\t   var i, invalidFirstGID = false;\n\t   switch (format) {\n\t   case 0:\n\t    for (i = 0; i < length; ++i) {\n\t     var id = bytes[pos++];\n\t     fdSelect.push(id);\n\t    }\n\t    rawBytes = bytes.subarray(start, pos);\n\t    break;\n\t   case 3:\n\t    var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\t    for (i = 0; i < rangesCount; ++i) {\n\t     var first = bytes[pos++] << 8 | bytes[pos++];\n\t     if (i === 0 && first !== 0) {\n\t      warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n\t      invalidFirstGID = true;\n\t      first = 0;\n\t     }\n\t     var fdIndex = bytes[pos++];\n\t     var next = bytes[pos] << 8 | bytes[pos + 1];\n\t     for (var j = first; j < next; ++j) {\n\t      fdSelect.push(fdIndex);\n\t     }\n\t    }\n\t    pos += 2;\n\t    rawBytes = bytes.subarray(start, pos);\n\t    if (invalidFirstGID) {\n\t     rawBytes[3] = rawBytes[4] = 0;\n\t    }\n\t    break;\n\t   default:\n\t    error('parseFDSelect: Unknown format \"' + format + '\".');\n\t    break;\n\t   }\n\t   assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n\t   return new CFFFDSelect(fdSelect, rawBytes);\n\t  }\n\t };\n\t return CFFParser;\n\t}();\n\tvar CFF = function CFFClosure() {\n\t function CFF() {\n\t  this.header = null;\n\t  this.names = [];\n\t  this.topDict = null;\n\t  this.strings = new CFFStrings();\n\t  this.globalSubrIndex = null;\n\t  this.encoding = null;\n\t  this.charset = null;\n\t  this.charStrings = null;\n\t  this.fdArray = [];\n\t  this.fdSelect = null;\n\t  this.isCIDFont = false;\n\t }\n\t return CFF;\n\t}();\n\tvar CFFHeader = function CFFHeaderClosure() {\n\t function CFFHeader(major, minor, hdrSize, offSize) {\n\t  this.major = major;\n\t  this.minor = minor;\n\t  this.hdrSize = hdrSize;\n\t  this.offSize = offSize;\n\t }\n\t return CFFHeader;\n\t}();\n\tvar CFFStrings = function CFFStringsClosure() {\n\t function CFFStrings() {\n\t  this.strings = [];\n\t }\n\t CFFStrings.prototype = {\n\t  get: function CFFStrings_get(index) {\n\t   if (index >= 0 && index <= 390) {\n\t    return CFFStandardStrings[index];\n\t   }\n\t   if (index - 391 <= this.strings.length) {\n\t    return this.strings[index - 391];\n\t   }\n\t   return CFFStandardStrings[0];\n\t  },\n\t  add: function CFFStrings_add(value) {\n\t   this.strings.push(value);\n\t  },\n\t  get count() {\n\t   return this.strings.length;\n\t  }\n\t };\n\t return CFFStrings;\n\t}();\n\tvar CFFIndex = function CFFIndexClosure() {\n\t function CFFIndex() {\n\t  this.objects = [];\n\t  this.length = 0;\n\t }\n\t CFFIndex.prototype = {\n\t  add: function CFFIndex_add(data) {\n\t   this.length += data.length;\n\t   this.objects.push(data);\n\t  },\n\t  set: function CFFIndex_set(index, data) {\n\t   this.length += data.length - this.objects[index].length;\n\t   this.objects[index] = data;\n\t  },\n\t  get: function CFFIndex_get(index) {\n\t   return this.objects[index];\n\t  },\n\t  get count() {\n\t   return this.objects.length;\n\t  }\n\t };\n\t return CFFIndex;\n\t}();\n\tvar CFFDict = function CFFDictClosure() {\n\t function CFFDict(tables, strings) {\n\t  this.keyToNameMap = tables.keyToNameMap;\n\t  this.nameToKeyMap = tables.nameToKeyMap;\n\t  this.defaults = tables.defaults;\n\t  this.types = tables.types;\n\t  this.opcodes = tables.opcodes;\n\t  this.order = tables.order;\n\t  this.strings = strings;\n\t  this.values = Object.create(null);\n\t }\n\t CFFDict.prototype = {\n\t  setByKey: function CFFDict_setByKey(key, value) {\n\t   if (!(key in this.keyToNameMap)) {\n\t    return false;\n\t   }\n\t   var valueLength = value.length;\n\t   if (valueLength === 0) {\n\t    return true;\n\t   }\n\t   for (var i = 0; i < valueLength; i++) {\n\t    if (isNaN(value[i])) {\n\t     warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n\t     return true;\n\t    }\n\t   }\n\t   var type = this.types[key];\n\t   if (type === 'num' || type === 'sid' || type === 'offset') {\n\t    value = value[0];\n\t   }\n\t   this.values[key] = value;\n\t   return true;\n\t  },\n\t  setByName: function CFFDict_setByName(name, value) {\n\t   if (!(name in this.nameToKeyMap)) {\n\t    error('Invalid dictionary name \"' + name + '\"');\n\t   }\n\t   this.values[this.nameToKeyMap[name]] = value;\n\t  },\n\t  hasName: function CFFDict_hasName(name) {\n\t   return this.nameToKeyMap[name] in this.values;\n\t  },\n\t  getByName: function CFFDict_getByName(name) {\n\t   if (!(name in this.nameToKeyMap)) {\n\t    error('Invalid dictionary name \"' + name + '\"');\n\t   }\n\t   var key = this.nameToKeyMap[name];\n\t   if (!(key in this.values)) {\n\t    return this.defaults[key];\n\t   }\n\t   return this.values[key];\n\t  },\n\t  removeByName: function CFFDict_removeByName(name) {\n\t   delete this.values[this.nameToKeyMap[name]];\n\t  }\n\t };\n\t CFFDict.createTables = function CFFDict_createTables(layout) {\n\t  var tables = {\n\t   keyToNameMap: {},\n\t   nameToKeyMap: {},\n\t   defaults: {},\n\t   types: {},\n\t   opcodes: {},\n\t   order: []\n\t  };\n\t  for (var i = 0, ii = layout.length; i < ii; ++i) {\n\t   var entry = layout[i];\n\t   var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n\t   tables.keyToNameMap[key] = entry[1];\n\t   tables.nameToKeyMap[entry[1]] = key;\n\t   tables.types[key] = entry[2];\n\t   tables.defaults[key] = entry[3];\n\t   tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n\t   tables.order.push(key);\n\t  }\n\t  return tables;\n\t };\n\t return CFFDict;\n\t}();\n\tvar CFFTopDict = function CFFTopDictClosure() {\n\t var layout = [\n\t  [\n\t   [\n\t    12,\n\t    30\n\t   ],\n\t   'ROS',\n\t   [\n\t    'sid',\n\t    'sid',\n\t    'num'\n\t   ],\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    20\n\t   ],\n\t   'SyntheticBase',\n\t   'num',\n\t   null\n\t  ],\n\t  [\n\t   0,\n\t   'version',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   1,\n\t   'Notice',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    0\n\t   ],\n\t   'Copyright',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   2,\n\t   'FullName',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   3,\n\t   'FamilyName',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   4,\n\t   'Weight',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    1\n\t   ],\n\t   'isFixedPitch',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    2\n\t   ],\n\t   'ItalicAngle',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    3\n\t   ],\n\t   'UnderlinePosition',\n\t   'num',\n\t   -100\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    4\n\t   ],\n\t   'UnderlineThickness',\n\t   'num',\n\t   50\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    5\n\t   ],\n\t   'PaintType',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    6\n\t   ],\n\t   'CharstringType',\n\t   'num',\n\t   2\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    7\n\t   ],\n\t   'FontMatrix',\n\t   [\n\t    'num',\n\t    'num',\n\t    'num',\n\t    'num',\n\t    'num',\n\t    'num'\n\t   ],\n\t   [\n\t    0.001,\n\t    0,\n\t    0,\n\t    0.001,\n\t    0,\n\t    0\n\t   ]\n\t  ],\n\t  [\n\t   13,\n\t   'UniqueID',\n\t   'num',\n\t   null\n\t  ],\n\t  [\n\t   5,\n\t   'FontBBox',\n\t   [\n\t    'num',\n\t    'num',\n\t    'num',\n\t    'num'\n\t   ],\n\t   [\n\t    0,\n\t    0,\n\t    0,\n\t    0\n\t   ]\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    8\n\t   ],\n\t   'StrokeWidth',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   14,\n\t   'XUID',\n\t   'array',\n\t   null\n\t  ],\n\t  [\n\t   15,\n\t   'charset',\n\t   'offset',\n\t   0\n\t  ],\n\t  [\n\t   16,\n\t   'Encoding',\n\t   'offset',\n\t   0\n\t  ],\n\t  [\n\t   17,\n\t   'CharStrings',\n\t   'offset',\n\t   0\n\t  ],\n\t  [\n\t   18,\n\t   'Private',\n\t   [\n\t    'offset',\n\t    'offset'\n\t   ],\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    21\n\t   ],\n\t   'PostScript',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    22\n\t   ],\n\t   'BaseFontName',\n\t   'sid',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    23\n\t   ],\n\t   'BaseFontBlend',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    31\n\t   ],\n\t   'CIDFontVersion',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    32\n\t   ],\n\t   'CIDFontRevision',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    33\n\t   ],\n\t   'CIDFontType',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    34\n\t   ],\n\t   'CIDCount',\n\t   'num',\n\t   8720\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    35\n\t   ],\n\t   'UIDBase',\n\t   'num',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    37\n\t   ],\n\t   'FDSelect',\n\t   'offset',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    36\n\t   ],\n\t   'FDArray',\n\t   'offset',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    38\n\t   ],\n\t   'FontName',\n\t   'sid',\n\t   null\n\t  ]\n\t ];\n\t var tables = null;\n\t function CFFTopDict(strings) {\n\t  if (tables === null) {\n\t   tables = CFFDict.createTables(layout);\n\t  }\n\t  CFFDict.call(this, tables, strings);\n\t  this.privateDict = null;\n\t }\n\t CFFTopDict.prototype = Object.create(CFFDict.prototype);\n\t return CFFTopDict;\n\t}();\n\tvar CFFPrivateDict = function CFFPrivateDictClosure() {\n\t var layout = [\n\t  [\n\t   6,\n\t   'BlueValues',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   7,\n\t   'OtherBlues',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   8,\n\t   'FamilyBlues',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   9,\n\t   'FamilyOtherBlues',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    9\n\t   ],\n\t   'BlueScale',\n\t   'num',\n\t   0.039625\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    10\n\t   ],\n\t   'BlueShift',\n\t   'num',\n\t   7\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    11\n\t   ],\n\t   'BlueFuzz',\n\t   'num',\n\t   1\n\t  ],\n\t  [\n\t   10,\n\t   'StdHW',\n\t   'num',\n\t   null\n\t  ],\n\t  [\n\t   11,\n\t   'StdVW',\n\t   'num',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    12\n\t   ],\n\t   'StemSnapH',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    13\n\t   ],\n\t   'StemSnapV',\n\t   'delta',\n\t   null\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    14\n\t   ],\n\t   'ForceBold',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    17\n\t   ],\n\t   'LanguageGroup',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    18\n\t   ],\n\t   'ExpansionFactor',\n\t   'num',\n\t   0.06\n\t  ],\n\t  [\n\t   [\n\t    12,\n\t    19\n\t   ],\n\t   'initialRandomSeed',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   20,\n\t   'defaultWidthX',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   21,\n\t   'nominalWidthX',\n\t   'num',\n\t   0\n\t  ],\n\t  [\n\t   19,\n\t   'Subrs',\n\t   'offset',\n\t   null\n\t  ]\n\t ];\n\t var tables = null;\n\t function CFFPrivateDict(strings) {\n\t  if (tables === null) {\n\t   tables = CFFDict.createTables(layout);\n\t  }\n\t  CFFDict.call(this, tables, strings);\n\t  this.subrsIndex = null;\n\t }\n\t CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n\t return CFFPrivateDict;\n\t}();\n\tvar CFFCharsetPredefinedTypes = {\n\t ISO_ADOBE: 0,\n\t EXPERT: 1,\n\t EXPERT_SUBSET: 2\n\t};\n\tvar CFFCharset = function CFFCharsetClosure() {\n\t function CFFCharset(predefined, format, charset, raw) {\n\t  this.predefined = predefined;\n\t  this.format = format;\n\t  this.charset = charset;\n\t  this.raw = raw;\n\t }\n\t return CFFCharset;\n\t}();\n\tvar CFFEncoding = function CFFEncodingClosure() {\n\t function CFFEncoding(predefined, format, encoding, raw) {\n\t  this.predefined = predefined;\n\t  this.format = format;\n\t  this.encoding = encoding;\n\t  this.raw = raw;\n\t }\n\t return CFFEncoding;\n\t}();\n\tvar CFFFDSelect = function CFFFDSelectClosure() {\n\t function CFFFDSelect(fdSelect, raw) {\n\t  this.fdSelect = fdSelect;\n\t  this.raw = raw;\n\t }\n\t CFFFDSelect.prototype = {\n\t  getFDIndex: function CFFFDSelect_get(glyphIndex) {\n\t   if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n\t    return -1;\n\t   }\n\t   return this.fdSelect[glyphIndex];\n\t  }\n\t };\n\t return CFFFDSelect;\n\t}();\n\tvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n\t function CFFOffsetTracker() {\n\t  this.offsets = Object.create(null);\n\t }\n\t CFFOffsetTracker.prototype = {\n\t  isTracking: function CFFOffsetTracker_isTracking(key) {\n\t   return key in this.offsets;\n\t  },\n\t  track: function CFFOffsetTracker_track(key, location) {\n\t   if (key in this.offsets) {\n\t    error('Already tracking location of ' + key);\n\t   }\n\t   this.offsets[key] = location;\n\t  },\n\t  offset: function CFFOffsetTracker_offset(value) {\n\t   for (var key in this.offsets) {\n\t    this.offsets[key] += value;\n\t   }\n\t  },\n\t  setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n\t   if (!(key in this.offsets)) {\n\t    error('Not tracking location of ' + key);\n\t   }\n\t   var data = output.data;\n\t   var dataOffset = this.offsets[key];\n\t   var size = 5;\n\t   for (var i = 0, ii = values.length; i < ii; ++i) {\n\t    var offset0 = i * size + dataOffset;\n\t    var offset1 = offset0 + 1;\n\t    var offset2 = offset0 + 2;\n\t    var offset3 = offset0 + 3;\n\t    var offset4 = offset0 + 4;\n\t    if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n\t     error('writing to an offset that is not empty');\n\t    }\n\t    var value = values[i];\n\t    data[offset0] = 0x1d;\n\t    data[offset1] = value >> 24 & 0xFF;\n\t    data[offset2] = value >> 16 & 0xFF;\n\t    data[offset3] = value >> 8 & 0xFF;\n\t    data[offset4] = value & 0xFF;\n\t   }\n\t  }\n\t };\n\t return CFFOffsetTracker;\n\t}();\n\tvar CFFCompiler = function CFFCompilerClosure() {\n\t function CFFCompiler(cff) {\n\t  this.cff = cff;\n\t }\n\t CFFCompiler.prototype = {\n\t  compile: function CFFCompiler_compile() {\n\t   var cff = this.cff;\n\t   var output = {\n\t    data: [],\n\t    length: 0,\n\t    add: function CFFCompiler_add(data) {\n\t     this.data = this.data.concat(data);\n\t     this.length = this.data.length;\n\t    }\n\t   };\n\t   var header = this.compileHeader(cff.header);\n\t   output.add(header);\n\t   var nameIndex = this.compileNameIndex(cff.names);\n\t   output.add(nameIndex);\n\t   if (cff.isCIDFont) {\n\t    if (cff.topDict.hasName('FontMatrix')) {\n\t     var base = cff.topDict.getByName('FontMatrix');\n\t     cff.topDict.removeByName('FontMatrix');\n\t     for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n\t      var subDict = cff.fdArray[i];\n\t      var matrix = base.slice(0);\n\t      if (subDict.hasName('FontMatrix')) {\n\t       matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n\t      }\n\t      subDict.setByName('FontMatrix', matrix);\n\t     }\n\t    }\n\t   }\n\t   var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n\t   output.add(compiled.output);\n\t   var topDictTracker = compiled.trackers[0];\n\t   var stringIndex = this.compileStringIndex(cff.strings.strings);\n\t   output.add(stringIndex);\n\t   var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n\t   output.add(globalSubrIndex);\n\t   if (cff.encoding && cff.topDict.hasName('Encoding')) {\n\t    if (cff.encoding.predefined) {\n\t     topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n\t    } else {\n\t     var encoding = this.compileEncoding(cff.encoding);\n\t     topDictTracker.setEntryLocation('Encoding', [output.length], output);\n\t     output.add(encoding);\n\t    }\n\t   }\n\t   if (cff.charset && cff.topDict.hasName('charset')) {\n\t    if (cff.charset.predefined) {\n\t     topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n\t    } else {\n\t     var charset = this.compileCharset(cff.charset);\n\t     topDictTracker.setEntryLocation('charset', [output.length], output);\n\t     output.add(charset);\n\t    }\n\t   }\n\t   var charStrings = this.compileCharStrings(cff.charStrings);\n\t   topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n\t   output.add(charStrings);\n\t   if (cff.isCIDFont) {\n\t    topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n\t    var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n\t    output.add(fdSelect);\n\t    compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n\t    topDictTracker.setEntryLocation('FDArray', [output.length], output);\n\t    output.add(compiled.output);\n\t    var fontDictTrackers = compiled.trackers;\n\t    this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n\t   }\n\t   this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\t   output.add([0]);\n\t   return output.data;\n\t  },\n\t  encodeNumber: function CFFCompiler_encodeNumber(value) {\n\t   if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n\t    return this.encodeInteger(value);\n\t   }\n\t   return this.encodeFloat(value);\n\t  },\n\t  encodeFloat: function CFFCompiler_encodeFloat(num) {\n\t   var value = num.toString();\n\t   var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t   if (m) {\n\t    var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t    value = (Math.round(num * epsilon) / epsilon).toString();\n\t   }\n\t   var nibbles = '';\n\t   var i, ii;\n\t   for (i = 0, ii = value.length; i < ii; ++i) {\n\t    var a = value[i];\n\t    if (a === 'e') {\n\t     nibbles += value[++i] === '-' ? 'c' : 'b';\n\t    } else if (a === '.') {\n\t     nibbles += 'a';\n\t    } else if (a === '-') {\n\t     nibbles += 'e';\n\t    } else {\n\t     nibbles += a;\n\t    }\n\t   }\n\t   nibbles += nibbles.length & 1 ? 'f' : 'ff';\n\t   var out = [30];\n\t   for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t    out.push(parseInt(nibbles.substr(i, 2), 16));\n\t   }\n\t   return out;\n\t  },\n\t  encodeInteger: function CFFCompiler_encodeInteger(value) {\n\t   var code;\n\t   if (value >= -107 && value <= 107) {\n\t    code = [value + 139];\n\t   } else if (value >= 108 && value <= 1131) {\n\t    value = value - 108;\n\t    code = [\n\t     (value >> 8) + 247,\n\t     value & 0xFF\n\t    ];\n\t   } else if (value >= -1131 && value <= -108) {\n\t    value = -value - 108;\n\t    code = [\n\t     (value >> 8) + 251,\n\t     value & 0xFF\n\t    ];\n\t   } else if (value >= -32768 && value <= 32767) {\n\t    code = [\n\t     0x1c,\n\t     value >> 8 & 0xFF,\n\t     value & 0xFF\n\t    ];\n\t   } else {\n\t    code = [\n\t     0x1d,\n\t     value >> 24 & 0xFF,\n\t     value >> 16 & 0xFF,\n\t     value >> 8 & 0xFF,\n\t     value & 0xFF\n\t    ];\n\t   }\n\t   return code;\n\t  },\n\t  compileHeader: function CFFCompiler_compileHeader(header) {\n\t   return [\n\t    header.major,\n\t    header.minor,\n\t    header.hdrSize,\n\t    header.offSize\n\t   ];\n\t  },\n\t  compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n\t   var nameIndex = new CFFIndex();\n\t   for (var i = 0, ii = names.length; i < ii; ++i) {\n\t    nameIndex.add(stringToBytes(names[i]));\n\t   }\n\t   return this.compileIndex(nameIndex);\n\t  },\n\t  compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n\t   var fontDictTrackers = [];\n\t   var fdArrayIndex = new CFFIndex();\n\t   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t    var fontDict = dicts[i];\n\t    if (removeCidKeys) {\n\t     fontDict.removeByName('CIDFontVersion');\n\t     fontDict.removeByName('CIDFontRevision');\n\t     fontDict.removeByName('CIDFontType');\n\t     fontDict.removeByName('CIDCount');\n\t     fontDict.removeByName('UIDBase');\n\t    }\n\t    var fontDictTracker = new CFFOffsetTracker();\n\t    var fontDictData = this.compileDict(fontDict, fontDictTracker);\n\t    fontDictTrackers.push(fontDictTracker);\n\t    fdArrayIndex.add(fontDictData);\n\t    fontDictTracker.offset(length);\n\t   }\n\t   fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n\t   return {\n\t    trackers: fontDictTrackers,\n\t    output: fdArrayIndex\n\t   };\n\t  },\n\t  compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n\t   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t    var fontDict = dicts[i];\n\t    assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n\t    var privateDict = fontDict.privateDict;\n\t    var privateDictTracker = new CFFOffsetTracker();\n\t    var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\t    var outputLength = output.length;\n\t    privateDictTracker.offset(outputLength);\n\t    if (!privateDictData.length) {\n\t     outputLength = 0;\n\t    }\n\t    trackers[i].setEntryLocation('Private', [\n\t     privateDictData.length,\n\t     outputLength\n\t    ], output);\n\t    output.add(privateDictData);\n\t    if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n\t     var subrs = this.compileIndex(privateDict.subrsIndex);\n\t     privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n\t     output.add(subrs);\n\t    }\n\t   }\n\t  },\n\t  compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n\t   var out = [];\n\t   var order = dict.order;\n\t   for (var i = 0; i < order.length; ++i) {\n\t    var key = order[i];\n\t    if (!(key in dict.values)) {\n\t     continue;\n\t    }\n\t    var values = dict.values[key];\n\t    var types = dict.types[key];\n\t    if (!isArray(types)) {\n\t     types = [types];\n\t    }\n\t    if (!isArray(values)) {\n\t     values = [values];\n\t    }\n\t    if (values.length === 0) {\n\t     continue;\n\t    }\n\t    for (var j = 0, jj = types.length; j < jj; ++j) {\n\t     var type = types[j];\n\t     var value = values[j];\n\t     switch (type) {\n\t     case 'num':\n\t     case 'sid':\n\t      out = out.concat(this.encodeNumber(value));\n\t      break;\n\t     case 'offset':\n\t      var name = dict.keyToNameMap[key];\n\t      if (!offsetTracker.isTracking(name)) {\n\t       offsetTracker.track(name, out.length);\n\t      }\n\t      out = out.concat([\n\t       0x1d,\n\t       0,\n\t       0,\n\t       0,\n\t       0\n\t      ]);\n\t      break;\n\t     case 'array':\n\t     case 'delta':\n\t      out = out.concat(this.encodeNumber(value));\n\t      for (var k = 1, kk = values.length; k < kk; ++k) {\n\t       out = out.concat(this.encodeNumber(values[k]));\n\t      }\n\t      break;\n\t     default:\n\t      error('Unknown data type of ' + type);\n\t      break;\n\t     }\n\t    }\n\t    out = out.concat(dict.opcodes[key]);\n\t   }\n\t   return out;\n\t  },\n\t  compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n\t   var stringIndex = new CFFIndex();\n\t   for (var i = 0, ii = strings.length; i < ii; ++i) {\n\t    stringIndex.add(stringToBytes(strings[i]));\n\t   }\n\t   return this.compileIndex(stringIndex);\n\t  },\n\t  compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n\t   var globalSubrIndex = this.cff.globalSubrIndex;\n\t   this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n\t  },\n\t  compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n\t   return this.compileIndex(charStrings);\n\t  },\n\t  compileCharset: function CFFCompiler_compileCharset(charset) {\n\t   return this.compileTypedArray(charset.raw);\n\t  },\n\t  compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n\t   return this.compileTypedArray(encoding.raw);\n\t  },\n\t  compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n\t   return this.compileTypedArray(fdSelect);\n\t  },\n\t  compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n\t   var out = [];\n\t   for (var i = 0, ii = data.length; i < ii; ++i) {\n\t    out[i] = data[i];\n\t   }\n\t   return out;\n\t  },\n\t  compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n\t   trackers = trackers || [];\n\t   var objects = index.objects;\n\t   var count = objects.length;\n\t   if (count === 0) {\n\t    return [\n\t     0,\n\t     0,\n\t     0\n\t    ];\n\t   }\n\t   var data = [\n\t    count >> 8 & 0xFF,\n\t    count & 0xff\n\t   ];\n\t   var lastOffset = 1, i;\n\t   for (i = 0; i < count; ++i) {\n\t    lastOffset += objects[i].length;\n\t   }\n\t   var offsetSize;\n\t   if (lastOffset < 0x100) {\n\t    offsetSize = 1;\n\t   } else if (lastOffset < 0x10000) {\n\t    offsetSize = 2;\n\t   } else if (lastOffset < 0x1000000) {\n\t    offsetSize = 3;\n\t   } else {\n\t    offsetSize = 4;\n\t   }\n\t   data.push(offsetSize);\n\t   var relativeOffset = 1;\n\t   for (i = 0; i < count + 1; i++) {\n\t    if (offsetSize === 1) {\n\t     data.push(relativeOffset & 0xFF);\n\t    } else if (offsetSize === 2) {\n\t     data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t    } else if (offsetSize === 3) {\n\t     data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t    } else {\n\t     data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t    }\n\t    if (objects[i]) {\n\t     relativeOffset += objects[i].length;\n\t    }\n\t   }\n\t   for (i = 0; i < count; i++) {\n\t    if (trackers[i]) {\n\t     trackers[i].offset(data.length);\n\t    }\n\t    for (var j = 0, jj = objects[i].length; j < jj; j++) {\n\t     data.push(objects[i][j]);\n\t    }\n\t   }\n\t   return data;\n\t  }\n\t };\n\t return CFFCompiler;\n\t}();\n\texports.CFFStandardStrings = CFFStandardStrings;\n\texports.CFFParser = CFFParser;\n\texports.CFF = CFF;\n\texports.CFFHeader = CFFHeader;\n\texports.CFFStrings = CFFStrings;\n\texports.CFFIndex = CFFIndex;\n\texports.CFFCharset = CFFCharset;\n\texports.CFFTopDict = CFFTopDict;\n\texports.CFFPrivateDict = CFFPrivateDict;\n\texports.CFFCompiler = CFFCompiler;\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar arrayByteLength = sharedUtil.arrayByteLength;\n\tvar arraysToBytes = sharedUtil.arraysToBytes;\n\tvar assert = sharedUtil.assert;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar isInt = sharedUtil.isInt;\n\tvar isEmptyObj = sharedUtil.isEmptyObj;\n\tvar ChunkedStream = function ChunkedStreamClosure() {\n\t function ChunkedStream(length, chunkSize, manager) {\n\t  this.bytes = new Uint8Array(length);\n\t  this.start = 0;\n\t  this.pos = 0;\n\t  this.end = length;\n\t  this.chunkSize = chunkSize;\n\t  this.loadedChunks = [];\n\t  this.numChunksLoaded = 0;\n\t  this.numChunks = Math.ceil(length / chunkSize);\n\t  this.manager = manager;\n\t  this.progressiveDataLength = 0;\n\t  this.lastSuccessfulEnsureByteChunk = -1;\n\t }\n\t ChunkedStream.prototype = {\n\t  getMissingChunks: function ChunkedStream_getMissingChunks() {\n\t   var chunks = [];\n\t   for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n\t    if (!this.loadedChunks[chunk]) {\n\t     chunks.push(chunk);\n\t    }\n\t   }\n\t   return chunks;\n\t  },\n\t  getBaseStreams: function ChunkedStream_getBaseStreams() {\n\t   return [this];\n\t  },\n\t  allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n\t   return this.numChunksLoaded === this.numChunks;\n\t  },\n\t  onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n\t   var end = begin + chunk.byteLength;\n\t   assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n\t   var length = this.bytes.length;\n\t   assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n\t   this.bytes.set(new Uint8Array(chunk), begin);\n\t   var chunkSize = this.chunkSize;\n\t   var beginChunk = Math.floor(begin / chunkSize);\n\t   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t   var curChunk;\n\t   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t    if (!this.loadedChunks[curChunk]) {\n\t     this.loadedChunks[curChunk] = true;\n\t     ++this.numChunksLoaded;\n\t    }\n\t   }\n\t  },\n\t  onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n\t   var position = this.progressiveDataLength;\n\t   var beginChunk = Math.floor(position / this.chunkSize);\n\t   this.bytes.set(new Uint8Array(data), position);\n\t   position += data.byteLength;\n\t   this.progressiveDataLength = position;\n\t   var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\t   var curChunk;\n\t   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t    if (!this.loadedChunks[curChunk]) {\n\t     this.loadedChunks[curChunk] = true;\n\t     ++this.numChunksLoaded;\n\t    }\n\t   }\n\t  },\n\t  ensureByte: function ChunkedStream_ensureByte(pos) {\n\t   var chunk = Math.floor(pos / this.chunkSize);\n\t   if (chunk === this.lastSuccessfulEnsureByteChunk) {\n\t    return;\n\t   }\n\t   if (!this.loadedChunks[chunk]) {\n\t    throw new MissingDataException(pos, pos + 1);\n\t   }\n\t   this.lastSuccessfulEnsureByteChunk = chunk;\n\t  },\n\t  ensureRange: function ChunkedStream_ensureRange(begin, end) {\n\t   if (begin >= end) {\n\t    return;\n\t   }\n\t   if (end <= this.progressiveDataLength) {\n\t    return;\n\t   }\n\t   var chunkSize = this.chunkSize;\n\t   var beginChunk = Math.floor(begin / chunkSize);\n\t   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t    if (!this.loadedChunks[chunk]) {\n\t     throw new MissingDataException(begin, end);\n\t    }\n\t   }\n\t  },\n\t  nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n\t   var chunk, numChunks = this.numChunks;\n\t   for (var i = 0; i < numChunks; ++i) {\n\t    chunk = (beginChunk + i) % numChunks;\n\t    if (!this.loadedChunks[chunk]) {\n\t     return chunk;\n\t    }\n\t   }\n\t   return null;\n\t  },\n\t  hasChunk: function ChunkedStream_hasChunk(chunk) {\n\t   return !!this.loadedChunks[chunk];\n\t  },\n\t  get length() {\n\t   return this.end - this.start;\n\t  },\n\t  get isEmpty() {\n\t   return this.length === 0;\n\t  },\n\t  getByte: function ChunkedStream_getByte() {\n\t   var pos = this.pos;\n\t   if (pos >= this.end) {\n\t    return -1;\n\t   }\n\t   this.ensureByte(pos);\n\t   return this.bytes[this.pos++];\n\t  },\n\t  getUint16: function ChunkedStream_getUint16() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   if (b0 === -1 || b1 === -1) {\n\t    return -1;\n\t   }\n\t   return (b0 << 8) + b1;\n\t  },\n\t  getInt32: function ChunkedStream_getInt32() {\n\t   var b0 = this.getByte();\n\t   var b1 = this.getByte();\n\t   var b2 = this.getByte();\n\t   var b3 = this.getByte();\n\t   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  },\n\t  getBytes: function ChunkedStream_getBytes(length) {\n\t   var bytes = this.bytes;\n\t   var pos = this.pos;\n\t   var strEnd = this.end;\n\t   if (!length) {\n\t    this.ensureRange(pos, strEnd);\n\t    return bytes.subarray(pos, strEnd);\n\t   }\n\t   var end = pos + length;\n\t   if (end > strEnd) {\n\t    end = strEnd;\n\t   }\n\t   this.ensureRange(pos, end);\n\t   this.pos = end;\n\t   return bytes.subarray(pos, end);\n\t  },\n\t  peekByte: function ChunkedStream_peekByte() {\n\t   var peekedByte = this.getByte();\n\t   this.pos--;\n\t   return peekedByte;\n\t  },\n\t  peekBytes: function ChunkedStream_peekBytes(length) {\n\t   var bytes = this.getBytes(length);\n\t   this.pos -= bytes.length;\n\t   return bytes;\n\t  },\n\t  getByteRange: function ChunkedStream_getBytes(begin, end) {\n\t   this.ensureRange(begin, end);\n\t   return this.bytes.subarray(begin, end);\n\t  },\n\t  skip: function ChunkedStream_skip(n) {\n\t   if (!n) {\n\t    n = 1;\n\t   }\n\t   this.pos += n;\n\t  },\n\t  reset: function ChunkedStream_reset() {\n\t   this.pos = this.start;\n\t  },\n\t  moveStart: function ChunkedStream_moveStart() {\n\t   this.start = this.pos;\n\t  },\n\t  makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n\t   this.ensureRange(start, start + length);\n\t   function ChunkedStreamSubstream() {\n\t   }\n\t   ChunkedStreamSubstream.prototype = Object.create(this);\n\t   ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n\t    var chunkSize = this.chunkSize;\n\t    var beginChunk = Math.floor(this.start / chunkSize);\n\t    var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n\t    var missingChunks = [];\n\t    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t     if (!this.loadedChunks[chunk]) {\n\t      missingChunks.push(chunk);\n\t     }\n\t    }\n\t    return missingChunks;\n\t   };\n\t   var subStream = new ChunkedStreamSubstream();\n\t   subStream.pos = subStream.start = start;\n\t   subStream.end = start + length || this.end;\n\t   subStream.dict = dict;\n\t   return subStream;\n\t  }\n\t };\n\t return ChunkedStream;\n\t}();\n\tvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n\t function ChunkedStreamManager(pdfNetworkStream, args) {\n\t  var chunkSize = args.rangeChunkSize;\n\t  var length = args.length;\n\t  this.stream = new ChunkedStream(length, chunkSize, this);\n\t  this.length = length;\n\t  this.chunkSize = chunkSize;\n\t  this.pdfNetworkStream = pdfNetworkStream;\n\t  this.url = args.url;\n\t  this.disableAutoFetch = args.disableAutoFetch;\n\t  this.msgHandler = args.msgHandler;\n\t  this.currRequestId = 0;\n\t  this.chunksNeededByRequest = Object.create(null);\n\t  this.requestsByChunk = Object.create(null);\n\t  this.promisesByRequest = Object.create(null);\n\t  this.progressiveDataLength = 0;\n\t  this.aborted = false;\n\t  this._loadedStreamCapability = createPromiseCapability();\n\t }\n\t ChunkedStreamManager.prototype = {\n\t  onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n\t   return this._loadedStreamCapability.promise;\n\t  },\n\t  sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n\t   var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\t   if (!rangeReader.isStreamingSupported) {\n\t    rangeReader.onProgress = this.onProgress.bind(this);\n\t   }\n\t   var chunks = [], loaded = 0;\n\t   var manager = this;\n\t   var promise = new Promise(function (resolve, reject) {\n\t    var readChunk = function (chunk) {\n\t     try {\n\t      if (!chunk.done) {\n\t       var data = chunk.value;\n\t       chunks.push(data);\n\t       loaded += arrayByteLength(data);\n\t       if (rangeReader.isStreamingSupported) {\n\t        manager.onProgress({ loaded: loaded });\n\t       }\n\t       rangeReader.read().then(readChunk, reject);\n\t       return;\n\t      }\n\t      var chunkData = arraysToBytes(chunks);\n\t      chunks = null;\n\t      resolve(chunkData);\n\t     } catch (e) {\n\t      reject(e);\n\t     }\n\t    };\n\t    rangeReader.read().then(readChunk, reject);\n\t   });\n\t   promise.then(function (data) {\n\t    if (this.aborted) {\n\t     return;\n\t    }\n\t    this.onReceiveData({\n\t     chunk: data,\n\t     begin: begin\n\t    });\n\t   }.bind(this));\n\t  },\n\t  requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n\t   var missingChunks = this.stream.getMissingChunks();\n\t   this._requestChunks(missingChunks);\n\t   return this._loadedStreamCapability.promise;\n\t  },\n\t  _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n\t   var requestId = this.currRequestId++;\n\t   var i, ii;\n\t   var chunksNeeded = Object.create(null);\n\t   this.chunksNeededByRequest[requestId] = chunksNeeded;\n\t   for (i = 0, ii = chunks.length; i < ii; i++) {\n\t    if (!this.stream.hasChunk(chunks[i])) {\n\t     chunksNeeded[chunks[i]] = true;\n\t    }\n\t   }\n\t   if (isEmptyObj(chunksNeeded)) {\n\t    return Promise.resolve();\n\t   }\n\t   var capability = createPromiseCapability();\n\t   this.promisesByRequest[requestId] = capability;\n\t   var chunksToRequest = [];\n\t   for (var chunk in chunksNeeded) {\n\t    chunk = chunk | 0;\n\t    if (!(chunk in this.requestsByChunk)) {\n\t     this.requestsByChunk[chunk] = [];\n\t     chunksToRequest.push(chunk);\n\t    }\n\t    this.requestsByChunk[chunk].push(requestId);\n\t   }\n\t   if (!chunksToRequest.length) {\n\t    return capability.promise;\n\t   }\n\t   var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\t   for (i = 0; i < groupedChunksToRequest.length; ++i) {\n\t    var groupedChunk = groupedChunksToRequest[i];\n\t    var begin = groupedChunk.beginChunk * this.chunkSize;\n\t    var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n\t    this.sendRequest(begin, end);\n\t   }\n\t   return capability.promise;\n\t  },\n\t  getStream: function ChunkedStreamManager_getStream() {\n\t   return this.stream;\n\t  },\n\t  requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n\t   end = Math.min(end, this.length);\n\t   var beginChunk = this.getBeginChunk(begin);\n\t   var endChunk = this.getEndChunk(end);\n\t   var chunks = [];\n\t   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t    chunks.push(chunk);\n\t   }\n\t   return this._requestChunks(chunks);\n\t  },\n\t  requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n\t   ranges = ranges || [];\n\t   var chunksToRequest = [];\n\t   for (var i = 0; i < ranges.length; i++) {\n\t    var beginChunk = this.getBeginChunk(ranges[i].begin);\n\t    var endChunk = this.getEndChunk(ranges[i].end);\n\t    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t     if (chunksToRequest.indexOf(chunk) < 0) {\n\t      chunksToRequest.push(chunk);\n\t     }\n\t    }\n\t   }\n\t   chunksToRequest.sort(function (a, b) {\n\t    return a - b;\n\t   });\n\t   return this._requestChunks(chunksToRequest);\n\t  },\n\t  groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n\t   var groupedChunks = [];\n\t   var beginChunk = -1;\n\t   var prevChunk = -1;\n\t   for (var i = 0; i < chunks.length; ++i) {\n\t    var chunk = chunks[i];\n\t    if (beginChunk < 0) {\n\t     beginChunk = chunk;\n\t    }\n\t    if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n\t     groupedChunks.push({\n\t      beginChunk: beginChunk,\n\t      endChunk: prevChunk + 1\n\t     });\n\t     beginChunk = chunk;\n\t    }\n\t    if (i + 1 === chunks.length) {\n\t     groupedChunks.push({\n\t      beginChunk: beginChunk,\n\t      endChunk: chunk + 1\n\t     });\n\t    }\n\t    prevChunk = chunk;\n\t   }\n\t   return groupedChunks;\n\t  },\n\t  onProgress: function ChunkedStreamManager_onProgress(args) {\n\t   var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n\t   this.msgHandler.send('DocProgress', {\n\t    loaded: bytesLoaded,\n\t    total: this.length\n\t   });\n\t  },\n\t  onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n\t   var chunk = args.chunk;\n\t   var isProgressive = args.begin === undefined;\n\t   var begin = isProgressive ? this.progressiveDataLength : args.begin;\n\t   var end = begin + chunk.byteLength;\n\t   var beginChunk = Math.floor(begin / this.chunkSize);\n\t   var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\t   if (isProgressive) {\n\t    this.stream.onReceiveProgressiveData(chunk);\n\t    this.progressiveDataLength = end;\n\t   } else {\n\t    this.stream.onReceiveData(begin, chunk);\n\t   }\n\t   if (this.stream.allChunksLoaded()) {\n\t    this._loadedStreamCapability.resolve(this.stream);\n\t   }\n\t   var loadedRequests = [];\n\t   var i, requestId;\n\t   for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t    var requestIds = this.requestsByChunk[chunk] || [];\n\t    delete this.requestsByChunk[chunk];\n\t    for (i = 0; i < requestIds.length; ++i) {\n\t     requestId = requestIds[i];\n\t     var chunksNeeded = this.chunksNeededByRequest[requestId];\n\t     if (chunk in chunksNeeded) {\n\t      delete chunksNeeded[chunk];\n\t     }\n\t     if (!isEmptyObj(chunksNeeded)) {\n\t      continue;\n\t     }\n\t     loadedRequests.push(requestId);\n\t    }\n\t   }\n\t   if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n\t    var nextEmptyChunk;\n\t    if (this.stream.numChunksLoaded === 1) {\n\t     var lastChunk = this.stream.numChunks - 1;\n\t     if (!this.stream.hasChunk(lastChunk)) {\n\t      nextEmptyChunk = lastChunk;\n\t     }\n\t    } else {\n\t     nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n\t    }\n\t    if (isInt(nextEmptyChunk)) {\n\t     this._requestChunks([nextEmptyChunk]);\n\t    }\n\t   }\n\t   for (i = 0; i < loadedRequests.length; ++i) {\n\t    requestId = loadedRequests[i];\n\t    var capability = this.promisesByRequest[requestId];\n\t    delete this.promisesByRequest[requestId];\n\t    capability.resolve();\n\t   }\n\t   this.msgHandler.send('DocProgress', {\n\t    loaded: this.stream.numChunksLoaded * this.chunkSize,\n\t    total: this.length\n\t   });\n\t  },\n\t  onError: function ChunkedStreamManager_onError(err) {\n\t   this._loadedStreamCapability.reject(err);\n\t  },\n\t  getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n\t   var chunk = Math.floor(begin / this.chunkSize);\n\t   return chunk;\n\t  },\n\t  getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n\t   var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n\t   return chunk;\n\t  },\n\t  abort: function ChunkedStreamManager_abort() {\n\t   this.aborted = true;\n\t   if (this.pdfNetworkStream) {\n\t    this.pdfNetworkStream.cancelAllRequests('abort');\n\t   }\n\t   for (var requestId in this.promisesByRequest) {\n\t    var capability = this.promisesByRequest[requestId];\n\t    capability.reject(new Error('Request was aborted'));\n\t   }\n\t  }\n\t };\n\t return ChunkedStreamManager;\n\t}();\n\texports.ChunkedStream = ChunkedStream;\n\texports.ChunkedStreamManager = ChunkedStreamManager;\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar PasswordException = sharedUtil.PasswordException;\n\tvar PasswordResponses = sharedUtil.PasswordResponses;\n\tvar bytesToString = sharedUtil.bytesToString;\n\tvar warn = sharedUtil.warn;\n\tvar error = sharedUtil.error;\n\tvar assert = sharedUtil.assert;\n\tvar isInt = sharedUtil.isInt;\n\tvar stringToBytes = sharedUtil.stringToBytes;\n\tvar utf8StringToString = sharedUtil.utf8StringToString;\n\tvar Name = corePrimitives.Name;\n\tvar isName = corePrimitives.isName;\n\tvar isDict = corePrimitives.isDict;\n\tvar DecryptStream = coreStream.DecryptStream;\n\tvar ARCFourCipher = function ARCFourCipherClosure() {\n\t function ARCFourCipher(key) {\n\t  this.a = 0;\n\t  this.b = 0;\n\t  var s = new Uint8Array(256);\n\t  var i, j = 0, tmp, keyLength = key.length;\n\t  for (i = 0; i < 256; ++i) {\n\t   s[i] = i;\n\t  }\n\t  for (i = 0; i < 256; ++i) {\n\t   tmp = s[i];\n\t   j = j + tmp + key[i % keyLength] & 0xFF;\n\t   s[i] = s[j];\n\t   s[j] = tmp;\n\t  }\n\t  this.s = s;\n\t }\n\t ARCFourCipher.prototype = {\n\t  encryptBlock: function ARCFourCipher_encryptBlock(data) {\n\t   var i, n = data.length, tmp, tmp2;\n\t   var a = this.a, b = this.b, s = this.s;\n\t   var output = new Uint8Array(n);\n\t   for (i = 0; i < n; ++i) {\n\t    a = a + 1 & 0xFF;\n\t    tmp = s[a];\n\t    b = b + tmp & 0xFF;\n\t    tmp2 = s[b];\n\t    s[a] = tmp2;\n\t    s[b] = tmp;\n\t    output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n\t   }\n\t   this.a = a;\n\t   this.b = b;\n\t   return output;\n\t  }\n\t };\n\t ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\t return ARCFourCipher;\n\t}();\n\tvar calculateMD5 = function calculateMD5Closure() {\n\t var r = new Uint8Array([\n\t  7,\n\t  12,\n\t  17,\n\t  22,\n\t  7,\n\t  12,\n\t  17,\n\t  22,\n\t  7,\n\t  12,\n\t  17,\n\t  22,\n\t  7,\n\t  12,\n\t  17,\n\t  22,\n\t  5,\n\t  9,\n\t  14,\n\t  20,\n\t  5,\n\t  9,\n\t  14,\n\t  20,\n\t  5,\n\t  9,\n\t  14,\n\t  20,\n\t  5,\n\t  9,\n\t  14,\n\t  20,\n\t  4,\n\t  11,\n\t  16,\n\t  23,\n\t  4,\n\t  11,\n\t  16,\n\t  23,\n\t  4,\n\t  11,\n\t  16,\n\t  23,\n\t  4,\n\t  11,\n\t  16,\n\t  23,\n\t  6,\n\t  10,\n\t  15,\n\t  21,\n\t  6,\n\t  10,\n\t  15,\n\t  21,\n\t  6,\n\t  10,\n\t  15,\n\t  21,\n\t  6,\n\t  10,\n\t  15,\n\t  21\n\t ]);\n\t var k = new Int32Array([\n\t  -680876936,\n\t  -389564586,\n\t  606105819,\n\t  -1044525330,\n\t  -176418897,\n\t  1200080426,\n\t  -1473231341,\n\t  -45705983,\n\t  1770035416,\n\t  -1958414417,\n\t  -42063,\n\t  -1990404162,\n\t  1804603682,\n\t  -40341101,\n\t  -1502002290,\n\t  1236535329,\n\t  -165796510,\n\t  -1069501632,\n\t  643717713,\n\t  -373897302,\n\t  -701558691,\n\t  38016083,\n\t  -660478335,\n\t  -405537848,\n\t  568446438,\n\t  -1019803690,\n\t  -187363961,\n\t  1163531501,\n\t  -1444681467,\n\t  -51403784,\n\t  1735328473,\n\t  -1926607734,\n\t  -378558,\n\t  -2022574463,\n\t  1839030562,\n\t  -35309556,\n\t  -1530992060,\n\t  1272893353,\n\t  -155497632,\n\t  -1094730640,\n\t  681279174,\n\t  -358537222,\n\t  -722521979,\n\t  76029189,\n\t  -640364487,\n\t  -421815835,\n\t  530742520,\n\t  -995338651,\n\t  -198630844,\n\t  1126891415,\n\t  -1416354905,\n\t  -57434055,\n\t  1700485571,\n\t  -1894986606,\n\t  -1051523,\n\t  -2054922799,\n\t  1873313359,\n\t  -30611744,\n\t  -1560198380,\n\t  1309151649,\n\t  -145523070,\n\t  -1120210379,\n\t  718787259,\n\t  -343485551\n\t ]);\n\t function hash(data, offset, length) {\n\t  var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n\t  var paddedLength = length + 72 & ~63;\n\t  var padded = new Uint8Array(paddedLength);\n\t  var i, j, n;\n\t  for (i = 0; i < length; ++i) {\n\t   padded[i] = data[offset++];\n\t  }\n\t  padded[i++] = 0x80;\n\t  n = paddedLength - 8;\n\t  while (i < n) {\n\t   padded[i++] = 0;\n\t  }\n\t  padded[i++] = length << 3 & 0xFF;\n\t  padded[i++] = length >> 5 & 0xFF;\n\t  padded[i++] = length >> 13 & 0xFF;\n\t  padded[i++] = length >> 21 & 0xFF;\n\t  padded[i++] = length >>> 29 & 0xFF;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  var w = new Int32Array(16);\n\t  for (i = 0; i < paddedLength;) {\n\t   for (j = 0; j < 16; ++j, i += 4) {\n\t    w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n\t   }\n\t   var a = h0, b = h1, c = h2, d = h3, f, g;\n\t   for (j = 0; j < 64; ++j) {\n\t    if (j < 16) {\n\t     f = b & c | ~b & d;\n\t     g = j;\n\t    } else if (j < 32) {\n\t     f = d & b | ~d & c;\n\t     g = 5 * j + 1 & 15;\n\t    } else if (j < 48) {\n\t     f = b ^ c ^ d;\n\t     g = 3 * j + 5 & 15;\n\t    } else {\n\t     f = c ^ (b | ~d);\n\t     g = 7 * j & 15;\n\t    }\n\t    var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n\t    d = c;\n\t    c = b;\n\t    b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n\t    a = tmp;\n\t   }\n\t   h0 = h0 + a | 0;\n\t   h1 = h1 + b | 0;\n\t   h2 = h2 + c | 0;\n\t   h3 = h3 + d | 0;\n\t  }\n\t  return new Uint8Array([\n\t   h0 & 0xFF,\n\t   h0 >> 8 & 0xFF,\n\t   h0 >> 16 & 0xFF,\n\t   h0 >>> 24 & 0xFF,\n\t   h1 & 0xFF,\n\t   h1 >> 8 & 0xFF,\n\t   h1 >> 16 & 0xFF,\n\t   h1 >>> 24 & 0xFF,\n\t   h2 & 0xFF,\n\t   h2 >> 8 & 0xFF,\n\t   h2 >> 16 & 0xFF,\n\t   h2 >>> 24 & 0xFF,\n\t   h3 & 0xFF,\n\t   h3 >> 8 & 0xFF,\n\t   h3 >> 16 & 0xFF,\n\t   h3 >>> 24 & 0xFF\n\t  ]);\n\t }\n\t return hash;\n\t}();\n\tvar Word64 = function Word64Closure() {\n\t function Word64(highInteger, lowInteger) {\n\t  this.high = highInteger | 0;\n\t  this.low = lowInteger | 0;\n\t }\n\t Word64.prototype = {\n\t  and: function Word64_and(word) {\n\t   this.high &= word.high;\n\t   this.low &= word.low;\n\t  },\n\t  xor: function Word64_xor(word) {\n\t   this.high ^= word.high;\n\t   this.low ^= word.low;\n\t  },\n\t  or: function Word64_or(word) {\n\t   this.high |= word.high;\n\t   this.low |= word.low;\n\t  },\n\t  shiftRight: function Word64_shiftRight(places) {\n\t   if (places >= 32) {\n\t    this.low = this.high >>> places - 32 | 0;\n\t    this.high = 0;\n\t   } else {\n\t    this.low = this.low >>> places | this.high << 32 - places;\n\t    this.high = this.high >>> places | 0;\n\t   }\n\t  },\n\t  shiftLeft: function Word64_shiftLeft(places) {\n\t   if (places >= 32) {\n\t    this.high = this.low << places - 32;\n\t    this.low = 0;\n\t   } else {\n\t    this.high = this.high << places | this.low >>> 32 - places;\n\t    this.low = this.low << places;\n\t   }\n\t  },\n\t  rotateRight: function Word64_rotateRight(places) {\n\t   var low, high;\n\t   if (places & 32) {\n\t    high = this.low;\n\t    low = this.high;\n\t   } else {\n\t    low = this.low;\n\t    high = this.high;\n\t   }\n\t   places &= 31;\n\t   this.low = low >>> places | high << 32 - places;\n\t   this.high = high >>> places | low << 32 - places;\n\t  },\n\t  not: function Word64_not() {\n\t   this.high = ~this.high;\n\t   this.low = ~this.low;\n\t  },\n\t  add: function Word64_add(word) {\n\t   var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n\t   var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\t   if (lowAdd > 0xFFFFFFFF) {\n\t    highAdd += 1;\n\t   }\n\t   this.low = lowAdd | 0;\n\t   this.high = highAdd | 0;\n\t  },\n\t  copyTo: function Word64_copyTo(bytes, offset) {\n\t   bytes[offset] = this.high >>> 24 & 0xFF;\n\t   bytes[offset + 1] = this.high >> 16 & 0xFF;\n\t   bytes[offset + 2] = this.high >> 8 & 0xFF;\n\t   bytes[offset + 3] = this.high & 0xFF;\n\t   bytes[offset + 4] = this.low >>> 24 & 0xFF;\n\t   bytes[offset + 5] = this.low >> 16 & 0xFF;\n\t   bytes[offset + 6] = this.low >> 8 & 0xFF;\n\t   bytes[offset + 7] = this.low & 0xFF;\n\t  },\n\t  assign: function Word64_assign(word) {\n\t   this.high = word.high;\n\t   this.low = word.low;\n\t  }\n\t };\n\t return Word64;\n\t}();\n\tvar calculateSHA256 = function calculateSHA256Closure() {\n\t function rotr(x, n) {\n\t  return x >>> n | x << 32 - n;\n\t }\n\t function ch(x, y, z) {\n\t  return x & y ^ ~x & z;\n\t }\n\t function maj(x, y, z) {\n\t  return x & y ^ x & z ^ y & z;\n\t }\n\t function sigma(x) {\n\t  return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n\t }\n\t function sigmaPrime(x) {\n\t  return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n\t }\n\t function littleSigma(x) {\n\t  return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n\t }\n\t function littleSigmaPrime(x) {\n\t  return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n\t }\n\t var k = [\n\t  0x428a2f98,\n\t  0x71374491,\n\t  0xb5c0fbcf,\n\t  0xe9b5dba5,\n\t  0x3956c25b,\n\t  0x59f111f1,\n\t  0x923f82a4,\n\t  0xab1c5ed5,\n\t  0xd807aa98,\n\t  0x12835b01,\n\t  0x243185be,\n\t  0x550c7dc3,\n\t  0x72be5d74,\n\t  0x80deb1fe,\n\t  0x9bdc06a7,\n\t  0xc19bf174,\n\t  0xe49b69c1,\n\t  0xefbe4786,\n\t  0x0fc19dc6,\n\t  0x240ca1cc,\n\t  0x2de92c6f,\n\t  0x4a7484aa,\n\t  0x5cb0a9dc,\n\t  0x76f988da,\n\t  0x983e5152,\n\t  0xa831c66d,\n\t  0xb00327c8,\n\t  0xbf597fc7,\n\t  0xc6e00bf3,\n\t  0xd5a79147,\n\t  0x06ca6351,\n\t  0x14292967,\n\t  0x27b70a85,\n\t  0x2e1b2138,\n\t  0x4d2c6dfc,\n\t  0x53380d13,\n\t  0x650a7354,\n\t  0x766a0abb,\n\t  0x81c2c92e,\n\t  0x92722c85,\n\t  0xa2bfe8a1,\n\t  0xa81a664b,\n\t  0xc24b8b70,\n\t  0xc76c51a3,\n\t  0xd192e819,\n\t  0xd6990624,\n\t  0xf40e3585,\n\t  0x106aa070,\n\t  0x19a4c116,\n\t  0x1e376c08,\n\t  0x2748774c,\n\t  0x34b0bcb5,\n\t  0x391c0cb3,\n\t  0x4ed8aa4a,\n\t  0x5b9cca4f,\n\t  0x682e6ff3,\n\t  0x748f82ee,\n\t  0x78a5636f,\n\t  0x84c87814,\n\t  0x8cc70208,\n\t  0x90befffa,\n\t  0xa4506ceb,\n\t  0xbef9a3f7,\n\t  0xc67178f2\n\t ];\n\t function hash(data, offset, length) {\n\t  var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n\t  var paddedLength = Math.ceil((length + 9) / 64) * 64;\n\t  var padded = new Uint8Array(paddedLength);\n\t  var i, j, n;\n\t  for (i = 0; i < length; ++i) {\n\t   padded[i] = data[offset++];\n\t  }\n\t  padded[i++] = 0x80;\n\t  n = paddedLength - 8;\n\t  while (i < n) {\n\t   padded[i++] = 0;\n\t  }\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = length >>> 29 & 0xFF;\n\t  padded[i++] = length >> 21 & 0xFF;\n\t  padded[i++] = length >> 13 & 0xFF;\n\t  padded[i++] = length >> 5 & 0xFF;\n\t  padded[i++] = length << 3 & 0xFF;\n\t  var w = new Uint32Array(64);\n\t  for (i = 0; i < paddedLength;) {\n\t   for (j = 0; j < 16; ++j) {\n\t    w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t    i += 4;\n\t   }\n\t   for (j = 16; j < 64; ++j) {\n\t    w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n\t   }\n\t   var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n\t   for (j = 0; j < 64; ++j) {\n\t    t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n\t    t2 = sigma(a) + maj(a, b, c);\n\t    h = g;\n\t    g = f;\n\t    f = e;\n\t    e = d + t1 | 0;\n\t    d = c;\n\t    c = b;\n\t    b = a;\n\t    a = t1 + t2 | 0;\n\t   }\n\t   h0 = h0 + a | 0;\n\t   h1 = h1 + b | 0;\n\t   h2 = h2 + c | 0;\n\t   h3 = h3 + d | 0;\n\t   h4 = h4 + e | 0;\n\t   h5 = h5 + f | 0;\n\t   h6 = h6 + g | 0;\n\t   h7 = h7 + h | 0;\n\t  }\n\t  return new Uint8Array([\n\t   h0 >> 24 & 0xFF,\n\t   h0 >> 16 & 0xFF,\n\t   h0 >> 8 & 0xFF,\n\t   h0 & 0xFF,\n\t   h1 >> 24 & 0xFF,\n\t   h1 >> 16 & 0xFF,\n\t   h1 >> 8 & 0xFF,\n\t   h1 & 0xFF,\n\t   h2 >> 24 & 0xFF,\n\t   h2 >> 16 & 0xFF,\n\t   h2 >> 8 & 0xFF,\n\t   h2 & 0xFF,\n\t   h3 >> 24 & 0xFF,\n\t   h3 >> 16 & 0xFF,\n\t   h3 >> 8 & 0xFF,\n\t   h3 & 0xFF,\n\t   h4 >> 24 & 0xFF,\n\t   h4 >> 16 & 0xFF,\n\t   h4 >> 8 & 0xFF,\n\t   h4 & 0xFF,\n\t   h5 >> 24 & 0xFF,\n\t   h5 >> 16 & 0xFF,\n\t   h5 >> 8 & 0xFF,\n\t   h5 & 0xFF,\n\t   h6 >> 24 & 0xFF,\n\t   h6 >> 16 & 0xFF,\n\t   h6 >> 8 & 0xFF,\n\t   h6 & 0xFF,\n\t   h7 >> 24 & 0xFF,\n\t   h7 >> 16 & 0xFF,\n\t   h7 >> 8 & 0xFF,\n\t   h7 & 0xFF\n\t  ]);\n\t }\n\t return hash;\n\t}();\n\tvar calculateSHA512 = function calculateSHA512Closure() {\n\t function ch(result, x, y, z, tmp) {\n\t  result.assign(x);\n\t  result.and(y);\n\t  tmp.assign(x);\n\t  tmp.not();\n\t  tmp.and(z);\n\t  result.xor(tmp);\n\t }\n\t function maj(result, x, y, z, tmp) {\n\t  result.assign(x);\n\t  result.and(y);\n\t  tmp.assign(x);\n\t  tmp.and(z);\n\t  result.xor(tmp);\n\t  tmp.assign(y);\n\t  tmp.and(z);\n\t  result.xor(tmp);\n\t }\n\t function sigma(result, x, tmp) {\n\t  result.assign(x);\n\t  result.rotateRight(28);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(34);\n\t  result.xor(tmp);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(39);\n\t  result.xor(tmp);\n\t }\n\t function sigmaPrime(result, x, tmp) {\n\t  result.assign(x);\n\t  result.rotateRight(14);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(18);\n\t  result.xor(tmp);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(41);\n\t  result.xor(tmp);\n\t }\n\t function littleSigma(result, x, tmp) {\n\t  result.assign(x);\n\t  result.rotateRight(1);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(8);\n\t  result.xor(tmp);\n\t  tmp.assign(x);\n\t  tmp.shiftRight(7);\n\t  result.xor(tmp);\n\t }\n\t function littleSigmaPrime(result, x, tmp) {\n\t  result.assign(x);\n\t  result.rotateRight(19);\n\t  tmp.assign(x);\n\t  tmp.rotateRight(61);\n\t  result.xor(tmp);\n\t  tmp.assign(x);\n\t  tmp.shiftRight(6);\n\t  result.xor(tmp);\n\t }\n\t var k = [\n\t  new Word64(0x428a2f98, 0xd728ae22),\n\t  new Word64(0x71374491, 0x23ef65cd),\n\t  new Word64(0xb5c0fbcf, 0xec4d3b2f),\n\t  new Word64(0xe9b5dba5, 0x8189dbbc),\n\t  new Word64(0x3956c25b, 0xf348b538),\n\t  new Word64(0x59f111f1, 0xb605d019),\n\t  new Word64(0x923f82a4, 0xaf194f9b),\n\t  new Word64(0xab1c5ed5, 0xda6d8118),\n\t  new Word64(0xd807aa98, 0xa3030242),\n\t  new Word64(0x12835b01, 0x45706fbe),\n\t  new Word64(0x243185be, 0x4ee4b28c),\n\t  new Word64(0x550c7dc3, 0xd5ffb4e2),\n\t  new Word64(0x72be5d74, 0xf27b896f),\n\t  new Word64(0x80deb1fe, 0x3b1696b1),\n\t  new Word64(0x9bdc06a7, 0x25c71235),\n\t  new Word64(0xc19bf174, 0xcf692694),\n\t  new Word64(0xe49b69c1, 0x9ef14ad2),\n\t  new Word64(0xefbe4786, 0x384f25e3),\n\t  new Word64(0x0fc19dc6, 0x8b8cd5b5),\n\t  new Word64(0x240ca1cc, 0x77ac9c65),\n\t  new Word64(0x2de92c6f, 0x592b0275),\n\t  new Word64(0x4a7484aa, 0x6ea6e483),\n\t  new Word64(0x5cb0a9dc, 0xbd41fbd4),\n\t  new Word64(0x76f988da, 0x831153b5),\n\t  new Word64(0x983e5152, 0xee66dfab),\n\t  new Word64(0xa831c66d, 0x2db43210),\n\t  new Word64(0xb00327c8, 0x98fb213f),\n\t  new Word64(0xbf597fc7, 0xbeef0ee4),\n\t  new Word64(0xc6e00bf3, 0x3da88fc2),\n\t  new Word64(0xd5a79147, 0x930aa725),\n\t  new Word64(0x06ca6351, 0xe003826f),\n\t  new Word64(0x14292967, 0x0a0e6e70),\n\t  new Word64(0x27b70a85, 0x46d22ffc),\n\t  new Word64(0x2e1b2138, 0x5c26c926),\n\t  new Word64(0x4d2c6dfc, 0x5ac42aed),\n\t  new Word64(0x53380d13, 0x9d95b3df),\n\t  new Word64(0x650a7354, 0x8baf63de),\n\t  new Word64(0x766a0abb, 0x3c77b2a8),\n\t  new Word64(0x81c2c92e, 0x47edaee6),\n\t  new Word64(0x92722c85, 0x1482353b),\n\t  new Word64(0xa2bfe8a1, 0x4cf10364),\n\t  new Word64(0xa81a664b, 0xbc423001),\n\t  new Word64(0xc24b8b70, 0xd0f89791),\n\t  new Word64(0xc76c51a3, 0x0654be30),\n\t  new Word64(0xd192e819, 0xd6ef5218),\n\t  new Word64(0xd6990624, 0x5565a910),\n\t  new Word64(0xf40e3585, 0x5771202a),\n\t  new Word64(0x106aa070, 0x32bbd1b8),\n\t  new Word64(0x19a4c116, 0xb8d2d0c8),\n\t  new Word64(0x1e376c08, 0x5141ab53),\n\t  new Word64(0x2748774c, 0xdf8eeb99),\n\t  new Word64(0x34b0bcb5, 0xe19b48a8),\n\t  new Word64(0x391c0cb3, 0xc5c95a63),\n\t  new Word64(0x4ed8aa4a, 0xe3418acb),\n\t  new Word64(0x5b9cca4f, 0x7763e373),\n\t  new Word64(0x682e6ff3, 0xd6b2b8a3),\n\t  new Word64(0x748f82ee, 0x5defb2fc),\n\t  new Word64(0x78a5636f, 0x43172f60),\n\t  new Word64(0x84c87814, 0xa1f0ab72),\n\t  new Word64(0x8cc70208, 0x1a6439ec),\n\t  new Word64(0x90befffa, 0x23631e28),\n\t  new Word64(0xa4506ceb, 0xde82bde9),\n\t  new Word64(0xbef9a3f7, 0xb2c67915),\n\t  new Word64(0xc67178f2, 0xe372532b),\n\t  new Word64(0xca273ece, 0xea26619c),\n\t  new Word64(0xd186b8c7, 0x21c0c207),\n\t  new Word64(0xeada7dd6, 0xcde0eb1e),\n\t  new Word64(0xf57d4f7f, 0xee6ed178),\n\t  new Word64(0x06f067aa, 0x72176fba),\n\t  new Word64(0x0a637dc5, 0xa2c898a6),\n\t  new Word64(0x113f9804, 0xbef90dae),\n\t  new Word64(0x1b710b35, 0x131c471b),\n\t  new Word64(0x28db77f5, 0x23047d84),\n\t  new Word64(0x32caab7b, 0x40c72493),\n\t  new Word64(0x3c9ebe0a, 0x15c9bebc),\n\t  new Word64(0x431d67c4, 0x9c100d4c),\n\t  new Word64(0x4cc5d4be, 0xcb3e42b6),\n\t  new Word64(0x597f299c, 0xfc657e2a),\n\t  new Word64(0x5fcb6fab, 0x3ad6faec),\n\t  new Word64(0x6c44198c, 0x4a475817)\n\t ];\n\t function hash(data, offset, length, mode384) {\n\t  mode384 = !!mode384;\n\t  var h0, h1, h2, h3, h4, h5, h6, h7;\n\t  if (!mode384) {\n\t   h0 = new Word64(0x6a09e667, 0xf3bcc908);\n\t   h1 = new Word64(0xbb67ae85, 0x84caa73b);\n\t   h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n\t   h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n\t   h4 = new Word64(0x510e527f, 0xade682d1);\n\t   h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n\t   h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n\t   h7 = new Word64(0x5be0cd19, 0x137e2179);\n\t  } else {\n\t   h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n\t   h1 = new Word64(0x629a292a, 0x367cd507);\n\t   h2 = new Word64(0x9159015a, 0x3070dd17);\n\t   h3 = new Word64(0x152fecd8, 0xf70e5939);\n\t   h4 = new Word64(0x67332667, 0xffc00b31);\n\t   h5 = new Word64(0x8eb44a87, 0x68581511);\n\t   h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n\t   h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n\t  }\n\t  var paddedLength = Math.ceil((length + 17) / 128) * 128;\n\t  var padded = new Uint8Array(paddedLength);\n\t  var i, j, n;\n\t  for (i = 0; i < length; ++i) {\n\t   padded[i] = data[offset++];\n\t  }\n\t  padded[i++] = 0x80;\n\t  n = paddedLength - 16;\n\t  while (i < n) {\n\t   padded[i++] = 0;\n\t  }\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = 0;\n\t  padded[i++] = length >>> 29 & 0xFF;\n\t  padded[i++] = length >> 21 & 0xFF;\n\t  padded[i++] = length >> 13 & 0xFF;\n\t  padded[i++] = length >> 5 & 0xFF;\n\t  padded[i++] = length << 3 & 0xFF;\n\t  var w = new Array(80);\n\t  for (i = 0; i < 80; i++) {\n\t   w[i] = new Word64(0, 0);\n\t  }\n\t  var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n\t  var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n\t  var g = new Word64(0, 0), h = new Word64(0, 0);\n\t  var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n\t  var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n\t  for (i = 0; i < paddedLength;) {\n\t   for (j = 0; j < 16; ++j) {\n\t    w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t    w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n\t    i += 8;\n\t   }\n\t   for (j = 16; j < 80; ++j) {\n\t    tmp3 = w[j];\n\t    littleSigmaPrime(tmp3, w[j - 2], tmp2);\n\t    tmp3.add(w[j - 7]);\n\t    littleSigma(tmp1, w[j - 15], tmp2);\n\t    tmp3.add(tmp1);\n\t    tmp3.add(w[j - 16]);\n\t   }\n\t   a.assign(h0);\n\t   b.assign(h1);\n\t   c.assign(h2);\n\t   d.assign(h3);\n\t   e.assign(h4);\n\t   f.assign(h5);\n\t   g.assign(h6);\n\t   h.assign(h7);\n\t   for (j = 0; j < 80; ++j) {\n\t    t1.assign(h);\n\t    sigmaPrime(tmp1, e, tmp2);\n\t    t1.add(tmp1);\n\t    ch(tmp1, e, f, g, tmp2);\n\t    t1.add(tmp1);\n\t    t1.add(k[j]);\n\t    t1.add(w[j]);\n\t    sigma(t2, a, tmp2);\n\t    maj(tmp1, a, b, c, tmp2);\n\t    t2.add(tmp1);\n\t    tmp3 = h;\n\t    h = g;\n\t    g = f;\n\t    f = e;\n\t    d.add(t1);\n\t    e = d;\n\t    d = c;\n\t    c = b;\n\t    b = a;\n\t    tmp3.assign(t1);\n\t    tmp3.add(t2);\n\t    a = tmp3;\n\t   }\n\t   h0.add(a);\n\t   h1.add(b);\n\t   h2.add(c);\n\t   h3.add(d);\n\t   h4.add(e);\n\t   h5.add(f);\n\t   h6.add(g);\n\t   h7.add(h);\n\t  }\n\t  var result;\n\t  if (!mode384) {\n\t   result = new Uint8Array(64);\n\t   h0.copyTo(result, 0);\n\t   h1.copyTo(result, 8);\n\t   h2.copyTo(result, 16);\n\t   h3.copyTo(result, 24);\n\t   h4.copyTo(result, 32);\n\t   h5.copyTo(result, 40);\n\t   h6.copyTo(result, 48);\n\t   h7.copyTo(result, 56);\n\t  } else {\n\t   result = new Uint8Array(48);\n\t   h0.copyTo(result, 0);\n\t   h1.copyTo(result, 8);\n\t   h2.copyTo(result, 16);\n\t   h3.copyTo(result, 24);\n\t   h4.copyTo(result, 32);\n\t   h5.copyTo(result, 40);\n\t  }\n\t  return result;\n\t }\n\t return hash;\n\t}();\n\tvar calculateSHA384 = function calculateSHA384Closure() {\n\t function hash(data, offset, length) {\n\t  return calculateSHA512(data, offset, length, true);\n\t }\n\t return hash;\n\t}();\n\tvar NullCipher = function NullCipherClosure() {\n\t function NullCipher() {\n\t }\n\t NullCipher.prototype = {\n\t  decryptBlock: function NullCipher_decryptBlock(data) {\n\t   return data;\n\t  }\n\t };\n\t return NullCipher;\n\t}();\n\tvar AES128Cipher = function AES128CipherClosure() {\n\t var rcon = new Uint8Array([\n\t  0x8d,\n\t  0x01,\n\t  0x02,\n\t  0x04,\n\t  0x08,\n\t  0x10,\n\t  0x20,\n\t  0x40,\n\t  0x80,\n\t  0x1b,\n\t  0x36,\n\t  0x6c,\n\t  0xd8,\n\t  0xab,\n\t  0x4d,\n\t  0x9a,\n\t  0x2f,\n\t  0x5e,\n\t  0xbc,\n\t  0x63,\n\t  0xc6,\n\t  0x97,\n\t  0x35,\n\t  0x6a,\n\t  0xd4,\n\t  0xb3,\n\t  0x7d,\n\t  0xfa,\n\t  0xef,\n\t  0xc5,\n\t  0x91,\n\t  0x39,\n\t  0x72,\n\t  0xe4,\n\t  0xd3,\n\t  0xbd,\n\t  0x61,\n\t  0xc2,\n\t  0x9f,\n\t  0x25,\n\t  0x4a,\n\t  0x94,\n\t  0x33,\n\t  0x66,\n\t  0xcc,\n\t  0x83,\n\t  0x1d,\n\t  0x3a,\n\t  0x74,\n\t  0xe8,\n\t  0xcb,\n\t  0x8d,\n\t  0x01,\n\t  0x02,\n\t  0x04,\n\t  0x08,\n\t  0x10,\n\t  0x20,\n\t  0x40,\n\t  0x80,\n\t  0x1b,\n\t  0x36,\n\t  0x6c,\n\t  0xd8,\n\t  0xab,\n\t  0x4d,\n\t  0x9a,\n\t  0x2f,\n\t  0x5e,\n\t  0xbc,\n\t  0x63,\n\t  0xc6,\n\t  0x97,\n\t  0x35,\n\t  0x6a,\n\t  0xd4,\n\t  0xb3,\n\t  0x7d,\n\t  0xfa,\n\t  0xef,\n\t  0xc5,\n\t  0x91,\n\t  0x39,\n\t  0x72,\n\t  0xe4,\n\t  0xd3,\n\t  0xbd,\n\t  0x61,\n\t  0xc2,\n\t  0x9f,\n\t  0x25,\n\t  0x4a,\n\t  0x94,\n\t  0x33,\n\t  0x66,\n\t  0xcc,\n\t  0x83,\n\t  0x1d,\n\t  0x3a,\n\t  0x74,\n\t  0xe8,\n\t  0xcb,\n\t  0x8d,\n\t  0x01,\n\t  0x02,\n\t  0x04,\n\t  0x08,\n\t  0x10,\n\t  0x20,\n\t  0x40,\n\t  0x80,\n\t  0x1b,\n\t  0x36,\n\t  0x6c,\n\t  0xd8,\n\t  0xab,\n\t  0x4d,\n\t  0x9a,\n\t  0x2f,\n\t  0x5e,\n\t  0xbc,\n\t  0x63,\n\t  0xc6,\n\t  0x97,\n\t  0x35,\n\t  0x6a,\n\t  0xd4,\n\t  0xb3,\n\t  0x7d,\n\t  0xfa,\n\t  0xef,\n\t  0xc5,\n\t  0x91,\n\t  0x39,\n\t  0x72,\n\t  0xe4,\n\t  0xd3,\n\t  0xbd,\n\t  0x61,\n\t  0xc2,\n\t  0x9f,\n\t  0x25,\n\t  0x4a,\n\t  0x94,\n\t  0x33,\n\t  0x66,\n\t  0xcc,\n\t  0x83,\n\t  0x1d,\n\t  0x3a,\n\t  0x74,\n\t  0xe8,\n\t  0xcb,\n\t  0x8d,\n\t  0x01,\n\t  0x02,\n\t  0x04,\n\t  0x08,\n\t  0x10,\n\t  0x20,\n\t  0x40,\n\t  0x80,\n\t  0x1b,\n\t  0x36,\n\t  0x6c,\n\t  0xd8,\n\t  0xab,\n\t  0x4d,\n\t  0x9a,\n\t  0x2f,\n\t  0x5e,\n\t  0xbc,\n\t  0x63,\n\t  0xc6,\n\t  0x97,\n\t  0x35,\n\t  0x6a,\n\t  0xd4,\n\t  0xb3,\n\t  0x7d,\n\t  0xfa,\n\t  0xef,\n\t  0xc5,\n\t  0x91,\n\t  0x39,\n\t  0x72,\n\t  0xe4,\n\t  0xd3,\n\t  0xbd,\n\t  0x61,\n\t  0xc2,\n\t  0x9f,\n\t  0x25,\n\t  0x4a,\n\t  0x94,\n\t  0x33,\n\t  0x66,\n\t  0xcc,\n\t  0x83,\n\t  0x1d,\n\t  0x3a,\n\t  0x74,\n\t  0xe8,\n\t  0xcb,\n\t  0x8d,\n\t  0x01,\n\t  0x02,\n\t  0x04,\n\t  0x08,\n\t  0x10,\n\t  0x20,\n\t  0x40,\n\t  0x80,\n\t  0x1b,\n\t  0x36,\n\t  0x6c,\n\t  0xd8,\n\t  0xab,\n\t  0x4d,\n\t  0x9a,\n\t  0x2f,\n\t  0x5e,\n\t  0xbc,\n\t  0x63,\n\t  0xc6,\n\t  0x97,\n\t  0x35,\n\t  0x6a,\n\t  0xd4,\n\t  0xb3,\n\t  0x7d,\n\t  0xfa,\n\t  0xef,\n\t  0xc5,\n\t  0x91,\n\t  0x39,\n\t  0x72,\n\t  0xe4,\n\t  0xd3,\n\t  0xbd,\n\t  0x61,\n\t  0xc2,\n\t  0x9f,\n\t  0x25,\n\t  0x4a,\n\t  0x94,\n\t  0x33,\n\t  0x66,\n\t  0xcc,\n\t  0x83,\n\t  0x1d,\n\t  0x3a,\n\t  0x74,\n\t  0xe8,\n\t  0xcb,\n\t  0x8d\n\t ]);\n\t var s = new Uint8Array([\n\t  0x63,\n\t  0x7c,\n\t  0x77,\n\t  0x7b,\n\t  0xf2,\n\t  0x6b,\n\t  0x6f,\n\t  0xc5,\n\t  0x30,\n\t  0x01,\n\t  0x67,\n\t  0x2b,\n\t  0xfe,\n\t  0xd7,\n\t  0xab,\n\t  0x76,\n\t  0xca,\n\t  0x82,\n\t  0xc9,\n\t  0x7d,\n\t  0xfa,\n\t  0x59,\n\t  0x47,\n\t  0xf0,\n\t  0xad,\n\t  0xd4,\n\t  0xa2,\n\t  0xaf,\n\t  0x9c,\n\t  0xa4,\n\t  0x72,\n\t  0xc0,\n\t  0xb7,\n\t  0xfd,\n\t  0x93,\n\t  0x26,\n\t  0x36,\n\t  0x3f,\n\t  0xf7,\n\t  0xcc,\n\t  0x34,\n\t  0xa5,\n\t  0xe5,\n\t  0xf1,\n\t  0x71,\n\t  0xd8,\n\t  0x31,\n\t  0x15,\n\t  0x04,\n\t  0xc7,\n\t  0x23,\n\t  0xc3,\n\t  0x18,\n\t  0x96,\n\t  0x05,\n\t  0x9a,\n\t  0x07,\n\t  0x12,\n\t  0x80,\n\t  0xe2,\n\t  0xeb,\n\t  0x27,\n\t  0xb2,\n\t  0x75,\n\t  0x09,\n\t  0x83,\n\t  0x2c,\n\t  0x1a,\n\t  0x1b,\n\t  0x6e,\n\t  0x5a,\n\t  0xa0,\n\t  0x52,\n\t  0x3b,\n\t  0xd6,\n\t  0xb3,\n\t  0x29,\n\t  0xe3,\n\t  0x2f,\n\t  0x84,\n\t  0x53,\n\t  0xd1,\n\t  0x00,\n\t  0xed,\n\t  0x20,\n\t  0xfc,\n\t  0xb1,\n\t  0x5b,\n\t  0x6a,\n\t  0xcb,\n\t  0xbe,\n\t  0x39,\n\t  0x4a,\n\t  0x4c,\n\t  0x58,\n\t  0xcf,\n\t  0xd0,\n\t  0xef,\n\t  0xaa,\n\t  0xfb,\n\t  0x43,\n\t  0x4d,\n\t  0x33,\n\t  0x85,\n\t  0x45,\n\t  0xf9,\n\t  0x02,\n\t  0x7f,\n\t  0x50,\n\t  0x3c,\n\t  0x9f,\n\t  0xa8,\n\t  0x51,\n\t  0xa3,\n\t  0x40,\n\t  0x8f,\n\t  0x92,\n\t  0x9d,\n\t  0x38,\n\t  0xf5,\n\t  0xbc,\n\t  0xb6,\n\t  0xda,\n\t  0x21,\n\t  0x10,\n\t  0xff,\n\t  0xf3,\n\t  0xd2,\n\t  0xcd,\n\t  0x0c,\n\t  0x13,\n\t  0xec,\n\t  0x5f,\n\t  0x97,\n\t  0x44,\n\t  0x17,\n\t  0xc4,\n\t  0xa7,\n\t  0x7e,\n\t  0x3d,\n\t  0x64,\n\t  0x5d,\n\t  0x19,\n\t  0x73,\n\t  0x60,\n\t  0x81,\n\t  0x4f,\n\t  0xdc,\n\t  0x22,\n\t  0x2a,\n\t  0x90,\n\t  0x88,\n\t  0x46,\n\t  0xee,\n\t  0xb8,\n\t  0x14,\n\t  0xde,\n\t  0x5e,\n\t  0x0b,\n\t  0xdb,\n\t  0xe0,\n\t  0x32,\n\t  0x3a,\n\t  0x0a,\n\t  0x49,\n\t  0x06,\n\t  0x24,\n\t  0x5c,\n\t  0xc2,\n\t  0xd3,\n\t  0xac,\n\t  0x62,\n\t  0x91,\n\t  0x95,\n\t  0xe4,\n\t  0x79,\n\t  0xe7,\n\t  0xc8,\n\t  0x37,\n\t  0x6d,\n\t  0x8d,\n\t  0xd5,\n\t  0x4e,\n\t  0xa9,\n\t  0x6c,\n\t  0x56,\n\t  0xf4,\n\t  0xea,\n\t  0x65,\n\t  0x7a,\n\t  0xae,\n\t  0x08,\n\t  0xba,\n\t  0x78,\n\t  0x25,\n\t  0x2e,\n\t  0x1c,\n\t  0xa6,\n\t  0xb4,\n\t  0xc6,\n\t  0xe8,\n\t  0xdd,\n\t  0x74,\n\t  0x1f,\n\t  0x4b,\n\t  0xbd,\n\t  0x8b,\n\t  0x8a,\n\t  0x70,\n\t  0x3e,\n\t  0xb5,\n\t  0x66,\n\t  0x48,\n\t  0x03,\n\t  0xf6,\n\t  0x0e,\n\t  0x61,\n\t  0x35,\n\t  0x57,\n\t  0xb9,\n\t  0x86,\n\t  0xc1,\n\t  0x1d,\n\t  0x9e,\n\t  0xe1,\n\t  0xf8,\n\t  0x98,\n\t  0x11,\n\t  0x69,\n\t  0xd9,\n\t  0x8e,\n\t  0x94,\n\t  0x9b,\n\t  0x1e,\n\t  0x87,\n\t  0xe9,\n\t  0xce,\n\t  0x55,\n\t  0x28,\n\t  0xdf,\n\t  0x8c,\n\t  0xa1,\n\t  0x89,\n\t  0x0d,\n\t  0xbf,\n\t  0xe6,\n\t  0x42,\n\t  0x68,\n\t  0x41,\n\t  0x99,\n\t  0x2d,\n\t  0x0f,\n\t  0xb0,\n\t  0x54,\n\t  0xbb,\n\t  0x16\n\t ]);\n\t var inv_s = new Uint8Array([\n\t  0x52,\n\t  0x09,\n\t  0x6a,\n\t  0xd5,\n\t  0x30,\n\t  0x36,\n\t  0xa5,\n\t  0x38,\n\t  0xbf,\n\t  0x40,\n\t  0xa3,\n\t  0x9e,\n\t  0x81,\n\t  0xf3,\n\t  0xd7,\n\t  0xfb,\n\t  0x7c,\n\t  0xe3,\n\t  0x39,\n\t  0x82,\n\t  0x9b,\n\t  0x2f,\n\t  0xff,\n\t  0x87,\n\t  0x34,\n\t  0x8e,\n\t  0x43,\n\t  0x44,\n\t  0xc4,\n\t  0xde,\n\t  0xe9,\n\t  0xcb,\n\t  0x54,\n\t  0x7b,\n\t  0x94,\n\t  0x32,\n\t  0xa6,\n\t  0xc2,\n\t  0x23,\n\t  0x3d,\n\t  0xee,\n\t  0x4c,\n\t  0x95,\n\t  0x0b,\n\t  0x42,\n\t  0xfa,\n\t  0xc3,\n\t  0x4e,\n\t  0x08,\n\t  0x2e,\n\t  0xa1,\n\t  0x66,\n\t  0x28,\n\t  0xd9,\n\t  0x24,\n\t  0xb2,\n\t  0x76,\n\t  0x5b,\n\t  0xa2,\n\t  0x49,\n\t  0x6d,\n\t  0x8b,\n\t  0xd1,\n\t  0x25,\n\t  0x72,\n\t  0xf8,\n\t  0xf6,\n\t  0x64,\n\t  0x86,\n\t  0x68,\n\t  0x98,\n\t  0x16,\n\t  0xd4,\n\t  0xa4,\n\t  0x5c,\n\t  0xcc,\n\t  0x5d,\n\t  0x65,\n\t  0xb6,\n\t  0x92,\n\t  0x6c,\n\t  0x70,\n\t  0x48,\n\t  0x50,\n\t  0xfd,\n\t  0xed,\n\t  0xb9,\n\t  0xda,\n\t  0x5e,\n\t  0x15,\n\t  0x46,\n\t  0x57,\n\t  0xa7,\n\t  0x8d,\n\t  0x9d,\n\t  0x84,\n\t  0x90,\n\t  0xd8,\n\t  0xab,\n\t  0x00,\n\t  0x8c,\n\t  0xbc,\n\t  0xd3,\n\t  0x0a,\n\t  0xf7,\n\t  0xe4,\n\t  0x58,\n\t  0x05,\n\t  0xb8,\n\t  0xb3,\n\t  0x45,\n\t  0x06,\n\t  0xd0,\n\t  0x2c,\n\t  0x1e,\n\t  0x8f,\n\t  0xca,\n\t  0x3f,\n\t  0x0f,\n\t  0x02,\n\t  0xc1,\n\t  0xaf,\n\t  0xbd,\n\t  0x03,\n\t  0x01,\n\t  0x13,\n\t  0x8a,\n\t  0x6b,\n\t  0x3a,\n\t  0x91,\n\t  0x11,\n\t  0x41,\n\t  0x4f,\n\t  0x67,\n\t  0xdc,\n\t  0xea,\n\t  0x97,\n\t  0xf2,\n\t  0xcf,\n\t  0xce,\n\t  0xf0,\n\t  0xb4,\n\t  0xe6,\n\t  0x73,\n\t  0x96,\n\t  0xac,\n\t  0x74,\n\t  0x22,\n\t  0xe7,\n\t  0xad,\n\t  0x35,\n\t  0x85,\n\t  0xe2,\n\t  0xf9,\n\t  0x37,\n\t  0xe8,\n\t  0x1c,\n\t  0x75,\n\t  0xdf,\n\t  0x6e,\n\t  0x47,\n\t  0xf1,\n\t  0x1a,\n\t  0x71,\n\t  0x1d,\n\t  0x29,\n\t  0xc5,\n\t  0x89,\n\t  0x6f,\n\t  0xb7,\n\t  0x62,\n\t  0x0e,\n\t  0xaa,\n\t  0x18,\n\t  0xbe,\n\t  0x1b,\n\t  0xfc,\n\t  0x56,\n\t  0x3e,\n\t  0x4b,\n\t  0xc6,\n\t  0xd2,\n\t  0x79,\n\t  0x20,\n\t  0x9a,\n\t  0xdb,\n\t  0xc0,\n\t  0xfe,\n\t  0x78,\n\t  0xcd,\n\t  0x5a,\n\t  0xf4,\n\t  0x1f,\n\t  0xdd,\n\t  0xa8,\n\t  0x33,\n\t  0x88,\n\t  0x07,\n\t  0xc7,\n\t  0x31,\n\t  0xb1,\n\t  0x12,\n\t  0x10,\n\t  0x59,\n\t  0x27,\n\t  0x80,\n\t  0xec,\n\t  0x5f,\n\t  0x60,\n\t  0x51,\n\t  0x7f,\n\t  0xa9,\n\t  0x19,\n\t  0xb5,\n\t  0x4a,\n\t  0x0d,\n\t  0x2d,\n\t  0xe5,\n\t  0x7a,\n\t  0x9f,\n\t  0x93,\n\t  0xc9,\n\t  0x9c,\n\t  0xef,\n\t  0xa0,\n\t  0xe0,\n\t  0x3b,\n\t  0x4d,\n\t  0xae,\n\t  0x2a,\n\t  0xf5,\n\t  0xb0,\n\t  0xc8,\n\t  0xeb,\n\t  0xbb,\n\t  0x3c,\n\t  0x83,\n\t  0x53,\n\t  0x99,\n\t  0x61,\n\t  0x17,\n\t  0x2b,\n\t  0x04,\n\t  0x7e,\n\t  0xba,\n\t  0x77,\n\t  0xd6,\n\t  0x26,\n\t  0xe1,\n\t  0x69,\n\t  0x14,\n\t  0x63,\n\t  0x55,\n\t  0x21,\n\t  0x0c,\n\t  0x7d\n\t ]);\n\t var mixCol = new Uint8Array(256);\n\t for (var i = 0; i < 256; i++) {\n\t  if (i < 128) {\n\t   mixCol[i] = i << 1;\n\t  } else {\n\t   mixCol[i] = i << 1 ^ 0x1b;\n\t  }\n\t }\n\t var mix = new Uint32Array([\n\t  0x00000000,\n\t  0x0e090d0b,\n\t  0x1c121a16,\n\t  0x121b171d,\n\t  0x3824342c,\n\t  0x362d3927,\n\t  0x24362e3a,\n\t  0x2a3f2331,\n\t  0x70486858,\n\t  0x7e416553,\n\t  0x6c5a724e,\n\t  0x62537f45,\n\t  0x486c5c74,\n\t  0x4665517f,\n\t  0x547e4662,\n\t  0x5a774b69,\n\t  0xe090d0b0,\n\t  0xee99ddbb,\n\t  0xfc82caa6,\n\t  0xf28bc7ad,\n\t  0xd8b4e49c,\n\t  0xd6bde997,\n\t  0xc4a6fe8a,\n\t  0xcaaff381,\n\t  0x90d8b8e8,\n\t  0x9ed1b5e3,\n\t  0x8ccaa2fe,\n\t  0x82c3aff5,\n\t  0xa8fc8cc4,\n\t  0xa6f581cf,\n\t  0xb4ee96d2,\n\t  0xbae79bd9,\n\t  0xdb3bbb7b,\n\t  0xd532b670,\n\t  0xc729a16d,\n\t  0xc920ac66,\n\t  0xe31f8f57,\n\t  0xed16825c,\n\t  0xff0d9541,\n\t  0xf104984a,\n\t  0xab73d323,\n\t  0xa57ade28,\n\t  0xb761c935,\n\t  0xb968c43e,\n\t  0x9357e70f,\n\t  0x9d5eea04,\n\t  0x8f45fd19,\n\t  0x814cf012,\n\t  0x3bab6bcb,\n\t  0x35a266c0,\n\t  0x27b971dd,\n\t  0x29b07cd6,\n\t  0x038f5fe7,\n\t  0x0d8652ec,\n\t  0x1f9d45f1,\n\t  0x119448fa,\n\t  0x4be30393,\n\t  0x45ea0e98,\n\t  0x57f11985,\n\t  0x59f8148e,\n\t  0x73c737bf,\n\t  0x7dce3ab4,\n\t  0x6fd52da9,\n\t  0x61dc20a2,\n\t  0xad766df6,\n\t  0xa37f60fd,\n\t  0xb16477e0,\n\t  0xbf6d7aeb,\n\t  0x955259da,\n\t  0x9b5b54d1,\n\t  0x894043cc,\n\t  0x87494ec7,\n\t  0xdd3e05ae,\n\t  0xd33708a5,\n\t  0xc12c1fb8,\n\t  0xcf2512b3,\n\t  0xe51a3182,\n\t  0xeb133c89,\n\t  0xf9082b94,\n\t  0xf701269f,\n\t  0x4de6bd46,\n\t  0x43efb04d,\n\t  0x51f4a750,\n\t  0x5ffdaa5b,\n\t  0x75c2896a,\n\t  0x7bcb8461,\n\t  0x69d0937c,\n\t  0x67d99e77,\n\t  0x3daed51e,\n\t  0x33a7d815,\n\t  0x21bccf08,\n\t  0x2fb5c203,\n\t  0x058ae132,\n\t  0x0b83ec39,\n\t  0x1998fb24,\n\t  0x1791f62f,\n\t  0x764dd68d,\n\t  0x7844db86,\n\t  0x6a5fcc9b,\n\t  0x6456c190,\n\t  0x4e69e2a1,\n\t  0x4060efaa,\n\t  0x527bf8b7,\n\t  0x5c72f5bc,\n\t  0x0605bed5,\n\t  0x080cb3de,\n\t  0x1a17a4c3,\n\t  0x141ea9c8,\n\t  0x3e218af9,\n\t  0x302887f2,\n\t  0x223390ef,\n\t  0x2c3a9de4,\n\t  0x96dd063d,\n\t  0x98d40b36,\n\t  0x8acf1c2b,\n\t  0x84c61120,\n\t  0xaef93211,\n\t  0xa0f03f1a,\n\t  0xb2eb2807,\n\t  0xbce2250c,\n\t  0xe6956e65,\n\t  0xe89c636e,\n\t  0xfa877473,\n\t  0xf48e7978,\n\t  0xdeb15a49,\n\t  0xd0b85742,\n\t  0xc2a3405f,\n\t  0xccaa4d54,\n\t  0x41ecdaf7,\n\t  0x4fe5d7fc,\n\t  0x5dfec0e1,\n\t  0x53f7cdea,\n\t  0x79c8eedb,\n\t  0x77c1e3d0,\n\t  0x65daf4cd,\n\t  0x6bd3f9c6,\n\t  0x31a4b2af,\n\t  0x3fadbfa4,\n\t  0x2db6a8b9,\n\t  0x23bfa5b2,\n\t  0x09808683,\n\t  0x07898b88,\n\t  0x15929c95,\n\t  0x1b9b919e,\n\t  0xa17c0a47,\n\t  0xaf75074c,\n\t  0xbd6e1051,\n\t  0xb3671d5a,\n\t  0x99583e6b,\n\t  0x97513360,\n\t  0x854a247d,\n\t  0x8b432976,\n\t  0xd134621f,\n\t  0xdf3d6f14,\n\t  0xcd267809,\n\t  0xc32f7502,\n\t  0xe9105633,\n\t  0xe7195b38,\n\t  0xf5024c25,\n\t  0xfb0b412e,\n\t  0x9ad7618c,\n\t  0x94de6c87,\n\t  0x86c57b9a,\n\t  0x88cc7691,\n\t  0xa2f355a0,\n\t  0xacfa58ab,\n\t  0xbee14fb6,\n\t  0xb0e842bd,\n\t  0xea9f09d4,\n\t  0xe49604df,\n\t  0xf68d13c2,\n\t  0xf8841ec9,\n\t  0xd2bb3df8,\n\t  0xdcb230f3,\n\t  0xcea927ee,\n\t  0xc0a02ae5,\n\t  0x7a47b13c,\n\t  0x744ebc37,\n\t  0x6655ab2a,\n\t  0x685ca621,\n\t  0x42638510,\n\t  0x4c6a881b,\n\t  0x5e719f06,\n\t  0x5078920d,\n\t  0x0a0fd964,\n\t  0x0406d46f,\n\t  0x161dc372,\n\t  0x1814ce79,\n\t  0x322bed48,\n\t  0x3c22e043,\n\t  0x2e39f75e,\n\t  0x2030fa55,\n\t  0xec9ab701,\n\t  0xe293ba0a,\n\t  0xf088ad17,\n\t  0xfe81a01c,\n\t  0xd4be832d,\n\t  0xdab78e26,\n\t  0xc8ac993b,\n\t  0xc6a59430,\n\t  0x9cd2df59,\n\t  0x92dbd252,\n\t  0x80c0c54f,\n\t  0x8ec9c844,\n\t  0xa4f6eb75,\n\t  0xaaffe67e,\n\t  0xb8e4f163,\n\t  0xb6edfc68,\n\t  0x0c0a67b1,\n\t  0x02036aba,\n\t  0x10187da7,\n\t  0x1e1170ac,\n\t  0x342e539d,\n\t  0x3a275e96,\n\t  0x283c498b,\n\t  0x26354480,\n\t  0x7c420fe9,\n\t  0x724b02e2,\n\t  0x605015ff,\n\t  0x6e5918f4,\n\t  0x44663bc5,\n\t  0x4a6f36ce,\n\t  0x587421d3,\n\t  0x567d2cd8,\n\t  0x37a10c7a,\n\t  0x39a80171,\n\t  0x2bb3166c,\n\t  0x25ba1b67,\n\t  0x0f853856,\n\t  0x018c355d,\n\t  0x13972240,\n\t  0x1d9e2f4b,\n\t  0x47e96422,\n\t  0x49e06929,\n\t  0x5bfb7e34,\n\t  0x55f2733f,\n\t  0x7fcd500e,\n\t  0x71c45d05,\n\t  0x63df4a18,\n\t  0x6dd64713,\n\t  0xd731dcca,\n\t  0xd938d1c1,\n\t  0xcb23c6dc,\n\t  0xc52acbd7,\n\t  0xef15e8e6,\n\t  0xe11ce5ed,\n\t  0xf307f2f0,\n\t  0xfd0efffb,\n\t  0xa779b492,\n\t  0xa970b999,\n\t  0xbb6bae84,\n\t  0xb562a38f,\n\t  0x9f5d80be,\n\t  0x91548db5,\n\t  0x834f9aa8,\n\t  0x8d4697a3\n\t ]);\n\t function expandKey128(cipherKey) {\n\t  var b = 176, result = new Uint8Array(b);\n\t  result.set(cipherKey);\n\t  for (var j = 16, i = 1; j < b; ++i) {\n\t   var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n\t   t1 = s[t1];\n\t   t2 = s[t2];\n\t   t3 = s[t3];\n\t   t4 = s[t4];\n\t   t1 = t1 ^ rcon[i];\n\t   for (var n = 0; n < 4; ++n) {\n\t    result[j] = t1 ^= result[j - 16];\n\t    j++;\n\t    result[j] = t2 ^= result[j - 16];\n\t    j++;\n\t    result[j] = t3 ^= result[j - 16];\n\t    j++;\n\t    result[j] = t4 ^= result[j - 16];\n\t    j++;\n\t   }\n\t  }\n\t  return result;\n\t }\n\t function decrypt128(input, key) {\n\t  var state = new Uint8Array(16);\n\t  state.set(input);\n\t  var i, j, k;\n\t  var t, u, v;\n\t  for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t   state[j] ^= key[k];\n\t  }\n\t  for (i = 9; i >= 1; --i) {\n\t   t = state[13];\n\t   state[13] = state[9];\n\t   state[9] = state[5];\n\t   state[5] = state[1];\n\t   state[1] = t;\n\t   t = state[14];\n\t   u = state[10];\n\t   state[14] = state[6];\n\t   state[10] = state[2];\n\t   state[6] = t;\n\t   state[2] = u;\n\t   t = state[15];\n\t   u = state[11];\n\t   v = state[7];\n\t   state[15] = state[3];\n\t   state[11] = t;\n\t   state[7] = u;\n\t   state[3] = v;\n\t   for (j = 0; j < 16; ++j) {\n\t    state[j] = inv_s[state[j]];\n\t   }\n\t   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t    state[j] ^= key[k];\n\t   }\n\t   for (j = 0; j < 16; j += 4) {\n\t    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n\t    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t    state[j] = t >>> 24 & 0xFF;\n\t    state[j + 1] = t >> 16 & 0xFF;\n\t    state[j + 2] = t >> 8 & 0xFF;\n\t    state[j + 3] = t & 0xFF;\n\t   }\n\t  }\n\t  t = state[13];\n\t  state[13] = state[9];\n\t  state[9] = state[5];\n\t  state[5] = state[1];\n\t  state[1] = t;\n\t  t = state[14];\n\t  u = state[10];\n\t  state[14] = state[6];\n\t  state[10] = state[2];\n\t  state[6] = t;\n\t  state[2] = u;\n\t  t = state[15];\n\t  u = state[11];\n\t  v = state[7];\n\t  state[15] = state[3];\n\t  state[11] = t;\n\t  state[7] = u;\n\t  state[3] = v;\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] = inv_s[state[j]];\n\t   state[j] ^= key[j];\n\t  }\n\t  return state;\n\t }\n\t function encrypt128(input, key) {\n\t  var t, u, v, k;\n\t  var state = new Uint8Array(16);\n\t  state.set(input);\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] ^= key[j];\n\t  }\n\t  for (i = 1; i < 10; i++) {\n\t   for (j = 0; j < 16; ++j) {\n\t    state[j] = s[state[j]];\n\t   }\n\t   v = state[1];\n\t   state[1] = state[5];\n\t   state[5] = state[9];\n\t   state[9] = state[13];\n\t   state[13] = v;\n\t   v = state[2];\n\t   u = state[6];\n\t   state[2] = state[10];\n\t   state[6] = state[14];\n\t   state[10] = v;\n\t   state[14] = u;\n\t   v = state[3];\n\t   u = state[7];\n\t   t = state[11];\n\t   state[3] = state[15];\n\t   state[7] = v;\n\t   state[11] = u;\n\t   state[15] = t;\n\t   for (var j = 0; j < 16; j += 4) {\n\t    var s0 = state[j + 0], s1 = state[j + 1];\n\t    var s2 = state[j + 2], s3 = state[j + 3];\n\t    t = s0 ^ s1 ^ s2 ^ s3;\n\t    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t   }\n\t   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t    state[j] ^= key[k];\n\t   }\n\t  }\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] = s[state[j]];\n\t  }\n\t  v = state[1];\n\t  state[1] = state[5];\n\t  state[5] = state[9];\n\t  state[9] = state[13];\n\t  state[13] = v;\n\t  v = state[2];\n\t  u = state[6];\n\t  state[2] = state[10];\n\t  state[6] = state[14];\n\t  state[10] = v;\n\t  state[14] = u;\n\t  v = state[3];\n\t  u = state[7];\n\t  t = state[11];\n\t  state[3] = state[15];\n\t  state[7] = v;\n\t  state[11] = u;\n\t  state[15] = t;\n\t  for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t   state[j] ^= key[k];\n\t  }\n\t  return state;\n\t }\n\t function AES128Cipher(key) {\n\t  this.key = expandKey128(key);\n\t  this.buffer = new Uint8Array(16);\n\t  this.bufferPosition = 0;\n\t }\n\t function decryptBlock2(data, finalize) {\n\t  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n\t  for (i = 0; i < sourceLength; ++i) {\n\t   buffer[bufferLength] = data[i];\n\t   ++bufferLength;\n\t   if (bufferLength < 16) {\n\t    continue;\n\t   }\n\t   var plain = decrypt128(buffer, this.key);\n\t   for (j = 0; j < 16; ++j) {\n\t    plain[j] ^= iv[j];\n\t   }\n\t   iv = buffer;\n\t   result.push(plain);\n\t   buffer = new Uint8Array(16);\n\t   bufferLength = 0;\n\t  }\n\t  this.buffer = buffer;\n\t  this.bufferLength = bufferLength;\n\t  this.iv = iv;\n\t  if (result.length === 0) {\n\t   return new Uint8Array([]);\n\t  }\n\t  var outputLength = 16 * result.length;\n\t  if (finalize) {\n\t   var lastBlock = result[result.length - 1];\n\t   var psLen = lastBlock[15];\n\t   if (psLen <= 16) {\n\t    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t     if (lastBlock[i] !== psLen) {\n\t      psLen = 0;\n\t      break;\n\t     }\n\t    }\n\t    outputLength -= psLen;\n\t    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t   }\n\t  }\n\t  var output = new Uint8Array(outputLength);\n\t  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t   output.set(result[i], j);\n\t  }\n\t  return output;\n\t }\n\t AES128Cipher.prototype = {\n\t  decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n\t   var i, sourceLength = data.length;\n\t   var buffer = this.buffer, bufferLength = this.bufferPosition;\n\t   for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t    buffer[bufferLength] = data[i];\n\t   }\n\t   if (bufferLength < 16) {\n\t    this.bufferLength = bufferLength;\n\t    return new Uint8Array([]);\n\t   }\n\t   this.iv = buffer;\n\t   this.buffer = new Uint8Array(16);\n\t   this.bufferLength = 0;\n\t   this.decryptBlock = decryptBlock2;\n\t   return this.decryptBlock(data.subarray(16), finalize);\n\t  },\n\t  encrypt: function AES128Cipher_encrypt(data, iv) {\n\t   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n\t   if (!iv) {\n\t    iv = new Uint8Array(16);\n\t   }\n\t   for (i = 0; i < sourceLength; ++i) {\n\t    buffer[bufferLength] = data[i];\n\t    ++bufferLength;\n\t    if (bufferLength < 16) {\n\t     continue;\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t     buffer[j] ^= iv[j];\n\t    }\n\t    var cipher = encrypt128(buffer, this.key);\n\t    iv = cipher;\n\t    result.push(cipher);\n\t    buffer = new Uint8Array(16);\n\t    bufferLength = 0;\n\t   }\n\t   this.buffer = buffer;\n\t   this.bufferLength = bufferLength;\n\t   this.iv = iv;\n\t   if (result.length === 0) {\n\t    return new Uint8Array([]);\n\t   }\n\t   var outputLength = 16 * result.length;\n\t   var output = new Uint8Array(outputLength);\n\t   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t    output.set(result[i], j);\n\t   }\n\t   return output;\n\t  }\n\t };\n\t return AES128Cipher;\n\t}();\n\tvar AES256Cipher = function AES256CipherClosure() {\n\t var s = new Uint8Array([\n\t  0x63,\n\t  0x7c,\n\t  0x77,\n\t  0x7b,\n\t  0xf2,\n\t  0x6b,\n\t  0x6f,\n\t  0xc5,\n\t  0x30,\n\t  0x01,\n\t  0x67,\n\t  0x2b,\n\t  0xfe,\n\t  0xd7,\n\t  0xab,\n\t  0x76,\n\t  0xca,\n\t  0x82,\n\t  0xc9,\n\t  0x7d,\n\t  0xfa,\n\t  0x59,\n\t  0x47,\n\t  0xf0,\n\t  0xad,\n\t  0xd4,\n\t  0xa2,\n\t  0xaf,\n\t  0x9c,\n\t  0xa4,\n\t  0x72,\n\t  0xc0,\n\t  0xb7,\n\t  0xfd,\n\t  0x93,\n\t  0x26,\n\t  0x36,\n\t  0x3f,\n\t  0xf7,\n\t  0xcc,\n\t  0x34,\n\t  0xa5,\n\t  0xe5,\n\t  0xf1,\n\t  0x71,\n\t  0xd8,\n\t  0x31,\n\t  0x15,\n\t  0x04,\n\t  0xc7,\n\t  0x23,\n\t  0xc3,\n\t  0x18,\n\t  0x96,\n\t  0x05,\n\t  0x9a,\n\t  0x07,\n\t  0x12,\n\t  0x80,\n\t  0xe2,\n\t  0xeb,\n\t  0x27,\n\t  0xb2,\n\t  0x75,\n\t  0x09,\n\t  0x83,\n\t  0x2c,\n\t  0x1a,\n\t  0x1b,\n\t  0x6e,\n\t  0x5a,\n\t  0xa0,\n\t  0x52,\n\t  0x3b,\n\t  0xd6,\n\t  0xb3,\n\t  0x29,\n\t  0xe3,\n\t  0x2f,\n\t  0x84,\n\t  0x53,\n\t  0xd1,\n\t  0x00,\n\t  0xed,\n\t  0x20,\n\t  0xfc,\n\t  0xb1,\n\t  0x5b,\n\t  0x6a,\n\t  0xcb,\n\t  0xbe,\n\t  0x39,\n\t  0x4a,\n\t  0x4c,\n\t  0x58,\n\t  0xcf,\n\t  0xd0,\n\t  0xef,\n\t  0xaa,\n\t  0xfb,\n\t  0x43,\n\t  0x4d,\n\t  0x33,\n\t  0x85,\n\t  0x45,\n\t  0xf9,\n\t  0x02,\n\t  0x7f,\n\t  0x50,\n\t  0x3c,\n\t  0x9f,\n\t  0xa8,\n\t  0x51,\n\t  0xa3,\n\t  0x40,\n\t  0x8f,\n\t  0x92,\n\t  0x9d,\n\t  0x38,\n\t  0xf5,\n\t  0xbc,\n\t  0xb6,\n\t  0xda,\n\t  0x21,\n\t  0x10,\n\t  0xff,\n\t  0xf3,\n\t  0xd2,\n\t  0xcd,\n\t  0x0c,\n\t  0x13,\n\t  0xec,\n\t  0x5f,\n\t  0x97,\n\t  0x44,\n\t  0x17,\n\t  0xc4,\n\t  0xa7,\n\t  0x7e,\n\t  0x3d,\n\t  0x64,\n\t  0x5d,\n\t  0x19,\n\t  0x73,\n\t  0x60,\n\t  0x81,\n\t  0x4f,\n\t  0xdc,\n\t  0x22,\n\t  0x2a,\n\t  0x90,\n\t  0x88,\n\t  0x46,\n\t  0xee,\n\t  0xb8,\n\t  0x14,\n\t  0xde,\n\t  0x5e,\n\t  0x0b,\n\t  0xdb,\n\t  0xe0,\n\t  0x32,\n\t  0x3a,\n\t  0x0a,\n\t  0x49,\n\t  0x06,\n\t  0x24,\n\t  0x5c,\n\t  0xc2,\n\t  0xd3,\n\t  0xac,\n\t  0x62,\n\t  0x91,\n\t  0x95,\n\t  0xe4,\n\t  0x79,\n\t  0xe7,\n\t  0xc8,\n\t  0x37,\n\t  0x6d,\n\t  0x8d,\n\t  0xd5,\n\t  0x4e,\n\t  0xa9,\n\t  0x6c,\n\t  0x56,\n\t  0xf4,\n\t  0xea,\n\t  0x65,\n\t  0x7a,\n\t  0xae,\n\t  0x08,\n\t  0xba,\n\t  0x78,\n\t  0x25,\n\t  0x2e,\n\t  0x1c,\n\t  0xa6,\n\t  0xb4,\n\t  0xc6,\n\t  0xe8,\n\t  0xdd,\n\t  0x74,\n\t  0x1f,\n\t  0x4b,\n\t  0xbd,\n\t  0x8b,\n\t  0x8a,\n\t  0x70,\n\t  0x3e,\n\t  0xb5,\n\t  0x66,\n\t  0x48,\n\t  0x03,\n\t  0xf6,\n\t  0x0e,\n\t  0x61,\n\t  0x35,\n\t  0x57,\n\t  0xb9,\n\t  0x86,\n\t  0xc1,\n\t  0x1d,\n\t  0x9e,\n\t  0xe1,\n\t  0xf8,\n\t  0x98,\n\t  0x11,\n\t  0x69,\n\t  0xd9,\n\t  0x8e,\n\t  0x94,\n\t  0x9b,\n\t  0x1e,\n\t  0x87,\n\t  0xe9,\n\t  0xce,\n\t  0x55,\n\t  0x28,\n\t  0xdf,\n\t  0x8c,\n\t  0xa1,\n\t  0x89,\n\t  0x0d,\n\t  0xbf,\n\t  0xe6,\n\t  0x42,\n\t  0x68,\n\t  0x41,\n\t  0x99,\n\t  0x2d,\n\t  0x0f,\n\t  0xb0,\n\t  0x54,\n\t  0xbb,\n\t  0x16\n\t ]);\n\t var inv_s = new Uint8Array([\n\t  0x52,\n\t  0x09,\n\t  0x6a,\n\t  0xd5,\n\t  0x30,\n\t  0x36,\n\t  0xa5,\n\t  0x38,\n\t  0xbf,\n\t  0x40,\n\t  0xa3,\n\t  0x9e,\n\t  0x81,\n\t  0xf3,\n\t  0xd7,\n\t  0xfb,\n\t  0x7c,\n\t  0xe3,\n\t  0x39,\n\t  0x82,\n\t  0x9b,\n\t  0x2f,\n\t  0xff,\n\t  0x87,\n\t  0x34,\n\t  0x8e,\n\t  0x43,\n\t  0x44,\n\t  0xc4,\n\t  0xde,\n\t  0xe9,\n\t  0xcb,\n\t  0x54,\n\t  0x7b,\n\t  0x94,\n\t  0x32,\n\t  0xa6,\n\t  0xc2,\n\t  0x23,\n\t  0x3d,\n\t  0xee,\n\t  0x4c,\n\t  0x95,\n\t  0x0b,\n\t  0x42,\n\t  0xfa,\n\t  0xc3,\n\t  0x4e,\n\t  0x08,\n\t  0x2e,\n\t  0xa1,\n\t  0x66,\n\t  0x28,\n\t  0xd9,\n\t  0x24,\n\t  0xb2,\n\t  0x76,\n\t  0x5b,\n\t  0xa2,\n\t  0x49,\n\t  0x6d,\n\t  0x8b,\n\t  0xd1,\n\t  0x25,\n\t  0x72,\n\t  0xf8,\n\t  0xf6,\n\t  0x64,\n\t  0x86,\n\t  0x68,\n\t  0x98,\n\t  0x16,\n\t  0xd4,\n\t  0xa4,\n\t  0x5c,\n\t  0xcc,\n\t  0x5d,\n\t  0x65,\n\t  0xb6,\n\t  0x92,\n\t  0x6c,\n\t  0x70,\n\t  0x48,\n\t  0x50,\n\t  0xfd,\n\t  0xed,\n\t  0xb9,\n\t  0xda,\n\t  0x5e,\n\t  0x15,\n\t  0x46,\n\t  0x57,\n\t  0xa7,\n\t  0x8d,\n\t  0x9d,\n\t  0x84,\n\t  0x90,\n\t  0xd8,\n\t  0xab,\n\t  0x00,\n\t  0x8c,\n\t  0xbc,\n\t  0xd3,\n\t  0x0a,\n\t  0xf7,\n\t  0xe4,\n\t  0x58,\n\t  0x05,\n\t  0xb8,\n\t  0xb3,\n\t  0x45,\n\t  0x06,\n\t  0xd0,\n\t  0x2c,\n\t  0x1e,\n\t  0x8f,\n\t  0xca,\n\t  0x3f,\n\t  0x0f,\n\t  0x02,\n\t  0xc1,\n\t  0xaf,\n\t  0xbd,\n\t  0x03,\n\t  0x01,\n\t  0x13,\n\t  0x8a,\n\t  0x6b,\n\t  0x3a,\n\t  0x91,\n\t  0x11,\n\t  0x41,\n\t  0x4f,\n\t  0x67,\n\t  0xdc,\n\t  0xea,\n\t  0x97,\n\t  0xf2,\n\t  0xcf,\n\t  0xce,\n\t  0xf0,\n\t  0xb4,\n\t  0xe6,\n\t  0x73,\n\t  0x96,\n\t  0xac,\n\t  0x74,\n\t  0x22,\n\t  0xe7,\n\t  0xad,\n\t  0x35,\n\t  0x85,\n\t  0xe2,\n\t  0xf9,\n\t  0x37,\n\t  0xe8,\n\t  0x1c,\n\t  0x75,\n\t  0xdf,\n\t  0x6e,\n\t  0x47,\n\t  0xf1,\n\t  0x1a,\n\t  0x71,\n\t  0x1d,\n\t  0x29,\n\t  0xc5,\n\t  0x89,\n\t  0x6f,\n\t  0xb7,\n\t  0x62,\n\t  0x0e,\n\t  0xaa,\n\t  0x18,\n\t  0xbe,\n\t  0x1b,\n\t  0xfc,\n\t  0x56,\n\t  0x3e,\n\t  0x4b,\n\t  0xc6,\n\t  0xd2,\n\t  0x79,\n\t  0x20,\n\t  0x9a,\n\t  0xdb,\n\t  0xc0,\n\t  0xfe,\n\t  0x78,\n\t  0xcd,\n\t  0x5a,\n\t  0xf4,\n\t  0x1f,\n\t  0xdd,\n\t  0xa8,\n\t  0x33,\n\t  0x88,\n\t  0x07,\n\t  0xc7,\n\t  0x31,\n\t  0xb1,\n\t  0x12,\n\t  0x10,\n\t  0x59,\n\t  0x27,\n\t  0x80,\n\t  0xec,\n\t  0x5f,\n\t  0x60,\n\t  0x51,\n\t  0x7f,\n\t  0xa9,\n\t  0x19,\n\t  0xb5,\n\t  0x4a,\n\t  0x0d,\n\t  0x2d,\n\t  0xe5,\n\t  0x7a,\n\t  0x9f,\n\t  0x93,\n\t  0xc9,\n\t  0x9c,\n\t  0xef,\n\t  0xa0,\n\t  0xe0,\n\t  0x3b,\n\t  0x4d,\n\t  0xae,\n\t  0x2a,\n\t  0xf5,\n\t  0xb0,\n\t  0xc8,\n\t  0xeb,\n\t  0xbb,\n\t  0x3c,\n\t  0x83,\n\t  0x53,\n\t  0x99,\n\t  0x61,\n\t  0x17,\n\t  0x2b,\n\t  0x04,\n\t  0x7e,\n\t  0xba,\n\t  0x77,\n\t  0xd6,\n\t  0x26,\n\t  0xe1,\n\t  0x69,\n\t  0x14,\n\t  0x63,\n\t  0x55,\n\t  0x21,\n\t  0x0c,\n\t  0x7d\n\t ]);\n\t var mixCol = new Uint8Array(256);\n\t for (var i = 0; i < 256; i++) {\n\t  if (i < 128) {\n\t   mixCol[i] = i << 1;\n\t  } else {\n\t   mixCol[i] = i << 1 ^ 0x1b;\n\t  }\n\t }\n\t var mix = new Uint32Array([\n\t  0x00000000,\n\t  0x0e090d0b,\n\t  0x1c121a16,\n\t  0x121b171d,\n\t  0x3824342c,\n\t  0x362d3927,\n\t  0x24362e3a,\n\t  0x2a3f2331,\n\t  0x70486858,\n\t  0x7e416553,\n\t  0x6c5a724e,\n\t  0x62537f45,\n\t  0x486c5c74,\n\t  0x4665517f,\n\t  0x547e4662,\n\t  0x5a774b69,\n\t  0xe090d0b0,\n\t  0xee99ddbb,\n\t  0xfc82caa6,\n\t  0xf28bc7ad,\n\t  0xd8b4e49c,\n\t  0xd6bde997,\n\t  0xc4a6fe8a,\n\t  0xcaaff381,\n\t  0x90d8b8e8,\n\t  0x9ed1b5e3,\n\t  0x8ccaa2fe,\n\t  0x82c3aff5,\n\t  0xa8fc8cc4,\n\t  0xa6f581cf,\n\t  0xb4ee96d2,\n\t  0xbae79bd9,\n\t  0xdb3bbb7b,\n\t  0xd532b670,\n\t  0xc729a16d,\n\t  0xc920ac66,\n\t  0xe31f8f57,\n\t  0xed16825c,\n\t  0xff0d9541,\n\t  0xf104984a,\n\t  0xab73d323,\n\t  0xa57ade28,\n\t  0xb761c935,\n\t  0xb968c43e,\n\t  0x9357e70f,\n\t  0x9d5eea04,\n\t  0x8f45fd19,\n\t  0x814cf012,\n\t  0x3bab6bcb,\n\t  0x35a266c0,\n\t  0x27b971dd,\n\t  0x29b07cd6,\n\t  0x038f5fe7,\n\t  0x0d8652ec,\n\t  0x1f9d45f1,\n\t  0x119448fa,\n\t  0x4be30393,\n\t  0x45ea0e98,\n\t  0x57f11985,\n\t  0x59f8148e,\n\t  0x73c737bf,\n\t  0x7dce3ab4,\n\t  0x6fd52da9,\n\t  0x61dc20a2,\n\t  0xad766df6,\n\t  0xa37f60fd,\n\t  0xb16477e0,\n\t  0xbf6d7aeb,\n\t  0x955259da,\n\t  0x9b5b54d1,\n\t  0x894043cc,\n\t  0x87494ec7,\n\t  0xdd3e05ae,\n\t  0xd33708a5,\n\t  0xc12c1fb8,\n\t  0xcf2512b3,\n\t  0xe51a3182,\n\t  0xeb133c89,\n\t  0xf9082b94,\n\t  0xf701269f,\n\t  0x4de6bd46,\n\t  0x43efb04d,\n\t  0x51f4a750,\n\t  0x5ffdaa5b,\n\t  0x75c2896a,\n\t  0x7bcb8461,\n\t  0x69d0937c,\n\t  0x67d99e77,\n\t  0x3daed51e,\n\t  0x33a7d815,\n\t  0x21bccf08,\n\t  0x2fb5c203,\n\t  0x058ae132,\n\t  0x0b83ec39,\n\t  0x1998fb24,\n\t  0x1791f62f,\n\t  0x764dd68d,\n\t  0x7844db86,\n\t  0x6a5fcc9b,\n\t  0x6456c190,\n\t  0x4e69e2a1,\n\t  0x4060efaa,\n\t  0x527bf8b7,\n\t  0x5c72f5bc,\n\t  0x0605bed5,\n\t  0x080cb3de,\n\t  0x1a17a4c3,\n\t  0x141ea9c8,\n\t  0x3e218af9,\n\t  0x302887f2,\n\t  0x223390ef,\n\t  0x2c3a9de4,\n\t  0x96dd063d,\n\t  0x98d40b36,\n\t  0x8acf1c2b,\n\t  0x84c61120,\n\t  0xaef93211,\n\t  0xa0f03f1a,\n\t  0xb2eb2807,\n\t  0xbce2250c,\n\t  0xe6956e65,\n\t  0xe89c636e,\n\t  0xfa877473,\n\t  0xf48e7978,\n\t  0xdeb15a49,\n\t  0xd0b85742,\n\t  0xc2a3405f,\n\t  0xccaa4d54,\n\t  0x41ecdaf7,\n\t  0x4fe5d7fc,\n\t  0x5dfec0e1,\n\t  0x53f7cdea,\n\t  0x79c8eedb,\n\t  0x77c1e3d0,\n\t  0x65daf4cd,\n\t  0x6bd3f9c6,\n\t  0x31a4b2af,\n\t  0x3fadbfa4,\n\t  0x2db6a8b9,\n\t  0x23bfa5b2,\n\t  0x09808683,\n\t  0x07898b88,\n\t  0x15929c95,\n\t  0x1b9b919e,\n\t  0xa17c0a47,\n\t  0xaf75074c,\n\t  0xbd6e1051,\n\t  0xb3671d5a,\n\t  0x99583e6b,\n\t  0x97513360,\n\t  0x854a247d,\n\t  0x8b432976,\n\t  0xd134621f,\n\t  0xdf3d6f14,\n\t  0xcd267809,\n\t  0xc32f7502,\n\t  0xe9105633,\n\t  0xe7195b38,\n\t  0xf5024c25,\n\t  0xfb0b412e,\n\t  0x9ad7618c,\n\t  0x94de6c87,\n\t  0x86c57b9a,\n\t  0x88cc7691,\n\t  0xa2f355a0,\n\t  0xacfa58ab,\n\t  0xbee14fb6,\n\t  0xb0e842bd,\n\t  0xea9f09d4,\n\t  0xe49604df,\n\t  0xf68d13c2,\n\t  0xf8841ec9,\n\t  0xd2bb3df8,\n\t  0xdcb230f3,\n\t  0xcea927ee,\n\t  0xc0a02ae5,\n\t  0x7a47b13c,\n\t  0x744ebc37,\n\t  0x6655ab2a,\n\t  0x685ca621,\n\t  0x42638510,\n\t  0x4c6a881b,\n\t  0x5e719f06,\n\t  0x5078920d,\n\t  0x0a0fd964,\n\t  0x0406d46f,\n\t  0x161dc372,\n\t  0x1814ce79,\n\t  0x322bed48,\n\t  0x3c22e043,\n\t  0x2e39f75e,\n\t  0x2030fa55,\n\t  0xec9ab701,\n\t  0xe293ba0a,\n\t  0xf088ad17,\n\t  0xfe81a01c,\n\t  0xd4be832d,\n\t  0xdab78e26,\n\t  0xc8ac993b,\n\t  0xc6a59430,\n\t  0x9cd2df59,\n\t  0x92dbd252,\n\t  0x80c0c54f,\n\t  0x8ec9c844,\n\t  0xa4f6eb75,\n\t  0xaaffe67e,\n\t  0xb8e4f163,\n\t  0xb6edfc68,\n\t  0x0c0a67b1,\n\t  0x02036aba,\n\t  0x10187da7,\n\t  0x1e1170ac,\n\t  0x342e539d,\n\t  0x3a275e96,\n\t  0x283c498b,\n\t  0x26354480,\n\t  0x7c420fe9,\n\t  0x724b02e2,\n\t  0x605015ff,\n\t  0x6e5918f4,\n\t  0x44663bc5,\n\t  0x4a6f36ce,\n\t  0x587421d3,\n\t  0x567d2cd8,\n\t  0x37a10c7a,\n\t  0x39a80171,\n\t  0x2bb3166c,\n\t  0x25ba1b67,\n\t  0x0f853856,\n\t  0x018c355d,\n\t  0x13972240,\n\t  0x1d9e2f4b,\n\t  0x47e96422,\n\t  0x49e06929,\n\t  0x5bfb7e34,\n\t  0x55f2733f,\n\t  0x7fcd500e,\n\t  0x71c45d05,\n\t  0x63df4a18,\n\t  0x6dd64713,\n\t  0xd731dcca,\n\t  0xd938d1c1,\n\t  0xcb23c6dc,\n\t  0xc52acbd7,\n\t  0xef15e8e6,\n\t  0xe11ce5ed,\n\t  0xf307f2f0,\n\t  0xfd0efffb,\n\t  0xa779b492,\n\t  0xa970b999,\n\t  0xbb6bae84,\n\t  0xb562a38f,\n\t  0x9f5d80be,\n\t  0x91548db5,\n\t  0x834f9aa8,\n\t  0x8d4697a3\n\t ]);\n\t function expandKey256(cipherKey) {\n\t  var b = 240, result = new Uint8Array(b);\n\t  var r = 1;\n\t  result.set(cipherKey);\n\t  for (var j = 32, i = 1; j < b; ++i) {\n\t   if (j % 32 === 16) {\n\t    t1 = s[t1];\n\t    t2 = s[t2];\n\t    t3 = s[t3];\n\t    t4 = s[t4];\n\t   } else if (j % 32 === 0) {\n\t    var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n\t    t1 = s[t1];\n\t    t2 = s[t2];\n\t    t3 = s[t3];\n\t    t4 = s[t4];\n\t    t1 = t1 ^ r;\n\t    if ((r <<= 1) >= 256) {\n\t     r = (r ^ 0x1b) & 0xFF;\n\t    }\n\t   }\n\t   for (var n = 0; n < 4; ++n) {\n\t    result[j] = t1 ^= result[j - 32];\n\t    j++;\n\t    result[j] = t2 ^= result[j - 32];\n\t    j++;\n\t    result[j] = t3 ^= result[j - 32];\n\t    j++;\n\t    result[j] = t4 ^= result[j - 32];\n\t    j++;\n\t   }\n\t  }\n\t  return result;\n\t }\n\t function decrypt256(input, key) {\n\t  var state = new Uint8Array(16);\n\t  state.set(input);\n\t  var i, j, k;\n\t  var t, u, v;\n\t  for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t   state[j] ^= key[k];\n\t  }\n\t  for (i = 13; i >= 1; --i) {\n\t   t = state[13];\n\t   state[13] = state[9];\n\t   state[9] = state[5];\n\t   state[5] = state[1];\n\t   state[1] = t;\n\t   t = state[14];\n\t   u = state[10];\n\t   state[14] = state[6];\n\t   state[10] = state[2];\n\t   state[6] = t;\n\t   state[2] = u;\n\t   t = state[15];\n\t   u = state[11];\n\t   v = state[7];\n\t   state[15] = state[3];\n\t   state[11] = t;\n\t   state[7] = u;\n\t   state[3] = v;\n\t   for (j = 0; j < 16; ++j) {\n\t    state[j] = inv_s[state[j]];\n\t   }\n\t   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t    state[j] ^= key[k];\n\t   }\n\t   for (j = 0; j < 16; j += 4) {\n\t    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n\t    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t    state[j] = t >>> 24 & 0xFF;\n\t    state[j + 1] = t >> 16 & 0xFF;\n\t    state[j + 2] = t >> 8 & 0xFF;\n\t    state[j + 3] = t & 0xFF;\n\t   }\n\t  }\n\t  t = state[13];\n\t  state[13] = state[9];\n\t  state[9] = state[5];\n\t  state[5] = state[1];\n\t  state[1] = t;\n\t  t = state[14];\n\t  u = state[10];\n\t  state[14] = state[6];\n\t  state[10] = state[2];\n\t  state[6] = t;\n\t  state[2] = u;\n\t  t = state[15];\n\t  u = state[11];\n\t  v = state[7];\n\t  state[15] = state[3];\n\t  state[11] = t;\n\t  state[7] = u;\n\t  state[3] = v;\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] = inv_s[state[j]];\n\t   state[j] ^= key[j];\n\t  }\n\t  return state;\n\t }\n\t function encrypt256(input, key) {\n\t  var t, u, v, k;\n\t  var state = new Uint8Array(16);\n\t  state.set(input);\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] ^= key[j];\n\t  }\n\t  for (i = 1; i < 14; i++) {\n\t   for (j = 0; j < 16; ++j) {\n\t    state[j] = s[state[j]];\n\t   }\n\t   v = state[1];\n\t   state[1] = state[5];\n\t   state[5] = state[9];\n\t   state[9] = state[13];\n\t   state[13] = v;\n\t   v = state[2];\n\t   u = state[6];\n\t   state[2] = state[10];\n\t   state[6] = state[14];\n\t   state[10] = v;\n\t   state[14] = u;\n\t   v = state[3];\n\t   u = state[7];\n\t   t = state[11];\n\t   state[3] = state[15];\n\t   state[7] = v;\n\t   state[11] = u;\n\t   state[15] = t;\n\t   for (var j = 0; j < 16; j += 4) {\n\t    var s0 = state[j + 0], s1 = state[j + 1];\n\t    var s2 = state[j + 2], s3 = state[j + 3];\n\t    t = s0 ^ s1 ^ s2 ^ s3;\n\t    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t   }\n\t   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t    state[j] ^= key[k];\n\t   }\n\t  }\n\t  for (j = 0; j < 16; ++j) {\n\t   state[j] = s[state[j]];\n\t  }\n\t  v = state[1];\n\t  state[1] = state[5];\n\t  state[5] = state[9];\n\t  state[9] = state[13];\n\t  state[13] = v;\n\t  v = state[2];\n\t  u = state[6];\n\t  state[2] = state[10];\n\t  state[6] = state[14];\n\t  state[10] = v;\n\t  state[14] = u;\n\t  v = state[3];\n\t  u = state[7];\n\t  t = state[11];\n\t  state[3] = state[15];\n\t  state[7] = v;\n\t  state[11] = u;\n\t  state[15] = t;\n\t  for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t   state[j] ^= key[k];\n\t  }\n\t  return state;\n\t }\n\t function AES256Cipher(key) {\n\t  this.key = expandKey256(key);\n\t  this.buffer = new Uint8Array(16);\n\t  this.bufferPosition = 0;\n\t }\n\t function decryptBlock2(data, finalize) {\n\t  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n\t  for (i = 0; i < sourceLength; ++i) {\n\t   buffer[bufferLength] = data[i];\n\t   ++bufferLength;\n\t   if (bufferLength < 16) {\n\t    continue;\n\t   }\n\t   var plain = decrypt256(buffer, this.key);\n\t   for (j = 0; j < 16; ++j) {\n\t    plain[j] ^= iv[j];\n\t   }\n\t   iv = buffer;\n\t   result.push(plain);\n\t   buffer = new Uint8Array(16);\n\t   bufferLength = 0;\n\t  }\n\t  this.buffer = buffer;\n\t  this.bufferLength = bufferLength;\n\t  this.iv = iv;\n\t  if (result.length === 0) {\n\t   return new Uint8Array([]);\n\t  }\n\t  var outputLength = 16 * result.length;\n\t  if (finalize) {\n\t   var lastBlock = result[result.length - 1];\n\t   var psLen = lastBlock[15];\n\t   if (psLen <= 16) {\n\t    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t     if (lastBlock[i] !== psLen) {\n\t      psLen = 0;\n\t      break;\n\t     }\n\t    }\n\t    outputLength -= psLen;\n\t    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t   }\n\t  }\n\t  var output = new Uint8Array(outputLength);\n\t  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t   output.set(result[i], j);\n\t  }\n\t  return output;\n\t }\n\t AES256Cipher.prototype = {\n\t  decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n\t   var i, sourceLength = data.length;\n\t   var buffer = this.buffer, bufferLength = this.bufferPosition;\n\t   if (iv) {\n\t    this.iv = iv;\n\t   } else {\n\t    for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t     buffer[bufferLength] = data[i];\n\t    }\n\t    if (bufferLength < 16) {\n\t     this.bufferLength = bufferLength;\n\t     return new Uint8Array([]);\n\t    }\n\t    this.iv = buffer;\n\t    data = data.subarray(16);\n\t   }\n\t   this.buffer = new Uint8Array(16);\n\t   this.bufferLength = 0;\n\t   this.decryptBlock = decryptBlock2;\n\t   return this.decryptBlock(data, finalize);\n\t  },\n\t  encrypt: function AES256Cipher_encrypt(data, iv) {\n\t   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n\t   if (!iv) {\n\t    iv = new Uint8Array(16);\n\t   }\n\t   for (i = 0; i < sourceLength; ++i) {\n\t    buffer[bufferLength] = data[i];\n\t    ++bufferLength;\n\t    if (bufferLength < 16) {\n\t     continue;\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t     buffer[j] ^= iv[j];\n\t    }\n\t    var cipher = encrypt256(buffer, this.key);\n\t    this.iv = cipher;\n\t    result.push(cipher);\n\t    buffer = new Uint8Array(16);\n\t    bufferLength = 0;\n\t   }\n\t   this.buffer = buffer;\n\t   this.bufferLength = bufferLength;\n\t   this.iv = iv;\n\t   if (result.length === 0) {\n\t    return new Uint8Array([]);\n\t   }\n\t   var outputLength = 16 * result.length;\n\t   var output = new Uint8Array(outputLength);\n\t   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t    output.set(result[i], j);\n\t   }\n\t   return output;\n\t  }\n\t };\n\t return AES256Cipher;\n\t}();\n\tvar PDF17 = function PDF17Closure() {\n\t function compareByteArrays(array1, array2) {\n\t  if (array1.length !== array2.length) {\n\t   return false;\n\t  }\n\t  for (var i = 0; i < array1.length; i++) {\n\t   if (array1[i] !== array2[i]) {\n\t    return false;\n\t   }\n\t  }\n\t  return true;\n\t }\n\t function PDF17() {\n\t }\n\t PDF17.prototype = {\n\t  checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t   var hashData = new Uint8Array(password.length + 56);\n\t   hashData.set(password, 0);\n\t   hashData.set(ownerValidationSalt, password.length);\n\t   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t   var result = calculateSHA256(hashData, 0, hashData.length);\n\t   return compareByteArrays(result, ownerPassword);\n\t  },\n\t  checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n\t   var hashData = new Uint8Array(password.length + 8);\n\t   hashData.set(password, 0);\n\t   hashData.set(userValidationSalt, password.length);\n\t   var result = calculateSHA256(hashData, 0, hashData.length);\n\t   return compareByteArrays(result, userPassword);\n\t  },\n\t  getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t   var hashData = new Uint8Array(password.length + 56);\n\t   hashData.set(password, 0);\n\t   hashData.set(ownerKeySalt, password.length);\n\t   hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t   var key = calculateSHA256(hashData, 0, hashData.length);\n\t   var cipher = new AES256Cipher(key);\n\t   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t  },\n\t  getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n\t   var hashData = new Uint8Array(password.length + 8);\n\t   hashData.set(password, 0);\n\t   hashData.set(userKeySalt, password.length);\n\t   var key = calculateSHA256(hashData, 0, hashData.length);\n\t   var cipher = new AES256Cipher(key);\n\t   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t  }\n\t };\n\t return PDF17;\n\t}();\n\tvar PDF20 = function PDF20Closure() {\n\t function concatArrays(array1, array2) {\n\t  var t = new Uint8Array(array1.length + array2.length);\n\t  t.set(array1, 0);\n\t  t.set(array2, array1.length);\n\t  return t;\n\t }\n\t function calculatePDF20Hash(password, input, userBytes) {\n\t  var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n\t  var e = [0];\n\t  var i = 0;\n\t  while (i < 64 || e[e.length - 1] > i - 32) {\n\t   var arrayLength = password.length + k.length + userBytes.length;\n\t   var k1 = new Uint8Array(arrayLength * 64);\n\t   var array = concatArrays(password, k);\n\t   array = concatArrays(array, userBytes);\n\t   for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n\t    k1.set(array, pos);\n\t   }\n\t   var cipher = new AES128Cipher(k.subarray(0, 16));\n\t   e = cipher.encrypt(k1, k.subarray(16, 32));\n\t   var remainder = 0;\n\t   for (var z = 0; z < 16; z++) {\n\t    remainder *= 256 % 3;\n\t    remainder %= 3;\n\t    remainder += (e[z] >>> 0) % 3;\n\t    remainder %= 3;\n\t   }\n\t   if (remainder === 0) {\n\t    k = calculateSHA256(e, 0, e.length);\n\t   } else if (remainder === 1) {\n\t    k = calculateSHA384(e, 0, e.length);\n\t   } else if (remainder === 2) {\n\t    k = calculateSHA512(e, 0, e.length);\n\t   }\n\t   i++;\n\t  }\n\t  return k.subarray(0, 32);\n\t }\n\t function PDF20() {\n\t }\n\t function compareByteArrays(array1, array2) {\n\t  if (array1.length !== array2.length) {\n\t   return false;\n\t  }\n\t  for (var i = 0; i < array1.length; i++) {\n\t   if (array1[i] !== array2[i]) {\n\t    return false;\n\t   }\n\t  }\n\t  return true;\n\t }\n\t PDF20.prototype = {\n\t  hash: function PDF20_hash(password, concatBytes, userBytes) {\n\t   return calculatePDF20Hash(password, concatBytes, userBytes);\n\t  },\n\t  checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t   var hashData = new Uint8Array(password.length + 56);\n\t   hashData.set(password, 0);\n\t   hashData.set(ownerValidationSalt, password.length);\n\t   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t   var result = calculatePDF20Hash(password, hashData, userBytes);\n\t   return compareByteArrays(result, ownerPassword);\n\t  },\n\t  checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n\t   var hashData = new Uint8Array(password.length + 8);\n\t   hashData.set(password, 0);\n\t   hashData.set(userValidationSalt, password.length);\n\t   var result = calculatePDF20Hash(password, hashData, []);\n\t   return compareByteArrays(result, userPassword);\n\t  },\n\t  getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t   var hashData = new Uint8Array(password.length + 56);\n\t   hashData.set(password, 0);\n\t   hashData.set(ownerKeySalt, password.length);\n\t   hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t   var key = calculatePDF20Hash(password, hashData, userBytes);\n\t   var cipher = new AES256Cipher(key);\n\t   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t  },\n\t  getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n\t   var hashData = new Uint8Array(password.length + 8);\n\t   hashData.set(password, 0);\n\t   hashData.set(userKeySalt, password.length);\n\t   var key = calculatePDF20Hash(password, hashData, []);\n\t   var cipher = new AES256Cipher(key);\n\t   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t  }\n\t };\n\t return PDF20;\n\t}();\n\tvar CipherTransform = function CipherTransformClosure() {\n\t function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n\t  this.StringCipherConstructor = stringCipherConstructor;\n\t  this.StreamCipherConstructor = streamCipherConstructor;\n\t }\n\t CipherTransform.prototype = {\n\t  createStream: function CipherTransform_createStream(stream, length) {\n\t   var cipher = new this.StreamCipherConstructor();\n\t   return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n\t    return cipher.decryptBlock(data, finalize);\n\t   });\n\t  },\n\t  decryptString: function CipherTransform_decryptString(s) {\n\t   var cipher = new this.StringCipherConstructor();\n\t   var data = stringToBytes(s);\n\t   data = cipher.decryptBlock(data, true);\n\t   return bytesToString(data);\n\t  }\n\t };\n\t return CipherTransform;\n\t}();\n\tvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n\t var defaultPasswordBytes = new Uint8Array([\n\t  0x28,\n\t  0xBF,\n\t  0x4E,\n\t  0x5E,\n\t  0x4E,\n\t  0x75,\n\t  0x8A,\n\t  0x41,\n\t  0x64,\n\t  0x00,\n\t  0x4E,\n\t  0x56,\n\t  0xFF,\n\t  0xFA,\n\t  0x01,\n\t  0x08,\n\t  0x2E,\n\t  0x2E,\n\t  0x00,\n\t  0xB6,\n\t  0xD0,\n\t  0x68,\n\t  0x3E,\n\t  0x80,\n\t  0x2F,\n\t  0x0C,\n\t  0xA9,\n\t  0xFE,\n\t  0x64,\n\t  0x53,\n\t  0x69,\n\t  0x7A\n\t ]);\n\t function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n\t  if (password) {\n\t   var passwordLength = Math.min(127, password.length);\n\t   password = password.subarray(0, passwordLength);\n\t  } else {\n\t   password = [];\n\t  }\n\t  var pdfAlgorithm;\n\t  if (revision === 6) {\n\t   pdfAlgorithm = new PDF20();\n\t  } else {\n\t   pdfAlgorithm = new PDF17();\n\t  }\n\t  if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n\t   return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n\t  } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n\t   return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n\t  }\n\t  return null;\n\t }\n\t function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n\t  var hashDataSize = 40 + ownerPassword.length + fileId.length;\n\t  var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n\t  if (password) {\n\t   n = Math.min(32, password.length);\n\t   for (; i < n; ++i) {\n\t    hashData[i] = password[i];\n\t   }\n\t  }\n\t  j = 0;\n\t  while (i < 32) {\n\t   hashData[i++] = defaultPasswordBytes[j++];\n\t  }\n\t  for (j = 0, n = ownerPassword.length; j < n; ++j) {\n\t   hashData[i++] = ownerPassword[j];\n\t  }\n\t  hashData[i++] = flags & 0xFF;\n\t  hashData[i++] = flags >> 8 & 0xFF;\n\t  hashData[i++] = flags >> 16 & 0xFF;\n\t  hashData[i++] = flags >>> 24 & 0xFF;\n\t  for (j = 0, n = fileId.length; j < n; ++j) {\n\t   hashData[i++] = fileId[j];\n\t  }\n\t  if (revision >= 4 && !encryptMetadata) {\n\t   hashData[i++] = 0xFF;\n\t   hashData[i++] = 0xFF;\n\t   hashData[i++] = 0xFF;\n\t   hashData[i++] = 0xFF;\n\t  }\n\t  var hash = calculateMD5(hashData, 0, i);\n\t  var keyLengthInBytes = keyLength >> 3;\n\t  if (revision >= 3) {\n\t   for (j = 0; j < 50; ++j) {\n\t    hash = calculateMD5(hash, 0, keyLengthInBytes);\n\t   }\n\t  }\n\t  var encryptionKey = hash.subarray(0, keyLengthInBytes);\n\t  var cipher, checkData;\n\t  if (revision >= 3) {\n\t   for (i = 0; i < 32; ++i) {\n\t    hashData[i] = defaultPasswordBytes[i];\n\t   }\n\t   for (j = 0, n = fileId.length; j < n; ++j) {\n\t    hashData[i++] = fileId[j];\n\t   }\n\t   cipher = new ARCFourCipher(encryptionKey);\n\t   checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n\t   n = encryptionKey.length;\n\t   var derivedKey = new Uint8Array(n), k;\n\t   for (j = 1; j <= 19; ++j) {\n\t    for (k = 0; k < n; ++k) {\n\t     derivedKey[k] = encryptionKey[k] ^ j;\n\t    }\n\t    cipher = new ARCFourCipher(derivedKey);\n\t    checkData = cipher.encryptBlock(checkData);\n\t   }\n\t   for (j = 0, n = checkData.length; j < n; ++j) {\n\t    if (userPassword[j] !== checkData[j]) {\n\t     return null;\n\t    }\n\t   }\n\t  } else {\n\t   cipher = new ARCFourCipher(encryptionKey);\n\t   checkData = cipher.encryptBlock(defaultPasswordBytes);\n\t   for (j = 0, n = checkData.length; j < n; ++j) {\n\t    if (userPassword[j] !== checkData[j]) {\n\t     return null;\n\t    }\n\t   }\n\t  }\n\t  return encryptionKey;\n\t }\n\t function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n\t  var hashData = new Uint8Array(32), i = 0, j, n;\n\t  n = Math.min(32, password.length);\n\t  for (; i < n; ++i) {\n\t   hashData[i] = password[i];\n\t  }\n\t  j = 0;\n\t  while (i < 32) {\n\t   hashData[i++] = defaultPasswordBytes[j++];\n\t  }\n\t  var hash = calculateMD5(hashData, 0, i);\n\t  var keyLengthInBytes = keyLength >> 3;\n\t  if (revision >= 3) {\n\t   for (j = 0; j < 50; ++j) {\n\t    hash = calculateMD5(hash, 0, hash.length);\n\t   }\n\t  }\n\t  var cipher, userPassword;\n\t  if (revision >= 3) {\n\t   userPassword = ownerPassword;\n\t   var derivedKey = new Uint8Array(keyLengthInBytes), k;\n\t   for (j = 19; j >= 0; j--) {\n\t    for (k = 0; k < keyLengthInBytes; ++k) {\n\t     derivedKey[k] = hash[k] ^ j;\n\t    }\n\t    cipher = new ARCFourCipher(derivedKey);\n\t    userPassword = cipher.encryptBlock(userPassword);\n\t   }\n\t  } else {\n\t   cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n\t   userPassword = cipher.encryptBlock(ownerPassword);\n\t  }\n\t  return userPassword;\n\t }\n\t var identityName = Name.get('Identity');\n\t function CipherTransformFactory(dict, fileId, password) {\n\t  var filter = dict.get('Filter');\n\t  if (!isName(filter, 'Standard')) {\n\t   error('unknown encryption method');\n\t  }\n\t  this.dict = dict;\n\t  var algorithm = dict.get('V');\n\t  if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n\t   error('unsupported encryption algorithm');\n\t  }\n\t  this.algorithm = algorithm;\n\t  var keyLength = dict.get('Length');\n\t  if (!keyLength) {\n\t   if (algorithm <= 3) {\n\t    keyLength = 40;\n\t   } else {\n\t    var cfDict = dict.get('CF');\n\t    var streamCryptoName = dict.get('StmF');\n\t    if (isDict(cfDict) && isName(streamCryptoName)) {\n\t     cfDict.suppressEncryption = true;\n\t     var handlerDict = cfDict.get(streamCryptoName.name);\n\t     keyLength = handlerDict && handlerDict.get('Length') || 128;\n\t     if (keyLength < 40) {\n\t      keyLength <<= 3;\n\t     }\n\t    }\n\t   }\n\t  }\n\t  if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n\t   error('invalid key length');\n\t  }\n\t  var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n\t  var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n\t  var flags = dict.get('P');\n\t  var revision = dict.get('R');\n\t  var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n\t  this.encryptMetadata = encryptMetadata;\n\t  var fileIdBytes = stringToBytes(fileId);\n\t  var passwordBytes;\n\t  if (password) {\n\t   if (revision === 6) {\n\t    try {\n\t     password = utf8StringToString(password);\n\t    } catch (ex) {\n\t     warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n\t    }\n\t   }\n\t   passwordBytes = stringToBytes(password);\n\t  }\n\t  var encryptionKey;\n\t  if (algorithm !== 5) {\n\t   encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t  } else {\n\t   var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n\t   var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n\t   var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n\t   var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n\t   var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n\t   var ownerEncryption = stringToBytes(dict.get('OE'));\n\t   var userEncryption = stringToBytes(dict.get('UE'));\n\t   var perms = stringToBytes(dict.get('Perms'));\n\t   encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n\t  }\n\t  if (!encryptionKey && !password) {\n\t   throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n\t  } else if (!encryptionKey && password) {\n\t   var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n\t   encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t  }\n\t  if (!encryptionKey) {\n\t   throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n\t  }\n\t  this.encryptionKey = encryptionKey;\n\t  if (algorithm >= 4) {\n\t   var cf = dict.get('CF');\n\t   if (isDict(cf)) {\n\t    cf.suppressEncryption = true;\n\t   }\n\t   this.cf = cf;\n\t   this.stmf = dict.get('StmF') || identityName;\n\t   this.strf = dict.get('StrF') || identityName;\n\t   this.eff = dict.get('EFF') || this.stmf;\n\t  }\n\t }\n\t function buildObjectKey(num, gen, encryptionKey, isAes) {\n\t  var key = new Uint8Array(encryptionKey.length + 9), i, n;\n\t  for (i = 0, n = encryptionKey.length; i < n; ++i) {\n\t   key[i] = encryptionKey[i];\n\t  }\n\t  key[i++] = num & 0xFF;\n\t  key[i++] = num >> 8 & 0xFF;\n\t  key[i++] = num >> 16 & 0xFF;\n\t  key[i++] = gen & 0xFF;\n\t  key[i++] = gen >> 8 & 0xFF;\n\t  if (isAes) {\n\t   key[i++] = 0x73;\n\t   key[i++] = 0x41;\n\t   key[i++] = 0x6C;\n\t   key[i++] = 0x54;\n\t  }\n\t  var hash = calculateMD5(key, 0, i);\n\t  return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n\t }\n\t function buildCipherConstructor(cf, name, num, gen, key) {\n\t  assert(isName(name), 'Invalid crypt filter name.');\n\t  var cryptFilter = cf.get(name.name);\n\t  var cfm;\n\t  if (cryptFilter !== null && cryptFilter !== undefined) {\n\t   cfm = cryptFilter.get('CFM');\n\t  }\n\t  if (!cfm || cfm.name === 'None') {\n\t   return function cipherTransformFactoryBuildCipherConstructorNone() {\n\t    return new NullCipher();\n\t   };\n\t  }\n\t  if (cfm.name === 'V2') {\n\t   return function cipherTransformFactoryBuildCipherConstructorV2() {\n\t    return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n\t   };\n\t  }\n\t  if (cfm.name === 'AESV2') {\n\t   return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n\t    return new AES128Cipher(buildObjectKey(num, gen, key, true));\n\t   };\n\t  }\n\t  if (cfm.name === 'AESV3') {\n\t   return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n\t    return new AES256Cipher(key);\n\t   };\n\t  }\n\t  error('Unknown crypto method');\n\t }\n\t CipherTransformFactory.prototype = {\n\t  createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n\t   if (this.algorithm === 4 || this.algorithm === 5) {\n\t    return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n\t   }\n\t   var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\t   var cipherConstructor = function buildCipherCipherConstructor() {\n\t    return new ARCFourCipher(key);\n\t   };\n\t   return new CipherTransform(cipherConstructor, cipherConstructor);\n\t  }\n\t };\n\t return CipherTransformFactory;\n\t}();\n\texports.AES128Cipher = AES128Cipher;\n\texports.AES256Cipher = AES256Cipher;\n\texports.ARCFourCipher = ARCFourCipher;\n\texports.CipherTransformFactory = CipherTransformFactory;\n\texports.PDF17 = PDF17;\n\texports.PDF20 = PDF20;\n\texports.calculateMD5 = calculateMD5;\n\texports.calculateSHA256 = calculateSHA256;\n\texports.calculateSHA384 = calculateSHA384;\n\texports.calculateSHA512 = calculateSHA512;\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreParser = __w_pdfjs_require__(5);\n\tvar coreImage = __w_pdfjs_require__(27);\n\tvar coreColorSpace = __w_pdfjs_require__(3);\n\tvar coreMurmurHash3 = __w_pdfjs_require__(31);\n\tvar coreFonts = __w_pdfjs_require__(26);\n\tvar coreFunction = __w_pdfjs_require__(6);\n\tvar corePattern = __w_pdfjs_require__(32);\n\tvar coreCMap = __w_pdfjs_require__(23);\n\tvar coreMetrics = __w_pdfjs_require__(30);\n\tvar coreBidi = __w_pdfjs_require__(21);\n\tvar coreEncodings = __w_pdfjs_require__(4);\n\tvar coreStandardFonts = __w_pdfjs_require__(16);\n\tvar coreUnicode = __w_pdfjs_require__(17);\n\tvar coreGlyphList = __w_pdfjs_require__(7);\n\tvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n\tvar IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\n\tvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\tvar ImageKind = sharedUtil.ImageKind;\n\tvar OPS = sharedUtil.OPS;\n\tvar TextRenderingMode = sharedUtil.TextRenderingMode;\n\tvar CMapCompressionType = sharedUtil.CMapCompressionType;\n\tvar Util = sharedUtil.Util;\n\tvar assert = sharedUtil.assert;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isNum = sharedUtil.isNum;\n\tvar isString = sharedUtil.isString;\n\tvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\tvar warn = sharedUtil.warn;\n\tvar Dict = corePrimitives.Dict;\n\tvar Name = corePrimitives.Name;\n\tvar isEOF = corePrimitives.isEOF;\n\tvar isCmd = corePrimitives.isCmd;\n\tvar isDict = corePrimitives.isDict;\n\tvar isName = corePrimitives.isName;\n\tvar isRef = corePrimitives.isRef;\n\tvar isStream = corePrimitives.isStream;\n\tvar DecodeStream = coreStream.DecodeStream;\n\tvar JpegStream = coreStream.JpegStream;\n\tvar Stream = coreStream.Stream;\n\tvar Lexer = coreParser.Lexer;\n\tvar Parser = coreParser.Parser;\n\tvar PDFImage = coreImage.PDFImage;\n\tvar ColorSpace = coreColorSpace.ColorSpace;\n\tvar MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\n\tvar ErrorFont = coreFonts.ErrorFont;\n\tvar FontFlags = coreFonts.FontFlags;\n\tvar Font = coreFonts.Font;\n\tvar IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\n\tvar ToUnicodeMap = coreFonts.ToUnicodeMap;\n\tvar getFontType = coreFonts.getFontType;\n\tvar isPDFFunction = coreFunction.isPDFFunction;\n\tvar PDFFunction = coreFunction.PDFFunction;\n\tvar Pattern = corePattern.Pattern;\n\tvar getTilingPatternIR = corePattern.getTilingPatternIR;\n\tvar CMapFactory = coreCMap.CMapFactory;\n\tvar IdentityCMap = coreCMap.IdentityCMap;\n\tvar getMetrics = coreMetrics.getMetrics;\n\tvar bidi = coreBidi.bidi;\n\tvar WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\n\tvar StandardEncoding = coreEncodings.StandardEncoding;\n\tvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\n\tvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n\tvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n\tvar getEncoding = coreEncodings.getEncoding;\n\tvar getStdFontMap = coreStandardFonts.getStdFontMap;\n\tvar getSerifFonts = coreStandardFonts.getSerifFonts;\n\tvar getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\n\tvar getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\n\tvar reverseIfRtl = coreUnicode.reverseIfRtl;\n\tvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n\tvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\tvar PartialEvaluator = function PartialEvaluatorClosure() {\n\t var DefaultPartialEvaluatorOptions = {\n\t  forceDataSchema: false,\n\t  maxImageSize: -1,\n\t  disableFontFace: false,\n\t  disableNativeImageDecoder: false\n\t };\n\t function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n\t  this.xref = xref;\n\t  this.resources = resources;\n\t  this.handler = handler;\n\t  this.forceDataSchema = forceDataSchema;\n\t }\n\t NativeImageDecoder.prototype = {\n\t  canDecode: function (image) {\n\t   return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n\t  },\n\t  decode: function (image) {\n\t   var dict = image.dict;\n\t   var colorSpace = dict.get('ColorSpace', 'CS');\n\t   colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n\t   var numComps = colorSpace.numComps;\n\t   var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n\t    image.getIR(this.forceDataSchema),\n\t    numComps\n\t   ]);\n\t   return decodePromise.then(function (message) {\n\t    var data = message.data;\n\t    return new Stream(data, 0, data.length, image.dict);\n\t   });\n\t  }\n\t };\n\t NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n\t  var dict = image.dict;\n\t  if (dict.has('DecodeParms') || dict.has('DP')) {\n\t   return false;\n\t  }\n\t  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n\t  return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t };\n\t NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n\t  var dict = image.dict;\n\t  if (dict.has('DecodeParms') || dict.has('DP')) {\n\t   return false;\n\t  }\n\t  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n\t  return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t };\n\t function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, builtInCMapCache, options) {\n\t  this.pdfManager = pdfManager;\n\t  this.xref = xref;\n\t  this.handler = handler;\n\t  this.pageIndex = pageIndex;\n\t  this.idFactory = idFactory;\n\t  this.fontCache = fontCache;\n\t  this.builtInCMapCache = builtInCMapCache;\n\t  this.options = options || DefaultPartialEvaluatorOptions;\n\t  this.fetchBuiltInCMap = function (name) {\n\t   var cachedCMap = builtInCMapCache[name];\n\t   if (cachedCMap) {\n\t    return Promise.resolve(cachedCMap);\n\t   }\n\t   return handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n\t    if (data.compressionType !== CMapCompressionType.NONE) {\n\t     builtInCMapCache[name] = data;\n\t    }\n\t    return data;\n\t   });\n\t  };\n\t }\n\t var TIME_SLOT_DURATION_MS = 20;\n\t var CHECK_TIME_EVERY = 100;\n\t function TimeSlotManager() {\n\t  this.reset();\n\t }\n\t TimeSlotManager.prototype = {\n\t  check: function TimeSlotManager_check() {\n\t   if (++this.checked < CHECK_TIME_EVERY) {\n\t    return false;\n\t   }\n\t   this.checked = 0;\n\t   return this.endTime <= Date.now();\n\t  },\n\t  reset: function TimeSlotManager_reset() {\n\t   this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n\t   this.checked = 0;\n\t  }\n\t };\n\t var deferred = Promise.resolve();\n\t var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n\t PartialEvaluator.prototype = {\n\t  hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n\t   if (!isDict(resources)) {\n\t    return false;\n\t   }\n\t   var processed = Object.create(null);\n\t   if (resources.objId) {\n\t    processed[resources.objId] = true;\n\t   }\n\t   var nodes = [resources], xref = this.xref;\n\t   while (nodes.length) {\n\t    var key, i, ii;\n\t    var node = nodes.shift();\n\t    var graphicStates = node.get('ExtGState');\n\t    if (isDict(graphicStates)) {\n\t     var graphicStatesKeys = graphicStates.getKeys();\n\t     for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n\t      key = graphicStatesKeys[i];\n\t      var graphicState = graphicStates.get(key);\n\t      var bm = graphicState.get('BM');\n\t      if (isName(bm) && bm.name !== 'Normal') {\n\t       return true;\n\t      }\n\t     }\n\t    }\n\t    var xObjects = node.get('XObject');\n\t    if (!isDict(xObjects)) {\n\t     continue;\n\t    }\n\t    var xObjectsKeys = xObjects.getKeys();\n\t    for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n\t     key = xObjectsKeys[i];\n\t     var xObject = xObjects.getRaw(key);\n\t     if (isRef(xObject)) {\n\t      if (processed[xObject.toString()]) {\n\t       continue;\n\t      }\n\t      xObject = xref.fetch(xObject);\n\t     }\n\t     if (!isStream(xObject)) {\n\t      continue;\n\t     }\n\t     if (xObject.dict.objId) {\n\t      if (processed[xObject.dict.objId]) {\n\t       continue;\n\t      }\n\t      processed[xObject.dict.objId] = true;\n\t     }\n\t     var xResources = xObject.dict.get('Resources');\n\t     if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n\t      nodes.push(xResources);\n\t      if (xResources.objId) {\n\t       processed[xResources.objId] = true;\n\t      }\n\t     }\n\t    }\n\t   }\n\t   return false;\n\t  },\n\t  buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n\t   var matrix = xobj.dict.getArray('Matrix');\n\t   var bbox = xobj.dict.getArray('BBox');\n\t   var group = xobj.dict.get('Group');\n\t   if (group) {\n\t    var groupOptions = {\n\t     matrix: matrix,\n\t     bbox: bbox,\n\t     smask: smask,\n\t     isolated: false,\n\t     knockout: false\n\t    };\n\t    var groupSubtype = group.get('S');\n\t    var colorSpace;\n\t    if (isName(groupSubtype, 'Transparency')) {\n\t     groupOptions.isolated = group.get('I') || false;\n\t     groupOptions.knockout = group.get('K') || false;\n\t     colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n\t    }\n\t    if (smask && smask.backdrop) {\n\t     colorSpace = colorSpace || ColorSpace.singletons.rgb;\n\t     smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n\t    }\n\t    operatorList.addOp(OPS.beginGroup, [groupOptions]);\n\t   }\n\t   operatorList.addOp(OPS.paintFormXObjectBegin, [\n\t    matrix,\n\t    bbox\n\t   ]);\n\t   return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n\t    operatorList.addOp(OPS.paintFormXObjectEnd, []);\n\t    if (group) {\n\t     operatorList.addOp(OPS.endGroup, [groupOptions]);\n\t    }\n\t   });\n\t  },\n\t  buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n\t   var self = this;\n\t   var dict = image.dict;\n\t   var w = dict.get('Width', 'W');\n\t   var h = dict.get('Height', 'H');\n\t   if (!(w && isNum(w)) || !(h && isNum(h))) {\n\t    warn('Image dimensions are missing, or not numbers.');\n\t    return;\n\t   }\n\t   var maxImageSize = this.options.maxImageSize;\n\t   if (maxImageSize !== -1 && w * h > maxImageSize) {\n\t    warn('Image exceeded maximum allowed size and was removed.');\n\t    return;\n\t   }\n\t   var imageMask = dict.get('ImageMask', 'IM') || false;\n\t   var imgData, args;\n\t   if (imageMask) {\n\t    var width = dict.get('Width', 'W');\n\t    var height = dict.get('Height', 'H');\n\t    var bitStrideLength = width + 7 >> 3;\n\t    var imgArray = image.getBytes(bitStrideLength * height);\n\t    var decode = dict.getArray('Decode', 'D');\n\t    var inverseDecode = !!decode && decode[0] > 0;\n\t    imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n\t    imgData.cached = true;\n\t    args = [imgData];\n\t    operatorList.addOp(OPS.paintImageMaskXObject, args);\n\t    if (cacheKey) {\n\t     imageCache[cacheKey] = {\n\t      fn: OPS.paintImageMaskXObject,\n\t      args: args\n\t     };\n\t    }\n\t    return;\n\t   }\n\t   var softMask = dict.get('SMask', 'SM') || false;\n\t   var mask = dict.get('Mask') || false;\n\t   var SMALL_IMAGE_DIMENSIONS = 200;\n\t   if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n\t    var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n\t    imgData = imageObj.createImageData(true);\n\t    operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n\t    return;\n\t   }\n\t   var useNativeImageDecoder = !this.options.disableNativeImageDecoder;\n\t   var objId = 'img_' + this.idFactory.createObjId();\n\t   operatorList.addDependency(objId);\n\t   args = [\n\t    objId,\n\t    w,\n\t    h\n\t   ];\n\t   if (useNativeImageDecoder && !softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n\t    operatorList.addOp(OPS.paintJpegXObject, args);\n\t    this.handler.send('obj', [\n\t     objId,\n\t     this.pageIndex,\n\t     'JpegStream',\n\t     image.getIR(this.options.forceDataSchema)\n\t    ]);\n\t    return;\n\t   }\n\t   var nativeImageDecoder = null;\n\t   if (useNativeImageDecoder && (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream)) {\n\t    nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n\t   }\n\t   PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n\t    var imgData = imageObj.createImageData(false);\n\t    self.handler.send('obj', [\n\t     objId,\n\t     self.pageIndex,\n\t     'Image',\n\t     imgData\n\t    ], [imgData.data.buffer]);\n\t   }).then(undefined, function (reason) {\n\t    warn('Unable to decode image: ' + reason);\n\t    self.handler.send('obj', [\n\t     objId,\n\t     self.pageIndex,\n\t     'Image',\n\t     null\n\t    ]);\n\t   });\n\t   operatorList.addOp(OPS.paintImageXObject, args);\n\t   if (cacheKey) {\n\t    imageCache[cacheKey] = {\n\t     fn: OPS.paintImageXObject,\n\t     args: args\n\t    };\n\t   }\n\t  },\n\t  handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n\t   var smaskContent = smask.get('G');\n\t   var smaskOptions = {\n\t    subtype: smask.get('S').name,\n\t    backdrop: smask.get('BC')\n\t   };\n\t   var transferObj = smask.get('TR');\n\t   if (isPDFFunction(transferObj)) {\n\t    var transferFn = PDFFunction.parse(this.xref, transferObj);\n\t    var transferMap = new Uint8Array(256);\n\t    var tmp = new Float32Array(1);\n\t    for (var i = 0; i < 256; i++) {\n\t     tmp[0] = i / 255;\n\t     transferFn(tmp, 0, tmp, 0);\n\t     transferMap[i] = tmp[0] * 255 | 0;\n\t    }\n\t    smaskOptions.transferMap = transferMap;\n\t   }\n\t   return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n\t  },\n\t  handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n\t   var tilingOpList = new OperatorList();\n\t   var resourcesArray = [\n\t    patternDict.get('Resources'),\n\t    resources\n\t   ];\n\t   var patternResources = Dict.merge(this.xref, resourcesArray);\n\t   return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n\t    operatorList.addDependencies(tilingOpList.dependencies);\n\t    operatorList.addOp(fn, getTilingPatternIR({\n\t     fnArray: tilingOpList.fnArray,\n\t     argsArray: tilingOpList.argsArray\n\t    }, patternDict, args));\n\t   });\n\t  },\n\t  handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n\t   var fontName;\n\t   if (fontArgs) {\n\t    fontArgs = fontArgs.slice();\n\t    fontName = fontArgs[0].name;\n\t   }\n\t   var self = this;\n\t   return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n\t    if (!translated.font.isType3Font) {\n\t     return translated;\n\t    }\n\t    return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n\t     return translated;\n\t    }, function (reason) {\n\t     self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n\t     return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n\t    });\n\t   }).then(function (translated) {\n\t    state.font = translated.font;\n\t    translated.send(self.handler);\n\t    return translated.loadedName;\n\t   });\n\t  },\n\t  handleText: function PartialEvaluator_handleText(chars, state) {\n\t   var font = state.font;\n\t   var glyphs = font.charsToGlyphs(chars);\n\t   var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n\t   if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n\t    var buildPath = function (fontChar) {\n\t     if (!font.renderer.hasBuiltPath(fontChar)) {\n\t      var path = font.renderer.getPathJs(fontChar);\n\t      this.handler.send('commonobj', [\n\t       font.loadedName + '_path_' + fontChar,\n\t       'FontPath',\n\t       path\n\t      ]);\n\t     }\n\t    }.bind(this);\n\t    for (var i = 0, ii = glyphs.length; i < ii; i++) {\n\t     var glyph = glyphs[i];\n\t     buildPath(glyph.fontChar);\n\t     var accent = glyph.accent;\n\t     if (accent && accent.fontChar) {\n\t      buildPath(accent.fontChar);\n\t     }\n\t    }\n\t   }\n\t   return glyphs;\n\t  },\n\t  setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n\t   var gStateObj = [];\n\t   var gStateKeys = gState.getKeys();\n\t   var self = this;\n\t   var promise = Promise.resolve();\n\t   for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n\t    var key = gStateKeys[i];\n\t    var value = gState.get(key);\n\t    switch (key) {\n\t    case 'Type':\n\t     break;\n\t    case 'LW':\n\t    case 'LC':\n\t    case 'LJ':\n\t    case 'ML':\n\t    case 'D':\n\t    case 'RI':\n\t    case 'FL':\n\t    case 'CA':\n\t    case 'ca':\n\t     gStateObj.push([\n\t      key,\n\t      value\n\t     ]);\n\t     break;\n\t    case 'Font':\n\t     promise = promise.then(function () {\n\t      return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n\t       operatorList.addDependency(loadedName);\n\t       gStateObj.push([\n\t        key,\n\t        [\n\t         loadedName,\n\t         value[1]\n\t        ]\n\t       ]);\n\t      });\n\t     });\n\t     break;\n\t    case 'BM':\n\t     gStateObj.push([\n\t      key,\n\t      value\n\t     ]);\n\t     break;\n\t    case 'SMask':\n\t     if (isName(value, 'None')) {\n\t      gStateObj.push([\n\t       key,\n\t       false\n\t      ]);\n\t      break;\n\t     }\n\t     if (isDict(value)) {\n\t      promise = promise.then(function (dict) {\n\t       return self.handleSMask(dict, resources, operatorList, task, stateManager);\n\t      }.bind(this, value));\n\t      gStateObj.push([\n\t       key,\n\t       true\n\t      ]);\n\t     } else {\n\t      warn('Unsupported SMask type');\n\t     }\n\t     break;\n\t    case 'OP':\n\t    case 'op':\n\t    case 'OPM':\n\t    case 'BG':\n\t    case 'BG2':\n\t    case 'UCR':\n\t    case 'UCR2':\n\t    case 'TR':\n\t    case 'TR2':\n\t    case 'HT':\n\t    case 'SM':\n\t    case 'SA':\n\t    case 'AIS':\n\t    case 'TK':\n\t     info('graphic state operator ' + key);\n\t     break;\n\t    default:\n\t     info('Unknown graphic state operator ' + key);\n\t     break;\n\t    }\n\t   }\n\t   return promise.then(function () {\n\t    if (gStateObj.length > 0) {\n\t     operatorList.addOp(OPS.setGState, [gStateObj]);\n\t    }\n\t   });\n\t  },\n\t  loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n\t   function errorFont() {\n\t    return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n\t   }\n\t   var fontRef;\n\t   if (font) {\n\t    assert(isRef(font));\n\t    fontRef = font;\n\t   } else {\n\t    var fontRes = resources.get('Font');\n\t    if (fontRes) {\n\t     fontRef = fontRes.getRaw(fontName);\n\t    } else {\n\t     warn('fontRes not available');\n\t     return errorFont();\n\t    }\n\t   }\n\t   if (!fontRef) {\n\t    warn('fontRef not available');\n\t    return errorFont();\n\t   }\n\t   if (this.fontCache.has(fontRef)) {\n\t    return this.fontCache.get(fontRef);\n\t   }\n\t   font = xref.fetchIfRef(fontRef);\n\t   if (!isDict(font)) {\n\t    return errorFont();\n\t   }\n\t   if (font.translated) {\n\t    return font.translated;\n\t   }\n\t   var fontCapability = createPromiseCapability();\n\t   var preEvaluatedFont = this.preEvaluateFont(font, xref);\n\t   var descriptor = preEvaluatedFont.descriptor;\n\t   var fontRefIsRef = isRef(fontRef), fontID;\n\t   if (fontRefIsRef) {\n\t    fontID = fontRef.toString();\n\t   }\n\t   if (isDict(descriptor)) {\n\t    if (!descriptor.fontAliases) {\n\t     descriptor.fontAliases = Object.create(null);\n\t    }\n\t    var fontAliases = descriptor.fontAliases;\n\t    var hash = preEvaluatedFont.hash;\n\t    if (fontAliases[hash]) {\n\t     var aliasFontRef = fontAliases[hash].aliasRef;\n\t     if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n\t      this.fontCache.putAlias(fontRef, aliasFontRef);\n\t      return this.fontCache.get(fontRef);\n\t     }\n\t    } else {\n\t     fontAliases[hash] = { fontID: Font.getFontID() };\n\t    }\n\t    if (fontRefIsRef) {\n\t     fontAliases[hash].aliasRef = fontRef;\n\t    }\n\t    fontID = fontAliases[hash].fontID;\n\t   }\n\t   if (fontRefIsRef) {\n\t    this.fontCache.put(fontRef, fontCapability.promise);\n\t   } else {\n\t    if (!fontID) {\n\t     fontID = this.idFactory.createObjId();\n\t    }\n\t    this.fontCache.put('id_' + fontID, fontCapability.promise);\n\t   }\n\t   assert(fontID, 'The \"fontID\" must be defined.');\n\t   font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n\t   font.translated = fontCapability.promise;\n\t   var translatedPromise;\n\t   try {\n\t    translatedPromise = this.translateFont(preEvaluatedFont, xref);\n\t   } catch (e) {\n\t    translatedPromise = Promise.reject(e);\n\t   }\n\t   var self = this;\n\t   translatedPromise.then(function (translatedFont) {\n\t    if (translatedFont.fontType !== undefined) {\n\t     var xrefFontStats = xref.stats.fontTypes;\n\t     xrefFontStats[translatedFont.fontType] = true;\n\t    }\n\t    fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n\t   }, function (reason) {\n\t    self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n\t    try {\n\t     var descriptor = preEvaluatedFont.descriptor;\n\t     var fontFile3 = descriptor && descriptor.get('FontFile3');\n\t     var subtype = fontFile3 && fontFile3.get('Subtype');\n\t     var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n\t     var xrefFontStats = xref.stats.fontTypes;\n\t     xrefFontStats[fontType] = true;\n\t    } catch (ex) {\n\t    }\n\t    fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n\t   });\n\t   return fontCapability.promise;\n\t  },\n\t  buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n\t   var lastIndex = operatorList.length - 1;\n\t   if (!args) {\n\t    args = [];\n\t   }\n\t   if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n\t    operatorList.addOp(OPS.constructPath, [\n\t     [fn],\n\t     args\n\t    ]);\n\t   } else {\n\t    var opArgs = operatorList.argsArray[lastIndex];\n\t    opArgs[0].push(fn);\n\t    Array.prototype.push.apply(opArgs[1], args);\n\t   }\n\t  },\n\t  handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n\t   var patternName = args[args.length - 1];\n\t   var pattern;\n\t   if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n\t    var dict = isStream(pattern) ? pattern.dict : pattern;\n\t    var typeNum = dict.get('PatternType');\n\t    if (typeNum === TILING_PATTERN) {\n\t     var color = cs.base ? cs.base.getRgb(args, 0) : null;\n\t     return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n\t    } else if (typeNum === SHADING_PATTERN) {\n\t     var shading = dict.get('Shading');\n\t     var matrix = dict.getArray('Matrix');\n\t     pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n\t     operatorList.addOp(fn, pattern.getIR());\n\t     return Promise.resolve();\n\t    }\n\t    return Promise.reject('Unknown PatternType: ' + typeNum);\n\t   }\n\t   operatorList.addOp(fn, args);\n\t   return Promise.resolve();\n\t  },\n\t  getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n\t   var self = this;\n\t   var xref = this.xref;\n\t   var imageCache = Object.create(null);\n\t   assert(operatorList);\n\t   resources = resources || Dict.empty;\n\t   var xobjs = resources.get('XObject') || Dict.empty;\n\t   var patterns = resources.get('Pattern') || Dict.empty;\n\t   var stateManager = new StateManager(initialState || new EvalState());\n\t   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t   var timeSlotManager = new TimeSlotManager();\n\t   return new Promise(function promiseBody(resolve, reject) {\n\t    var next = function (promise) {\n\t     promise.then(function () {\n\t      try {\n\t       promiseBody(resolve, reject);\n\t      } catch (ex) {\n\t       reject(ex);\n\t      }\n\t     }, reject);\n\t    };\n\t    task.ensureNotTerminated();\n\t    timeSlotManager.reset();\n\t    var stop, operation = {}, i, ii, cs;\n\t    while (!(stop = timeSlotManager.check())) {\n\t     operation.args = null;\n\t     if (!preprocessor.read(operation)) {\n\t      break;\n\t     }\n\t     var args = operation.args;\n\t     var fn = operation.fn;\n\t     switch (fn | 0) {\n\t     case OPS.paintXObject:\n\t      if (args[0].code) {\n\t       break;\n\t      }\n\t      var name = args[0].name;\n\t      if (!name) {\n\t       warn('XObject must be referred to by name.');\n\t       continue;\n\t      }\n\t      if (imageCache[name] !== undefined) {\n\t       operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n\t       args = null;\n\t       continue;\n\t      }\n\t      var xobj = xobjs.get(name);\n\t      if (xobj) {\n\t       assert(isStream(xobj), 'XObject should be a stream');\n\t       var type = xobj.dict.get('Subtype');\n\t       assert(isName(type), 'XObject should have a Name subtype');\n\t       if (type.name === 'Form') {\n\t        stateManager.save();\n\t        next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n\t         stateManager.restore();\n\t        }));\n\t        return;\n\t       } else if (type.name === 'Image') {\n\t        self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n\t        args = null;\n\t        continue;\n\t       } else if (type.name === 'PS') {\n\t        info('Ignored XObject subtype PS');\n\t        continue;\n\t       } else {\n\t        error('Unhandled XObject subtype ' + type.name);\n\t       }\n\t      }\n\t      break;\n\t     case OPS.setFont:\n\t      var fontSize = args[1];\n\t      next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n\t       operatorList.addDependency(loadedName);\n\t       operatorList.addOp(OPS.setFont, [\n\t        loadedName,\n\t        fontSize\n\t       ]);\n\t      }));\n\t      return;\n\t     case OPS.endInlineImage:\n\t      var cacheKey = args[0].cacheKey;\n\t      if (cacheKey) {\n\t       var cacheEntry = imageCache[cacheKey];\n\t       if (cacheEntry !== undefined) {\n\t        operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n\t        args = null;\n\t        continue;\n\t       }\n\t      }\n\t      self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n\t      args = null;\n\t      continue;\n\t     case OPS.showText:\n\t      args[0] = self.handleText(args[0], stateManager.state);\n\t      break;\n\t     case OPS.showSpacedText:\n\t      var arr = args[0];\n\t      var combinedGlyphs = [];\n\t      var arrLength = arr.length;\n\t      var state = stateManager.state;\n\t      for (i = 0; i < arrLength; ++i) {\n\t       var arrItem = arr[i];\n\t       if (isString(arrItem)) {\n\t        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n\t       } else if (isNum(arrItem)) {\n\t        combinedGlyphs.push(arrItem);\n\t       }\n\t      }\n\t      args[0] = combinedGlyphs;\n\t      fn = OPS.showText;\n\t      break;\n\t     case OPS.nextLineShowText:\n\t      operatorList.addOp(OPS.nextLine);\n\t      args[0] = self.handleText(args[0], stateManager.state);\n\t      fn = OPS.showText;\n\t      break;\n\t     case OPS.nextLineSetSpacingShowText:\n\t      operatorList.addOp(OPS.nextLine);\n\t      operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n\t      operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n\t      args[0] = self.handleText(args[0], stateManager.state);\n\t      fn = OPS.showText;\n\t      break;\n\t     case OPS.setTextRenderingMode:\n\t      stateManager.state.textRenderingMode = args[0];\n\t      break;\n\t     case OPS.setFillColorSpace:\n\t      stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n\t      continue;\n\t     case OPS.setStrokeColorSpace:\n\t      stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n\t      continue;\n\t     case OPS.setFillColor:\n\t      cs = stateManager.state.fillColorSpace;\n\t      args = cs.getRgb(args, 0);\n\t      fn = OPS.setFillRGBColor;\n\t      break;\n\t     case OPS.setStrokeColor:\n\t      cs = stateManager.state.strokeColorSpace;\n\t      args = cs.getRgb(args, 0);\n\t      fn = OPS.setStrokeRGBColor;\n\t      break;\n\t     case OPS.setFillGray:\n\t      stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n\t      args = ColorSpace.singletons.gray.getRgb(args, 0);\n\t      fn = OPS.setFillRGBColor;\n\t      break;\n\t     case OPS.setStrokeGray:\n\t      stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n\t      args = ColorSpace.singletons.gray.getRgb(args, 0);\n\t      fn = OPS.setStrokeRGBColor;\n\t      break;\n\t     case OPS.setFillCMYKColor:\n\t      stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n\t      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t      fn = OPS.setFillRGBColor;\n\t      break;\n\t     case OPS.setStrokeCMYKColor:\n\t      stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n\t      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t      fn = OPS.setStrokeRGBColor;\n\t      break;\n\t     case OPS.setFillRGBColor:\n\t      stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n\t      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n\t      break;\n\t     case OPS.setStrokeRGBColor:\n\t      stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n\t      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n\t      break;\n\t     case OPS.setFillColorN:\n\t      cs = stateManager.state.fillColorSpace;\n\t      if (cs.name === 'Pattern') {\n\t       next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n\t       return;\n\t      }\n\t      args = cs.getRgb(args, 0);\n\t      fn = OPS.setFillRGBColor;\n\t      break;\n\t     case OPS.setStrokeColorN:\n\t      cs = stateManager.state.strokeColorSpace;\n\t      if (cs.name === 'Pattern') {\n\t       next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n\t       return;\n\t      }\n\t      args = cs.getRgb(args, 0);\n\t      fn = OPS.setStrokeRGBColor;\n\t      break;\n\t     case OPS.shadingFill:\n\t      var shadingRes = resources.get('Shading');\n\t      if (!shadingRes) {\n\t       error('No shading resource found');\n\t      }\n\t      var shading = shadingRes.get(args[0].name);\n\t      if (!shading) {\n\t       error('No shading object found');\n\t      }\n\t      var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n\t      var patternIR = shadingFill.getIR();\n\t      args = [patternIR];\n\t      fn = OPS.shadingFill;\n\t      break;\n\t     case OPS.setGState:\n\t      var dictName = args[0];\n\t      var extGState = resources.get('ExtGState');\n\t      if (!isDict(extGState) || !extGState.has(dictName.name)) {\n\t       break;\n\t      }\n\t      var gState = extGState.get(dictName.name);\n\t      next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n\t      return;\n\t     case OPS.moveTo:\n\t     case OPS.lineTo:\n\t     case OPS.curveTo:\n\t     case OPS.curveTo2:\n\t     case OPS.curveTo3:\n\t     case OPS.closePath:\n\t      self.buildPath(operatorList, fn, args);\n\t      continue;\n\t     case OPS.rectangle:\n\t      self.buildPath(operatorList, fn, args);\n\t      continue;\n\t     case OPS.markPoint:\n\t     case OPS.markPointProps:\n\t     case OPS.beginMarkedContent:\n\t     case OPS.beginMarkedContentProps:\n\t     case OPS.endMarkedContent:\n\t     case OPS.beginCompat:\n\t     case OPS.endCompat:\n\t      continue;\n\t     default:\n\t      if (args !== null) {\n\t       for (i = 0, ii = args.length; i < ii; i++) {\n\t        if (args[i] instanceof Dict) {\n\t         break;\n\t        }\n\t       }\n\t       if (i < ii) {\n\t        warn('getOperatorList - ignoring operator: ' + fn);\n\t        continue;\n\t       }\n\t      }\n\t     }\n\t     operatorList.addOp(fn, args);\n\t    }\n\t    if (stop) {\n\t     next(deferred);\n\t     return;\n\t    }\n\t    for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n\t     operatorList.addOp(OPS.restore, []);\n\t    }\n\t    resolve();\n\t   });\n\t  },\n\t  getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n\t   stateManager = stateManager || new StateManager(new TextState());\n\t   var WhitespaceRegexp = /\\s/g;\n\t   var textContent = {\n\t    items: [],\n\t    styles: Object.create(null)\n\t   };\n\t   var textContentItem = {\n\t    initialized: false,\n\t    str: [],\n\t    width: 0,\n\t    height: 0,\n\t    vertical: false,\n\t    lastAdvanceWidth: 0,\n\t    lastAdvanceHeight: 0,\n\t    textAdvanceScale: 0,\n\t    spaceWidth: 0,\n\t    fakeSpaceMin: Infinity,\n\t    fakeMultiSpaceMin: Infinity,\n\t    fakeMultiSpaceMax: -0,\n\t    textRunBreakAllowed: false,\n\t    transform: null,\n\t    fontName: null\n\t   };\n\t   var SPACE_FACTOR = 0.3;\n\t   var MULTI_SPACE_FACTOR = 1.5;\n\t   var MULTI_SPACE_FACTOR_MAX = 4;\n\t   var self = this;\n\t   var xref = this.xref;\n\t   resources = xref.fetchIfRef(resources) || Dict.empty;\n\t   var xobjs = null;\n\t   var xobjsCache = Object.create(null);\n\t   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t   var textState;\n\t   function ensureTextContentItem() {\n\t    if (textContentItem.initialized) {\n\t     return textContentItem;\n\t    }\n\t    var font = textState.font;\n\t    if (!(font.loadedName in textContent.styles)) {\n\t     textContent.styles[font.loadedName] = {\n\t      fontFamily: font.fallbackName,\n\t      ascent: font.ascent,\n\t      descent: font.descent,\n\t      vertical: font.vertical\n\t     };\n\t    }\n\t    textContentItem.fontName = font.loadedName;\n\t    var tsm = [\n\t     textState.fontSize * textState.textHScale,\n\t     0,\n\t     0,\n\t     textState.fontSize,\n\t     0,\n\t     textState.textRise\n\t    ];\n\t    if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n\t     var glyphHeight = font.bbox[3] - font.bbox[1];\n\t     if (glyphHeight > 0) {\n\t      glyphHeight = glyphHeight * textState.fontMatrix[3];\n\t      tsm[3] *= glyphHeight;\n\t     }\n\t    }\n\t    var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n\t    textContentItem.transform = trm;\n\t    if (!font.vertical) {\n\t     textContentItem.width = 0;\n\t     textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n\t     textContentItem.vertical = false;\n\t    } else {\n\t     textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n\t     textContentItem.height = 0;\n\t     textContentItem.vertical = true;\n\t    }\n\t    var a = textState.textLineMatrix[0];\n\t    var b = textState.textLineMatrix[1];\n\t    var scaleLineX = Math.sqrt(a * a + b * b);\n\t    a = textState.ctm[0];\n\t    b = textState.ctm[1];\n\t    var scaleCtmX = Math.sqrt(a * a + b * b);\n\t    textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n\t    textContentItem.lastAdvanceWidth = 0;\n\t    textContentItem.lastAdvanceHeight = 0;\n\t    var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\t    if (spaceWidth) {\n\t     textContentItem.spaceWidth = spaceWidth;\n\t     textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n\t     textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n\t     textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n\t     textContentItem.textRunBreakAllowed = !font.isMonospace;\n\t    } else {\n\t     textContentItem.spaceWidth = 0;\n\t     textContentItem.fakeSpaceMin = Infinity;\n\t     textContentItem.fakeMultiSpaceMin = Infinity;\n\t     textContentItem.fakeMultiSpaceMax = 0;\n\t     textContentItem.textRunBreakAllowed = false;\n\t    }\n\t    textContentItem.initialized = true;\n\t    return textContentItem;\n\t   }\n\t   function replaceWhitespace(str) {\n\t    var i = 0, ii = str.length, code;\n\t    while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n\t     i++;\n\t    }\n\t    return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n\t   }\n\t   function runBidiTransform(textChunk) {\n\t    var str = textChunk.str.join('');\n\t    var bidiResult = bidi(str, -1, textChunk.vertical);\n\t    return {\n\t     str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n\t     dir: bidiResult.dir,\n\t     width: textChunk.width,\n\t     height: textChunk.height,\n\t     transform: textChunk.transform,\n\t     fontName: textChunk.fontName\n\t    };\n\t   }\n\t   function handleSetFont(fontName, fontRef) {\n\t    return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n\t     textState.font = translated.font;\n\t     textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n\t    });\n\t   }\n\t   function buildTextContentItem(chars) {\n\t    var font = textState.font;\n\t    var textChunk = ensureTextContentItem();\n\t    var width = 0;\n\t    var height = 0;\n\t    var glyphs = font.charsToGlyphs(chars);\n\t    for (var i = 0; i < glyphs.length; i++) {\n\t     var glyph = glyphs[i];\n\t     var glyphWidth = null;\n\t     if (font.vertical && glyph.vmetric) {\n\t      glyphWidth = glyph.vmetric[0];\n\t     } else {\n\t      glyphWidth = glyph.width;\n\t     }\n\t     var glyphUnicode = glyph.unicode;\n\t     var NormalizedUnicodes = getNormalizedUnicodes();\n\t     if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n\t      glyphUnicode = NormalizedUnicodes[glyphUnicode];\n\t     }\n\t     glyphUnicode = reverseIfRtl(glyphUnicode);\n\t     var charSpacing = textState.charSpacing;\n\t     if (glyph.isSpace) {\n\t      var wordSpacing = textState.wordSpacing;\n\t      charSpacing += wordSpacing;\n\t      if (wordSpacing > 0) {\n\t       addFakeSpaces(wordSpacing, textChunk.str);\n\t      }\n\t     }\n\t     var tx = 0;\n\t     var ty = 0;\n\t     if (!font.vertical) {\n\t      var w0 = glyphWidth * textState.fontMatrix[0];\n\t      tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n\t      width += tx;\n\t     } else {\n\t      var w1 = glyphWidth * textState.fontMatrix[0];\n\t      ty = w1 * textState.fontSize + charSpacing;\n\t      height += ty;\n\t     }\n\t     textState.translateTextMatrix(tx, ty);\n\t     textChunk.str.push(glyphUnicode);\n\t    }\n\t    if (!font.vertical) {\n\t     textChunk.lastAdvanceWidth = width;\n\t     textChunk.width += width;\n\t    } else {\n\t     textChunk.lastAdvanceHeight = height;\n\t     textChunk.height += Math.abs(height);\n\t    }\n\t    return textChunk;\n\t   }\n\t   function addFakeSpaces(width, strBuf) {\n\t    if (width < textContentItem.fakeSpaceMin) {\n\t     return;\n\t    }\n\t    if (width < textContentItem.fakeMultiSpaceMin) {\n\t     strBuf.push(' ');\n\t     return;\n\t    }\n\t    var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\t    while (fakeSpaces-- > 0) {\n\t     strBuf.push(' ');\n\t    }\n\t   }\n\t   function flushTextContentItem() {\n\t    if (!textContentItem.initialized) {\n\t     return;\n\t    }\n\t    textContentItem.width *= textContentItem.textAdvanceScale;\n\t    textContentItem.height *= textContentItem.textAdvanceScale;\n\t    textContent.items.push(runBidiTransform(textContentItem));\n\t    textContentItem.initialized = false;\n\t    textContentItem.str.length = 0;\n\t   }\n\t   var timeSlotManager = new TimeSlotManager();\n\t   return new Promise(function promiseBody(resolve, reject) {\n\t    var next = function (promise) {\n\t     promise.then(function () {\n\t      try {\n\t       promiseBody(resolve, reject);\n\t      } catch (ex) {\n\t       reject(ex);\n\t      }\n\t     }, reject);\n\t    };\n\t    task.ensureNotTerminated();\n\t    timeSlotManager.reset();\n\t    var stop, operation = {}, args = [];\n\t    while (!(stop = timeSlotManager.check())) {\n\t     args.length = 0;\n\t     operation.args = args;\n\t     if (!preprocessor.read(operation)) {\n\t      break;\n\t     }\n\t     textState = stateManager.state;\n\t     var fn = operation.fn;\n\t     args = operation.args;\n\t     var advance, diff;\n\t     switch (fn | 0) {\n\t     case OPS.setFont:\n\t      var fontNameArg = args[0].name, fontSizeArg = args[1];\n\t      if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n\t       break;\n\t      }\n\t      flushTextContentItem();\n\t      textState.fontName = fontNameArg;\n\t      textState.fontSize = fontSizeArg;\n\t      next(handleSetFont(fontNameArg, null));\n\t      return;\n\t     case OPS.setTextRise:\n\t      flushTextContentItem();\n\t      textState.textRise = args[0];\n\t      break;\n\t     case OPS.setHScale:\n\t      flushTextContentItem();\n\t      textState.textHScale = args[0] / 100;\n\t      break;\n\t     case OPS.setLeading:\n\t      flushTextContentItem();\n\t      textState.leading = args[0];\n\t      break;\n\t     case OPS.moveText:\n\t      var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n\t      advance = args[0] - args[1];\n\t      if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n\t       textState.translateTextLineMatrix(args[0], args[1]);\n\t       textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n\t       textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n\t       diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n\t       addFakeSpaces(diff, textContentItem.str);\n\t       break;\n\t      }\n\t      flushTextContentItem();\n\t      textState.translateTextLineMatrix(args[0], args[1]);\n\t      textState.textMatrix = textState.textLineMatrix.slice();\n\t      break;\n\t     case OPS.setLeadingMoveText:\n\t      flushTextContentItem();\n\t      textState.leading = -args[1];\n\t      textState.translateTextLineMatrix(args[0], args[1]);\n\t      textState.textMatrix = textState.textLineMatrix.slice();\n\t      break;\n\t     case OPS.nextLine:\n\t      flushTextContentItem();\n\t      textState.carriageReturn();\n\t      break;\n\t     case OPS.setTextMatrix:\n\t      advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t      if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n\t       textState.translateTextLineMatrix(advance.width, advance.height);\n\t       textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n\t       textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n\t       diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n\t       addFakeSpaces(diff, textContentItem.str);\n\t       break;\n\t      }\n\t      flushTextContentItem();\n\t      textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t      textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t      break;\n\t     case OPS.setCharSpacing:\n\t      textState.charSpacing = args[0];\n\t      break;\n\t     case OPS.setWordSpacing:\n\t      textState.wordSpacing = args[0];\n\t      break;\n\t     case OPS.beginText:\n\t      flushTextContentItem();\n\t      textState.textMatrix = IDENTITY_MATRIX.slice();\n\t      textState.textLineMatrix = IDENTITY_MATRIX.slice();\n\t      break;\n\t     case OPS.showSpacedText:\n\t      var items = args[0];\n\t      var offset;\n\t      for (var j = 0, jj = items.length; j < jj; j++) {\n\t       if (typeof items[j] === 'string') {\n\t        buildTextContentItem(items[j]);\n\t       } else if (isNum(items[j])) {\n\t        ensureTextContentItem();\n\t        advance = items[j] * textState.fontSize / 1000;\n\t        var breakTextRun = false;\n\t        if (textState.font.vertical) {\n\t         offset = advance;\n\t         textState.translateTextMatrix(0, offset);\n\t         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t         if (!breakTextRun) {\n\t          textContentItem.height += offset;\n\t         }\n\t        } else {\n\t         advance = -advance;\n\t         offset = advance * textState.textHScale;\n\t         textState.translateTextMatrix(offset, 0);\n\t         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t         if (!breakTextRun) {\n\t          textContentItem.width += offset;\n\t         }\n\t        }\n\t        if (breakTextRun) {\n\t         flushTextContentItem();\n\t        } else if (advance > 0) {\n\t         addFakeSpaces(advance, textContentItem.str);\n\t        }\n\t       }\n\t      }\n\t      break;\n\t     case OPS.showText:\n\t      buildTextContentItem(args[0]);\n\t      break;\n\t     case OPS.nextLineShowText:\n\t      flushTextContentItem();\n\t      textState.carriageReturn();\n\t      buildTextContentItem(args[0]);\n\t      break;\n\t     case OPS.nextLineSetSpacingShowText:\n\t      flushTextContentItem();\n\t      textState.wordSpacing = args[0];\n\t      textState.charSpacing = args[1];\n\t      textState.carriageReturn();\n\t      buildTextContentItem(args[2]);\n\t      break;\n\t     case OPS.paintXObject:\n\t      flushTextContentItem();\n\t      if (args[0].code) {\n\t       break;\n\t      }\n\t      if (!xobjs) {\n\t       xobjs = resources.get('XObject') || Dict.empty;\n\t      }\n\t      var name = args[0].name;\n\t      if (xobjsCache.key === name) {\n\t       if (xobjsCache.texts) {\n\t        Util.appendToArray(textContent.items, xobjsCache.texts.items);\n\t        Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n\t       }\n\t       break;\n\t      }\n\t      var xobj = xobjs.get(name);\n\t      if (!xobj) {\n\t       break;\n\t      }\n\t      assert(isStream(xobj), 'XObject should be a stream');\n\t      var type = xobj.dict.get('Subtype');\n\t      assert(isName(type), 'XObject should have a Name subtype');\n\t      if ('Form' !== type.name) {\n\t       xobjsCache.key = name;\n\t       xobjsCache.texts = null;\n\t       break;\n\t      }\n\t      stateManager.save();\n\t      var matrix = xobj.dict.getArray('Matrix');\n\t      if (isArray(matrix) && matrix.length === 6) {\n\t       stateManager.transform(matrix);\n\t      }\n\t      next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n\t       Util.appendToArray(textContent.items, formTextContent.items);\n\t       Util.extendObj(textContent.styles, formTextContent.styles);\n\t       stateManager.restore();\n\t       xobjsCache.key = name;\n\t       xobjsCache.texts = formTextContent;\n\t      }));\n\t      return;\n\t     case OPS.setGState:\n\t      flushTextContentItem();\n\t      var dictName = args[0];\n\t      var extGState = resources.get('ExtGState');\n\t      if (!isDict(extGState) || !isName(dictName)) {\n\t       break;\n\t      }\n\t      var gState = extGState.get(dictName.name);\n\t      if (!isDict(gState)) {\n\t       break;\n\t      }\n\t      var gStateFont = gState.get('Font');\n\t      if (gStateFont) {\n\t       textState.fontName = null;\n\t       textState.fontSize = gStateFont[1];\n\t       next(handleSetFont(null, gStateFont[0]));\n\t       return;\n\t      }\n\t      break;\n\t     }\n\t    }\n\t    if (stop) {\n\t     next(deferred);\n\t     return;\n\t    }\n\t    flushTextContentItem();\n\t    resolve(textContent);\n\t   });\n\t  },\n\t  extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n\t   var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t   var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\t   if (properties.composite) {\n\t    var cidSystemInfo = dict.get('CIDSystemInfo');\n\t    if (isDict(cidSystemInfo)) {\n\t     properties.cidSystemInfo = {\n\t      registry: cidSystemInfo.get('Registry'),\n\t      ordering: cidSystemInfo.get('Ordering'),\n\t      supplement: cidSystemInfo.get('Supplement')\n\t     };\n\t    }\n\t    var cidToGidMap = dict.get('CIDToGIDMap');\n\t    if (isStream(cidToGidMap)) {\n\t     properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n\t    }\n\t   }\n\t   var differences = [];\n\t   var baseEncodingName = null;\n\t   var encoding;\n\t   if (dict.has('Encoding')) {\n\t    encoding = dict.get('Encoding');\n\t    if (isDict(encoding)) {\n\t     baseEncodingName = encoding.get('BaseEncoding');\n\t     baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n\t     if (encoding.has('Differences')) {\n\t      var diffEncoding = encoding.get('Differences');\n\t      var index = 0;\n\t      for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n\t       var data = xref.fetchIfRef(diffEncoding[j]);\n\t       if (isNum(data)) {\n\t        index = data;\n\t       } else if (isName(data)) {\n\t        differences[index++] = data.name;\n\t       } else {\n\t        error('Invalid entry in \\'Differences\\' array: ' + data);\n\t       }\n\t      }\n\t     }\n\t    } else if (isName(encoding)) {\n\t     baseEncodingName = encoding.name;\n\t    } else {\n\t     error('Encoding is not a Name nor a Dict');\n\t    }\n\t    if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n\t     baseEncodingName = null;\n\t    }\n\t   }\n\t   if (baseEncodingName) {\n\t    properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n\t   } else {\n\t    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t    var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n\t    encoding = StandardEncoding;\n\t    if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n\t     encoding = WinAnsiEncoding;\n\t    }\n\t    if (isSymbolicFont) {\n\t     encoding = MacRomanEncoding;\n\t     if (!properties.file) {\n\t      if (/Symbol/i.test(properties.name)) {\n\t       encoding = SymbolSetEncoding;\n\t      } else if (/Dingbats/i.test(properties.name)) {\n\t       encoding = ZapfDingbatsEncoding;\n\t      }\n\t     }\n\t    }\n\t    properties.defaultEncoding = encoding;\n\t   }\n\t   properties.differences = differences;\n\t   properties.baseEncodingName = baseEncodingName;\n\t   properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n\t   properties.dict = dict;\n\t   return toUnicodePromise.then(function (toUnicode) {\n\t    properties.toUnicode = toUnicode;\n\t    return this.buildToUnicode(properties);\n\t   }.bind(this)).then(function (toUnicode) {\n\t    properties.toUnicode = toUnicode;\n\t    return properties;\n\t   });\n\t  },\n\t  buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n\t   properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\t   if (properties.hasIncludedToUnicodeMap) {\n\t    return Promise.resolve(properties.toUnicode);\n\t   }\n\t   var toUnicode, charcode, glyphName;\n\t   if (!properties.composite) {\n\t    toUnicode = [];\n\t    var encoding = properties.defaultEncoding.slice();\n\t    var baseEncodingName = properties.baseEncodingName;\n\t    var differences = properties.differences;\n\t    for (charcode in differences) {\n\t     glyphName = differences[charcode];\n\t     if (glyphName === '.notdef') {\n\t      continue;\n\t     }\n\t     encoding[charcode] = glyphName;\n\t    }\n\t    var glyphsUnicodeMap = getGlyphsUnicode();\n\t    for (charcode in encoding) {\n\t     glyphName = encoding[charcode];\n\t     if (glyphName === '') {\n\t      continue;\n\t     } else if (glyphsUnicodeMap[glyphName] === undefined) {\n\t      var code = 0;\n\t      switch (glyphName[0]) {\n\t      case 'G':\n\t       if (glyphName.length === 3) {\n\t        code = parseInt(glyphName.substr(1), 16);\n\t       }\n\t       break;\n\t      case 'g':\n\t       if (glyphName.length === 5) {\n\t        code = parseInt(glyphName.substr(1), 16);\n\t       }\n\t       break;\n\t      case 'C':\n\t      case 'c':\n\t       if (glyphName.length >= 3) {\n\t        code = +glyphName.substr(1);\n\t       }\n\t       break;\n\t      default:\n\t       var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t       if (unicode !== -1) {\n\t        code = unicode;\n\t       }\n\t      }\n\t      if (code) {\n\t       if (baseEncodingName && code === +charcode) {\n\t        var baseEncoding = getEncoding(baseEncodingName);\n\t        if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n\t         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t         continue;\n\t        }\n\t       }\n\t       toUnicode[charcode] = String.fromCharCode(code);\n\t      }\n\t      continue;\n\t     }\n\t     toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t    }\n\t    return Promise.resolve(new ToUnicodeMap(toUnicode));\n\t   }\n\t   if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n\t    var registry = properties.cidSystemInfo.registry;\n\t    var ordering = properties.cidSystemInfo.ordering;\n\t    var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n\t    return CMapFactory.create({\n\t     encoding: ucs2CMapName,\n\t     fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t     useCMap: null\n\t    }).then(function (ucs2CMap) {\n\t     var cMap = properties.cMap;\n\t     toUnicode = [];\n\t     cMap.forEach(function (charcode, cid) {\n\t      assert(cid <= 0xffff, 'Max size of CID is 65,535');\n\t      var ucs2 = ucs2CMap.lookup(cid);\n\t      if (ucs2) {\n\t       toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n\t      }\n\t     });\n\t     return new ToUnicodeMap(toUnicode);\n\t    });\n\t   }\n\t   return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n\t  },\n\t  readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n\t   var cmapObj = toUnicode;\n\t   if (isName(cmapObj)) {\n\t    return CMapFactory.create({\n\t     encoding: cmapObj,\n\t     fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t     useCMap: null\n\t    }).then(function (cmap) {\n\t     if (cmap instanceof IdentityCMap) {\n\t      return new IdentityToUnicodeMap(0, 0xFFFF);\n\t     }\n\t     return new ToUnicodeMap(cmap.getMap());\n\t    });\n\t   } else if (isStream(cmapObj)) {\n\t    return CMapFactory.create({\n\t     encoding: cmapObj,\n\t     fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t     useCMap: null\n\t    }).then(function (cmap) {\n\t     if (cmap instanceof IdentityCMap) {\n\t      return new IdentityToUnicodeMap(0, 0xFFFF);\n\t     }\n\t     var map = new Array(cmap.length);\n\t     cmap.forEach(function (charCode, token) {\n\t      var str = [];\n\t      for (var k = 0; k < token.length; k += 2) {\n\t       var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t       if ((w1 & 0xF800) !== 0xD800) {\n\t        str.push(w1);\n\t        continue;\n\t       }\n\t       k += 2;\n\t       var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t       str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n\t      }\n\t      map[charCode] = String.fromCharCode.apply(String, str);\n\t     });\n\t     return new ToUnicodeMap(map);\n\t    });\n\t   }\n\t   return Promise.resolve(null);\n\t  },\n\t  readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n\t   var glyphsData = cidToGidStream.getBytes();\n\t   var result = [];\n\t   for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n\t    var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n\t    if (glyphID === 0) {\n\t     continue;\n\t    }\n\t    var code = j >> 1;\n\t    result[code] = glyphID;\n\t   }\n\t   return result;\n\t  },\n\t  extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n\t   var glyphsWidths = [];\n\t   var defaultWidth = 0;\n\t   var glyphsVMetrics = [];\n\t   var defaultVMetrics;\n\t   var i, ii, j, jj, start, code, widths;\n\t   if (properties.composite) {\n\t    defaultWidth = dict.get('DW') || 1000;\n\t    widths = dict.get('W');\n\t    if (widths) {\n\t     for (i = 0, ii = widths.length; i < ii; i++) {\n\t      start = xref.fetchIfRef(widths[i++]);\n\t      code = xref.fetchIfRef(widths[i]);\n\t      if (isArray(code)) {\n\t       for (j = 0, jj = code.length; j < jj; j++) {\n\t        glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n\t       }\n\t      } else {\n\t       var width = xref.fetchIfRef(widths[++i]);\n\t       for (j = start; j <= code; j++) {\n\t        glyphsWidths[j] = width;\n\t       }\n\t      }\n\t     }\n\t    }\n\t    if (properties.vertical) {\n\t     var vmetrics = dict.getArray('DW2') || [\n\t      880,\n\t      -1000\n\t     ];\n\t     defaultVMetrics = [\n\t      vmetrics[1],\n\t      defaultWidth * 0.5,\n\t      vmetrics[0]\n\t     ];\n\t     vmetrics = dict.get('W2');\n\t     if (vmetrics) {\n\t      for (i = 0, ii = vmetrics.length; i < ii; i++) {\n\t       start = xref.fetchIfRef(vmetrics[i++]);\n\t       code = xref.fetchIfRef(vmetrics[i]);\n\t       if (isArray(code)) {\n\t        for (j = 0, jj = code.length; j < jj; j++) {\n\t         glyphsVMetrics[start++] = [\n\t          xref.fetchIfRef(code[j++]),\n\t          xref.fetchIfRef(code[j++]),\n\t          xref.fetchIfRef(code[j])\n\t         ];\n\t        }\n\t       } else {\n\t        var vmetric = [\n\t         xref.fetchIfRef(vmetrics[++i]),\n\t         xref.fetchIfRef(vmetrics[++i]),\n\t         xref.fetchIfRef(vmetrics[++i])\n\t        ];\n\t        for (j = start; j <= code; j++) {\n\t         glyphsVMetrics[j] = vmetric;\n\t        }\n\t       }\n\t      }\n\t     }\n\t    }\n\t   } else {\n\t    var firstChar = properties.firstChar;\n\t    widths = dict.get('Widths');\n\t    if (widths) {\n\t     j = firstChar;\n\t     for (i = 0, ii = widths.length; i < ii; i++) {\n\t      glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n\t     }\n\t     defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n\t    } else {\n\t     var baseFontName = dict.get('BaseFont');\n\t     if (isName(baseFontName)) {\n\t      var metrics = this.getBaseFontMetrics(baseFontName.name);\n\t      glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t      defaultWidth = metrics.defaultWidth;\n\t     }\n\t    }\n\t   }\n\t   var isMonospace = true;\n\t   var firstWidth = defaultWidth;\n\t   for (var glyph in glyphsWidths) {\n\t    var glyphWidth = glyphsWidths[glyph];\n\t    if (!glyphWidth) {\n\t     continue;\n\t    }\n\t    if (!firstWidth) {\n\t     firstWidth = glyphWidth;\n\t     continue;\n\t    }\n\t    if (firstWidth !== glyphWidth) {\n\t     isMonospace = false;\n\t     break;\n\t    }\n\t   }\n\t   if (isMonospace) {\n\t    properties.flags |= FontFlags.FixedPitch;\n\t   }\n\t   properties.defaultWidth = defaultWidth;\n\t   properties.widths = glyphsWidths;\n\t   properties.defaultVMetrics = defaultVMetrics;\n\t   properties.vmetrics = glyphsVMetrics;\n\t  },\n\t  isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n\t   var fontNameWoStyle = baseFontName.split('-')[0];\n\t   return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n\t  },\n\t  getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n\t   var defaultWidth = 0;\n\t   var widths = [];\n\t   var monospace = false;\n\t   var stdFontMap = getStdFontMap();\n\t   var lookupName = stdFontMap[name] || name;\n\t   var Metrics = getMetrics();\n\t   if (!(lookupName in Metrics)) {\n\t    if (this.isSerifFont(name)) {\n\t     lookupName = 'Times-Roman';\n\t    } else {\n\t     lookupName = 'Helvetica';\n\t    }\n\t   }\n\t   var glyphWidths = Metrics[lookupName];\n\t   if (isNum(glyphWidths)) {\n\t    defaultWidth = glyphWidths;\n\t    monospace = true;\n\t   } else {\n\t    widths = glyphWidths();\n\t   }\n\t   return {\n\t    defaultWidth: defaultWidth,\n\t    monospace: monospace,\n\t    widths: widths\n\t   };\n\t  },\n\t  buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n\t   var widths = Object.create(null);\n\t   var differences = properties.differences;\n\t   var encoding = properties.defaultEncoding;\n\t   for (var charCode = 0; charCode < 256; charCode++) {\n\t    if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n\t     widths[charCode] = widthsByGlyphName[differences[charCode]];\n\t     continue;\n\t    }\n\t    if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n\t     widths[charCode] = widthsByGlyphName[encoding[charCode]];\n\t     continue;\n\t    }\n\t   }\n\t   return widths;\n\t  },\n\t  preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n\t   var baseDict = dict;\n\t   var type = dict.get('Subtype');\n\t   assert(isName(type), 'invalid font Subtype');\n\t   var composite = false;\n\t   var uint8array;\n\t   if (type.name === 'Type0') {\n\t    var df = dict.get('DescendantFonts');\n\t    if (!df) {\n\t     error('Descendant fonts are not specified');\n\t    }\n\t    dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n\t    type = dict.get('Subtype');\n\t    assert(isName(type), 'invalid font Subtype');\n\t    composite = true;\n\t   }\n\t   var descriptor = dict.get('FontDescriptor');\n\t   if (descriptor) {\n\t    var hash = new MurmurHash3_64();\n\t    var encoding = baseDict.getRaw('Encoding');\n\t    if (isName(encoding)) {\n\t     hash.update(encoding.name);\n\t    } else if (isRef(encoding)) {\n\t     hash.update(encoding.toString());\n\t    } else if (isDict(encoding)) {\n\t     var keys = encoding.getKeys();\n\t     for (var i = 0, ii = keys.length; i < ii; i++) {\n\t      var entry = encoding.getRaw(keys[i]);\n\t      if (isName(entry)) {\n\t       hash.update(entry.name);\n\t      } else if (isRef(entry)) {\n\t       hash.update(entry.toString());\n\t      } else if (isArray(entry)) {\n\t       var diffLength = entry.length, diffBuf = new Array(diffLength);\n\t       for (var j = 0; j < diffLength; j++) {\n\t        var diffEntry = entry[j];\n\t        if (isName(diffEntry)) {\n\t         diffBuf[j] = diffEntry.name;\n\t        } else if (isNum(diffEntry) || isRef(diffEntry)) {\n\t         diffBuf[j] = diffEntry.toString();\n\t        }\n\t       }\n\t       hash.update(diffBuf.join());\n\t      }\n\t     }\n\t    }\n\t    var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t    if (isStream(toUnicode)) {\n\t     var stream = toUnicode.str || toUnicode;\n\t     uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n\t     hash.update(uint8array);\n\t    } else if (isName(toUnicode)) {\n\t     hash.update(toUnicode.name);\n\t    }\n\t    var widths = dict.get('Widths') || baseDict.get('Widths');\n\t    if (widths) {\n\t     uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n\t     hash.update(uint8array);\n\t    }\n\t   }\n\t   return {\n\t    descriptor: descriptor,\n\t    dict: dict,\n\t    baseDict: baseDict,\n\t    composite: composite,\n\t    type: type.name,\n\t    hash: hash ? hash.hexdigest() : ''\n\t   };\n\t  },\n\t  translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n\t   var baseDict = preEvaluatedFont.baseDict;\n\t   var dict = preEvaluatedFont.dict;\n\t   var composite = preEvaluatedFont.composite;\n\t   var descriptor = preEvaluatedFont.descriptor;\n\t   var type = preEvaluatedFont.type;\n\t   var maxCharIndex = composite ? 0xFFFF : 0xFF;\n\t   var properties;\n\t   if (!descriptor) {\n\t    if (type === 'Type3') {\n\t     descriptor = new Dict(null);\n\t     descriptor.set('FontName', Name.get(type));\n\t     descriptor.set('FontBBox', dict.getArray('FontBBox'));\n\t    } else {\n\t     var baseFontName = dict.get('BaseFont');\n\t     if (!isName(baseFontName)) {\n\t      error('Base font is not specified');\n\t     }\n\t     baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n\t     var metrics = this.getBaseFontMetrics(baseFontName);\n\t     var fontNameWoStyle = baseFontName.split('-')[0];\n\t     var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n\t     properties = {\n\t      type: type,\n\t      name: baseFontName,\n\t      widths: metrics.widths,\n\t      defaultWidth: metrics.defaultWidth,\n\t      flags: flags,\n\t      firstChar: 0,\n\t      lastChar: maxCharIndex\n\t     };\n\t     return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n\t      properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t      return new Font(baseFontName, null, properties);\n\t     }.bind(this));\n\t    }\n\t   }\n\t   var firstChar = dict.get('FirstChar') || 0;\n\t   var lastChar = dict.get('LastChar') || maxCharIndex;\n\t   var fontName = descriptor.get('FontName');\n\t   var baseFont = dict.get('BaseFont');\n\t   if (isString(fontName)) {\n\t    fontName = Name.get(fontName);\n\t   }\n\t   if (isString(baseFont)) {\n\t    baseFont = Name.get(baseFont);\n\t   }\n\t   if (type !== 'Type3') {\n\t    var fontNameStr = fontName && fontName.name;\n\t    var baseFontStr = baseFont && baseFont.name;\n\t    if (fontNameStr !== baseFontStr) {\n\t     info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n\t     if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n\t      fontName = baseFont;\n\t     }\n\t    }\n\t   }\n\t   fontName = fontName || baseFont;\n\t   assert(isName(fontName), 'invalid font name');\n\t   var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n\t   if (fontFile) {\n\t    if (fontFile.dict) {\n\t     var subtype = fontFile.dict.get('Subtype');\n\t     if (subtype) {\n\t      subtype = subtype.name;\n\t     }\n\t     var length1 = fontFile.dict.get('Length1');\n\t     var length2 = fontFile.dict.get('Length2');\n\t     var length3 = fontFile.dict.get('Length3');\n\t    }\n\t   }\n\t   properties = {\n\t    type: type,\n\t    name: fontName.name,\n\t    subtype: subtype,\n\t    file: fontFile,\n\t    length1: length1,\n\t    length2: length2,\n\t    length3: length3,\n\t    loadedName: baseDict.loadedName,\n\t    composite: composite,\n\t    wideChars: composite,\n\t    fixedPitch: false,\n\t    fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n\t    firstChar: firstChar || 0,\n\t    lastChar: lastChar || maxCharIndex,\n\t    bbox: descriptor.getArray('FontBBox'),\n\t    ascent: descriptor.get('Ascent'),\n\t    descent: descriptor.get('Descent'),\n\t    xHeight: descriptor.get('XHeight'),\n\t    capHeight: descriptor.get('CapHeight'),\n\t    flags: descriptor.get('Flags'),\n\t    italicAngle: descriptor.get('ItalicAngle'),\n\t    coded: false\n\t   };\n\t   var cMapPromise;\n\t   if (composite) {\n\t    var cidEncoding = baseDict.get('Encoding');\n\t    if (isName(cidEncoding)) {\n\t     properties.cidEncoding = cidEncoding.name;\n\t    }\n\t    cMapPromise = CMapFactory.create({\n\t     encoding: cidEncoding,\n\t     fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t     useCMap: null\n\t    }).then(function (cMap) {\n\t     properties.cMap = cMap;\n\t     properties.vertical = properties.cMap.vertical;\n\t    });\n\t   } else {\n\t    cMapPromise = Promise.resolve(undefined);\n\t   }\n\t   return cMapPromise.then(function () {\n\t    return this.extractDataStructures(dict, baseDict, xref, properties);\n\t   }.bind(this)).then(function (properties) {\n\t    this.extractWidths(dict, xref, descriptor, properties);\n\t    if (type === 'Type3') {\n\t     properties.isType3Font = true;\n\t    }\n\t    return new Font(fontName.name, fontFile, properties);\n\t   }.bind(this));\n\t  }\n\t };\n\t return PartialEvaluator;\n\t}();\n\tvar TranslatedFont = function TranslatedFontClosure() {\n\t function TranslatedFont(loadedName, font, dict) {\n\t  this.loadedName = loadedName;\n\t  this.font = font;\n\t  this.dict = dict;\n\t  this.type3Loaded = null;\n\t  this.sent = false;\n\t }\n\t TranslatedFont.prototype = {\n\t  send: function (handler) {\n\t   if (this.sent) {\n\t    return;\n\t   }\n\t   var fontData = this.font.exportData();\n\t   handler.send('commonobj', [\n\t    this.loadedName,\n\t    'Font',\n\t    fontData\n\t   ]);\n\t   this.sent = true;\n\t  },\n\t  loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n\t   assert(this.font.isType3Font);\n\t   if (this.type3Loaded) {\n\t    return this.type3Loaded;\n\t   }\n\t   var translatedFont = this.font;\n\t   var loadCharProcsPromise = Promise.resolve();\n\t   var charProcs = this.dict.get('CharProcs');\n\t   var fontResources = this.dict.get('Resources') || resources;\n\t   var charProcKeys = charProcs.getKeys();\n\t   var charProcOperatorList = Object.create(null);\n\t   for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n\t    loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n\t     var glyphStream = charProcs.get(key);\n\t     var operatorList = new OperatorList();\n\t     return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n\t      charProcOperatorList[key] = operatorList.getIR();\n\t      parentOperatorList.addDependencies(operatorList.dependencies);\n\t     }, function (reason) {\n\t      warn('Type3 font resource \\\"' + key + '\\\" is not available');\n\t      var operatorList = new OperatorList();\n\t      charProcOperatorList[key] = operatorList.getIR();\n\t     });\n\t    }.bind(this, charProcKeys[i]));\n\t   }\n\t   this.type3Loaded = loadCharProcsPromise.then(function () {\n\t    translatedFont.charProcOperatorList = charProcOperatorList;\n\t   });\n\t   return this.type3Loaded;\n\t  }\n\t };\n\t return TranslatedFont;\n\t}();\n\tvar OperatorList = function OperatorListClosure() {\n\t var CHUNK_SIZE = 1000;\n\t var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\t function getTransfers(queue) {\n\t  var transfers = [];\n\t  var fnArray = queue.fnArray, argsArray = queue.argsArray;\n\t  for (var i = 0, ii = queue.length; i < ii; i++) {\n\t   switch (fnArray[i]) {\n\t   case OPS.paintInlineImageXObject:\n\t   case OPS.paintInlineImageXObjectGroup:\n\t   case OPS.paintImageMaskXObject:\n\t    var arg = argsArray[i][0];\n\t    if (!arg.cached) {\n\t     transfers.push(arg.data.buffer);\n\t    }\n\t    break;\n\t   }\n\t  }\n\t  return transfers;\n\t }\n\t function OperatorList(intent, messageHandler, pageIndex) {\n\t  this.messageHandler = messageHandler;\n\t  this.fnArray = [];\n\t  this.argsArray = [];\n\t  this.dependencies = Object.create(null);\n\t  this._totalLength = 0;\n\t  this.pageIndex = pageIndex;\n\t  this.intent = intent;\n\t }\n\t OperatorList.prototype = {\n\t  get length() {\n\t   return this.argsArray.length;\n\t  },\n\t  get totalLength() {\n\t   return this._totalLength + this.length;\n\t  },\n\t  addOp: function (fn, args) {\n\t   this.fnArray.push(fn);\n\t   this.argsArray.push(args);\n\t   if (this.messageHandler) {\n\t    if (this.fnArray.length >= CHUNK_SIZE) {\n\t     this.flush();\n\t    } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n\t     this.flush();\n\t    }\n\t   }\n\t  },\n\t  addDependency: function (dependency) {\n\t   if (dependency in this.dependencies) {\n\t    return;\n\t   }\n\t   this.dependencies[dependency] = true;\n\t   this.addOp(OPS.dependency, [dependency]);\n\t  },\n\t  addDependencies: function (dependencies) {\n\t   for (var key in dependencies) {\n\t    this.addDependency(key);\n\t   }\n\t  },\n\t  addOpList: function (opList) {\n\t   Util.extendObj(this.dependencies, opList.dependencies);\n\t   for (var i = 0, ii = opList.length; i < ii; i++) {\n\t    this.addOp(opList.fnArray[i], opList.argsArray[i]);\n\t   }\n\t  },\n\t  getIR: function () {\n\t   return {\n\t    fnArray: this.fnArray,\n\t    argsArray: this.argsArray,\n\t    length: this.length\n\t   };\n\t  },\n\t  flush: function (lastChunk) {\n\t   if (this.intent !== 'oplist') {\n\t    new QueueOptimizer().optimize(this);\n\t   }\n\t   var transfers = getTransfers(this);\n\t   var length = this.length;\n\t   this._totalLength += length;\n\t   this.messageHandler.send('RenderPageChunk', {\n\t    operatorList: {\n\t     fnArray: this.fnArray,\n\t     argsArray: this.argsArray,\n\t     lastChunk: lastChunk,\n\t     length: length\n\t    },\n\t    pageIndex: this.pageIndex,\n\t    intent: this.intent\n\t   }, transfers);\n\t   this.dependencies = Object.create(null);\n\t   this.fnArray.length = 0;\n\t   this.argsArray.length = 0;\n\t  }\n\t };\n\t return OperatorList;\n\t}();\n\tvar StateManager = function StateManagerClosure() {\n\t function StateManager(initialState) {\n\t  this.state = initialState;\n\t  this.stateStack = [];\n\t }\n\t StateManager.prototype = {\n\t  save: function () {\n\t   var old = this.state;\n\t   this.stateStack.push(this.state);\n\t   this.state = old.clone();\n\t  },\n\t  restore: function () {\n\t   var prev = this.stateStack.pop();\n\t   if (prev) {\n\t    this.state = prev;\n\t   }\n\t  },\n\t  transform: function (args) {\n\t   this.state.ctm = Util.transform(this.state.ctm, args);\n\t  }\n\t };\n\t return StateManager;\n\t}();\n\tvar TextState = function TextStateClosure() {\n\t function TextState() {\n\t  this.ctm = new Float32Array(IDENTITY_MATRIX);\n\t  this.fontName = null;\n\t  this.fontSize = 0;\n\t  this.font = null;\n\t  this.fontMatrix = FONT_IDENTITY_MATRIX;\n\t  this.textMatrix = IDENTITY_MATRIX.slice();\n\t  this.textLineMatrix = IDENTITY_MATRIX.slice();\n\t  this.charSpacing = 0;\n\t  this.wordSpacing = 0;\n\t  this.leading = 0;\n\t  this.textHScale = 1;\n\t  this.textRise = 0;\n\t }\n\t TextState.prototype = {\n\t  setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t   var m = this.textMatrix;\n\t   m[0] = a;\n\t   m[1] = b;\n\t   m[2] = c;\n\t   m[3] = d;\n\t   m[4] = e;\n\t   m[5] = f;\n\t  },\n\t  setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t   var m = this.textLineMatrix;\n\t   m[0] = a;\n\t   m[1] = b;\n\t   m[2] = c;\n\t   m[3] = d;\n\t   m[4] = e;\n\t   m[5] = f;\n\t  },\n\t  translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n\t   var m = this.textMatrix;\n\t   m[4] = m[0] * x + m[2] * y + m[4];\n\t   m[5] = m[1] * x + m[3] * y + m[5];\n\t  },\n\t  translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n\t   var m = this.textLineMatrix;\n\t   m[4] = m[0] * x + m[2] * y + m[4];\n\t   m[5] = m[1] * x + m[3] * y + m[5];\n\t  },\n\t  calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n\t   var font = this.font;\n\t   if (!font) {\n\t    return null;\n\t   }\n\t   var m = this.textLineMatrix;\n\t   if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n\t    return null;\n\t   }\n\t   var txDiff = e - m[4], tyDiff = f - m[5];\n\t   if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n\t    return null;\n\t   }\n\t   var tx, ty, denominator = a * d - b * c;\n\t   if (font.vertical) {\n\t    tx = -tyDiff * c / denominator;\n\t    ty = tyDiff * a / denominator;\n\t   } else {\n\t    tx = txDiff * d / denominator;\n\t    ty = -txDiff * b / denominator;\n\t   }\n\t   return {\n\t    width: tx,\n\t    height: ty,\n\t    value: font.vertical ? ty : tx\n\t   };\n\t  },\n\t  calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n\t   var tsm = [\n\t    this.fontSize * this.textHScale,\n\t    0,\n\t    0,\n\t    this.fontSize,\n\t    0,\n\t    this.textRise\n\t   ];\n\t   return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n\t  },\n\t  carriageReturn: function TextState_carriageReturn() {\n\t   this.translateTextLineMatrix(0, -this.leading);\n\t   this.textMatrix = this.textLineMatrix.slice();\n\t  },\n\t  clone: function TextState_clone() {\n\t   var clone = Object.create(this);\n\t   clone.textMatrix = this.textMatrix.slice();\n\t   clone.textLineMatrix = this.textLineMatrix.slice();\n\t   clone.fontMatrix = this.fontMatrix.slice();\n\t   return clone;\n\t  }\n\t };\n\t return TextState;\n\t}();\n\tvar EvalState = function EvalStateClosure() {\n\t function EvalState() {\n\t  this.ctm = new Float32Array(IDENTITY_MATRIX);\n\t  this.font = null;\n\t  this.textRenderingMode = TextRenderingMode.FILL;\n\t  this.fillColorSpace = ColorSpace.singletons.gray;\n\t  this.strokeColorSpace = ColorSpace.singletons.gray;\n\t }\n\t EvalState.prototype = {\n\t  clone: function CanvasExtraState_clone() {\n\t   return Object.create(this);\n\t  }\n\t };\n\t return EvalState;\n\t}();\n\tvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n\t var getOPMap = getLookupTableFactory(function (t) {\n\t  t['w'] = {\n\t   id: OPS.setLineWidth,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['J'] = {\n\t   id: OPS.setLineCap,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['j'] = {\n\t   id: OPS.setLineJoin,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['M'] = {\n\t   id: OPS.setMiterLimit,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['d'] = {\n\t   id: OPS.setDash,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['ri'] = {\n\t   id: OPS.setRenderingIntent,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['i'] = {\n\t   id: OPS.setFlatness,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['gs'] = {\n\t   id: OPS.setGState,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['q'] = {\n\t   id: OPS.save,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['Q'] = {\n\t   id: OPS.restore,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['cm'] = {\n\t   id: OPS.transform,\n\t   numArgs: 6,\n\t   variableArgs: false\n\t  };\n\t  t['m'] = {\n\t   id: OPS.moveTo,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['l'] = {\n\t   id: OPS.lineTo,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['c'] = {\n\t   id: OPS.curveTo,\n\t   numArgs: 6,\n\t   variableArgs: false\n\t  };\n\t  t['v'] = {\n\t   id: OPS.curveTo2,\n\t   numArgs: 4,\n\t   variableArgs: false\n\t  };\n\t  t['y'] = {\n\t   id: OPS.curveTo3,\n\t   numArgs: 4,\n\t   variableArgs: false\n\t  };\n\t  t['h'] = {\n\t   id: OPS.closePath,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['re'] = {\n\t   id: OPS.rectangle,\n\t   numArgs: 4,\n\t   variableArgs: false\n\t  };\n\t  t['S'] = {\n\t   id: OPS.stroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['s'] = {\n\t   id: OPS.closeStroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['f'] = {\n\t   id: OPS.fill,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['F'] = {\n\t   id: OPS.fill,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['f*'] = {\n\t   id: OPS.eoFill,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['B'] = {\n\t   id: OPS.fillStroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['B*'] = {\n\t   id: OPS.eoFillStroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['b'] = {\n\t   id: OPS.closeFillStroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['b*'] = {\n\t   id: OPS.closeEOFillStroke,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['n'] = {\n\t   id: OPS.endPath,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['W'] = {\n\t   id: OPS.clip,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['W*'] = {\n\t   id: OPS.eoClip,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['BT'] = {\n\t   id: OPS.beginText,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['ET'] = {\n\t   id: OPS.endText,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['Tc'] = {\n\t   id: OPS.setCharSpacing,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Tw'] = {\n\t   id: OPS.setWordSpacing,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Tz'] = {\n\t   id: OPS.setHScale,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['TL'] = {\n\t   id: OPS.setLeading,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Tf'] = {\n\t   id: OPS.setFont,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['Tr'] = {\n\t   id: OPS.setTextRenderingMode,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Ts'] = {\n\t   id: OPS.setTextRise,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Td'] = {\n\t   id: OPS.moveText,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['TD'] = {\n\t   id: OPS.setLeadingMoveText,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['Tm'] = {\n\t   id: OPS.setTextMatrix,\n\t   numArgs: 6,\n\t   variableArgs: false\n\t  };\n\t  t['T*'] = {\n\t   id: OPS.nextLine,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['Tj'] = {\n\t   id: OPS.showText,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['TJ'] = {\n\t   id: OPS.showSpacedText,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['\\''] = {\n\t   id: OPS.nextLineShowText,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['\"'] = {\n\t   id: OPS.nextLineSetSpacingShowText,\n\t   numArgs: 3,\n\t   variableArgs: false\n\t  };\n\t  t['d0'] = {\n\t   id: OPS.setCharWidth,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['d1'] = {\n\t   id: OPS.setCharWidthAndBounds,\n\t   numArgs: 6,\n\t   variableArgs: false\n\t  };\n\t  t['CS'] = {\n\t   id: OPS.setStrokeColorSpace,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['cs'] = {\n\t   id: OPS.setFillColorSpace,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['SC'] = {\n\t   id: OPS.setStrokeColor,\n\t   numArgs: 4,\n\t   variableArgs: true\n\t  };\n\t  t['SCN'] = {\n\t   id: OPS.setStrokeColorN,\n\t   numArgs: 33,\n\t   variableArgs: true\n\t  };\n\t  t['sc'] = {\n\t   id: OPS.setFillColor,\n\t   numArgs: 4,\n\t   variableArgs: true\n\t  };\n\t  t['scn'] = {\n\t   id: OPS.setFillColorN,\n\t   numArgs: 33,\n\t   variableArgs: true\n\t  };\n\t  t['G'] = {\n\t   id: OPS.setStrokeGray,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['g'] = {\n\t   id: OPS.setFillGray,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['RG'] = {\n\t   id: OPS.setStrokeRGBColor,\n\t   numArgs: 3,\n\t   variableArgs: false\n\t  };\n\t  t['rg'] = {\n\t   id: OPS.setFillRGBColor,\n\t   numArgs: 3,\n\t   variableArgs: false\n\t  };\n\t  t['K'] = {\n\t   id: OPS.setStrokeCMYKColor,\n\t   numArgs: 4,\n\t   variableArgs: false\n\t  };\n\t  t['k'] = {\n\t   id: OPS.setFillCMYKColor,\n\t   numArgs: 4,\n\t   variableArgs: false\n\t  };\n\t  t['sh'] = {\n\t   id: OPS.shadingFill,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['BI'] = {\n\t   id: OPS.beginInlineImage,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['ID'] = {\n\t   id: OPS.beginImageData,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['EI'] = {\n\t   id: OPS.endInlineImage,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['Do'] = {\n\t   id: OPS.paintXObject,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['MP'] = {\n\t   id: OPS.markPoint,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['DP'] = {\n\t   id: OPS.markPointProps,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['BMC'] = {\n\t   id: OPS.beginMarkedContent,\n\t   numArgs: 1,\n\t   variableArgs: false\n\t  };\n\t  t['BDC'] = {\n\t   id: OPS.beginMarkedContentProps,\n\t   numArgs: 2,\n\t   variableArgs: false\n\t  };\n\t  t['EMC'] = {\n\t   id: OPS.endMarkedContent,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['BX'] = {\n\t   id: OPS.beginCompat,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['EX'] = {\n\t   id: OPS.endCompat,\n\t   numArgs: 0,\n\t   variableArgs: false\n\t  };\n\t  t['BM'] = null;\n\t  t['BD'] = null;\n\t  t['true'] = null;\n\t  t['fa'] = null;\n\t  t['fal'] = null;\n\t  t['fals'] = null;\n\t  t['false'] = null;\n\t  t['nu'] = null;\n\t  t['nul'] = null;\n\t  t['null'] = null;\n\t });\n\t function EvaluatorPreprocessor(stream, xref, stateManager) {\n\t  this.opMap = getOPMap();\n\t  this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n\t  this.stateManager = stateManager;\n\t  this.nonProcessedArgs = [];\n\t }\n\t EvaluatorPreprocessor.prototype = {\n\t  get savedStatesDepth() {\n\t   return this.stateManager.stateStack.length;\n\t  },\n\t  read: function EvaluatorPreprocessor_read(operation) {\n\t   var args = operation.args;\n\t   while (true) {\n\t    var obj = this.parser.getObj();\n\t    if (isCmd(obj)) {\n\t     var cmd = obj.cmd;\n\t     var opSpec = this.opMap[cmd];\n\t     if (!opSpec) {\n\t      warn('Unknown command \"' + cmd + '\"');\n\t      continue;\n\t     }\n\t     var fn = opSpec.id;\n\t     var numArgs = opSpec.numArgs;\n\t     var argsLength = args !== null ? args.length : 0;\n\t     if (!opSpec.variableArgs) {\n\t      if (argsLength !== numArgs) {\n\t       var nonProcessedArgs = this.nonProcessedArgs;\n\t       while (argsLength > numArgs) {\n\t        nonProcessedArgs.push(args.shift());\n\t        argsLength--;\n\t       }\n\t       while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n\t        if (args === null) {\n\t         args = [];\n\t        }\n\t        args.unshift(nonProcessedArgs.pop());\n\t        argsLength++;\n\t       }\n\t      }\n\t      if (argsLength < numArgs) {\n\t       warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n\t       if (args !== null) {\n\t        args.length = 0;\n\t       }\n\t       continue;\n\t      }\n\t     } else if (argsLength > numArgs) {\n\t      info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n\t     }\n\t     this.preprocessCommand(fn, args);\n\t     operation.fn = fn;\n\t     operation.args = args;\n\t     return true;\n\t    }\n\t    if (isEOF(obj)) {\n\t     return false;\n\t    }\n\t    if (obj !== null) {\n\t     if (args === null) {\n\t      args = [];\n\t     }\n\t     args.push(obj);\n\t     assert(args.length <= 33, 'Too many arguments');\n\t    }\n\t   }\n\t  },\n\t  preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n\t   switch (fn | 0) {\n\t   case OPS.save:\n\t    this.stateManager.save();\n\t    break;\n\t   case OPS.restore:\n\t    this.stateManager.restore();\n\t    break;\n\t   case OPS.transform:\n\t    this.stateManager.transform(args);\n\t    break;\n\t   }\n\t  }\n\t };\n\t return EvaluatorPreprocessor;\n\t}();\n\tvar QueueOptimizer = function QueueOptimizerClosure() {\n\t function addState(parentState, pattern, fn) {\n\t  var state = parentState;\n\t  for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n\t   var item = pattern[i];\n\t   state = state[item] || (state[item] = []);\n\t  }\n\t  state[pattern[pattern.length - 1]] = fn;\n\t }\n\t function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n\t  var iFirstPIMXO = iFirstSave + 2;\n\t  for (var i = 0; i < count; i++) {\n\t   var arg = argsArray[iFirstPIMXO + 4 * i];\n\t   var imageMask = arg.length === 1 && arg[0];\n\t   if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n\t    fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n\t    continue;\n\t   }\n\t   break;\n\t  }\n\t  return count - i;\n\t }\n\t var InitialState = [];\n\t addState(InitialState, [\n\t  OPS.save,\n\t  OPS.transform,\n\t  OPS.paintInlineImageXObject,\n\t  OPS.restore\n\t ], function foundInlineImageGroup(context) {\n\t  var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n\t  var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n\t  var MAX_WIDTH = 1000;\n\t  var IMAGE_PADDING = 1;\n\t  var fnArray = context.fnArray, argsArray = context.argsArray;\n\t  var curr = context.iCurr;\n\t  var iFirstSave = curr - 3;\n\t  var iFirstTransform = curr - 2;\n\t  var iFirstPIIXO = curr - 1;\n\t  var i = iFirstSave + 4;\n\t  var ii = fnArray.length;\n\t  while (i + 3 < ii) {\n\t   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n\t    break;\n\t   }\n\t   i += 4;\n\t  }\n\t  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\t  if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n\t   return i;\n\t  }\n\t  var maxX = 0;\n\t  var map = [], maxLineHeight = 0;\n\t  var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n\t  var q;\n\t  for (q = 0; q < count; q++) {\n\t   var transform = argsArray[iFirstTransform + (q << 2)];\n\t   var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\t   if (currentX + img.width > MAX_WIDTH) {\n\t    maxX = Math.max(maxX, currentX);\n\t    currentY += maxLineHeight + 2 * IMAGE_PADDING;\n\t    currentX = 0;\n\t    maxLineHeight = 0;\n\t   }\n\t   map.push({\n\t    transform: transform,\n\t    x: currentX,\n\t    y: currentY,\n\t    w: img.width,\n\t    h: img.height\n\t   });\n\t   currentX += img.width + 2 * IMAGE_PADDING;\n\t   maxLineHeight = Math.max(maxLineHeight, img.height);\n\t  }\n\t  var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n\t  var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n\t  var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n\t  var imgRowSize = imgWidth << 2;\n\t  for (q = 0; q < count; q++) {\n\t   var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n\t   var rowSize = map[q].w << 2;\n\t   var dataOffset = 0;\n\t   var offset = map[q].x + map[q].y * imgWidth << 2;\n\t   imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\t   for (var k = 0, kk = map[q].h; k < kk; k++) {\n\t    imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n\t    dataOffset += rowSize;\n\t    offset += imgRowSize;\n\t   }\n\t   imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\t   while (offset >= 0) {\n\t    data[offset - 4] = data[offset];\n\t    data[offset - 3] = data[offset + 1];\n\t    data[offset - 2] = data[offset + 2];\n\t    data[offset - 1] = data[offset + 3];\n\t    data[offset + rowSize] = data[offset + rowSize - 4];\n\t    data[offset + rowSize + 1] = data[offset + rowSize - 3];\n\t    data[offset + rowSize + 2] = data[offset + rowSize - 2];\n\t    data[offset + rowSize + 3] = data[offset + rowSize - 1];\n\t    offset -= imgRowSize;\n\t   }\n\t  }\n\t  fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n\t  argsArray.splice(iFirstSave, count * 4, [\n\t   {\n\t    width: imgWidth,\n\t    height: imgHeight,\n\t    kind: ImageKind.RGBA_32BPP,\n\t    data: imgData\n\t   },\n\t   map\n\t  ]);\n\t  return iFirstSave + 1;\n\t });\n\t addState(InitialState, [\n\t  OPS.save,\n\t  OPS.transform,\n\t  OPS.paintImageMaskXObject,\n\t  OPS.restore\n\t ], function foundImageMaskGroup(context) {\n\t  var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n\t  var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n\t  var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\t  var fnArray = context.fnArray, argsArray = context.argsArray;\n\t  var curr = context.iCurr;\n\t  var iFirstSave = curr - 3;\n\t  var iFirstTransform = curr - 2;\n\t  var iFirstPIMXO = curr - 1;\n\t  var i = iFirstSave + 4;\n\t  var ii = fnArray.length;\n\t  while (i + 3 < ii) {\n\t   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n\t    break;\n\t   }\n\t   i += 4;\n\t  }\n\t  var count = (i - iFirstSave) / 4;\n\t  count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\t  if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t   return i;\n\t  }\n\t  var q;\n\t  var isSameImage = false;\n\t  var iTransform, transformArgs;\n\t  var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n\t  if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n\t   isSameImage = true;\n\t   var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t   var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t   iTransform = iFirstTransform + 4;\n\t   var iPIMXO = iFirstPIMXO + 4;\n\t   for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n\t    transformArgs = argsArray[iTransform];\n\t    if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n\t     if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t      isSameImage = false;\n\t     } else {\n\t      count = q;\n\t     }\n\t     break;\n\t    }\n\t   }\n\t  }\n\t  if (isSameImage) {\n\t   count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n\t   var positions = new Float32Array(count * 2);\n\t   iTransform = iFirstTransform;\n\t   for (q = 0; q < count; q++, iTransform += 4) {\n\t    transformArgs = argsArray[iTransform];\n\t    positions[q << 1] = transformArgs[4];\n\t    positions[(q << 1) + 1] = transformArgs[5];\n\t   }\n\t   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n\t   argsArray.splice(iFirstSave, count * 4, [\n\t    firstPIMXOArg0,\n\t    firstTransformArg0,\n\t    firstTransformArg3,\n\t    positions\n\t   ]);\n\t  } else {\n\t   count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n\t   var images = [];\n\t   for (q = 0; q < count; q++) {\n\t    transformArgs = argsArray[iFirstTransform + (q << 2)];\n\t    var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n\t    images.push({\n\t     data: maskParams.data,\n\t     width: maskParams.width,\n\t     height: maskParams.height,\n\t     transform: transformArgs\n\t    });\n\t   }\n\t   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n\t   argsArray.splice(iFirstSave, count * 4, [images]);\n\t  }\n\t  return iFirstSave + 1;\n\t });\n\t addState(InitialState, [\n\t  OPS.save,\n\t  OPS.transform,\n\t  OPS.paintImageXObject,\n\t  OPS.restore\n\t ], function (context) {\n\t  var MIN_IMAGES_IN_BLOCK = 3;\n\t  var MAX_IMAGES_IN_BLOCK = 1000;\n\t  var fnArray = context.fnArray, argsArray = context.argsArray;\n\t  var curr = context.iCurr;\n\t  var iFirstSave = curr - 3;\n\t  var iFirstTransform = curr - 2;\n\t  var iFirstPIXO = curr - 1;\n\t  var iFirstRestore = curr;\n\t  if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n\t   return iFirstRestore + 1;\n\t  }\n\t  var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t  var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t  var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t  var i = iFirstSave + 4;\n\t  var ii = fnArray.length;\n\t  while (i + 3 < ii) {\n\t   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n\t    break;\n\t   }\n\t   if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n\t    break;\n\t   }\n\t   if (argsArray[i + 2][0] !== firstPIXOArg0) {\n\t    break;\n\t   }\n\t   i += 4;\n\t  }\n\t  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n\t  if (count < MIN_IMAGES_IN_BLOCK) {\n\t   return i;\n\t  }\n\t  var positions = new Float32Array(count * 2);\n\t  var iTransform = iFirstTransform;\n\t  for (var q = 0; q < count; q++, iTransform += 4) {\n\t   var transformArgs = argsArray[iTransform];\n\t   positions[q << 1] = transformArgs[4];\n\t   positions[(q << 1) + 1] = transformArgs[5];\n\t  }\n\t  var args = [\n\t   firstPIXOArg0,\n\t   firstTransformArg0,\n\t   firstTransformArg3,\n\t   positions\n\t  ];\n\t  fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n\t  argsArray.splice(iFirstSave, count * 4, args);\n\t  return iFirstSave + 1;\n\t });\n\t addState(InitialState, [\n\t  OPS.beginText,\n\t  OPS.setFont,\n\t  OPS.setTextMatrix,\n\t  OPS.showText,\n\t  OPS.endText\n\t ], function (context) {\n\t  var MIN_CHARS_IN_BLOCK = 3;\n\t  var MAX_CHARS_IN_BLOCK = 1000;\n\t  var fnArray = context.fnArray, argsArray = context.argsArray;\n\t  var curr = context.iCurr;\n\t  var iFirstBeginText = curr - 4;\n\t  var iFirstSetFont = curr - 3;\n\t  var iFirstSetTextMatrix = curr - 2;\n\t  var iFirstShowText = curr - 1;\n\t  var iFirstEndText = curr;\n\t  var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t  var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t  var i = iFirstBeginText + 5;\n\t  var ii = fnArray.length;\n\t  while (i + 4 < ii) {\n\t   if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n\t    break;\n\t   }\n\t   if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n\t    break;\n\t   }\n\t   i += 5;\n\t  }\n\t  var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n\t  if (count < MIN_CHARS_IN_BLOCK) {\n\t   return i;\n\t  }\n\t  var iFirst = iFirstBeginText;\n\t  if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n\t   count++;\n\t   iFirst -= 5;\n\t  }\n\t  var iEndText = iFirst + 4;\n\t  for (var q = 1; q < count; q++) {\n\t   fnArray.splice(iEndText, 3);\n\t   argsArray.splice(iEndText, 3);\n\t   iEndText += 2;\n\t  }\n\t  return iEndText + 1;\n\t });\n\t function QueueOptimizer() {\n\t }\n\t QueueOptimizer.prototype = {\n\t  optimize: function QueueOptimizer_optimize(queue) {\n\t   var fnArray = queue.fnArray, argsArray = queue.argsArray;\n\t   var context = {\n\t    iCurr: 0,\n\t    fnArray: fnArray,\n\t    argsArray: argsArray\n\t   };\n\t   var state;\n\t   var i = 0, ii = fnArray.length;\n\t   while (i < ii) {\n\t    state = (state || InitialState)[fnArray[i]];\n\t    if (typeof state === 'function') {\n\t     context.iCurr = i;\n\t     i = state(context);\n\t     state = undefined;\n\t     ii = context.fnArray.length;\n\t    } else {\n\t     i++;\n\t    }\n\t   }\n\t  }\n\t };\n\t return QueueOptimizer;\n\t}();\n\texports.OperatorList = OperatorList;\n\texports.PartialEvaluator = PartialEvaluator;\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreArithmeticDecoder = __w_pdfjs_require__(9);\n\tvar info = sharedUtil.info;\n\tvar warn = sharedUtil.warn;\n\tvar error = sharedUtil.error;\n\tvar log2 = sharedUtil.log2;\n\tvar readUint16 = sharedUtil.readUint16;\n\tvar readUint32 = sharedUtil.readUint32;\n\tvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n\tvar JpxImage = function JpxImageClosure() {\n\t var SubbandsGainLog2 = {\n\t  'LL': 0,\n\t  'LH': 1,\n\t  'HL': 1,\n\t  'HH': 2\n\t };\n\t function JpxImage() {\n\t  this.failOnCorruptedImage = false;\n\t }\n\t JpxImage.prototype = {\n\t  parse: function JpxImage_parse(data) {\n\t   var head = readUint16(data, 0);\n\t   if (head === 0xFF4F) {\n\t    this.parseCodestream(data, 0, data.length);\n\t    return;\n\t   }\n\t   var position = 0, length = data.length;\n\t   while (position < length) {\n\t    var headerSize = 8;\n\t    var lbox = readUint32(data, position);\n\t    var tbox = readUint32(data, position + 4);\n\t    position += headerSize;\n\t    if (lbox === 1) {\n\t     lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n\t     position += 8;\n\t     headerSize += 8;\n\t    }\n\t    if (lbox === 0) {\n\t     lbox = length - position + headerSize;\n\t    }\n\t    if (lbox < headerSize) {\n\t     error('JPX Error: Invalid box field size');\n\t    }\n\t    var dataLength = lbox - headerSize;\n\t    var jumpDataLength = true;\n\t    switch (tbox) {\n\t    case 0x6A703268:\n\t     jumpDataLength = false;\n\t     break;\n\t    case 0x636F6C72:\n\t     var method = data[position];\n\t     if (method === 1) {\n\t      var colorspace = readUint32(data, position + 3);\n\t      switch (colorspace) {\n\t      case 16:\n\t      case 17:\n\t      case 18:\n\t       break;\n\t      default:\n\t       warn('Unknown colorspace ' + colorspace);\n\t       break;\n\t      }\n\t     } else if (method === 2) {\n\t      info('ICC profile not supported');\n\t     }\n\t     break;\n\t    case 0x6A703263:\n\t     this.parseCodestream(data, position, position + dataLength);\n\t     break;\n\t    case 0x6A502020:\n\t     if (0x0d0a870a !== readUint32(data, position)) {\n\t      warn('Invalid JP2 signature');\n\t     }\n\t     break;\n\t    case 0x6A501A1A:\n\t    case 0x66747970:\n\t    case 0x72726571:\n\t    case 0x72657320:\n\t    case 0x69686472:\n\t     break;\n\t    default:\n\t     var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n\t     warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n\t     break;\n\t    }\n\t    if (jumpDataLength) {\n\t     position += dataLength;\n\t    }\n\t   }\n\t  },\n\t  parseImageProperties: function JpxImage_parseImageProperties(stream) {\n\t   var newByte = stream.getByte();\n\t   while (newByte >= 0) {\n\t    var oldByte = newByte;\n\t    newByte = stream.getByte();\n\t    var code = oldByte << 8 | newByte;\n\t    if (code === 0xFF51) {\n\t     stream.skip(4);\n\t     var Xsiz = stream.getInt32() >>> 0;\n\t     var Ysiz = stream.getInt32() >>> 0;\n\t     var XOsiz = stream.getInt32() >>> 0;\n\t     var YOsiz = stream.getInt32() >>> 0;\n\t     stream.skip(16);\n\t     var Csiz = stream.getUint16();\n\t     this.width = Xsiz - XOsiz;\n\t     this.height = Ysiz - YOsiz;\n\t     this.componentsCount = Csiz;\n\t     this.bitsPerComponent = 8;\n\t     return;\n\t    }\n\t   }\n\t   error('JPX Error: No size marker found in JPX stream');\n\t  },\n\t  parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n\t   var context = {};\n\t   var doNotRecover = false;\n\t   try {\n\t    var position = start;\n\t    while (position + 1 < end) {\n\t     var code = readUint16(data, position);\n\t     position += 2;\n\t     var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n\t     switch (code) {\n\t     case 0xFF4F:\n\t      context.mainHeader = true;\n\t      break;\n\t     case 0xFFD9:\n\t      break;\n\t     case 0xFF51:\n\t      length = readUint16(data, position);\n\t      var siz = {};\n\t      siz.Xsiz = readUint32(data, position + 4);\n\t      siz.Ysiz = readUint32(data, position + 8);\n\t      siz.XOsiz = readUint32(data, position + 12);\n\t      siz.YOsiz = readUint32(data, position + 16);\n\t      siz.XTsiz = readUint32(data, position + 20);\n\t      siz.YTsiz = readUint32(data, position + 24);\n\t      siz.XTOsiz = readUint32(data, position + 28);\n\t      siz.YTOsiz = readUint32(data, position + 32);\n\t      var componentsCount = readUint16(data, position + 36);\n\t      siz.Csiz = componentsCount;\n\t      var components = [];\n\t      j = position + 38;\n\t      for (var i = 0; i < componentsCount; i++) {\n\t       var component = {\n\t        precision: (data[j] & 0x7F) + 1,\n\t        isSigned: !!(data[j] & 0x80),\n\t        XRsiz: data[j + 1],\n\t        YRsiz: data[j + 1]\n\t       };\n\t       calculateComponentDimensions(component, siz);\n\t       components.push(component);\n\t      }\n\t      context.SIZ = siz;\n\t      context.components = components;\n\t      calculateTileGrids(context, components);\n\t      context.QCC = [];\n\t      context.COC = [];\n\t      break;\n\t     case 0xFF5C:\n\t      length = readUint16(data, position);\n\t      var qcd = {};\n\t      j = position + 2;\n\t      sqcd = data[j++];\n\t      switch (sqcd & 0x1F) {\n\t      case 0:\n\t       spqcdSize = 8;\n\t       scalarExpounded = true;\n\t       break;\n\t      case 1:\n\t       spqcdSize = 16;\n\t       scalarExpounded = false;\n\t       break;\n\t      case 2:\n\t       spqcdSize = 16;\n\t       scalarExpounded = true;\n\t       break;\n\t      default:\n\t       throw new Error('Invalid SQcd value ' + sqcd);\n\t      }\n\t      qcd.noQuantization = spqcdSize === 8;\n\t      qcd.scalarExpounded = scalarExpounded;\n\t      qcd.guardBits = sqcd >> 5;\n\t      spqcds = [];\n\t      while (j < length + position) {\n\t       var spqcd = {};\n\t       if (spqcdSize === 8) {\n\t        spqcd.epsilon = data[j++] >> 3;\n\t        spqcd.mu = 0;\n\t       } else {\n\t        spqcd.epsilon = data[j] >> 3;\n\t        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t        j += 2;\n\t       }\n\t       spqcds.push(spqcd);\n\t      }\n\t      qcd.SPqcds = spqcds;\n\t      if (context.mainHeader) {\n\t       context.QCD = qcd;\n\t      } else {\n\t       context.currentTile.QCD = qcd;\n\t       context.currentTile.QCC = [];\n\t      }\n\t      break;\n\t     case 0xFF5D:\n\t      length = readUint16(data, position);\n\t      var qcc = {};\n\t      j = position + 2;\n\t      var cqcc;\n\t      if (context.SIZ.Csiz < 257) {\n\t       cqcc = data[j++];\n\t      } else {\n\t       cqcc = readUint16(data, j);\n\t       j += 2;\n\t      }\n\t      sqcd = data[j++];\n\t      switch (sqcd & 0x1F) {\n\t      case 0:\n\t       spqcdSize = 8;\n\t       scalarExpounded = true;\n\t       break;\n\t      case 1:\n\t       spqcdSize = 16;\n\t       scalarExpounded = false;\n\t       break;\n\t      case 2:\n\t       spqcdSize = 16;\n\t       scalarExpounded = true;\n\t       break;\n\t      default:\n\t       throw new Error('Invalid SQcd value ' + sqcd);\n\t      }\n\t      qcc.noQuantization = spqcdSize === 8;\n\t      qcc.scalarExpounded = scalarExpounded;\n\t      qcc.guardBits = sqcd >> 5;\n\t      spqcds = [];\n\t      while (j < length + position) {\n\t       spqcd = {};\n\t       if (spqcdSize === 8) {\n\t        spqcd.epsilon = data[j++] >> 3;\n\t        spqcd.mu = 0;\n\t       } else {\n\t        spqcd.epsilon = data[j] >> 3;\n\t        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t        j += 2;\n\t       }\n\t       spqcds.push(spqcd);\n\t      }\n\t      qcc.SPqcds = spqcds;\n\t      if (context.mainHeader) {\n\t       context.QCC[cqcc] = qcc;\n\t      } else {\n\t       context.currentTile.QCC[cqcc] = qcc;\n\t      }\n\t      break;\n\t     case 0xFF52:\n\t      length = readUint16(data, position);\n\t      var cod = {};\n\t      j = position + 2;\n\t      var scod = data[j++];\n\t      cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n\t      cod.sopMarkerUsed = !!(scod & 2);\n\t      cod.ephMarkerUsed = !!(scod & 4);\n\t      cod.progressionOrder = data[j++];\n\t      cod.layersCount = readUint16(data, j);\n\t      j += 2;\n\t      cod.multipleComponentTransform = data[j++];\n\t      cod.decompositionLevelsCount = data[j++];\n\t      cod.xcb = (data[j++] & 0xF) + 2;\n\t      cod.ycb = (data[j++] & 0xF) + 2;\n\t      var blockStyle = data[j++];\n\t      cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n\t      cod.resetContextProbabilities = !!(blockStyle & 2);\n\t      cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n\t      cod.verticalyStripe = !!(blockStyle & 8);\n\t      cod.predictableTermination = !!(blockStyle & 16);\n\t      cod.segmentationSymbolUsed = !!(blockStyle & 32);\n\t      cod.reversibleTransformation = data[j++];\n\t      if (cod.entropyCoderWithCustomPrecincts) {\n\t       var precinctsSizes = [];\n\t       while (j < length + position) {\n\t        var precinctsSize = data[j++];\n\t        precinctsSizes.push({\n\t         PPx: precinctsSize & 0xF,\n\t         PPy: precinctsSize >> 4\n\t        });\n\t       }\n\t       cod.precinctsSizes = precinctsSizes;\n\t      }\n\t      var unsupported = [];\n\t      if (cod.selectiveArithmeticCodingBypass) {\n\t       unsupported.push('selectiveArithmeticCodingBypass');\n\t      }\n\t      if (cod.resetContextProbabilities) {\n\t       unsupported.push('resetContextProbabilities');\n\t      }\n\t      if (cod.terminationOnEachCodingPass) {\n\t       unsupported.push('terminationOnEachCodingPass');\n\t      }\n\t      if (cod.verticalyStripe) {\n\t       unsupported.push('verticalyStripe');\n\t      }\n\t      if (cod.predictableTermination) {\n\t       unsupported.push('predictableTermination');\n\t      }\n\t      if (unsupported.length > 0) {\n\t       doNotRecover = true;\n\t       throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n\t      }\n\t      if (context.mainHeader) {\n\t       context.COD = cod;\n\t      } else {\n\t       context.currentTile.COD = cod;\n\t       context.currentTile.COC = [];\n\t      }\n\t      break;\n\t     case 0xFF90:\n\t      length = readUint16(data, position);\n\t      tile = {};\n\t      tile.index = readUint16(data, position + 2);\n\t      tile.length = readUint32(data, position + 4);\n\t      tile.dataEnd = tile.length + position - 2;\n\t      tile.partIndex = data[position + 8];\n\t      tile.partsCount = data[position + 9];\n\t      context.mainHeader = false;\n\t      if (tile.partIndex === 0) {\n\t       tile.COD = context.COD;\n\t       tile.COC = context.COC.slice(0);\n\t       tile.QCD = context.QCD;\n\t       tile.QCC = context.QCC.slice(0);\n\t      }\n\t      context.currentTile = tile;\n\t      break;\n\t     case 0xFF93:\n\t      tile = context.currentTile;\n\t      if (tile.partIndex === 0) {\n\t       initializeTile(context, tile.index);\n\t       buildPackets(context);\n\t      }\n\t      length = tile.dataEnd - position;\n\t      parseTilePackets(context, data, position, length);\n\t      break;\n\t     case 0xFF55:\n\t     case 0xFF57:\n\t     case 0xFF58:\n\t     case 0xFF64:\n\t      length = readUint16(data, position);\n\t      break;\n\t     case 0xFF53:\n\t      throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n\t     default:\n\t      throw new Error('Unknown codestream code: ' + code.toString(16));\n\t     }\n\t     position += length;\n\t    }\n\t   } catch (e) {\n\t    if (doNotRecover || this.failOnCorruptedImage) {\n\t     error('JPX Error: ' + e.message);\n\t    } else {\n\t     warn('JPX: Trying to recover from: ' + e.message);\n\t    }\n\t   }\n\t   this.tiles = transformComponents(context);\n\t   this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n\t   this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n\t   this.componentsCount = context.SIZ.Csiz;\n\t  }\n\t };\n\t function calculateComponentDimensions(component, siz) {\n\t  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n\t  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n\t  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n\t  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n\t  component.width = component.x1 - component.x0;\n\t  component.height = component.y1 - component.y0;\n\t }\n\t function calculateTileGrids(context, components) {\n\t  var siz = context.SIZ;\n\t  var tile, tiles = [];\n\t  var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n\t  var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\t  for (var q = 0; q < numYtiles; q++) {\n\t   for (var p = 0; p < numXtiles; p++) {\n\t    tile = {};\n\t    tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n\t    tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n\t    tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n\t    tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n\t    tile.width = tile.tx1 - tile.tx0;\n\t    tile.height = tile.ty1 - tile.ty0;\n\t    tile.components = [];\n\t    tiles.push(tile);\n\t   }\n\t  }\n\t  context.tiles = tiles;\n\t  var componentsCount = siz.Csiz;\n\t  for (var i = 0, ii = componentsCount; i < ii; i++) {\n\t   var component = components[i];\n\t   for (var j = 0, jj = tiles.length; j < jj; j++) {\n\t    var tileComponent = {};\n\t    tile = tiles[j];\n\t    tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n\t    tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n\t    tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n\t    tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n\t    tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n\t    tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n\t    tile.components[i] = tileComponent;\n\t   }\n\t  }\n\t }\n\t function getBlocksDimensions(context, component, r) {\n\t  var codOrCoc = component.codingStyleParameters;\n\t  var result = {};\n\t  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n\t   result.PPx = 15;\n\t   result.PPy = 15;\n\t  } else {\n\t   result.PPx = codOrCoc.precinctsSizes[r].PPx;\n\t   result.PPy = codOrCoc.precinctsSizes[r].PPy;\n\t  }\n\t  result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n\t  result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n\t  return result;\n\t }\n\t function buildPrecincts(context, resolution, dimensions) {\n\t  var precinctWidth = 1 << dimensions.PPx;\n\t  var precinctHeight = 1 << dimensions.PPy;\n\t  var isZeroRes = resolution.resLevel === 0;\n\t  var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n\t  var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n\t  var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n\t  var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n\t  var numprecincts = numprecinctswide * numprecinctshigh;\n\t  resolution.precinctParameters = {\n\t   precinctWidth: precinctWidth,\n\t   precinctHeight: precinctHeight,\n\t   numprecinctswide: numprecinctswide,\n\t   numprecinctshigh: numprecinctshigh,\n\t   numprecincts: numprecincts,\n\t   precinctWidthInSubband: precinctWidthInSubband,\n\t   precinctHeightInSubband: precinctHeightInSubband\n\t  };\n\t }\n\t function buildCodeblocks(context, subband, dimensions) {\n\t  var xcb_ = dimensions.xcb_;\n\t  var ycb_ = dimensions.ycb_;\n\t  var codeblockWidth = 1 << xcb_;\n\t  var codeblockHeight = 1 << ycb_;\n\t  var cbx0 = subband.tbx0 >> xcb_;\n\t  var cby0 = subband.tby0 >> ycb_;\n\t  var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n\t  var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n\t  var precinctParameters = subband.resolution.precinctParameters;\n\t  var codeblocks = [];\n\t  var precincts = [];\n\t  var i, j, codeblock, precinctNumber;\n\t  for (j = cby0; j < cby1; j++) {\n\t   for (i = cbx0; i < cbx1; i++) {\n\t    codeblock = {\n\t     cbx: i,\n\t     cby: j,\n\t     tbx0: codeblockWidth * i,\n\t     tby0: codeblockHeight * j,\n\t     tbx1: codeblockWidth * (i + 1),\n\t     tby1: codeblockHeight * (j + 1)\n\t    };\n\t    codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n\t    codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n\t    codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n\t    codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\t    var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n\t    var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n\t    precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\t    codeblock.precinctNumber = precinctNumber;\n\t    codeblock.subbandType = subband.type;\n\t    codeblock.Lblock = 3;\n\t    if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n\t     continue;\n\t    }\n\t    codeblocks.push(codeblock);\n\t    var precinct = precincts[precinctNumber];\n\t    if (precinct !== undefined) {\n\t     if (i < precinct.cbxMin) {\n\t      precinct.cbxMin = i;\n\t     } else if (i > precinct.cbxMax) {\n\t      precinct.cbxMax = i;\n\t     }\n\t     if (j < precinct.cbyMin) {\n\t      precinct.cbxMin = j;\n\t     } else if (j > precinct.cbyMax) {\n\t      precinct.cbyMax = j;\n\t     }\n\t    } else {\n\t     precincts[precinctNumber] = precinct = {\n\t      cbxMin: i,\n\t      cbyMin: j,\n\t      cbxMax: i,\n\t      cbyMax: j\n\t     };\n\t    }\n\t    codeblock.precinct = precinct;\n\t   }\n\t  }\n\t  subband.codeblockParameters = {\n\t   codeblockWidth: xcb_,\n\t   codeblockHeight: ycb_,\n\t   numcodeblockwide: cbx1 - cbx0 + 1,\n\t   numcodeblockhigh: cby1 - cby0 + 1\n\t  };\n\t  subband.codeblocks = codeblocks;\n\t  subband.precincts = precincts;\n\t }\n\t function createPacket(resolution, precinctNumber, layerNumber) {\n\t  var precinctCodeblocks = [];\n\t  var subbands = resolution.subbands;\n\t  for (var i = 0, ii = subbands.length; i < ii; i++) {\n\t   var subband = subbands[i];\n\t   var codeblocks = subband.codeblocks;\n\t   for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n\t    var codeblock = codeblocks[j];\n\t    if (codeblock.precinctNumber !== precinctNumber) {\n\t     continue;\n\t    }\n\t    precinctCodeblocks.push(codeblock);\n\t   }\n\t  }\n\t  return {\n\t   layerNumber: layerNumber,\n\t   codeblocks: precinctCodeblocks\n\t  };\n\t }\n\t function LayerResolutionComponentPositionIterator(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t  var componentsCount = siz.Csiz;\n\t  var maxDecompositionLevelsCount = 0;\n\t  for (var q = 0; q < componentsCount; q++) {\n\t   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t  }\n\t  var l = 0, r = 0, i = 0, k = 0;\n\t  this.nextPacket = function JpxImage_nextPacket() {\n\t   for (; l < layersCount; l++) {\n\t    for (; r <= maxDecompositionLevelsCount; r++) {\n\t     for (; i < componentsCount; i++) {\n\t      var component = tile.components[i];\n\t      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t       continue;\n\t      }\n\t      var resolution = component.resolutions[r];\n\t      var numprecincts = resolution.precinctParameters.numprecincts;\n\t      for (; k < numprecincts;) {\n\t       var packet = createPacket(resolution, k, l);\n\t       k++;\n\t       return packet;\n\t      }\n\t      k = 0;\n\t     }\n\t     i = 0;\n\t    }\n\t    r = 0;\n\t   }\n\t   error('JPX Error: Out of packets');\n\t  };\n\t }\n\t function ResolutionLayerComponentPositionIterator(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t  var componentsCount = siz.Csiz;\n\t  var maxDecompositionLevelsCount = 0;\n\t  for (var q = 0; q < componentsCount; q++) {\n\t   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t  }\n\t  var r = 0, l = 0, i = 0, k = 0;\n\t  this.nextPacket = function JpxImage_nextPacket() {\n\t   for (; r <= maxDecompositionLevelsCount; r++) {\n\t    for (; l < layersCount; l++) {\n\t     for (; i < componentsCount; i++) {\n\t      var component = tile.components[i];\n\t      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t       continue;\n\t      }\n\t      var resolution = component.resolutions[r];\n\t      var numprecincts = resolution.precinctParameters.numprecincts;\n\t      for (; k < numprecincts;) {\n\t       var packet = createPacket(resolution, k, l);\n\t       k++;\n\t       return packet;\n\t      }\n\t      k = 0;\n\t     }\n\t     i = 0;\n\t    }\n\t    l = 0;\n\t   }\n\t   error('JPX Error: Out of packets');\n\t  };\n\t }\n\t function ResolutionPositionComponentLayerIterator(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t  var componentsCount = siz.Csiz;\n\t  var l, r, c, p;\n\t  var maxDecompositionLevelsCount = 0;\n\t  for (c = 0; c < componentsCount; c++) {\n\t   var component = tile.components[c];\n\t   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n\t  }\n\t  var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\t  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n\t   var maxNumPrecincts = 0;\n\t   for (c = 0; c < componentsCount; ++c) {\n\t    var resolutions = tile.components[c].resolutions;\n\t    if (r < resolutions.length) {\n\t     maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n\t    }\n\t   }\n\t   maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n\t  }\n\t  l = 0;\n\t  r = 0;\n\t  c = 0;\n\t  p = 0;\n\t  this.nextPacket = function JpxImage_nextPacket() {\n\t   for (; r <= maxDecompositionLevelsCount; r++) {\n\t    for (; p < maxNumPrecinctsInLevel[r]; p++) {\n\t     for (; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t       continue;\n\t      }\n\t      var resolution = component.resolutions[r];\n\t      var numprecincts = resolution.precinctParameters.numprecincts;\n\t      if (p >= numprecincts) {\n\t       continue;\n\t      }\n\t      for (; l < layersCount;) {\n\t       var packet = createPacket(resolution, p, l);\n\t       l++;\n\t       return packet;\n\t      }\n\t      l = 0;\n\t     }\n\t     c = 0;\n\t    }\n\t    p = 0;\n\t   }\n\t   error('JPX Error: Out of packets');\n\t  };\n\t }\n\t function PositionComponentResolutionLayerIterator(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t  var componentsCount = siz.Csiz;\n\t  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t  var precinctsIterationSizes = precinctsSizes;\n\t  var l = 0, r = 0, c = 0, px = 0, py = 0;\n\t  this.nextPacket = function JpxImage_nextPacket() {\n\t   for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t    for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t     for (; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      for (; r <= decompositionLevelsCount; r++) {\n\t       var resolution = component.resolutions[r];\n\t       var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n\t       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t       if (k === null) {\n\t        continue;\n\t       }\n\t       for (; l < layersCount;) {\n\t        var packet = createPacket(resolution, k, l);\n\t        l++;\n\t        return packet;\n\t       }\n\t       l = 0;\n\t      }\n\t      r = 0;\n\t     }\n\t     c = 0;\n\t    }\n\t    px = 0;\n\t   }\n\t   error('JPX Error: Out of packets');\n\t  };\n\t }\n\t function ComponentPositionResolutionLayerIterator(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t  var componentsCount = siz.Csiz;\n\t  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t  var l = 0, r = 0, c = 0, px = 0, py = 0;\n\t  this.nextPacket = function JpxImage_nextPacket() {\n\t   for (; c < componentsCount; ++c) {\n\t    var component = tile.components[c];\n\t    var precinctsIterationSizes = precinctsSizes.components[c];\n\t    var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t     for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t      for (; r <= decompositionLevelsCount; r++) {\n\t       var resolution = component.resolutions[r];\n\t       var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n\t       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t       if (k === null) {\n\t        continue;\n\t       }\n\t       for (; l < layersCount;) {\n\t        var packet = createPacket(resolution, k, l);\n\t        l++;\n\t        return packet;\n\t       }\n\t       l = 0;\n\t      }\n\t      r = 0;\n\t     }\n\t     px = 0;\n\t    }\n\t    py = 0;\n\t   }\n\t   error('JPX Error: Out of packets');\n\t  };\n\t }\n\t function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n\t  var posX = pxIndex * precinctIterationSizes.minWidth;\n\t  var posY = pyIndex * precinctIterationSizes.minHeight;\n\t  if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n\t   return null;\n\t  }\n\t  var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n\t  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n\t }\n\t function getPrecinctSizesInImageScale(tile) {\n\t  var componentsCount = tile.components.length;\n\t  var minWidth = Number.MAX_VALUE;\n\t  var minHeight = Number.MAX_VALUE;\n\t  var maxNumWide = 0;\n\t  var maxNumHigh = 0;\n\t  var sizePerComponent = new Array(componentsCount);\n\t  for (var c = 0; c < componentsCount; c++) {\n\t   var component = tile.components[c];\n\t   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t   var sizePerResolution = new Array(decompositionLevelsCount + 1);\n\t   var minWidthCurrentComponent = Number.MAX_VALUE;\n\t   var minHeightCurrentComponent = Number.MAX_VALUE;\n\t   var maxNumWideCurrentComponent = 0;\n\t   var maxNumHighCurrentComponent = 0;\n\t   var scale = 1;\n\t   for (var r = decompositionLevelsCount; r >= 0; --r) {\n\t    var resolution = component.resolutions[r];\n\t    var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n\t    var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n\t    minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n\t    minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n\t    maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n\t    maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n\t    sizePerResolution[r] = {\n\t     width: widthCurrentResolution,\n\t     height: heightCurrentResolution\n\t    };\n\t    scale <<= 1;\n\t   }\n\t   minWidth = Math.min(minWidth, minWidthCurrentComponent);\n\t   minHeight = Math.min(minHeight, minHeightCurrentComponent);\n\t   maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n\t   maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n\t   sizePerComponent[c] = {\n\t    resolutions: sizePerResolution,\n\t    minWidth: minWidthCurrentComponent,\n\t    minHeight: minHeightCurrentComponent,\n\t    maxNumWide: maxNumWideCurrentComponent,\n\t    maxNumHigh: maxNumHighCurrentComponent\n\t   };\n\t  }\n\t  return {\n\t   components: sizePerComponent,\n\t   minWidth: minWidth,\n\t   minHeight: minHeight,\n\t   maxNumWide: maxNumWide,\n\t   maxNumHigh: maxNumHigh\n\t  };\n\t }\n\t function buildPackets(context) {\n\t  var siz = context.SIZ;\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var componentsCount = siz.Csiz;\n\t  for (var c = 0; c < componentsCount; c++) {\n\t   var component = tile.components[c];\n\t   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t   var resolutions = [];\n\t   var subbands = [];\n\t   for (var r = 0; r <= decompositionLevelsCount; r++) {\n\t    var blocksDimensions = getBlocksDimensions(context, component, r);\n\t    var resolution = {};\n\t    var scale = 1 << decompositionLevelsCount - r;\n\t    resolution.trx0 = Math.ceil(component.tcx0 / scale);\n\t    resolution.try0 = Math.ceil(component.tcy0 / scale);\n\t    resolution.trx1 = Math.ceil(component.tcx1 / scale);\n\t    resolution.try1 = Math.ceil(component.tcy1 / scale);\n\t    resolution.resLevel = r;\n\t    buildPrecincts(context, resolution, blocksDimensions);\n\t    resolutions.push(resolution);\n\t    var subband;\n\t    if (r === 0) {\n\t     subband = {};\n\t     subband.type = 'LL';\n\t     subband.tbx0 = Math.ceil(component.tcx0 / scale);\n\t     subband.tby0 = Math.ceil(component.tcy0 / scale);\n\t     subband.tbx1 = Math.ceil(component.tcx1 / scale);\n\t     subband.tby1 = Math.ceil(component.tcy1 / scale);\n\t     subband.resolution = resolution;\n\t     buildCodeblocks(context, subband, blocksDimensions);\n\t     subbands.push(subband);\n\t     resolution.subbands = [subband];\n\t    } else {\n\t     var bscale = 1 << decompositionLevelsCount - r + 1;\n\t     var resolutionSubbands = [];\n\t     subband = {};\n\t     subband.type = 'HL';\n\t     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t     subband.tby0 = Math.ceil(component.tcy0 / bscale);\n\t     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t     subband.tby1 = Math.ceil(component.tcy1 / bscale);\n\t     subband.resolution = resolution;\n\t     buildCodeblocks(context, subband, blocksDimensions);\n\t     subbands.push(subband);\n\t     resolutionSubbands.push(subband);\n\t     subband = {};\n\t     subband.type = 'LH';\n\t     subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n\t     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t     subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n\t     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t     subband.resolution = resolution;\n\t     buildCodeblocks(context, subband, blocksDimensions);\n\t     subbands.push(subband);\n\t     resolutionSubbands.push(subband);\n\t     subband = {};\n\t     subband.type = 'HH';\n\t     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t     subband.resolution = resolution;\n\t     buildCodeblocks(context, subband, blocksDimensions);\n\t     subbands.push(subband);\n\t     resolutionSubbands.push(subband);\n\t     resolution.subbands = resolutionSubbands;\n\t    }\n\t   }\n\t   component.resolutions = resolutions;\n\t   component.subbands = subbands;\n\t  }\n\t  var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\t  switch (progressionOrder) {\n\t  case 0:\n\t   tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n\t   break;\n\t  case 1:\n\t   tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n\t   break;\n\t  case 2:\n\t   tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n\t   break;\n\t  case 3:\n\t   tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n\t   break;\n\t  case 4:\n\t   tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n\t   break;\n\t  default:\n\t   error('JPX Error: Unsupported progression order ' + progressionOrder);\n\t  }\n\t }\n\t function parseTilePackets(context, data, offset, dataLength) {\n\t  var position = 0;\n\t  var buffer, bufferSize = 0, skipNextBit = false;\n\t  function readBits(count) {\n\t   while (bufferSize < count) {\n\t    var b = data[offset + position];\n\t    position++;\n\t    if (skipNextBit) {\n\t     buffer = buffer << 7 | b;\n\t     bufferSize += 7;\n\t     skipNextBit = false;\n\t    } else {\n\t     buffer = buffer << 8 | b;\n\t     bufferSize += 8;\n\t    }\n\t    if (b === 0xFF) {\n\t     skipNextBit = true;\n\t    }\n\t   }\n\t   bufferSize -= count;\n\t   return buffer >>> bufferSize & (1 << count) - 1;\n\t  }\n\t  function skipMarkerIfEqual(value) {\n\t   if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n\t    skipBytes(1);\n\t    return true;\n\t   } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n\t    skipBytes(2);\n\t    return true;\n\t   }\n\t   return false;\n\t  }\n\t  function skipBytes(count) {\n\t   position += count;\n\t  }\n\t  function alignToByte() {\n\t   bufferSize = 0;\n\t   if (skipNextBit) {\n\t    position++;\n\t    skipNextBit = false;\n\t   }\n\t  }\n\t  function readCodingpasses() {\n\t   if (readBits(1) === 0) {\n\t    return 1;\n\t   }\n\t   if (readBits(1) === 0) {\n\t    return 2;\n\t   }\n\t   var value = readBits(2);\n\t   if (value < 3) {\n\t    return value + 3;\n\t   }\n\t   value = readBits(5);\n\t   if (value < 31) {\n\t    return value + 6;\n\t   }\n\t   value = readBits(7);\n\t   return value + 37;\n\t  }\n\t  var tileIndex = context.currentTile.index;\n\t  var tile = context.tiles[tileIndex];\n\t  var sopMarkerUsed = context.COD.sopMarkerUsed;\n\t  var ephMarkerUsed = context.COD.ephMarkerUsed;\n\t  var packetsIterator = tile.packetsIterator;\n\t  while (position < dataLength) {\n\t   alignToByte();\n\t   if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n\t    skipBytes(4);\n\t   }\n\t   var packet = packetsIterator.nextPacket();\n\t   if (!readBits(1)) {\n\t    continue;\n\t   }\n\t   var layerNumber = packet.layerNumber;\n\t   var queue = [], codeblock;\n\t   for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n\t    codeblock = packet.codeblocks[i];\n\t    var precinct = codeblock.precinct;\n\t    var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n\t    var codeblockRow = codeblock.cby - precinct.cbyMin;\n\t    var codeblockIncluded = false;\n\t    var firstTimeInclusion = false;\n\t    var valueReady;\n\t    if (codeblock['included'] !== undefined) {\n\t     codeblockIncluded = !!readBits(1);\n\t    } else {\n\t     precinct = codeblock.precinct;\n\t     var inclusionTree, zeroBitPlanesTree;\n\t     if (precinct['inclusionTree'] !== undefined) {\n\t      inclusionTree = precinct.inclusionTree;\n\t     } else {\n\t      var width = precinct.cbxMax - precinct.cbxMin + 1;\n\t      var height = precinct.cbyMax - precinct.cbyMin + 1;\n\t      inclusionTree = new InclusionTree(width, height, layerNumber);\n\t      zeroBitPlanesTree = new TagTree(width, height);\n\t      precinct.inclusionTree = inclusionTree;\n\t      precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n\t     }\n\t     if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n\t      while (true) {\n\t       if (readBits(1)) {\n\t        valueReady = !inclusionTree.nextLevel();\n\t        if (valueReady) {\n\t         codeblock.included = true;\n\t         codeblockIncluded = firstTimeInclusion = true;\n\t         break;\n\t        }\n\t       } else {\n\t        inclusionTree.incrementValue(layerNumber);\n\t        break;\n\t       }\n\t      }\n\t     }\n\t    }\n\t    if (!codeblockIncluded) {\n\t     continue;\n\t    }\n\t    if (firstTimeInclusion) {\n\t     zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n\t     zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\t     while (true) {\n\t      if (readBits(1)) {\n\t       valueReady = !zeroBitPlanesTree.nextLevel();\n\t       if (valueReady) {\n\t        break;\n\t       }\n\t      } else {\n\t       zeroBitPlanesTree.incrementValue();\n\t      }\n\t     }\n\t     codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n\t    }\n\t    var codingpasses = readCodingpasses();\n\t    while (readBits(1)) {\n\t     codeblock.Lblock++;\n\t    }\n\t    var codingpassesLog2 = log2(codingpasses);\n\t    var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n\t    var codedDataLength = readBits(bits);\n\t    queue.push({\n\t     codeblock: codeblock,\n\t     codingpasses: codingpasses,\n\t     dataLength: codedDataLength\n\t    });\n\t   }\n\t   alignToByte();\n\t   if (ephMarkerUsed) {\n\t    skipMarkerIfEqual(0x92);\n\t   }\n\t   while (queue.length > 0) {\n\t    var packetItem = queue.shift();\n\t    codeblock = packetItem.codeblock;\n\t    if (codeblock['data'] === undefined) {\n\t     codeblock.data = [];\n\t    }\n\t    codeblock.data.push({\n\t     data: data,\n\t     start: offset + position,\n\t     end: offset + position + packetItem.dataLength,\n\t     codingpasses: packetItem.codingpasses\n\t    });\n\t    position += packetItem.dataLength;\n\t   }\n\t  }\n\t  return position;\n\t }\n\t function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n\t  var x0 = subband.tbx0;\n\t  var y0 = subband.tby0;\n\t  var width = subband.tbx1 - subband.tbx0;\n\t  var codeblocks = subband.codeblocks;\n\t  var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n\t  var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\t  for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n\t   var codeblock = codeblocks[i];\n\t   var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n\t   var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\t   if (blockWidth === 0 || blockHeight === 0) {\n\t    continue;\n\t   }\n\t   if (codeblock['data'] === undefined) {\n\t    continue;\n\t   }\n\t   var bitModel, currentCodingpassType;\n\t   bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n\t   currentCodingpassType = 2;\n\t   var data = codeblock.data, totalLength = 0, codingpasses = 0;\n\t   var j, jj, dataItem;\n\t   for (j = 0, jj = data.length; j < jj; j++) {\n\t    dataItem = data[j];\n\t    totalLength += dataItem.end - dataItem.start;\n\t    codingpasses += dataItem.codingpasses;\n\t   }\n\t   var encodedData = new Uint8Array(totalLength);\n\t   var position = 0;\n\t   for (j = 0, jj = data.length; j < jj; j++) {\n\t    dataItem = data[j];\n\t    var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n\t    encodedData.set(chunk, position);\n\t    position += chunk.length;\n\t   }\n\t   var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n\t   bitModel.setDecoder(decoder);\n\t   for (j = 0; j < codingpasses; j++) {\n\t    switch (currentCodingpassType) {\n\t    case 0:\n\t     bitModel.runSignificancePropagationPass();\n\t     break;\n\t    case 1:\n\t     bitModel.runMagnitudeRefinementPass();\n\t     break;\n\t    case 2:\n\t     bitModel.runCleanupPass();\n\t     if (segmentationSymbolUsed) {\n\t      bitModel.checkSegmentationSymbol();\n\t     }\n\t     break;\n\t    }\n\t    currentCodingpassType = (currentCodingpassType + 1) % 3;\n\t   }\n\t   var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n\t   var sign = bitModel.coefficentsSign;\n\t   var magnitude = bitModel.coefficentsMagnitude;\n\t   var bitsDecoded = bitModel.bitsDecoded;\n\t   var magnitudeCorrection = reversible ? 0 : 0.5;\n\t   var k, n, nb;\n\t   position = 0;\n\t   var interleave = subband.type !== 'LL';\n\t   for (j = 0; j < blockHeight; j++) {\n\t    var row = offset / width | 0;\n\t    var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\t    for (k = 0; k < blockWidth; k++) {\n\t     n = magnitude[position];\n\t     if (n !== 0) {\n\t      n = (n + magnitudeCorrection) * delta;\n\t      if (sign[position] !== 0) {\n\t       n = -n;\n\t      }\n\t      nb = bitsDecoded[position];\n\t      var pos = interleave ? levelOffset + (offset << 1) : offset;\n\t      if (reversible && nb >= mb) {\n\t       coefficients[pos] = n;\n\t      } else {\n\t       coefficients[pos] = n * (1 << mb - nb);\n\t      }\n\t     }\n\t     offset++;\n\t     position++;\n\t    }\n\t    offset += width - blockWidth;\n\t   }\n\t  }\n\t }\n\t function transformTile(context, tile, c) {\n\t  var component = tile.components[c];\n\t  var codingStyleParameters = component.codingStyleParameters;\n\t  var quantizationParameters = component.quantizationParameters;\n\t  var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n\t  var spqcds = quantizationParameters.SPqcds;\n\t  var scalarExpounded = quantizationParameters.scalarExpounded;\n\t  var guardBits = quantizationParameters.guardBits;\n\t  var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n\t  var precision = context.components[c].precision;\n\t  var reversible = codingStyleParameters.reversibleTransformation;\n\t  var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n\t  var subbandCoefficients = [];\n\t  var b = 0;\n\t  for (var i = 0; i <= decompositionLevelsCount; i++) {\n\t   var resolution = component.resolutions[i];\n\t   var width = resolution.trx1 - resolution.trx0;\n\t   var height = resolution.try1 - resolution.try0;\n\t   var coefficients = new Float32Array(width * height);\n\t   for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n\t    var mu, epsilon;\n\t    if (!scalarExpounded) {\n\t     mu = spqcds[0].mu;\n\t     epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n\t    } else {\n\t     mu = spqcds[b].mu;\n\t     epsilon = spqcds[b].epsilon;\n\t     b++;\n\t    }\n\t    var subband = resolution.subbands[j];\n\t    var gainLog2 = SubbandsGainLog2[subband.type];\n\t    var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n\t    var mb = guardBits + epsilon - 1;\n\t    copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n\t   }\n\t   subbandCoefficients.push({\n\t    width: width,\n\t    height: height,\n\t    items: coefficients\n\t   });\n\t  }\n\t  var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n\t  return {\n\t   left: component.tcx0,\n\t   top: component.tcy0,\n\t   width: result.width,\n\t   height: result.height,\n\t   items: result.items\n\t  };\n\t }\n\t function transformComponents(context) {\n\t  var siz = context.SIZ;\n\t  var components = context.components;\n\t  var componentsCount = siz.Csiz;\n\t  var resultImages = [];\n\t  for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n\t   var tile = context.tiles[i];\n\t   var transformedTiles = [];\n\t   var c;\n\t   for (c = 0; c < componentsCount; c++) {\n\t    transformedTiles[c] = transformTile(context, tile, c);\n\t   }\n\t   var tile0 = transformedTiles[0];\n\t   var out = new Uint8Array(tile0.items.length * componentsCount);\n\t   var result = {\n\t    left: tile0.left,\n\t    top: tile0.top,\n\t    width: tile0.width,\n\t    height: tile0.height,\n\t    items: out\n\t   };\n\t   var shift, offset, max, min, maxK;\n\t   var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n\t   if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n\t    var fourComponents = componentsCount === 4;\n\t    var y0items = transformedTiles[0].items;\n\t    var y1items = transformedTiles[1].items;\n\t    var y2items = transformedTiles[2].items;\n\t    var y3items = fourComponents ? transformedTiles[3].items : null;\n\t    shift = components[0].precision - 8;\n\t    offset = (128 << shift) + 0.5;\n\t    max = 255 * (1 << shift);\n\t    maxK = max * 0.5;\n\t    min = -maxK;\n\t    var component0 = tile.components[0];\n\t    var alpha01 = componentsCount - 3;\n\t    jj = y0items.length;\n\t    if (!component0.codingStyleParameters.reversibleTransformation) {\n\t     for (j = 0; j < jj; j++, pos += alpha01) {\n\t      y0 = y0items[j] + offset;\n\t      y1 = y1items[j];\n\t      y2 = y2items[j];\n\t      r = y0 + 1.402 * y2;\n\t      g = y0 - 0.34413 * y1 - 0.71414 * y2;\n\t      b = y0 + 1.772 * y1;\n\t      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n\t      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n\t      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n\t     }\n\t    } else {\n\t     for (j = 0; j < jj; j++, pos += alpha01) {\n\t      y0 = y0items[j] + offset;\n\t      y1 = y1items[j];\n\t      y2 = y2items[j];\n\t      g = y0 - (y2 + y1 >> 2);\n\t      r = g + y2;\n\t      b = g + y1;\n\t      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n\t      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n\t      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n\t     }\n\t    }\n\t    if (fourComponents) {\n\t     for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n\t      k = y3items[j];\n\t      out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n\t     }\n\t    }\n\t   } else {\n\t    for (c = 0; c < componentsCount; c++) {\n\t     var items = transformedTiles[c].items;\n\t     shift = components[c].precision - 8;\n\t     offset = (128 << shift) + 0.5;\n\t     max = 127.5 * (1 << shift);\n\t     min = -max;\n\t     for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n\t      val = items[j];\n\t      out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n\t      pos += componentsCount;\n\t     }\n\t    }\n\t   }\n\t   resultImages.push(result);\n\t  }\n\t  return resultImages;\n\t }\n\t function initializeTile(context, tileIndex) {\n\t  var siz = context.SIZ;\n\t  var componentsCount = siz.Csiz;\n\t  var tile = context.tiles[tileIndex];\n\t  for (var c = 0; c < componentsCount; c++) {\n\t   var component = tile.components[c];\n\t   var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n\t   component.quantizationParameters = qcdOrQcc;\n\t   var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n\t   component.codingStyleParameters = codOrCoc;\n\t  }\n\t  tile.codingStyleDefaultParameters = context.currentTile.COD;\n\t }\n\t var TagTree = function TagTreeClosure() {\n\t  function TagTree(width, height) {\n\t   var levelsLength = log2(Math.max(width, height)) + 1;\n\t   this.levels = [];\n\t   for (var i = 0; i < levelsLength; i++) {\n\t    var level = {\n\t     width: width,\n\t     height: height,\n\t     items: []\n\t    };\n\t    this.levels.push(level);\n\t    width = Math.ceil(width / 2);\n\t    height = Math.ceil(height / 2);\n\t   }\n\t  }\n\t  TagTree.prototype = {\n\t   reset: function TagTree_reset(i, j) {\n\t    var currentLevel = 0, value = 0, level;\n\t    while (currentLevel < this.levels.length) {\n\t     level = this.levels[currentLevel];\n\t     var index = i + j * level.width;\n\t     if (level.items[index] !== undefined) {\n\t      value = level.items[index];\n\t      break;\n\t     }\n\t     level.index = index;\n\t     i >>= 1;\n\t     j >>= 1;\n\t     currentLevel++;\n\t    }\n\t    currentLevel--;\n\t    level = this.levels[currentLevel];\n\t    level.items[level.index] = value;\n\t    this.currentLevel = currentLevel;\n\t    delete this.value;\n\t   },\n\t   incrementValue: function TagTree_incrementValue() {\n\t    var level = this.levels[this.currentLevel];\n\t    level.items[level.index]++;\n\t   },\n\t   nextLevel: function TagTree_nextLevel() {\n\t    var currentLevel = this.currentLevel;\n\t    var level = this.levels[currentLevel];\n\t    var value = level.items[level.index];\n\t    currentLevel--;\n\t    if (currentLevel < 0) {\n\t     this.value = value;\n\t     return false;\n\t    }\n\t    this.currentLevel = currentLevel;\n\t    level = this.levels[currentLevel];\n\t    level.items[level.index] = value;\n\t    return true;\n\t   }\n\t  };\n\t  return TagTree;\n\t }();\n\t var InclusionTree = function InclusionTreeClosure() {\n\t  function InclusionTree(width, height, defaultValue) {\n\t   var levelsLength = log2(Math.max(width, height)) + 1;\n\t   this.levels = [];\n\t   for (var i = 0; i < levelsLength; i++) {\n\t    var items = new Uint8Array(width * height);\n\t    for (var j = 0, jj = items.length; j < jj; j++) {\n\t     items[j] = defaultValue;\n\t    }\n\t    var level = {\n\t     width: width,\n\t     height: height,\n\t     items: items\n\t    };\n\t    this.levels.push(level);\n\t    width = Math.ceil(width / 2);\n\t    height = Math.ceil(height / 2);\n\t   }\n\t  }\n\t  InclusionTree.prototype = {\n\t   reset: function InclusionTree_reset(i, j, stopValue) {\n\t    var currentLevel = 0;\n\t    while (currentLevel < this.levels.length) {\n\t     var level = this.levels[currentLevel];\n\t     var index = i + j * level.width;\n\t     level.index = index;\n\t     var value = level.items[index];\n\t     if (value === 0xFF) {\n\t      break;\n\t     }\n\t     if (value > stopValue) {\n\t      this.currentLevel = currentLevel;\n\t      this.propagateValues();\n\t      return false;\n\t     }\n\t     i >>= 1;\n\t     j >>= 1;\n\t     currentLevel++;\n\t    }\n\t    this.currentLevel = currentLevel - 1;\n\t    return true;\n\t   },\n\t   incrementValue: function InclusionTree_incrementValue(stopValue) {\n\t    var level = this.levels[this.currentLevel];\n\t    level.items[level.index] = stopValue + 1;\n\t    this.propagateValues();\n\t   },\n\t   propagateValues: function InclusionTree_propagateValues() {\n\t    var levelIndex = this.currentLevel;\n\t    var level = this.levels[levelIndex];\n\t    var currentValue = level.items[level.index];\n\t    while (--levelIndex >= 0) {\n\t     level = this.levels[levelIndex];\n\t     level.items[level.index] = currentValue;\n\t    }\n\t   },\n\t   nextLevel: function InclusionTree_nextLevel() {\n\t    var currentLevel = this.currentLevel;\n\t    var level = this.levels[currentLevel];\n\t    var value = level.items[level.index];\n\t    level.items[level.index] = 0xFF;\n\t    currentLevel--;\n\t    if (currentLevel < 0) {\n\t     return false;\n\t    }\n\t    this.currentLevel = currentLevel;\n\t    level = this.levels[currentLevel];\n\t    level.items[level.index] = value;\n\t    return true;\n\t   }\n\t  };\n\t  return InclusionTree;\n\t }();\n\t var BitModel = function BitModelClosure() {\n\t  var UNIFORM_CONTEXT = 17;\n\t  var RUNLENGTH_CONTEXT = 18;\n\t  var LLAndLHContextsLabel = new Uint8Array([\n\t   0,\n\t   5,\n\t   8,\n\t   0,\n\t   3,\n\t   7,\n\t   8,\n\t   0,\n\t   4,\n\t   7,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   1,\n\t   6,\n\t   8,\n\t   0,\n\t   3,\n\t   7,\n\t   8,\n\t   0,\n\t   4,\n\t   7,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   6,\n\t   8,\n\t   0,\n\t   3,\n\t   7,\n\t   8,\n\t   0,\n\t   4,\n\t   7,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   6,\n\t   8,\n\t   0,\n\t   3,\n\t   7,\n\t   8,\n\t   0,\n\t   4,\n\t   7,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   6,\n\t   8,\n\t   0,\n\t   3,\n\t   7,\n\t   8,\n\t   0,\n\t   4,\n\t   7,\n\t   8\n\t  ]);\n\t  var HLContextLabel = new Uint8Array([\n\t   0,\n\t   3,\n\t   4,\n\t   0,\n\t   5,\n\t   7,\n\t   7,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   1,\n\t   3,\n\t   4,\n\t   0,\n\t   6,\n\t   7,\n\t   7,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   3,\n\t   4,\n\t   0,\n\t   6,\n\t   7,\n\t   7,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   3,\n\t   4,\n\t   0,\n\t   6,\n\t   7,\n\t   7,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   2,\n\t   3,\n\t   4,\n\t   0,\n\t   6,\n\t   7,\n\t   7,\n\t   0,\n\t   8,\n\t   8,\n\t   8\n\t  ]);\n\t  var HHContextLabel = new Uint8Array([\n\t   0,\n\t   1,\n\t   2,\n\t   0,\n\t   1,\n\t   2,\n\t   2,\n\t   0,\n\t   2,\n\t   2,\n\t   2,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   3,\n\t   4,\n\t   5,\n\t   0,\n\t   4,\n\t   5,\n\t   5,\n\t   0,\n\t   5,\n\t   5,\n\t   5,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   6,\n\t   7,\n\t   7,\n\t   0,\n\t   7,\n\t   7,\n\t   7,\n\t   0,\n\t   7,\n\t   7,\n\t   7,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   8,\n\t   8,\n\t   8,\n\t   0,\n\t   8,\n\t   8,\n\t   8\n\t  ]);\n\t  function BitModel(width, height, subband, zeroBitPlanes, mb) {\n\t   this.width = width;\n\t   this.height = height;\n\t   this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n\t   var coefficientCount = width * height;\n\t   this.neighborsSignificance = new Uint8Array(coefficientCount);\n\t   this.coefficentsSign = new Uint8Array(coefficientCount);\n\t   this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n\t   this.processingFlags = new Uint8Array(coefficientCount);\n\t   var bitsDecoded = new Uint8Array(coefficientCount);\n\t   if (zeroBitPlanes !== 0) {\n\t    for (var i = 0; i < coefficientCount; i++) {\n\t     bitsDecoded[i] = zeroBitPlanes;\n\t    }\n\t   }\n\t   this.bitsDecoded = bitsDecoded;\n\t   this.reset();\n\t  }\n\t  BitModel.prototype = {\n\t   setDecoder: function BitModel_setDecoder(decoder) {\n\t    this.decoder = decoder;\n\t   },\n\t   reset: function BitModel_reset() {\n\t    this.contexts = new Int8Array(19);\n\t    this.contexts[0] = 4 << 1 | 0;\n\t    this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n\t    this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n\t   },\n\t   setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n\t    var neighborsSignificance = this.neighborsSignificance;\n\t    var width = this.width, height = this.height;\n\t    var left = column > 0;\n\t    var right = column + 1 < width;\n\t    var i;\n\t    if (row > 0) {\n\t     i = index - width;\n\t     if (left) {\n\t      neighborsSignificance[i - 1] += 0x10;\n\t     }\n\t     if (right) {\n\t      neighborsSignificance[i + 1] += 0x10;\n\t     }\n\t     neighborsSignificance[i] += 0x04;\n\t    }\n\t    if (row + 1 < height) {\n\t     i = index + width;\n\t     if (left) {\n\t      neighborsSignificance[i - 1] += 0x10;\n\t     }\n\t     if (right) {\n\t      neighborsSignificance[i + 1] += 0x10;\n\t     }\n\t     neighborsSignificance[i] += 0x04;\n\t    }\n\t    if (left) {\n\t     neighborsSignificance[index - 1] += 0x01;\n\t    }\n\t    if (right) {\n\t     neighborsSignificance[index + 1] += 0x01;\n\t    }\n\t    neighborsSignificance[index] |= 0x80;\n\t   },\n\t   runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n\t    var decoder = this.decoder;\n\t    var width = this.width, height = this.height;\n\t    var coefficentsMagnitude = this.coefficentsMagnitude;\n\t    var coefficentsSign = this.coefficentsSign;\n\t    var neighborsSignificance = this.neighborsSignificance;\n\t    var processingFlags = this.processingFlags;\n\t    var contexts = this.contexts;\n\t    var labels = this.contextLabelTable;\n\t    var bitsDecoded = this.bitsDecoded;\n\t    var processedInverseMask = ~1;\n\t    var processedMask = 1;\n\t    var firstMagnitudeBitMask = 2;\n\t    for (var i0 = 0; i0 < height; i0 += 4) {\n\t     for (var j = 0; j < width; j++) {\n\t      var index = i0 * width + j;\n\t      for (var i1 = 0; i1 < 4; i1++, index += width) {\n\t       var i = i0 + i1;\n\t       if (i >= height) {\n\t        break;\n\t       }\n\t       processingFlags[index] &= processedInverseMask;\n\t       if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n\t        continue;\n\t       }\n\t       var contextLabel = labels[neighborsSignificance[index]];\n\t       var decision = decoder.readBit(contexts, contextLabel);\n\t       if (decision) {\n\t        var sign = this.decodeSignBit(i, j, index);\n\t        coefficentsSign[index] = sign;\n\t        coefficentsMagnitude[index] = 1;\n\t        this.setNeighborsSignificance(i, j, index);\n\t        processingFlags[index] |= firstMagnitudeBitMask;\n\t       }\n\t       bitsDecoded[index]++;\n\t       processingFlags[index] |= processedMask;\n\t      }\n\t     }\n\t    }\n\t   },\n\t   decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n\t    var width = this.width, height = this.height;\n\t    var coefficentsMagnitude = this.coefficentsMagnitude;\n\t    var coefficentsSign = this.coefficentsSign;\n\t    var contribution, sign0, sign1, significance1;\n\t    var contextLabel, decoded;\n\t    significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\t    if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n\t     sign1 = coefficentsSign[index + 1];\n\t     if (significance1) {\n\t      sign0 = coefficentsSign[index - 1];\n\t      contribution = 1 - sign1 - sign0;\n\t     } else {\n\t      contribution = 1 - sign1 - sign1;\n\t     }\n\t    } else if (significance1) {\n\t     sign0 = coefficentsSign[index - 1];\n\t     contribution = 1 - sign0 - sign0;\n\t    } else {\n\t     contribution = 0;\n\t    }\n\t    var horizontalContribution = 3 * contribution;\n\t    significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\t    if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n\t     sign1 = coefficentsSign[index + width];\n\t     if (significance1) {\n\t      sign0 = coefficentsSign[index - width];\n\t      contribution = 1 - sign1 - sign0 + horizontalContribution;\n\t     } else {\n\t      contribution = 1 - sign1 - sign1 + horizontalContribution;\n\t     }\n\t    } else if (significance1) {\n\t     sign0 = coefficentsSign[index - width];\n\t     contribution = 1 - sign0 - sign0 + horizontalContribution;\n\t    } else {\n\t     contribution = horizontalContribution;\n\t    }\n\t    if (contribution >= 0) {\n\t     contextLabel = 9 + contribution;\n\t     decoded = this.decoder.readBit(this.contexts, contextLabel);\n\t    } else {\n\t     contextLabel = 9 - contribution;\n\t     decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n\t    }\n\t    return decoded;\n\t   },\n\t   runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n\t    var decoder = this.decoder;\n\t    var width = this.width, height = this.height;\n\t    var coefficentsMagnitude = this.coefficentsMagnitude;\n\t    var neighborsSignificance = this.neighborsSignificance;\n\t    var contexts = this.contexts;\n\t    var bitsDecoded = this.bitsDecoded;\n\t    var processingFlags = this.processingFlags;\n\t    var processedMask = 1;\n\t    var firstMagnitudeBitMask = 2;\n\t    var length = width * height;\n\t    var width4 = width * 4;\n\t    for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n\t     indexNext = Math.min(length, index0 + width4);\n\t     for (var j = 0; j < width; j++) {\n\t      for (var index = index0 + j; index < indexNext; index += width) {\n\t       if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t        continue;\n\t       }\n\t       var contextLabel = 16;\n\t       if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n\t        processingFlags[index] ^= firstMagnitudeBitMask;\n\t        var significance = neighborsSignificance[index] & 127;\n\t        contextLabel = significance === 0 ? 15 : 14;\n\t       }\n\t       var bit = decoder.readBit(contexts, contextLabel);\n\t       coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n\t       bitsDecoded[index]++;\n\t       processingFlags[index] |= processedMask;\n\t      }\n\t     }\n\t    }\n\t   },\n\t   runCleanupPass: function BitModel_runCleanupPass() {\n\t    var decoder = this.decoder;\n\t    var width = this.width, height = this.height;\n\t    var neighborsSignificance = this.neighborsSignificance;\n\t    var coefficentsMagnitude = this.coefficentsMagnitude;\n\t    var coefficentsSign = this.coefficentsSign;\n\t    var contexts = this.contexts;\n\t    var labels = this.contextLabelTable;\n\t    var bitsDecoded = this.bitsDecoded;\n\t    var processingFlags = this.processingFlags;\n\t    var processedMask = 1;\n\t    var firstMagnitudeBitMask = 2;\n\t    var oneRowDown = width;\n\t    var twoRowsDown = width * 2;\n\t    var threeRowsDown = width * 3;\n\t    var iNext;\n\t    for (var i0 = 0; i0 < height; i0 = iNext) {\n\t     iNext = Math.min(i0 + 4, height);\n\t     var indexBase = i0 * width;\n\t     var checkAllEmpty = i0 + 3 < height;\n\t     for (var j = 0; j < width; j++) {\n\t      var index0 = indexBase + j;\n\t      var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n\t      var i1 = 0, index = index0;\n\t      var i = i0, sign;\n\t      if (allEmpty) {\n\t       var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\t       if (!hasSignificantCoefficent) {\n\t        bitsDecoded[index0]++;\n\t        bitsDecoded[index0 + oneRowDown]++;\n\t        bitsDecoded[index0 + twoRowsDown]++;\n\t        bitsDecoded[index0 + threeRowsDown]++;\n\t        continue;\n\t       }\n\t       i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t       if (i1 !== 0) {\n\t        i = i0 + i1;\n\t        index += i1 * width;\n\t       }\n\t       sign = this.decodeSignBit(i, j, index);\n\t       coefficentsSign[index] = sign;\n\t       coefficentsMagnitude[index] = 1;\n\t       this.setNeighborsSignificance(i, j, index);\n\t       processingFlags[index] |= firstMagnitudeBitMask;\n\t       index = index0;\n\t       for (var i2 = i0; i2 <= i; i2++, index += width) {\n\t        bitsDecoded[index]++;\n\t       }\n\t       i1++;\n\t      }\n\t      for (i = i0 + i1; i < iNext; i++, index += width) {\n\t       if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t        continue;\n\t       }\n\t       var contextLabel = labels[neighborsSignificance[index]];\n\t       var decision = decoder.readBit(contexts, contextLabel);\n\t       if (decision === 1) {\n\t        sign = this.decodeSignBit(i, j, index);\n\t        coefficentsSign[index] = sign;\n\t        coefficentsMagnitude[index] = 1;\n\t        this.setNeighborsSignificance(i, j, index);\n\t        processingFlags[index] |= firstMagnitudeBitMask;\n\t       }\n\t       bitsDecoded[index]++;\n\t      }\n\t     }\n\t    }\n\t   },\n\t   checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n\t    var decoder = this.decoder;\n\t    var contexts = this.contexts;\n\t    var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t    if (symbol !== 0xA) {\n\t     error('JPX Error: Invalid segmentation symbol');\n\t    }\n\t   }\n\t  };\n\t  return BitModel;\n\t }();\n\t var Transform = function TransformClosure() {\n\t  function Transform() {\n\t  }\n\t  Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n\t   var ll = subbands[0];\n\t   for (var i = 1, ii = subbands.length; i < ii; i++) {\n\t    ll = this.iterate(ll, subbands[i], u0, v0);\n\t   }\n\t   return ll;\n\t  };\n\t  Transform.prototype.extend = function extend(buffer, offset, size) {\n\t   var i1 = offset - 1, j1 = offset + 1;\n\t   var i2 = offset + size - 2, j2 = offset + size;\n\t   buffer[i1--] = buffer[j1++];\n\t   buffer[j2++] = buffer[i2--];\n\t   buffer[i1--] = buffer[j1++];\n\t   buffer[j2++] = buffer[i2--];\n\t   buffer[i1--] = buffer[j1++];\n\t   buffer[j2++] = buffer[i2--];\n\t   buffer[i1] = buffer[j1];\n\t   buffer[j2] = buffer[i2];\n\t  };\n\t  Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n\t   var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n\t   var width = hl_lh_hh.width;\n\t   var height = hl_lh_hh.height;\n\t   var items = hl_lh_hh.items;\n\t   var i, j, k, l, u, v;\n\t   for (k = 0, i = 0; i < llHeight; i++) {\n\t    l = i * 2 * width;\n\t    for (j = 0; j < llWidth; j++, k++, l += 2) {\n\t     items[l] = llItems[k];\n\t    }\n\t   }\n\t   llItems = ll.items = null;\n\t   var bufferPadding = 4;\n\t   var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\t   if (width === 1) {\n\t    if ((u0 & 1) !== 0) {\n\t     for (v = 0, k = 0; v < height; v++, k += width) {\n\t      items[k] *= 0.5;\n\t     }\n\t    }\n\t   } else {\n\t    for (v = 0, k = 0; v < height; v++, k += width) {\n\t     rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\t     this.extend(rowBuffer, bufferPadding, width);\n\t     this.filter(rowBuffer, bufferPadding, width);\n\t     items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n\t    }\n\t   }\n\t   var numBuffers = 16;\n\t   var colBuffers = [];\n\t   for (i = 0; i < numBuffers; i++) {\n\t    colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n\t   }\n\t   var b, currentBuffer = 0;\n\t   ll = bufferPadding + height;\n\t   if (height === 1) {\n\t    if ((v0 & 1) !== 0) {\n\t     for (u = 0; u < width; u++) {\n\t      items[u] *= 0.5;\n\t     }\n\t    }\n\t   } else {\n\t    for (u = 0; u < width; u++) {\n\t     if (currentBuffer === 0) {\n\t      numBuffers = Math.min(width - u, numBuffers);\n\t      for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n\t       for (b = 0; b < numBuffers; b++) {\n\t        colBuffers[b][l] = items[k + b];\n\t       }\n\t      }\n\t      currentBuffer = numBuffers;\n\t     }\n\t     currentBuffer--;\n\t     var buffer = colBuffers[currentBuffer];\n\t     this.extend(buffer, bufferPadding, height);\n\t     this.filter(buffer, bufferPadding, height);\n\t     if (currentBuffer === 0) {\n\t      k = u - numBuffers + 1;\n\t      for (l = bufferPadding; l < ll; k += width, l++) {\n\t       for (b = 0; b < numBuffers; b++) {\n\t        items[k + b] = colBuffers[b][l];\n\t       }\n\t      }\n\t     }\n\t    }\n\t   }\n\t   return {\n\t    width: width,\n\t    height: height,\n\t    items: items\n\t   };\n\t  };\n\t  return Transform;\n\t }();\n\t var IrreversibleTransform = function IrreversibleTransformClosure() {\n\t  function IrreversibleTransform() {\n\t   Transform.call(this);\n\t  }\n\t  IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\t  IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n\t   var len = length >> 1;\n\t   offset = offset | 0;\n\t   var j, n, current, next;\n\t   var alpha = -1.586134342059924;\n\t   var beta = -0.052980118572961;\n\t   var gamma = 0.882911075530934;\n\t   var delta = 0.443506852043971;\n\t   var K = 1.230174104914001;\n\t   var K_ = 1 / K;\n\t   j = offset - 3;\n\t   for (n = len + 4; n--; j += 2) {\n\t    x[j] *= K_;\n\t   }\n\t   j = offset - 2;\n\t   current = delta * x[j - 1];\n\t   for (n = len + 3; n--; j += 2) {\n\t    next = delta * x[j + 1];\n\t    x[j] = K * x[j] - current - next;\n\t    if (n--) {\n\t     j += 2;\n\t     current = delta * x[j + 1];\n\t     x[j] = K * x[j] - current - next;\n\t    } else {\n\t     break;\n\t    }\n\t   }\n\t   j = offset - 1;\n\t   current = gamma * x[j - 1];\n\t   for (n = len + 2; n--; j += 2) {\n\t    next = gamma * x[j + 1];\n\t    x[j] -= current + next;\n\t    if (n--) {\n\t     j += 2;\n\t     current = gamma * x[j + 1];\n\t     x[j] -= current + next;\n\t    } else {\n\t     break;\n\t    }\n\t   }\n\t   j = offset;\n\t   current = beta * x[j - 1];\n\t   for (n = len + 1; n--; j += 2) {\n\t    next = beta * x[j + 1];\n\t    x[j] -= current + next;\n\t    if (n--) {\n\t     j += 2;\n\t     current = beta * x[j + 1];\n\t     x[j] -= current + next;\n\t    } else {\n\t     break;\n\t    }\n\t   }\n\t   if (len !== 0) {\n\t    j = offset + 1;\n\t    current = alpha * x[j - 1];\n\t    for (n = len; n--; j += 2) {\n\t     next = alpha * x[j + 1];\n\t     x[j] -= current + next;\n\t     if (n--) {\n\t      j += 2;\n\t      current = alpha * x[j + 1];\n\t      x[j] -= current + next;\n\t     } else {\n\t      break;\n\t     }\n\t    }\n\t   }\n\t  };\n\t  return IrreversibleTransform;\n\t }();\n\t var ReversibleTransform = function ReversibleTransformClosure() {\n\t  function ReversibleTransform() {\n\t   Transform.call(this);\n\t  }\n\t  ReversibleTransform.prototype = Object.create(Transform.prototype);\n\t  ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n\t   var len = length >> 1;\n\t   offset = offset | 0;\n\t   var j, n;\n\t   for (j = offset, n = len + 1; n--; j += 2) {\n\t    x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n\t   }\n\t   for (j = offset + 1, n = len; n--; j += 2) {\n\t    x[j] += x[j - 1] + x[j + 1] >> 1;\n\t   }\n\t  };\n\t  return ReversibleTransform;\n\t }();\n\t return JpxImage;\n\t}();\n\texports.JpxImage = JpxImage;\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreCrypto = __w_pdfjs_require__(12);\n\tvar coreParser = __w_pdfjs_require__(5);\n\tvar coreChunkedStream = __w_pdfjs_require__(11);\n\tvar coreColorSpace = __w_pdfjs_require__(3);\n\tvar InvalidPDFException = sharedUtil.InvalidPDFException;\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar XRefParseException = sharedUtil.XRefParseException;\n\tvar assert = sharedUtil.assert;\n\tvar bytesToString = sharedUtil.bytesToString;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isBool = sharedUtil.isBool;\n\tvar isInt = sharedUtil.isInt;\n\tvar isString = sharedUtil.isString;\n\tvar shadow = sharedUtil.shadow;\n\tvar stringToPDFString = sharedUtil.stringToPDFString;\n\tvar stringToUTF8String = sharedUtil.stringToUTF8String;\n\tvar warn = sharedUtil.warn;\n\tvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n\tvar Util = sharedUtil.Util;\n\tvar Ref = corePrimitives.Ref;\n\tvar RefSet = corePrimitives.RefSet;\n\tvar RefSetCache = corePrimitives.RefSetCache;\n\tvar isName = corePrimitives.isName;\n\tvar isCmd = corePrimitives.isCmd;\n\tvar isDict = corePrimitives.isDict;\n\tvar isRef = corePrimitives.isRef;\n\tvar isRefsEqual = corePrimitives.isRefsEqual;\n\tvar isStream = corePrimitives.isStream;\n\tvar CipherTransformFactory = coreCrypto.CipherTransformFactory;\n\tvar Lexer = coreParser.Lexer;\n\tvar Parser = coreParser.Parser;\n\tvar ChunkedStream = coreChunkedStream.ChunkedStream;\n\tvar ColorSpace = coreColorSpace.ColorSpace;\n\tvar Catalog = function CatalogClosure() {\n\t function Catalog(pdfManager, xref, pageFactory) {\n\t  this.pdfManager = pdfManager;\n\t  this.xref = xref;\n\t  this.catDict = xref.getCatalogObj();\n\t  this.fontCache = new RefSetCache();\n\t  this.builtInCMapCache = Object.create(null);\n\t  assert(isDict(this.catDict), 'catalog object is not a dictionary');\n\t  this.pageFactory = pageFactory;\n\t  this.pagePromises = [];\n\t }\n\t Catalog.prototype = {\n\t  get metadata() {\n\t   var streamRef = this.catDict.getRaw('Metadata');\n\t   if (!isRef(streamRef)) {\n\t    return shadow(this, 'metadata', null);\n\t   }\n\t   var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n\t   var stream = this.xref.fetch(streamRef, !encryptMetadata);\n\t   var metadata;\n\t   if (stream && isDict(stream.dict)) {\n\t    var type = stream.dict.get('Type');\n\t    var subtype = stream.dict.get('Subtype');\n\t    if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n\t     try {\n\t      metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n\t     } catch (e) {\n\t      info('Skipping invalid metadata.');\n\t     }\n\t    }\n\t   }\n\t   return shadow(this, 'metadata', metadata);\n\t  },\n\t  get toplevelPagesDict() {\n\t   var pagesObj = this.catDict.get('Pages');\n\t   assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n\t   return shadow(this, 'toplevelPagesDict', pagesObj);\n\t  },\n\t  get documentOutline() {\n\t   var obj = null;\n\t   try {\n\t    obj = this.readDocumentOutline();\n\t   } catch (ex) {\n\t    if (ex instanceof MissingDataException) {\n\t     throw ex;\n\t    }\n\t    warn('Unable to read document outline');\n\t   }\n\t   return shadow(this, 'documentOutline', obj);\n\t  },\n\t  readDocumentOutline: function Catalog_readDocumentOutline() {\n\t   var obj = this.catDict.get('Outlines');\n\t   if (!isDict(obj)) {\n\t    return null;\n\t   }\n\t   obj = obj.getRaw('First');\n\t   if (!isRef(obj)) {\n\t    return null;\n\t   }\n\t   var root = { items: [] };\n\t   var queue = [{\n\t     obj: obj,\n\t     parent: root\n\t    }];\n\t   var processed = new RefSet();\n\t   processed.put(obj);\n\t   var xref = this.xref, blackColor = new Uint8Array(3);\n\t   while (queue.length > 0) {\n\t    var i = queue.shift();\n\t    var outlineDict = xref.fetchIfRef(i.obj);\n\t    if (outlineDict === null) {\n\t     continue;\n\t    }\n\t    assert(outlineDict.has('Title'), 'Invalid outline item');\n\t    var data = {\n\t     url: null,\n\t     dest: null\n\t    };\n\t    Catalog.parseDestDictionary({\n\t     destDict: outlineDict,\n\t     resultObj: data,\n\t     docBaseUrl: this.pdfManager.docBaseUrl\n\t    });\n\t    var title = outlineDict.get('Title');\n\t    var flags = outlineDict.get('F') || 0;\n\t    var color = outlineDict.getArray('C'), rgbColor = blackColor;\n\t    if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n\t     rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n\t    }\n\t    var outlineItem = {\n\t     dest: data.dest,\n\t     url: data.url,\n\t     unsafeUrl: data.unsafeUrl,\n\t     newWindow: data.newWindow,\n\t     title: stringToPDFString(title),\n\t     color: rgbColor,\n\t     count: outlineDict.get('Count'),\n\t     bold: !!(flags & 2),\n\t     italic: !!(flags & 1),\n\t     items: []\n\t    };\n\t    i.parent.items.push(outlineItem);\n\t    obj = outlineDict.getRaw('First');\n\t    if (isRef(obj) && !processed.has(obj)) {\n\t     queue.push({\n\t      obj: obj,\n\t      parent: outlineItem\n\t     });\n\t     processed.put(obj);\n\t    }\n\t    obj = outlineDict.getRaw('Next');\n\t    if (isRef(obj) && !processed.has(obj)) {\n\t     queue.push({\n\t      obj: obj,\n\t      parent: i.parent\n\t     });\n\t     processed.put(obj);\n\t    }\n\t   }\n\t   return root.items.length > 0 ? root.items : null;\n\t  },\n\t  get numPages() {\n\t   var obj = this.toplevelPagesDict.get('Count');\n\t   assert(isInt(obj), 'page count in top level pages object is not an integer');\n\t   return shadow(this, 'num', obj);\n\t  },\n\t  get destinations() {\n\t   function fetchDestination(dest) {\n\t    return isDict(dest) ? dest.get('D') : dest;\n\t   }\n\t   var xref = this.xref;\n\t   var dests = {}, nameTreeRef, nameDictionaryRef;\n\t   var obj = this.catDict.get('Names');\n\t   if (obj && obj.has('Dests')) {\n\t    nameTreeRef = obj.getRaw('Dests');\n\t   } else if (this.catDict.has('Dests')) {\n\t    nameDictionaryRef = this.catDict.get('Dests');\n\t   }\n\t   if (nameDictionaryRef) {\n\t    obj = nameDictionaryRef;\n\t    obj.forEach(function catalogForEach(key, value) {\n\t     if (!value) {\n\t      return;\n\t     }\n\t     dests[key] = fetchDestination(value);\n\t    });\n\t   }\n\t   if (nameTreeRef) {\n\t    var nameTree = new NameTree(nameTreeRef, xref);\n\t    var names = nameTree.getAll();\n\t    for (var name in names) {\n\t     dests[name] = fetchDestination(names[name]);\n\t    }\n\t   }\n\t   return shadow(this, 'destinations', dests);\n\t  },\n\t  getDestination: function Catalog_getDestination(destinationId) {\n\t   function fetchDestination(dest) {\n\t    return isDict(dest) ? dest.get('D') : dest;\n\t   }\n\t   var xref = this.xref;\n\t   var dest = null, nameTreeRef, nameDictionaryRef;\n\t   var obj = this.catDict.get('Names');\n\t   if (obj && obj.has('Dests')) {\n\t    nameTreeRef = obj.getRaw('Dests');\n\t   } else if (this.catDict.has('Dests')) {\n\t    nameDictionaryRef = this.catDict.get('Dests');\n\t   }\n\t   if (nameDictionaryRef) {\n\t    var value = nameDictionaryRef.get(destinationId);\n\t    if (value) {\n\t     dest = fetchDestination(value);\n\t    }\n\t   }\n\t   if (nameTreeRef) {\n\t    var nameTree = new NameTree(nameTreeRef, xref);\n\t    dest = fetchDestination(nameTree.get(destinationId));\n\t   }\n\t   return dest;\n\t  },\n\t  get pageLabels() {\n\t   var obj = null;\n\t   try {\n\t    obj = this.readPageLabels();\n\t   } catch (ex) {\n\t    if (ex instanceof MissingDataException) {\n\t     throw ex;\n\t    }\n\t    warn('Unable to read page labels.');\n\t   }\n\t   return shadow(this, 'pageLabels', obj);\n\t  },\n\t  readPageLabels: function Catalog_readPageLabels() {\n\t   var obj = this.catDict.getRaw('PageLabels');\n\t   if (!obj) {\n\t    return null;\n\t   }\n\t   var pageLabels = new Array(this.numPages);\n\t   var style = null;\n\t   var prefix = '';\n\t   var numberTree = new NumberTree(obj, this.xref);\n\t   var nums = numberTree.getAll();\n\t   var currentLabel = '', currentIndex = 1;\n\t   for (var i = 0, ii = this.numPages; i < ii; i++) {\n\t    if (i in nums) {\n\t     var labelDict = nums[i];\n\t     assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n\t     var type = labelDict.get('Type');\n\t     assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n\t     var s = labelDict.get('S');\n\t     assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n\t     style = s ? s.name : null;\n\t     var p = labelDict.get('P');\n\t     assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n\t     prefix = p ? stringToPDFString(p) : '';\n\t     var st = labelDict.get('St');\n\t     assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n\t     currentIndex = st || 1;\n\t    }\n\t    switch (style) {\n\t    case 'D':\n\t     currentLabel = currentIndex;\n\t     break;\n\t    case 'R':\n\t    case 'r':\n\t     currentLabel = Util.toRoman(currentIndex, style === 'r');\n\t     break;\n\t    case 'A':\n\t    case 'a':\n\t     var LIMIT = 26;\n\t     var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n\t     var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n\t     var letterIndex = currentIndex - 1;\n\t     var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n\t     var charBuf = [];\n\t     for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n\t      charBuf.push(character);\n\t     }\n\t     currentLabel = charBuf.join('');\n\t     break;\n\t    default:\n\t     assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n\t    }\n\t    pageLabels[i] = prefix + currentLabel;\n\t    currentLabel = '';\n\t    currentIndex++;\n\t   }\n\t   return pageLabels;\n\t  },\n\t  get attachments() {\n\t   var xref = this.xref;\n\t   var attachments = null, nameTreeRef;\n\t   var obj = this.catDict.get('Names');\n\t   if (obj) {\n\t    nameTreeRef = obj.getRaw('EmbeddedFiles');\n\t   }\n\t   if (nameTreeRef) {\n\t    var nameTree = new NameTree(nameTreeRef, xref);\n\t    var names = nameTree.getAll();\n\t    for (var name in names) {\n\t     var fs = new FileSpec(names[name], xref);\n\t     if (!attachments) {\n\t      attachments = Object.create(null);\n\t     }\n\t     attachments[stringToPDFString(name)] = fs.serializable;\n\t    }\n\t   }\n\t   return shadow(this, 'attachments', attachments);\n\t  },\n\t  get javaScript() {\n\t   var xref = this.xref;\n\t   var obj = this.catDict.get('Names');\n\t   var javaScript = [];\n\t   function appendIfJavaScriptDict(jsDict) {\n\t    var type = jsDict.get('S');\n\t    if (!isName(type, 'JavaScript')) {\n\t     return;\n\t    }\n\t    var js = jsDict.get('JS');\n\t    if (isStream(js)) {\n\t     js = bytesToString(js.getBytes());\n\t    } else if (!isString(js)) {\n\t     return;\n\t    }\n\t    javaScript.push(stringToPDFString(js));\n\t   }\n\t   if (obj && obj.has('JavaScript')) {\n\t    var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n\t    var names = nameTree.getAll();\n\t    for (var name in names) {\n\t     var jsDict = names[name];\n\t     if (isDict(jsDict)) {\n\t      appendIfJavaScriptDict(jsDict);\n\t     }\n\t    }\n\t   }\n\t   var openactionDict = this.catDict.get('OpenAction');\n\t   if (isDict(openactionDict, 'Action')) {\n\t    var actionType = openactionDict.get('S');\n\t    if (isName(actionType, 'Named')) {\n\t     var action = openactionDict.get('N');\n\t     if (isName(action, 'Print')) {\n\t      javaScript.push('print({});');\n\t     }\n\t    } else {\n\t     appendIfJavaScriptDict(openactionDict);\n\t    }\n\t   }\n\t   return shadow(this, 'javaScript', javaScript);\n\t  },\n\t  cleanup: function Catalog_cleanup() {\n\t   var promises = [];\n\t   this.fontCache.forEach(function (promise) {\n\t    promises.push(promise);\n\t   });\n\t   return Promise.all(promises).then(function (translatedFonts) {\n\t    for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n\t     var font = translatedFonts[i].dict;\n\t     delete font.translated;\n\t    }\n\t    this.fontCache.clear();\n\t    this.builtInCMapCache = Object.create(null);\n\t   }.bind(this));\n\t  },\n\t  getPage: function Catalog_getPage(pageIndex) {\n\t   if (!(pageIndex in this.pagePromises)) {\n\t    this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n\t     var dict = a[0];\n\t     var ref = a[1];\n\t     return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache, this.builtInCMapCache);\n\t    }.bind(this));\n\t   }\n\t   return this.pagePromises[pageIndex];\n\t  },\n\t  getPageDict: function Catalog_getPageDict(pageIndex) {\n\t   var capability = createPromiseCapability();\n\t   var nodesToVisit = [this.catDict.getRaw('Pages')];\n\t   var currentPageIndex = 0;\n\t   var xref = this.xref;\n\t   var checkAllKids = false;\n\t   function next() {\n\t    while (nodesToVisit.length) {\n\t     var currentNode = nodesToVisit.pop();\n\t     if (isRef(currentNode)) {\n\t      xref.fetchAsync(currentNode).then(function (obj) {\n\t       if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n\t        if (pageIndex === currentPageIndex) {\n\t         capability.resolve([\n\t          obj,\n\t          currentNode\n\t         ]);\n\t        } else {\n\t         currentPageIndex++;\n\t         next();\n\t        }\n\t        return;\n\t       }\n\t       nodesToVisit.push(obj);\n\t       next();\n\t      }, capability.reject);\n\t      return;\n\t     }\n\t     assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n\t     var count = currentNode.get('Count');\n\t     if (count === 0) {\n\t      checkAllKids = true;\n\t     }\n\t     if (currentPageIndex + count <= pageIndex) {\n\t      currentPageIndex += count;\n\t      continue;\n\t     }\n\t     var kids = currentNode.get('Kids');\n\t     assert(isArray(kids), 'page dictionary kids object is not an array');\n\t     if (!checkAllKids && count === kids.length) {\n\t      nodesToVisit = [kids[pageIndex - currentPageIndex]];\n\t      currentPageIndex = pageIndex;\n\t      continue;\n\t     } else {\n\t      for (var last = kids.length - 1; last >= 0; last--) {\n\t       nodesToVisit.push(kids[last]);\n\t      }\n\t     }\n\t    }\n\t    capability.reject('Page index ' + pageIndex + ' not found.');\n\t   }\n\t   next();\n\t   return capability.promise;\n\t  },\n\t  getPageIndex: function Catalog_getPageIndex(pageRef) {\n\t   var xref = this.xref;\n\t   function pagesBeforeRef(kidRef) {\n\t    var total = 0;\n\t    var parentRef;\n\t    return xref.fetchAsync(kidRef).then(function (node) {\n\t     if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n\t      throw new Error('The reference does not point to a /Page Dict.');\n\t     }\n\t     if (!node) {\n\t      return null;\n\t     }\n\t     assert(isDict(node), 'node must be a Dict.');\n\t     parentRef = node.getRaw('Parent');\n\t     return node.getAsync('Parent');\n\t    }).then(function (parent) {\n\t     if (!parent) {\n\t      return null;\n\t     }\n\t     assert(isDict(parent), 'parent must be a Dict.');\n\t     return parent.getAsync('Kids');\n\t    }).then(function (kids) {\n\t     if (!kids) {\n\t      return null;\n\t     }\n\t     var kidPromises = [];\n\t     var found = false;\n\t     for (var i = 0; i < kids.length; i++) {\n\t      var kid = kids[i];\n\t      assert(isRef(kid), 'kid must be a Ref.');\n\t      if (kid.num === kidRef.num) {\n\t       found = true;\n\t       break;\n\t      }\n\t      kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n\t       if (kid.has('Count')) {\n\t        var count = kid.get('Count');\n\t        total += count;\n\t       } else {\n\t        total++;\n\t       }\n\t      }));\n\t     }\n\t     if (!found) {\n\t      error('kid ref not found in parents kids');\n\t     }\n\t     return Promise.all(kidPromises).then(function () {\n\t      return [\n\t       total,\n\t       parentRef\n\t      ];\n\t     });\n\t    });\n\t   }\n\t   var total = 0;\n\t   function next(ref) {\n\t    return pagesBeforeRef(ref).then(function (args) {\n\t     if (!args) {\n\t      return total;\n\t     }\n\t     var count = args[0];\n\t     var parentRef = args[1];\n\t     total += count;\n\t     return next(parentRef);\n\t    });\n\t   }\n\t   return next(pageRef);\n\t  }\n\t };\n\t Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n\t  function addDefaultProtocolToUrl(url) {\n\t   if (url.indexOf('www.') === 0) {\n\t    return 'http://' + url;\n\t   }\n\t   return url;\n\t  }\n\t  function tryConvertUrlEncoding(url) {\n\t   try {\n\t    return stringToUTF8String(url);\n\t   } catch (e) {\n\t    return url;\n\t   }\n\t  }\n\t  var destDict = params.destDict;\n\t  if (!isDict(destDict)) {\n\t   warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n\t   return;\n\t  }\n\t  var resultObj = params.resultObj;\n\t  if (typeof resultObj !== 'object') {\n\t   warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n\t   return;\n\t  }\n\t  var docBaseUrl = params.docBaseUrl || null;\n\t  var action = destDict.get('A'), url, dest;\n\t  if (isDict(action)) {\n\t   var linkType = action.get('S').name;\n\t   switch (linkType) {\n\t   case 'URI':\n\t    url = action.get('URI');\n\t    if (isName(url)) {\n\t     url = '/' + url.name;\n\t    } else if (isString(url)) {\n\t     url = addDefaultProtocolToUrl(url);\n\t    }\n\t    break;\n\t   case 'GoTo':\n\t    dest = action.get('D');\n\t    break;\n\t   case 'Launch':\n\t   case 'GoToR':\n\t    var urlDict = action.get('F');\n\t    if (isDict(urlDict)) {\n\t     url = urlDict.get('F') || null;\n\t    } else if (isString(urlDict)) {\n\t     url = urlDict;\n\t    }\n\t    var remoteDest = action.get('D');\n\t    if (remoteDest) {\n\t     if (isName(remoteDest)) {\n\t      remoteDest = remoteDest.name;\n\t     }\n\t     if (isString(url)) {\n\t      var baseUrl = url.split('#')[0];\n\t      if (isString(remoteDest)) {\n\t       url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n\t      } else if (isArray(remoteDest)) {\n\t       url = baseUrl + '#' + JSON.stringify(remoteDest);\n\t      }\n\t     }\n\t    }\n\t    var newWindow = action.get('NewWindow');\n\t    if (isBool(newWindow)) {\n\t     resultObj.newWindow = newWindow;\n\t    }\n\t    break;\n\t   case 'Named':\n\t    var namedAction = action.get('N');\n\t    if (isName(namedAction)) {\n\t     resultObj.action = namedAction.name;\n\t    }\n\t    break;\n\t   case 'JavaScript':\n\t    var jsAction = action.get('JS'), js;\n\t    if (isStream(jsAction)) {\n\t     js = bytesToString(jsAction.getBytes());\n\t    } else if (isString(jsAction)) {\n\t     js = jsAction;\n\t    }\n\t    if (js) {\n\t     var URL_OPEN_METHODS = [\n\t      'app.launchURL',\n\t      'window.open'\n\t     ];\n\t     var regex = new RegExp('^(?:' + URL_OPEN_METHODS.join('|') + ')' + '\\\\((?:\\'|\\\")(\\\\S+)(?:\\'|\\\")(?:,|\\\\))');\n\t     var jsUrl = regex.exec(stringToPDFString(js), 'i');\n\t     if (jsUrl && jsUrl[1]) {\n\t      url = jsUrl[1];\n\t      break;\n\t     }\n\t    }\n\t   default:\n\t    warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n\t    break;\n\t   }\n\t  } else if (destDict.has('Dest')) {\n\t   dest = destDict.get('Dest');\n\t  }\n\t  if (isString(url)) {\n\t   url = tryConvertUrlEncoding(url);\n\t   var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n\t   if (absoluteUrl) {\n\t    resultObj.url = absoluteUrl.href;\n\t   }\n\t   resultObj.unsafeUrl = url;\n\t  }\n\t  if (dest) {\n\t   if (isName(dest)) {\n\t    dest = dest.name;\n\t   }\n\t   if (isString(dest) || isArray(dest)) {\n\t    resultObj.dest = dest;\n\t   }\n\t  }\n\t };\n\t return Catalog;\n\t}();\n\tvar XRef = function XRefClosure() {\n\t function XRef(stream, pdfManager) {\n\t  this.stream = stream;\n\t  this.pdfManager = pdfManager;\n\t  this.entries = [];\n\t  this.xrefstms = Object.create(null);\n\t  this.cache = [];\n\t  this.stats = {\n\t   streamTypes: [],\n\t   fontTypes: []\n\t  };\n\t }\n\t XRef.prototype = {\n\t  setStartXRef: function XRef_setStartXRef(startXRef) {\n\t   this.startXRefQueue = [startXRef];\n\t  },\n\t  parse: function XRef_parse(recoveryMode) {\n\t   var trailerDict;\n\t   if (!recoveryMode) {\n\t    trailerDict = this.readXRef();\n\t   } else {\n\t    warn('Indexing all PDF objects');\n\t    trailerDict = this.indexObjects();\n\t   }\n\t   trailerDict.assignXref(this);\n\t   this.trailer = trailerDict;\n\t   var encrypt = trailerDict.get('Encrypt');\n\t   if (isDict(encrypt)) {\n\t    var ids = trailerDict.get('ID');\n\t    var fileId = ids && ids.length ? ids[0] : '';\n\t    encrypt.suppressEncryption = true;\n\t    this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n\t   }\n\t   if (!(this.root = trailerDict.get('Root'))) {\n\t    error('Invalid root reference');\n\t   }\n\t  },\n\t  processXRefTable: function XRef_processXRefTable(parser) {\n\t   if (!('tableState' in this)) {\n\t    this.tableState = {\n\t     entryNum: 0,\n\t     streamPos: parser.lexer.stream.pos,\n\t     parserBuf1: parser.buf1,\n\t     parserBuf2: parser.buf2\n\t    };\n\t   }\n\t   var obj = this.readXRefTable(parser);\n\t   if (!isCmd(obj, 'trailer')) {\n\t    error('Invalid XRef table: could not find trailer dictionary');\n\t   }\n\t   var dict = parser.getObj();\n\t   if (!isDict(dict) && dict.dict) {\n\t    dict = dict.dict;\n\t   }\n\t   if (!isDict(dict)) {\n\t    error('Invalid XRef table: could not parse trailer dictionary');\n\t   }\n\t   delete this.tableState;\n\t   return dict;\n\t  },\n\t  readXRefTable: function XRef_readXRefTable(parser) {\n\t   var stream = parser.lexer.stream;\n\t   var tableState = this.tableState;\n\t   stream.pos = tableState.streamPos;\n\t   parser.buf1 = tableState.parserBuf1;\n\t   parser.buf2 = tableState.parserBuf2;\n\t   var obj;\n\t   while (true) {\n\t    if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n\t     if (isCmd(obj = parser.getObj(), 'trailer')) {\n\t      break;\n\t     }\n\t     tableState.firstEntryNum = obj;\n\t     tableState.entryCount = parser.getObj();\n\t    }\n\t    var first = tableState.firstEntryNum;\n\t    var count = tableState.entryCount;\n\t    if (!isInt(first) || !isInt(count)) {\n\t     error('Invalid XRef table: wrong types in subsection header');\n\t    }\n\t    for (var i = tableState.entryNum; i < count; i++) {\n\t     tableState.streamPos = stream.pos;\n\t     tableState.entryNum = i;\n\t     tableState.parserBuf1 = parser.buf1;\n\t     tableState.parserBuf2 = parser.buf2;\n\t     var entry = {};\n\t     entry.offset = parser.getObj();\n\t     entry.gen = parser.getObj();\n\t     var type = parser.getObj();\n\t     if (isCmd(type, 'f')) {\n\t      entry.free = true;\n\t     } else if (isCmd(type, 'n')) {\n\t      entry.uncompressed = true;\n\t     }\n\t     if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n\t      error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n\t     }\n\t     if (i === 0 && entry.free && first === 1) {\n\t      first = 0;\n\t     }\n\t     if (!this.entries[i + first]) {\n\t      this.entries[i + first] = entry;\n\t     }\n\t    }\n\t    tableState.entryNum = 0;\n\t    tableState.streamPos = stream.pos;\n\t    tableState.parserBuf1 = parser.buf1;\n\t    tableState.parserBuf2 = parser.buf2;\n\t    delete tableState.firstEntryNum;\n\t    delete tableState.entryCount;\n\t   }\n\t   if (this.entries[0] && !this.entries[0].free) {\n\t    error('Invalid XRef table: unexpected first object');\n\t   }\n\t   return obj;\n\t  },\n\t  processXRefStream: function XRef_processXRefStream(stream) {\n\t   if (!('streamState' in this)) {\n\t    var streamParameters = stream.dict;\n\t    var byteWidths = streamParameters.get('W');\n\t    var range = streamParameters.get('Index');\n\t    if (!range) {\n\t     range = [\n\t      0,\n\t      streamParameters.get('Size')\n\t     ];\n\t    }\n\t    this.streamState = {\n\t     entryRanges: range,\n\t     byteWidths: byteWidths,\n\t     entryNum: 0,\n\t     streamPos: stream.pos\n\t    };\n\t   }\n\t   this.readXRefStream(stream);\n\t   delete this.streamState;\n\t   return stream.dict;\n\t  },\n\t  readXRefStream: function XRef_readXRefStream(stream) {\n\t   var i, j;\n\t   var streamState = this.streamState;\n\t   stream.pos = streamState.streamPos;\n\t   var byteWidths = streamState.byteWidths;\n\t   var typeFieldWidth = byteWidths[0];\n\t   var offsetFieldWidth = byteWidths[1];\n\t   var generationFieldWidth = byteWidths[2];\n\t   var entryRanges = streamState.entryRanges;\n\t   while (entryRanges.length > 0) {\n\t    var first = entryRanges[0];\n\t    var n = entryRanges[1];\n\t    if (!isInt(first) || !isInt(n)) {\n\t     error('Invalid XRef range fields: ' + first + ', ' + n);\n\t    }\n\t    if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n\t     error('Invalid XRef entry fields length: ' + first + ', ' + n);\n\t    }\n\t    for (i = streamState.entryNum; i < n; ++i) {\n\t     streamState.entryNum = i;\n\t     streamState.streamPos = stream.pos;\n\t     var type = 0, offset = 0, generation = 0;\n\t     for (j = 0; j < typeFieldWidth; ++j) {\n\t      type = type << 8 | stream.getByte();\n\t     }\n\t     if (typeFieldWidth === 0) {\n\t      type = 1;\n\t     }\n\t     for (j = 0; j < offsetFieldWidth; ++j) {\n\t      offset = offset << 8 | stream.getByte();\n\t     }\n\t     for (j = 0; j < generationFieldWidth; ++j) {\n\t      generation = generation << 8 | stream.getByte();\n\t     }\n\t     var entry = {};\n\t     entry.offset = offset;\n\t     entry.gen = generation;\n\t     switch (type) {\n\t     case 0:\n\t      entry.free = true;\n\t      break;\n\t     case 1:\n\t      entry.uncompressed = true;\n\t      break;\n\t     case 2:\n\t      break;\n\t     default:\n\t      error('Invalid XRef entry type: ' + type);\n\t     }\n\t     if (!this.entries[first + i]) {\n\t      this.entries[first + i] = entry;\n\t     }\n\t    }\n\t    streamState.entryNum = 0;\n\t    streamState.streamPos = stream.pos;\n\t    entryRanges.splice(0, 2);\n\t   }\n\t  },\n\t  indexObjects: function XRef_indexObjects() {\n\t   var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n\t   var PERCENT = 0x25, LT = 0x3C;\n\t   function readToken(data, offset) {\n\t    var token = '', ch = data[offset];\n\t    while (ch !== LF && ch !== CR && ch !== LT) {\n\t     if (++offset >= data.length) {\n\t      break;\n\t     }\n\t     token += String.fromCharCode(ch);\n\t     ch = data[offset];\n\t    }\n\t    return token;\n\t   }\n\t   function skipUntil(data, offset, what) {\n\t    var length = what.length, dataLength = data.length;\n\t    var skipped = 0;\n\t    while (offset < dataLength) {\n\t     var i = 0;\n\t     while (i < length && data[offset + i] === what[i]) {\n\t      ++i;\n\t     }\n\t     if (i >= length) {\n\t      break;\n\t     }\n\t     offset++;\n\t     skipped++;\n\t    }\n\t    return skipped;\n\t   }\n\t   var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n\t   var trailerBytes = new Uint8Array([\n\t    116,\n\t    114,\n\t    97,\n\t    105,\n\t    108,\n\t    101,\n\t    114\n\t   ]);\n\t   var startxrefBytes = new Uint8Array([\n\t    115,\n\t    116,\n\t    97,\n\t    114,\n\t    116,\n\t    120,\n\t    114,\n\t    101,\n\t    102\n\t   ]);\n\t   var endobjBytes = new Uint8Array([\n\t    101,\n\t    110,\n\t    100,\n\t    111,\n\t    98,\n\t    106\n\t   ]);\n\t   var xrefBytes = new Uint8Array([\n\t    47,\n\t    88,\n\t    82,\n\t    101,\n\t    102\n\t   ]);\n\t   this.entries.length = 0;\n\t   var stream = this.stream;\n\t   stream.pos = 0;\n\t   var buffer = stream.getBytes();\n\t   var position = stream.start, length = buffer.length;\n\t   var trailers = [], xrefStms = [];\n\t   while (position < length) {\n\t    var ch = buffer[position];\n\t    if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n\t     ++position;\n\t     continue;\n\t    }\n\t    if (ch === PERCENT) {\n\t     do {\n\t      ++position;\n\t      if (position >= length) {\n\t       break;\n\t      }\n\t      ch = buffer[position];\n\t     } while (ch !== LF && ch !== CR);\n\t     continue;\n\t    }\n\t    var token = readToken(buffer, position);\n\t    var m;\n\t    if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n\t     position += skipUntil(buffer, position, trailerBytes);\n\t     trailers.push(position);\n\t     position += skipUntil(buffer, position, startxrefBytes);\n\t    } else if (m = objRegExp.exec(token)) {\n\t     if (typeof this.entries[m[1]] === 'undefined') {\n\t      this.entries[m[1]] = {\n\t       offset: position - stream.start,\n\t       gen: m[2] | 0,\n\t       uncompressed: true\n\t      };\n\t     }\n\t     var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n\t     var content = buffer.subarray(position, position + contentLength);\n\t     var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\t     if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n\t      xrefStms.push(position - stream.start);\n\t      this.xrefstms[position - stream.start] = 1;\n\t     }\n\t     position += contentLength;\n\t    } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n\t     trailers.push(position);\n\t     position += skipUntil(buffer, position, startxrefBytes);\n\t    } else {\n\t     position += token.length + 1;\n\t    }\n\t   }\n\t   var i, ii;\n\t   for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n\t    this.startXRefQueue.push(xrefStms[i]);\n\t    this.readXRef(true);\n\t   }\n\t   var dict;\n\t   for (i = 0, ii = trailers.length; i < ii; ++i) {\n\t    stream.pos = trailers[i];\n\t    var parser = new Parser(new Lexer(stream), true, this, true);\n\t    var obj = parser.getObj();\n\t    if (!isCmd(obj, 'trailer')) {\n\t     continue;\n\t    }\n\t    dict = parser.getObj();\n\t    if (!isDict(dict)) {\n\t     continue;\n\t    }\n\t    if (dict.has('ID')) {\n\t     return dict;\n\t    }\n\t   }\n\t   if (dict) {\n\t    return dict;\n\t   }\n\t   throw new InvalidPDFException('Invalid PDF structure');\n\t  },\n\t  readXRef: function XRef_readXRef(recoveryMode) {\n\t   var stream = this.stream;\n\t   try {\n\t    while (this.startXRefQueue.length) {\n\t     var startXRef = this.startXRefQueue[0];\n\t     stream.pos = startXRef + stream.start;\n\t     var parser = new Parser(new Lexer(stream), true, this);\n\t     var obj = parser.getObj();\n\t     var dict;\n\t     if (isCmd(obj, 'xref')) {\n\t      dict = this.processXRefTable(parser);\n\t      if (!this.topDict) {\n\t       this.topDict = dict;\n\t      }\n\t      obj = dict.get('XRefStm');\n\t      if (isInt(obj)) {\n\t       var pos = obj;\n\t       if (!(pos in this.xrefstms)) {\n\t        this.xrefstms[pos] = 1;\n\t        this.startXRefQueue.push(pos);\n\t       }\n\t      }\n\t     } else if (isInt(obj)) {\n\t      if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n\t       error('Invalid XRef stream');\n\t      }\n\t      dict = this.processXRefStream(obj);\n\t      if (!this.topDict) {\n\t       this.topDict = dict;\n\t      }\n\t      if (!dict) {\n\t       error('Failed to read XRef stream');\n\t      }\n\t     } else {\n\t      error('Invalid XRef stream header');\n\t     }\n\t     obj = dict.get('Prev');\n\t     if (isInt(obj)) {\n\t      this.startXRefQueue.push(obj);\n\t     } else if (isRef(obj)) {\n\t      this.startXRefQueue.push(obj.num);\n\t     }\n\t     this.startXRefQueue.shift();\n\t    }\n\t    return this.topDict;\n\t   } catch (e) {\n\t    if (e instanceof MissingDataException) {\n\t     throw e;\n\t    }\n\t    info('(while reading XRef): ' + e);\n\t   }\n\t   if (recoveryMode) {\n\t    return;\n\t   }\n\t   throw new XRefParseException();\n\t  },\n\t  getEntry: function XRef_getEntry(i) {\n\t   var xrefEntry = this.entries[i];\n\t   if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n\t    return xrefEntry;\n\t   }\n\t   return null;\n\t  },\n\t  fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n\t   if (!isRef(obj)) {\n\t    return obj;\n\t   }\n\t   return this.fetch(obj, suppressEncryption);\n\t  },\n\t  fetch: function XRef_fetch(ref, suppressEncryption) {\n\t   assert(isRef(ref), 'ref object is not a reference');\n\t   var num = ref.num;\n\t   if (num in this.cache) {\n\t    var cacheEntry = this.cache[num];\n\t    return cacheEntry;\n\t   }\n\t   var xrefEntry = this.getEntry(num);\n\t   if (xrefEntry === null) {\n\t    return this.cache[num] = null;\n\t   }\n\t   if (xrefEntry.uncompressed) {\n\t    xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n\t   } else {\n\t    xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n\t   }\n\t   if (isDict(xrefEntry)) {\n\t    xrefEntry.objId = ref.toString();\n\t   } else if (isStream(xrefEntry)) {\n\t    xrefEntry.dict.objId = ref.toString();\n\t   }\n\t   return xrefEntry;\n\t  },\n\t  fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n\t   var gen = ref.gen;\n\t   var num = ref.num;\n\t   if (xrefEntry.gen !== gen) {\n\t    error('inconsistent generation in XRef');\n\t   }\n\t   var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n\t   var parser = new Parser(new Lexer(stream), true, this);\n\t   var obj1 = parser.getObj();\n\t   var obj2 = parser.getObj();\n\t   var obj3 = parser.getObj();\n\t   if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n\t    error('bad XRef entry');\n\t   }\n\t   if (!isCmd(obj3, 'obj')) {\n\t    if (obj3.cmd.indexOf('obj') === 0) {\n\t     num = parseInt(obj3.cmd.substring(3), 10);\n\t     if (!isNaN(num)) {\n\t      return num;\n\t     }\n\t    }\n\t    error('bad XRef entry');\n\t   }\n\t   if (this.encrypt && !suppressEncryption) {\n\t    xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n\t   } else {\n\t    xrefEntry = parser.getObj();\n\t   }\n\t   if (!isStream(xrefEntry)) {\n\t    this.cache[num] = xrefEntry;\n\t   }\n\t   return xrefEntry;\n\t  },\n\t  fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n\t   var tableOffset = xrefEntry.offset;\n\t   var stream = this.fetch(new Ref(tableOffset, 0));\n\t   if (!isStream(stream)) {\n\t    error('bad ObjStm stream');\n\t   }\n\t   var first = stream.dict.get('First');\n\t   var n = stream.dict.get('N');\n\t   if (!isInt(first) || !isInt(n)) {\n\t    error('invalid first and n parameters for ObjStm stream');\n\t   }\n\t   var parser = new Parser(new Lexer(stream), false, this);\n\t   parser.allowStreams = true;\n\t   var i, entries = [], num, nums = [];\n\t   for (i = 0; i < n; ++i) {\n\t    num = parser.getObj();\n\t    if (!isInt(num)) {\n\t     error('invalid object number in the ObjStm stream: ' + num);\n\t    }\n\t    nums.push(num);\n\t    var offset = parser.getObj();\n\t    if (!isInt(offset)) {\n\t     error('invalid object offset in the ObjStm stream: ' + offset);\n\t    }\n\t   }\n\t   for (i = 0; i < n; ++i) {\n\t    entries.push(parser.getObj());\n\t    if (isCmd(parser.buf1, 'endobj')) {\n\t     parser.shift();\n\t    }\n\t    num = nums[i];\n\t    var entry = this.entries[num];\n\t    if (entry && entry.offset === tableOffset && entry.gen === i) {\n\t     this.cache[num] = entries[i];\n\t    }\n\t   }\n\t   xrefEntry = entries[xrefEntry.gen];\n\t   if (xrefEntry === undefined) {\n\t    error('bad XRef entry for compressed object');\n\t   }\n\t   return xrefEntry;\n\t  },\n\t  fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n\t   if (!isRef(obj)) {\n\t    return Promise.resolve(obj);\n\t   }\n\t   return this.fetchAsync(obj, suppressEncryption);\n\t  },\n\t  fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n\t   var streamManager = this.stream.manager;\n\t   var xref = this;\n\t   return new Promise(function tryFetch(resolve, reject) {\n\t    try {\n\t     resolve(xref.fetch(ref, suppressEncryption));\n\t    } catch (e) {\n\t     if (e instanceof MissingDataException) {\n\t      streamManager.requestRange(e.begin, e.end).then(function () {\n\t       tryFetch(resolve, reject);\n\t      }, reject);\n\t      return;\n\t     }\n\t     reject(e);\n\t    }\n\t   });\n\t  },\n\t  getCatalogObj: function XRef_getCatalogObj() {\n\t   return this.root;\n\t  }\n\t };\n\t return XRef;\n\t}();\n\tvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n\t function NameOrNumberTree(root, xref) {\n\t  throw new Error('Cannot initialize NameOrNumberTree.');\n\t }\n\t NameOrNumberTree.prototype = {\n\t  getAll: function NameOrNumberTree_getAll() {\n\t   var dict = Object.create(null);\n\t   if (!this.root) {\n\t    return dict;\n\t   }\n\t   var xref = this.xref;\n\t   var processed = new RefSet();\n\t   processed.put(this.root);\n\t   var queue = [this.root];\n\t   while (queue.length > 0) {\n\t    var i, n;\n\t    var obj = xref.fetchIfRef(queue.shift());\n\t    if (!isDict(obj)) {\n\t     continue;\n\t    }\n\t    if (obj.has('Kids')) {\n\t     var kids = obj.get('Kids');\n\t     for (i = 0, n = kids.length; i < n; i++) {\n\t      var kid = kids[i];\n\t      assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n\t      queue.push(kid);\n\t      processed.put(kid);\n\t     }\n\t     continue;\n\t    }\n\t    var entries = obj.get(this._type);\n\t    if (isArray(entries)) {\n\t     for (i = 0, n = entries.length; i < n; i += 2) {\n\t      dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n\t     }\n\t    }\n\t   }\n\t   return dict;\n\t  },\n\t  get: function NameOrNumberTree_get(key) {\n\t   if (!this.root) {\n\t    return null;\n\t   }\n\t   var xref = this.xref;\n\t   var kidsOrEntries = xref.fetchIfRef(this.root);\n\t   var loopCount = 0;\n\t   var MAX_LEVELS = 10;\n\t   var l, r, m;\n\t   while (kidsOrEntries.has('Kids')) {\n\t    if (++loopCount > MAX_LEVELS) {\n\t     warn('Search depth limit reached for \"' + this._type + '\" tree.');\n\t     return null;\n\t    }\n\t    var kids = kidsOrEntries.get('Kids');\n\t    if (!isArray(kids)) {\n\t     return null;\n\t    }\n\t    l = 0;\n\t    r = kids.length - 1;\n\t    while (l <= r) {\n\t     m = l + r >> 1;\n\t     var kid = xref.fetchIfRef(kids[m]);\n\t     var limits = kid.get('Limits');\n\t     if (key < xref.fetchIfRef(limits[0])) {\n\t      r = m - 1;\n\t     } else if (key > xref.fetchIfRef(limits[1])) {\n\t      l = m + 1;\n\t     } else {\n\t      kidsOrEntries = xref.fetchIfRef(kids[m]);\n\t      break;\n\t     }\n\t    }\n\t    if (l > r) {\n\t     return null;\n\t    }\n\t   }\n\t   var entries = kidsOrEntries.get(this._type);\n\t   if (isArray(entries)) {\n\t    l = 0;\n\t    r = entries.length - 2;\n\t    while (l <= r) {\n\t     m = l + r & ~1;\n\t     var currentKey = xref.fetchIfRef(entries[m]);\n\t     if (key < currentKey) {\n\t      r = m - 2;\n\t     } else if (key > currentKey) {\n\t      l = m + 2;\n\t     } else {\n\t      return xref.fetchIfRef(entries[m + 1]);\n\t     }\n\t    }\n\t   }\n\t   return null;\n\t  }\n\t };\n\t return NameOrNumberTree;\n\t}();\n\tvar NameTree = function NameTreeClosure() {\n\t function NameTree(root, xref) {\n\t  this.root = root;\n\t  this.xref = xref;\n\t  this._type = 'Names';\n\t }\n\t Util.inherit(NameTree, NameOrNumberTree, {});\n\t return NameTree;\n\t}();\n\tvar NumberTree = function NumberTreeClosure() {\n\t function NumberTree(root, xref) {\n\t  this.root = root;\n\t  this.xref = xref;\n\t  this._type = 'Nums';\n\t }\n\t Util.inherit(NumberTree, NameOrNumberTree, {});\n\t return NumberTree;\n\t}();\n\tvar FileSpec = function FileSpecClosure() {\n\t function FileSpec(root, xref) {\n\t  if (!root || !isDict(root)) {\n\t   return;\n\t  }\n\t  this.xref = xref;\n\t  this.root = root;\n\t  if (root.has('FS')) {\n\t   this.fs = root.get('FS');\n\t  }\n\t  this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n\t  if (root.has('RF')) {\n\t   warn('Related file specifications are not supported');\n\t  }\n\t  this.contentAvailable = true;\n\t  if (!root.has('EF')) {\n\t   this.contentAvailable = false;\n\t   warn('Non-embedded file specifications are not supported');\n\t  }\n\t }\n\t function pickPlatformItem(dict) {\n\t  if (dict.has('UF')) {\n\t   return dict.get('UF');\n\t  } else if (dict.has('F')) {\n\t   return dict.get('F');\n\t  } else if (dict.has('Unix')) {\n\t   return dict.get('Unix');\n\t  } else if (dict.has('Mac')) {\n\t   return dict.get('Mac');\n\t  } else if (dict.has('DOS')) {\n\t   return dict.get('DOS');\n\t  }\n\t  return null;\n\t }\n\t FileSpec.prototype = {\n\t  get filename() {\n\t   if (!this._filename && this.root) {\n\t    var filename = pickPlatformItem(this.root) || 'unnamed';\n\t    this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n\t   }\n\t   return this._filename;\n\t  },\n\t  get content() {\n\t   if (!this.contentAvailable) {\n\t    return null;\n\t   }\n\t   if (!this.contentRef && this.root) {\n\t    this.contentRef = pickPlatformItem(this.root.get('EF'));\n\t   }\n\t   var content = null;\n\t   if (this.contentRef) {\n\t    var xref = this.xref;\n\t    var fileObj = xref.fetchIfRef(this.contentRef);\n\t    if (fileObj && isStream(fileObj)) {\n\t     content = fileObj.getBytes();\n\t    } else {\n\t     warn('Embedded file specification points to non-existing/invalid ' + 'content');\n\t    }\n\t   } else {\n\t    warn('Embedded file specification does not have a content');\n\t   }\n\t   return content;\n\t  },\n\t  get serializable() {\n\t   return {\n\t    filename: this.filename,\n\t    content: this.content\n\t   };\n\t  }\n\t };\n\t return FileSpec;\n\t}();\n\tvar ObjectLoader = function () {\n\t function mayHaveChildren(value) {\n\t  return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n\t }\n\t function addChildren(node, nodesToVisit) {\n\t  var value;\n\t  if (isDict(node) || isStream(node)) {\n\t   var map;\n\t   if (isDict(node)) {\n\t    map = node.map;\n\t   } else {\n\t    map = node.dict.map;\n\t   }\n\t   for (var key in map) {\n\t    value = map[key];\n\t    if (mayHaveChildren(value)) {\n\t     nodesToVisit.push(value);\n\t    }\n\t   }\n\t  } else if (isArray(node)) {\n\t   for (var i = 0, ii = node.length; i < ii; i++) {\n\t    value = node[i];\n\t    if (mayHaveChildren(value)) {\n\t     nodesToVisit.push(value);\n\t    }\n\t   }\n\t  }\n\t }\n\t function ObjectLoader(obj, keys, xref) {\n\t  this.obj = obj;\n\t  this.keys = keys;\n\t  this.xref = xref;\n\t  this.refSet = null;\n\t  this.capability = null;\n\t }\n\t ObjectLoader.prototype = {\n\t  load: function ObjectLoader_load() {\n\t   var keys = this.keys;\n\t   this.capability = createPromiseCapability();\n\t   if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n\t    this.capability.resolve();\n\t    return this.capability.promise;\n\t   }\n\t   this.refSet = new RefSet();\n\t   var nodesToVisit = [];\n\t   for (var i = 0; i < keys.length; i++) {\n\t    nodesToVisit.push(this.obj[keys[i]]);\n\t   }\n\t   this._walk(nodesToVisit);\n\t   return this.capability.promise;\n\t  },\n\t  _walk: function ObjectLoader_walk(nodesToVisit) {\n\t   var nodesToRevisit = [];\n\t   var pendingRequests = [];\n\t   while (nodesToVisit.length) {\n\t    var currentNode = nodesToVisit.pop();\n\t    if (isRef(currentNode)) {\n\t     if (this.refSet.has(currentNode)) {\n\t      continue;\n\t     }\n\t     try {\n\t      var ref = currentNode;\n\t      this.refSet.put(ref);\n\t      currentNode = this.xref.fetch(currentNode);\n\t     } catch (e) {\n\t      if (!(e instanceof MissingDataException)) {\n\t       throw e;\n\t      }\n\t      nodesToRevisit.push(currentNode);\n\t      pendingRequests.push({\n\t       begin: e.begin,\n\t       end: e.end\n\t      });\n\t     }\n\t    }\n\t    if (currentNode && currentNode.getBaseStreams) {\n\t     var baseStreams = currentNode.getBaseStreams();\n\t     var foundMissingData = false;\n\t     for (var i = 0; i < baseStreams.length; i++) {\n\t      var stream = baseStreams[i];\n\t      if (stream.getMissingChunks && stream.getMissingChunks().length) {\n\t       foundMissingData = true;\n\t       pendingRequests.push({\n\t        begin: stream.start,\n\t        end: stream.end\n\t       });\n\t      }\n\t     }\n\t     if (foundMissingData) {\n\t      nodesToRevisit.push(currentNode);\n\t     }\n\t    }\n\t    addChildren(currentNode, nodesToVisit);\n\t   }\n\t   if (pendingRequests.length) {\n\t    this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n\t     nodesToVisit = nodesToRevisit;\n\t     for (var i = 0; i < nodesToRevisit.length; i++) {\n\t      var node = nodesToRevisit[i];\n\t      if (isRef(node)) {\n\t       this.refSet.remove(node);\n\t      }\n\t     }\n\t     this._walk(nodesToVisit);\n\t    }.bind(this), this.capability.reject);\n\t    return;\n\t   }\n\t   this.refSet = null;\n\t   this.capability.resolve();\n\t  }\n\t };\n\t return ObjectLoader;\n\t}();\n\texports.Catalog = Catalog;\n\texports.ObjectLoader = ObjectLoader;\n\texports.XRef = XRef;\n\texports.FileSpec = FileSpec;\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\tvar getStdFontMap = getLookupTableFactory(function (t) {\n\t t['ArialNarrow'] = 'Helvetica';\n\t t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n\t t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n\t t['ArialBlack'] = 'Helvetica';\n\t t['ArialBlack-Bold'] = 'Helvetica-Bold';\n\t t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n\t t['Arial-Black'] = 'Helvetica';\n\t t['Arial-Black-Bold'] = 'Helvetica-Bold';\n\t t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n\t t['Arial'] = 'Helvetica';\n\t t['Arial-Bold'] = 'Helvetica-Bold';\n\t t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['Arial-Italic'] = 'Helvetica-Oblique';\n\t t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n\t t['Arial-BoldMT'] = 'Helvetica-Bold';\n\t t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n\t t['ArialMT'] = 'Helvetica';\n\t t['Courier-Bold'] = 'Courier-Bold';\n\t t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n\t t['Courier-Italic'] = 'Courier-Oblique';\n\t t['CourierNew'] = 'Courier';\n\t t['CourierNew-Bold'] = 'Courier-Bold';\n\t t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n\t t['CourierNew-Italic'] = 'Courier-Oblique';\n\t t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n\t t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n\t t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n\t t['CourierNewPSMT'] = 'Courier';\n\t t['Helvetica'] = 'Helvetica';\n\t t['Helvetica-Bold'] = 'Helvetica-Bold';\n\t t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n\t t['Helvetica-Italic'] = 'Helvetica-Oblique';\n\t t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n\t t['Symbol-Bold'] = 'Symbol';\n\t t['Symbol-BoldItalic'] = 'Symbol';\n\t t['Symbol-Italic'] = 'Symbol';\n\t t['TimesNewRoman'] = 'Times-Roman';\n\t t['TimesNewRoman-Bold'] = 'Times-Bold';\n\t t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n\t t['TimesNewRoman-Italic'] = 'Times-Italic';\n\t t['TimesNewRomanPS'] = 'Times-Roman';\n\t t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n\t t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n\t t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n\t t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n\t t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n\t t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n\t t['TimesNewRomanPSMT'] = 'Times-Roman';\n\t t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n\t t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n\t t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n\t});\n\tvar getNonStdFontMap = getLookupTableFactory(function (t) {\n\t t['CenturyGothic'] = 'Helvetica';\n\t t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n\t t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n\t t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n\t t['ComicSansMS'] = 'Comic Sans MS';\n\t t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n\t t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n\t t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n\t t['LucidaConsole'] = 'Courier';\n\t t['LucidaConsole-Bold'] = 'Courier-Bold';\n\t t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n\t t['LucidaConsole-Italic'] = 'Courier-Oblique';\n\t t['MS-Gothic'] = 'MS Gothic';\n\t t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n\t t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n\t t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n\t t['MS-Mincho'] = 'MS Mincho';\n\t t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n\t t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n\t t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n\t t['MS-PGothic'] = 'MS PGothic';\n\t t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n\t t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n\t t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n\t t['MS-PMincho'] = 'MS PMincho';\n\t t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n\t t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n\t t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n\t t['NuptialScript'] = 'Times-Italic';\n\t t['Wingdings'] = 'ZapfDingbats';\n\t});\n\tvar getSerifFonts = getLookupTableFactory(function (t) {\n\t t['Adobe Jenson'] = true;\n\t t['Adobe Text'] = true;\n\t t['Albertus'] = true;\n\t t['Aldus'] = true;\n\t t['Alexandria'] = true;\n\t t['Algerian'] = true;\n\t t['American Typewriter'] = true;\n\t t['Antiqua'] = true;\n\t t['Apex'] = true;\n\t t['Arno'] = true;\n\t t['Aster'] = true;\n\t t['Aurora'] = true;\n\t t['Baskerville'] = true;\n\t t['Bell'] = true;\n\t t['Bembo'] = true;\n\t t['Bembo Schoolbook'] = true;\n\t t['Benguiat'] = true;\n\t t['Berkeley Old Style'] = true;\n\t t['Bernhard Modern'] = true;\n\t t['Berthold City'] = true;\n\t t['Bodoni'] = true;\n\t t['Bauer Bodoni'] = true;\n\t t['Book Antiqua'] = true;\n\t t['Bookman'] = true;\n\t t['Bordeaux Roman'] = true;\n\t t['Californian FB'] = true;\n\t t['Calisto'] = true;\n\t t['Calvert'] = true;\n\t t['Capitals'] = true;\n\t t['Cambria'] = true;\n\t t['Cartier'] = true;\n\t t['Caslon'] = true;\n\t t['Catull'] = true;\n\t t['Centaur'] = true;\n\t t['Century Old Style'] = true;\n\t t['Century Schoolbook'] = true;\n\t t['Chaparral'] = true;\n\t t['Charis SIL'] = true;\n\t t['Cheltenham'] = true;\n\t t['Cholla Slab'] = true;\n\t t['Clarendon'] = true;\n\t t['Clearface'] = true;\n\t t['Cochin'] = true;\n\t t['Colonna'] = true;\n\t t['Computer Modern'] = true;\n\t t['Concrete Roman'] = true;\n\t t['Constantia'] = true;\n\t t['Cooper Black'] = true;\n\t t['Corona'] = true;\n\t t['Ecotype'] = true;\n\t t['Egyptienne'] = true;\n\t t['Elephant'] = true;\n\t t['Excelsior'] = true;\n\t t['Fairfield'] = true;\n\t t['FF Scala'] = true;\n\t t['Folkard'] = true;\n\t t['Footlight'] = true;\n\t t['FreeSerif'] = true;\n\t t['Friz Quadrata'] = true;\n\t t['Garamond'] = true;\n\t t['Gentium'] = true;\n\t t['Georgia'] = true;\n\t t['Gloucester'] = true;\n\t t['Goudy Old Style'] = true;\n\t t['Goudy Schoolbook'] = true;\n\t t['Goudy Pro Font'] = true;\n\t t['Granjon'] = true;\n\t t['Guardian Egyptian'] = true;\n\t t['Heather'] = true;\n\t t['Hercules'] = true;\n\t t['High Tower Text'] = true;\n\t t['Hiroshige'] = true;\n\t t['Hoefler Text'] = true;\n\t t['Humana Serif'] = true;\n\t t['Imprint'] = true;\n\t t['Ionic No. 5'] = true;\n\t t['Janson'] = true;\n\t t['Joanna'] = true;\n\t t['Korinna'] = true;\n\t t['Lexicon'] = true;\n\t t['Liberation Serif'] = true;\n\t t['Linux Libertine'] = true;\n\t t['Literaturnaya'] = true;\n\t t['Lucida'] = true;\n\t t['Lucida Bright'] = true;\n\t t['Melior'] = true;\n\t t['Memphis'] = true;\n\t t['Miller'] = true;\n\t t['Minion'] = true;\n\t t['Modern'] = true;\n\t t['Mona Lisa'] = true;\n\t t['Mrs Eaves'] = true;\n\t t['MS Serif'] = true;\n\t t['Museo Slab'] = true;\n\t t['New York'] = true;\n\t t['Nimbus Roman'] = true;\n\t t['NPS Rawlinson Roadway'] = true;\n\t t['NuptialScript'] = true;\n\t t['Palatino'] = true;\n\t t['Perpetua'] = true;\n\t t['Plantin'] = true;\n\t t['Plantin Schoolbook'] = true;\n\t t['Playbill'] = true;\n\t t['Poor Richard'] = true;\n\t t['Rawlinson Roadway'] = true;\n\t t['Renault'] = true;\n\t t['Requiem'] = true;\n\t t['Rockwell'] = true;\n\t t['Roman'] = true;\n\t t['Rotis Serif'] = true;\n\t t['Sabon'] = true;\n\t t['Scala'] = true;\n\t t['Seagull'] = true;\n\t t['Sistina'] = true;\n\t t['Souvenir'] = true;\n\t t['STIX'] = true;\n\t t['Stone Informal'] = true;\n\t t['Stone Serif'] = true;\n\t t['Sylfaen'] = true;\n\t t['Times'] = true;\n\t t['Trajan'] = true;\n\t t['Trinité'] = true;\n\t t['Trump Mediaeval'] = true;\n\t t['Utopia'] = true;\n\t t['Vale Type'] = true;\n\t t['Bitstream Vera'] = true;\n\t t['Vera Serif'] = true;\n\t t['Versailles'] = true;\n\t t['Wanted'] = true;\n\t t['Weiss'] = true;\n\t t['Wide Latin'] = true;\n\t t['Windsor'] = true;\n\t t['XITS'] = true;\n\t});\n\tvar getSymbolsFonts = getLookupTableFactory(function (t) {\n\t t['Dingbats'] = true;\n\t t['Symbol'] = true;\n\t t['ZapfDingbats'] = true;\n\t});\n\tvar getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n\t t[2] = 10;\n\t t[3] = 32;\n\t t[4] = 33;\n\t t[5] = 34;\n\t t[6] = 35;\n\t t[7] = 36;\n\t t[8] = 37;\n\t t[9] = 38;\n\t t[10] = 39;\n\t t[11] = 40;\n\t t[12] = 41;\n\t t[13] = 42;\n\t t[14] = 43;\n\t t[15] = 44;\n\t t[16] = 45;\n\t t[17] = 46;\n\t t[18] = 47;\n\t t[19] = 48;\n\t t[20] = 49;\n\t t[21] = 50;\n\t t[22] = 51;\n\t t[23] = 52;\n\t t[24] = 53;\n\t t[25] = 54;\n\t t[26] = 55;\n\t t[27] = 56;\n\t t[28] = 57;\n\t t[29] = 58;\n\t t[30] = 894;\n\t t[31] = 60;\n\t t[32] = 61;\n\t t[33] = 62;\n\t t[34] = 63;\n\t t[35] = 64;\n\t t[36] = 65;\n\t t[37] = 66;\n\t t[38] = 67;\n\t t[39] = 68;\n\t t[40] = 69;\n\t t[41] = 70;\n\t t[42] = 71;\n\t t[43] = 72;\n\t t[44] = 73;\n\t t[45] = 74;\n\t t[46] = 75;\n\t t[47] = 76;\n\t t[48] = 77;\n\t t[49] = 78;\n\t t[50] = 79;\n\t t[51] = 80;\n\t t[52] = 81;\n\t t[53] = 82;\n\t t[54] = 83;\n\t t[55] = 84;\n\t t[56] = 85;\n\t t[57] = 86;\n\t t[58] = 87;\n\t t[59] = 88;\n\t t[60] = 89;\n\t t[61] = 90;\n\t t[62] = 91;\n\t t[63] = 92;\n\t t[64] = 93;\n\t t[65] = 94;\n\t t[66] = 95;\n\t t[67] = 96;\n\t t[68] = 97;\n\t t[69] = 98;\n\t t[70] = 99;\n\t t[71] = 100;\n\t t[72] = 101;\n\t t[73] = 102;\n\t t[74] = 103;\n\t t[75] = 104;\n\t t[76] = 105;\n\t t[77] = 106;\n\t t[78] = 107;\n\t t[79] = 108;\n\t t[80] = 109;\n\t t[81] = 110;\n\t t[82] = 111;\n\t t[83] = 112;\n\t t[84] = 113;\n\t t[85] = 114;\n\t t[86] = 115;\n\t t[87] = 116;\n\t t[88] = 117;\n\t t[89] = 118;\n\t t[90] = 119;\n\t t[91] = 120;\n\t t[92] = 121;\n\t t[93] = 122;\n\t t[94] = 123;\n\t t[95] = 124;\n\t t[96] = 125;\n\t t[97] = 126;\n\t t[98] = 196;\n\t t[99] = 197;\n\t t[100] = 199;\n\t t[101] = 201;\n\t t[102] = 209;\n\t t[103] = 214;\n\t t[104] = 220;\n\t t[105] = 225;\n\t t[106] = 224;\n\t t[107] = 226;\n\t t[108] = 228;\n\t t[109] = 227;\n\t t[110] = 229;\n\t t[111] = 231;\n\t t[112] = 233;\n\t t[113] = 232;\n\t t[114] = 234;\n\t t[115] = 235;\n\t t[116] = 237;\n\t t[117] = 236;\n\t t[118] = 238;\n\t t[119] = 239;\n\t t[120] = 241;\n\t t[121] = 243;\n\t t[122] = 242;\n\t t[123] = 244;\n\t t[124] = 246;\n\t t[125] = 245;\n\t t[126] = 250;\n\t t[127] = 249;\n\t t[128] = 251;\n\t t[129] = 252;\n\t t[130] = 8224;\n\t t[131] = 176;\n\t t[132] = 162;\n\t t[133] = 163;\n\t t[134] = 167;\n\t t[135] = 8226;\n\t t[136] = 182;\n\t t[137] = 223;\n\t t[138] = 174;\n\t t[139] = 169;\n\t t[140] = 8482;\n\t t[141] = 180;\n\t t[142] = 168;\n\t t[143] = 8800;\n\t t[144] = 198;\n\t t[145] = 216;\n\t t[146] = 8734;\n\t t[147] = 177;\n\t t[148] = 8804;\n\t t[149] = 8805;\n\t t[150] = 165;\n\t t[151] = 181;\n\t t[152] = 8706;\n\t t[153] = 8721;\n\t t[154] = 8719;\n\t t[156] = 8747;\n\t t[157] = 170;\n\t t[158] = 186;\n\t t[159] = 8486;\n\t t[160] = 230;\n\t t[161] = 248;\n\t t[162] = 191;\n\t t[163] = 161;\n\t t[164] = 172;\n\t t[165] = 8730;\n\t t[166] = 402;\n\t t[167] = 8776;\n\t t[168] = 8710;\n\t t[169] = 171;\n\t t[170] = 187;\n\t t[171] = 8230;\n\t t[210] = 218;\n\t t[223] = 711;\n\t t[224] = 321;\n\t t[225] = 322;\n\t t[227] = 353;\n\t t[229] = 382;\n\t t[234] = 253;\n\t t[252] = 263;\n\t t[253] = 268;\n\t t[254] = 269;\n\t t[258] = 258;\n\t t[260] = 260;\n\t t[261] = 261;\n\t t[265] = 280;\n\t t[266] = 281;\n\t t[268] = 283;\n\t t[269] = 313;\n\t t[275] = 323;\n\t t[276] = 324;\n\t t[278] = 328;\n\t t[284] = 345;\n\t t[285] = 346;\n\t t[286] = 347;\n\t t[292] = 367;\n\t t[295] = 377;\n\t t[296] = 378;\n\t t[298] = 380;\n\t t[305] = 963;\n\t t[306] = 964;\n\t t[307] = 966;\n\t t[308] = 8215;\n\t t[309] = 8252;\n\t t[310] = 8319;\n\t t[311] = 8359;\n\t t[312] = 8592;\n\t t[313] = 8593;\n\t t[337] = 9552;\n\t t[493] = 1039;\n\t t[494] = 1040;\n\t t[705] = 1524;\n\t t[706] = 8362;\n\t t[710] = 64288;\n\t t[711] = 64298;\n\t t[759] = 1617;\n\t t[761] = 1776;\n\t t[763] = 1778;\n\t t[775] = 1652;\n\t t[777] = 1764;\n\t t[778] = 1780;\n\t t[779] = 1781;\n\t t[780] = 1782;\n\t t[782] = 771;\n\t t[783] = 64726;\n\t t[786] = 8363;\n\t t[788] = 8532;\n\t t[790] = 768;\n\t t[791] = 769;\n\t t[792] = 768;\n\t t[795] = 803;\n\t t[797] = 64336;\n\t t[798] = 64337;\n\t t[799] = 64342;\n\t t[800] = 64343;\n\t t[801] = 64344;\n\t t[802] = 64345;\n\t t[803] = 64362;\n\t t[804] = 64363;\n\t t[805] = 64364;\n\t t[2424] = 7821;\n\t t[2425] = 7822;\n\t t[2426] = 7823;\n\t t[2427] = 7824;\n\t t[2428] = 7825;\n\t t[2429] = 7826;\n\t t[2430] = 7827;\n\t t[2433] = 7682;\n\t t[2678] = 8045;\n\t t[2679] = 8046;\n\t t[2830] = 1552;\n\t t[2838] = 686;\n\t t[2840] = 751;\n\t t[2842] = 753;\n\t t[2843] = 754;\n\t t[2844] = 755;\n\t t[2846] = 757;\n\t t[2856] = 767;\n\t t[2857] = 848;\n\t t[2858] = 849;\n\t t[2862] = 853;\n\t t[2863] = 854;\n\t t[2864] = 855;\n\t t[2865] = 861;\n\t t[2866] = 862;\n\t t[2906] = 7460;\n\t t[2908] = 7462;\n\t t[2909] = 7463;\n\t t[2910] = 7464;\n\t t[2912] = 7466;\n\t t[2913] = 7467;\n\t t[2914] = 7468;\n\t t[2916] = 7470;\n\t t[2917] = 7471;\n\t t[2918] = 7472;\n\t t[2920] = 7474;\n\t t[2921] = 7475;\n\t t[2922] = 7476;\n\t t[2924] = 7478;\n\t t[2925] = 7479;\n\t t[2926] = 7480;\n\t t[2928] = 7482;\n\t t[2929] = 7483;\n\t t[2930] = 7484;\n\t t[2932] = 7486;\n\t t[2933] = 7487;\n\t t[2934] = 7488;\n\t t[2936] = 7490;\n\t t[2937] = 7491;\n\t t[2938] = 7492;\n\t t[2940] = 7494;\n\t t[2941] = 7495;\n\t t[2942] = 7496;\n\t t[2944] = 7498;\n\t t[2946] = 7500;\n\t t[2948] = 7502;\n\t t[2950] = 7504;\n\t t[2951] = 7505;\n\t t[2952] = 7506;\n\t t[2954] = 7508;\n\t t[2955] = 7509;\n\t t[2956] = 7510;\n\t t[2958] = 7512;\n\t t[2959] = 7513;\n\t t[2960] = 7514;\n\t t[2962] = 7516;\n\t t[2963] = 7517;\n\t t[2964] = 7518;\n\t t[2966] = 7520;\n\t t[2967] = 7521;\n\t t[2968] = 7522;\n\t t[2970] = 7524;\n\t t[2971] = 7525;\n\t t[2972] = 7526;\n\t t[2974] = 7528;\n\t t[2975] = 7529;\n\t t[2976] = 7530;\n\t t[2978] = 1537;\n\t t[2979] = 1538;\n\t t[2980] = 1539;\n\t t[2982] = 1549;\n\t t[2983] = 1551;\n\t t[2984] = 1552;\n\t t[2986] = 1554;\n\t t[2987] = 1555;\n\t t[2988] = 1556;\n\t t[2990] = 1623;\n\t t[2991] = 1624;\n\t t[2995] = 1775;\n\t t[2999] = 1791;\n\t t[3002] = 64290;\n\t t[3003] = 64291;\n\t t[3004] = 64292;\n\t t[3006] = 64294;\n\t t[3007] = 64295;\n\t t[3008] = 64296;\n\t t[3011] = 1900;\n\t t[3014] = 8223;\n\t t[3015] = 8244;\n\t t[3017] = 7532;\n\t t[3018] = 7533;\n\t t[3019] = 7534;\n\t t[3075] = 7590;\n\t t[3076] = 7591;\n\t t[3079] = 7594;\n\t t[3080] = 7595;\n\t t[3083] = 7598;\n\t t[3084] = 7599;\n\t t[3087] = 7602;\n\t t[3088] = 7603;\n\t t[3091] = 7606;\n\t t[3092] = 7607;\n\t t[3095] = 7610;\n\t t[3096] = 7611;\n\t t[3099] = 7614;\n\t t[3100] = 7615;\n\t t[3103] = 7618;\n\t t[3104] = 7619;\n\t t[3107] = 8337;\n\t t[3108] = 8338;\n\t t[3116] = 1884;\n\t t[3119] = 1885;\n\t t[3120] = 1885;\n\t t[3123] = 1886;\n\t t[3124] = 1886;\n\t t[3127] = 1887;\n\t t[3128] = 1887;\n\t t[3131] = 1888;\n\t t[3132] = 1888;\n\t t[3135] = 1889;\n\t t[3136] = 1889;\n\t t[3139] = 1890;\n\t t[3140] = 1890;\n\t t[3143] = 1891;\n\t t[3144] = 1891;\n\t t[3147] = 1892;\n\t t[3148] = 1892;\n\t t[3153] = 580;\n\t t[3154] = 581;\n\t t[3157] = 584;\n\t t[3158] = 585;\n\t t[3161] = 588;\n\t t[3162] = 589;\n\t t[3165] = 891;\n\t t[3166] = 892;\n\t t[3169] = 1274;\n\t t[3170] = 1275;\n\t t[3173] = 1278;\n\t t[3174] = 1279;\n\t t[3181] = 7622;\n\t t[3182] = 7623;\n\t t[3282] = 11799;\n\t t[3316] = 578;\n\t t[3379] = 42785;\n\t t[3393] = 1159;\n\t t[3416] = 8377;\n\t});\n\tvar getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n\t t[227] = 322;\n\t t[264] = 261;\n\t t[291] = 346;\n\t});\n\texports.getStdFontMap = getStdFontMap;\n\texports.getNonStdFontMap = getNonStdFontMap;\n\texports.getSerifFonts = getSerifFonts;\n\texports.getSymbolsFonts = getSymbolsFonts;\n\texports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n\texports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\tvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n\t t[63721] = 0x00A9;\n\t t[63193] = 0x00A9;\n\t t[63720] = 0x00AE;\n\t t[63194] = 0x00AE;\n\t t[63722] = 0x2122;\n\t t[63195] = 0x2122;\n\t t[63729] = 0x23A7;\n\t t[63730] = 0x23A8;\n\t t[63731] = 0x23A9;\n\t t[63740] = 0x23AB;\n\t t[63741] = 0x23AC;\n\t t[63742] = 0x23AD;\n\t t[63726] = 0x23A1;\n\t t[63727] = 0x23A2;\n\t t[63728] = 0x23A3;\n\t t[63737] = 0x23A4;\n\t t[63738] = 0x23A5;\n\t t[63739] = 0x23A6;\n\t t[63723] = 0x239B;\n\t t[63724] = 0x239C;\n\t t[63725] = 0x239D;\n\t t[63734] = 0x239E;\n\t t[63735] = 0x239F;\n\t t[63736] = 0x23A0;\n\t});\n\tfunction mapSpecialUnicodeValues(code) {\n\t if (code >= 0xFFF0 && code <= 0xFFFF) {\n\t  return 0;\n\t } else if (code >= 0xF600 && code <= 0xF8FF) {\n\t  return getSpecialPUASymbols()[code] || code;\n\t }\n\t return code;\n\t}\n\tfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n\t var unicode = glyphsUnicodeMap[name];\n\t if (unicode !== undefined) {\n\t  return unicode;\n\t }\n\t if (!name) {\n\t  return -1;\n\t }\n\t if (name[0] === 'u') {\n\t  var nameLen = name.length, hexStr;\n\t  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n\t   hexStr = name.substr(3);\n\t  } else if (nameLen >= 5 && nameLen <= 7) {\n\t   hexStr = name.substr(1);\n\t  } else {\n\t   return -1;\n\t  }\n\t  if (hexStr === hexStr.toUpperCase()) {\n\t   unicode = parseInt(hexStr, 16);\n\t   if (unicode >= 0) {\n\t    return unicode;\n\t   }\n\t  }\n\t }\n\t return -1;\n\t}\n\tvar UnicodeRanges = [\n\t {\n\t  'begin': 0x0000,\n\t  'end': 0x007F\n\t },\n\t {\n\t  'begin': 0x0080,\n\t  'end': 0x00FF\n\t },\n\t {\n\t  'begin': 0x0100,\n\t  'end': 0x017F\n\t },\n\t {\n\t  'begin': 0x0180,\n\t  'end': 0x024F\n\t },\n\t {\n\t  'begin': 0x0250,\n\t  'end': 0x02AF\n\t },\n\t {\n\t  'begin': 0x02B0,\n\t  'end': 0x02FF\n\t },\n\t {\n\t  'begin': 0x0300,\n\t  'end': 0x036F\n\t },\n\t {\n\t  'begin': 0x0370,\n\t  'end': 0x03FF\n\t },\n\t {\n\t  'begin': 0x2C80,\n\t  'end': 0x2CFF\n\t },\n\t {\n\t  'begin': 0x0400,\n\t  'end': 0x04FF\n\t },\n\t {\n\t  'begin': 0x0530,\n\t  'end': 0x058F\n\t },\n\t {\n\t  'begin': 0x0590,\n\t  'end': 0x05FF\n\t },\n\t {\n\t  'begin': 0xA500,\n\t  'end': 0xA63F\n\t },\n\t {\n\t  'begin': 0x0600,\n\t  'end': 0x06FF\n\t },\n\t {\n\t  'begin': 0x07C0,\n\t  'end': 0x07FF\n\t },\n\t {\n\t  'begin': 0x0900,\n\t  'end': 0x097F\n\t },\n\t {\n\t  'begin': 0x0980,\n\t  'end': 0x09FF\n\t },\n\t {\n\t  'begin': 0x0A00,\n\t  'end': 0x0A7F\n\t },\n\t {\n\t  'begin': 0x0A80,\n\t  'end': 0x0AFF\n\t },\n\t {\n\t  'begin': 0x0B00,\n\t  'end': 0x0B7F\n\t },\n\t {\n\t  'begin': 0x0B80,\n\t  'end': 0x0BFF\n\t },\n\t {\n\t  'begin': 0x0C00,\n\t  'end': 0x0C7F\n\t },\n\t {\n\t  'begin': 0x0C80,\n\t  'end': 0x0CFF\n\t },\n\t {\n\t  'begin': 0x0D00,\n\t  'end': 0x0D7F\n\t },\n\t {\n\t  'begin': 0x0E00,\n\t  'end': 0x0E7F\n\t },\n\t {\n\t  'begin': 0x0E80,\n\t  'end': 0x0EFF\n\t },\n\t {\n\t  'begin': 0x10A0,\n\t  'end': 0x10FF\n\t },\n\t {\n\t  'begin': 0x1B00,\n\t  'end': 0x1B7F\n\t },\n\t {\n\t  'begin': 0x1100,\n\t  'end': 0x11FF\n\t },\n\t {\n\t  'begin': 0x1E00,\n\t  'end': 0x1EFF\n\t },\n\t {\n\t  'begin': 0x1F00,\n\t  'end': 0x1FFF\n\t },\n\t {\n\t  'begin': 0x2000,\n\t  'end': 0x206F\n\t },\n\t {\n\t  'begin': 0x2070,\n\t  'end': 0x209F\n\t },\n\t {\n\t  'begin': 0x20A0,\n\t  'end': 0x20CF\n\t },\n\t {\n\t  'begin': 0x20D0,\n\t  'end': 0x20FF\n\t },\n\t {\n\t  'begin': 0x2100,\n\t  'end': 0x214F\n\t },\n\t {\n\t  'begin': 0x2150,\n\t  'end': 0x218F\n\t },\n\t {\n\t  'begin': 0x2190,\n\t  'end': 0x21FF\n\t },\n\t {\n\t  'begin': 0x2200,\n\t  'end': 0x22FF\n\t },\n\t {\n\t  'begin': 0x2300,\n\t  'end': 0x23FF\n\t },\n\t {\n\t  'begin': 0x2400,\n\t  'end': 0x243F\n\t },\n\t {\n\t  'begin': 0x2440,\n\t  'end': 0x245F\n\t },\n\t {\n\t  'begin': 0x2460,\n\t  'end': 0x24FF\n\t },\n\t {\n\t  'begin': 0x2500,\n\t  'end': 0x257F\n\t },\n\t {\n\t  'begin': 0x2580,\n\t  'end': 0x259F\n\t },\n\t {\n\t  'begin': 0x25A0,\n\t  'end': 0x25FF\n\t },\n\t {\n\t  'begin': 0x2600,\n\t  'end': 0x26FF\n\t },\n\t {\n\t  'begin': 0x2700,\n\t  'end': 0x27BF\n\t },\n\t {\n\t  'begin': 0x3000,\n\t  'end': 0x303F\n\t },\n\t {\n\t  'begin': 0x3040,\n\t  'end': 0x309F\n\t },\n\t {\n\t  'begin': 0x30A0,\n\t  'end': 0x30FF\n\t },\n\t {\n\t  'begin': 0x3100,\n\t  'end': 0x312F\n\t },\n\t {\n\t  'begin': 0x3130,\n\t  'end': 0x318F\n\t },\n\t {\n\t  'begin': 0xA840,\n\t  'end': 0xA87F\n\t },\n\t {\n\t  'begin': 0x3200,\n\t  'end': 0x32FF\n\t },\n\t {\n\t  'begin': 0x3300,\n\t  'end': 0x33FF\n\t },\n\t {\n\t  'begin': 0xAC00,\n\t  'end': 0xD7AF\n\t },\n\t {\n\t  'begin': 0xD800,\n\t  'end': 0xDFFF\n\t },\n\t {\n\t  'begin': 0x10900,\n\t  'end': 0x1091F\n\t },\n\t {\n\t  'begin': 0x4E00,\n\t  'end': 0x9FFF\n\t },\n\t {\n\t  'begin': 0xE000,\n\t  'end': 0xF8FF\n\t },\n\t {\n\t  'begin': 0x31C0,\n\t  'end': 0x31EF\n\t },\n\t {\n\t  'begin': 0xFB00,\n\t  'end': 0xFB4F\n\t },\n\t {\n\t  'begin': 0xFB50,\n\t  'end': 0xFDFF\n\t },\n\t {\n\t  'begin': 0xFE20,\n\t  'end': 0xFE2F\n\t },\n\t {\n\t  'begin': 0xFE10,\n\t  'end': 0xFE1F\n\t },\n\t {\n\t  'begin': 0xFE50,\n\t  'end': 0xFE6F\n\t },\n\t {\n\t  'begin': 0xFE70,\n\t  'end': 0xFEFF\n\t },\n\t {\n\t  'begin': 0xFF00,\n\t  'end': 0xFFEF\n\t },\n\t {\n\t  'begin': 0xFFF0,\n\t  'end': 0xFFFF\n\t },\n\t {\n\t  'begin': 0x0F00,\n\t  'end': 0x0FFF\n\t },\n\t {\n\t  'begin': 0x0700,\n\t  'end': 0x074F\n\t },\n\t {\n\t  'begin': 0x0780,\n\t  'end': 0x07BF\n\t },\n\t {\n\t  'begin': 0x0D80,\n\t  'end': 0x0DFF\n\t },\n\t {\n\t  'begin': 0x1000,\n\t  'end': 0x109F\n\t },\n\t {\n\t  'begin': 0x1200,\n\t  'end': 0x137F\n\t },\n\t {\n\t  'begin': 0x13A0,\n\t  'end': 0x13FF\n\t },\n\t {\n\t  'begin': 0x1400,\n\t  'end': 0x167F\n\t },\n\t {\n\t  'begin': 0x1680,\n\t  'end': 0x169F\n\t },\n\t {\n\t  'begin': 0x16A0,\n\t  'end': 0x16FF\n\t },\n\t {\n\t  'begin': 0x1780,\n\t  'end': 0x17FF\n\t },\n\t {\n\t  'begin': 0x1800,\n\t  'end': 0x18AF\n\t },\n\t {\n\t  'begin': 0x2800,\n\t  'end': 0x28FF\n\t },\n\t {\n\t  'begin': 0xA000,\n\t  'end': 0xA48F\n\t },\n\t {\n\t  'begin': 0x1700,\n\t  'end': 0x171F\n\t },\n\t {\n\t  'begin': 0x10300,\n\t  'end': 0x1032F\n\t },\n\t {\n\t  'begin': 0x10330,\n\t  'end': 0x1034F\n\t },\n\t {\n\t  'begin': 0x10400,\n\t  'end': 0x1044F\n\t },\n\t {\n\t  'begin': 0x1D000,\n\t  'end': 0x1D0FF\n\t },\n\t {\n\t  'begin': 0x1D400,\n\t  'end': 0x1D7FF\n\t },\n\t {\n\t  'begin': 0xFF000,\n\t  'end': 0xFFFFD\n\t },\n\t {\n\t  'begin': 0xFE00,\n\t  'end': 0xFE0F\n\t },\n\t {\n\t  'begin': 0xE0000,\n\t  'end': 0xE007F\n\t },\n\t {\n\t  'begin': 0x1900,\n\t  'end': 0x194F\n\t },\n\t {\n\t  'begin': 0x1950,\n\t  'end': 0x197F\n\t },\n\t {\n\t  'begin': 0x1980,\n\t  'end': 0x19DF\n\t },\n\t {\n\t  'begin': 0x1A00,\n\t  'end': 0x1A1F\n\t },\n\t {\n\t  'begin': 0x2C00,\n\t  'end': 0x2C5F\n\t },\n\t {\n\t  'begin': 0x2D30,\n\t  'end': 0x2D7F\n\t },\n\t {\n\t  'begin': 0x4DC0,\n\t  'end': 0x4DFF\n\t },\n\t {\n\t  'begin': 0xA800,\n\t  'end': 0xA82F\n\t },\n\t {\n\t  'begin': 0x10000,\n\t  'end': 0x1007F\n\t },\n\t {\n\t  'begin': 0x10140,\n\t  'end': 0x1018F\n\t },\n\t {\n\t  'begin': 0x10380,\n\t  'end': 0x1039F\n\t },\n\t {\n\t  'begin': 0x103A0,\n\t  'end': 0x103DF\n\t },\n\t {\n\t  'begin': 0x10450,\n\t  'end': 0x1047F\n\t },\n\t {\n\t  'begin': 0x10480,\n\t  'end': 0x104AF\n\t },\n\t {\n\t  'begin': 0x10800,\n\t  'end': 0x1083F\n\t },\n\t {\n\t  'begin': 0x10A00,\n\t  'end': 0x10A5F\n\t },\n\t {\n\t  'begin': 0x1D300,\n\t  'end': 0x1D35F\n\t },\n\t {\n\t  'begin': 0x12000,\n\t  'end': 0x123FF\n\t },\n\t {\n\t  'begin': 0x1D360,\n\t  'end': 0x1D37F\n\t },\n\t {\n\t  'begin': 0x1B80,\n\t  'end': 0x1BBF\n\t },\n\t {\n\t  'begin': 0x1C00,\n\t  'end': 0x1C4F\n\t },\n\t {\n\t  'begin': 0x1C50,\n\t  'end': 0x1C7F\n\t },\n\t {\n\t  'begin': 0xA880,\n\t  'end': 0xA8DF\n\t },\n\t {\n\t  'begin': 0xA900,\n\t  'end': 0xA92F\n\t },\n\t {\n\t  'begin': 0xA930,\n\t  'end': 0xA95F\n\t },\n\t {\n\t  'begin': 0xAA00,\n\t  'end': 0xAA5F\n\t },\n\t {\n\t  'begin': 0x10190,\n\t  'end': 0x101CF\n\t },\n\t {\n\t  'begin': 0x101D0,\n\t  'end': 0x101FF\n\t },\n\t {\n\t  'begin': 0x102A0,\n\t  'end': 0x102DF\n\t },\n\t {\n\t  'begin': 0x1F030,\n\t  'end': 0x1F09F\n\t }\n\t];\n\tfunction getUnicodeRangeFor(value) {\n\t for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n\t  var range = UnicodeRanges[i];\n\t  if (value >= range.begin && value < range.end) {\n\t   return i;\n\t  }\n\t }\n\t return -1;\n\t}\n\tfunction isRTLRangeFor(value) {\n\t var range = UnicodeRanges[13];\n\t if (value >= range.begin && value < range.end) {\n\t  return true;\n\t }\n\t range = UnicodeRanges[11];\n\t if (value >= range.begin && value < range.end) {\n\t  return true;\n\t }\n\t return false;\n\t}\n\tvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n\t t['\\u00A8'] = '\\u0020\\u0308';\n\t t['\\u00AF'] = '\\u0020\\u0304';\n\t t['\\u00B4'] = '\\u0020\\u0301';\n\t t['\\u00B5'] = '\\u03BC';\n\t t['\\u00B8'] = '\\u0020\\u0327';\n\t t['\\u0132'] = '\\u0049\\u004A';\n\t t['\\u0133'] = '\\u0069\\u006A';\n\t t['\\u013F'] = '\\u004C\\u00B7';\n\t t['\\u0140'] = '\\u006C\\u00B7';\n\t t['\\u0149'] = '\\u02BC\\u006E';\n\t t['\\u017F'] = '\\u0073';\n\t t['\\u01C4'] = '\\u0044\\u017D';\n\t t['\\u01C5'] = '\\u0044\\u017E';\n\t t['\\u01C6'] = '\\u0064\\u017E';\n\t t['\\u01C7'] = '\\u004C\\u004A';\n\t t['\\u01C8'] = '\\u004C\\u006A';\n\t t['\\u01C9'] = '\\u006C\\u006A';\n\t t['\\u01CA'] = '\\u004E\\u004A';\n\t t['\\u01CB'] = '\\u004E\\u006A';\n\t t['\\u01CC'] = '\\u006E\\u006A';\n\t t['\\u01F1'] = '\\u0044\\u005A';\n\t t['\\u01F2'] = '\\u0044\\u007A';\n\t t['\\u01F3'] = '\\u0064\\u007A';\n\t t['\\u02D8'] = '\\u0020\\u0306';\n\t t['\\u02D9'] = '\\u0020\\u0307';\n\t t['\\u02DA'] = '\\u0020\\u030A';\n\t t['\\u02DB'] = '\\u0020\\u0328';\n\t t['\\u02DC'] = '\\u0020\\u0303';\n\t t['\\u02DD'] = '\\u0020\\u030B';\n\t t['\\u037A'] = '\\u0020\\u0345';\n\t t['\\u0384'] = '\\u0020\\u0301';\n\t t['\\u03D0'] = '\\u03B2';\n\t t['\\u03D1'] = '\\u03B8';\n\t t['\\u03D2'] = '\\u03A5';\n\t t['\\u03D5'] = '\\u03C6';\n\t t['\\u03D6'] = '\\u03C0';\n\t t['\\u03F0'] = '\\u03BA';\n\t t['\\u03F1'] = '\\u03C1';\n\t t['\\u03F2'] = '\\u03C2';\n\t t['\\u03F4'] = '\\u0398';\n\t t['\\u03F5'] = '\\u03B5';\n\t t['\\u03F9'] = '\\u03A3';\n\t t['\\u0587'] = '\\u0565\\u0582';\n\t t['\\u0675'] = '\\u0627\\u0674';\n\t t['\\u0676'] = '\\u0648\\u0674';\n\t t['\\u0677'] = '\\u06C7\\u0674';\n\t t['\\u0678'] = '\\u064A\\u0674';\n\t t['\\u0E33'] = '\\u0E4D\\u0E32';\n\t t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n\t t['\\u0EDC'] = '\\u0EAB\\u0E99';\n\t t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n\t t['\\u0F77'] = '\\u0FB2\\u0F81';\n\t t['\\u0F79'] = '\\u0FB3\\u0F81';\n\t t['\\u1E9A'] = '\\u0061\\u02BE';\n\t t['\\u1FBD'] = '\\u0020\\u0313';\n\t t['\\u1FBF'] = '\\u0020\\u0313';\n\t t['\\u1FC0'] = '\\u0020\\u0342';\n\t t['\\u1FFE'] = '\\u0020\\u0314';\n\t t['\\u2002'] = '\\u0020';\n\t t['\\u2003'] = '\\u0020';\n\t t['\\u2004'] = '\\u0020';\n\t t['\\u2005'] = '\\u0020';\n\t t['\\u2006'] = '\\u0020';\n\t t['\\u2008'] = '\\u0020';\n\t t['\\u2009'] = '\\u0020';\n\t t['\\u200A'] = '\\u0020';\n\t t['\\u2017'] = '\\u0020\\u0333';\n\t t['\\u2024'] = '\\u002E';\n\t t['\\u2025'] = '\\u002E\\u002E';\n\t t['\\u2026'] = '\\u002E\\u002E\\u002E';\n\t t['\\u2033'] = '\\u2032\\u2032';\n\t t['\\u2034'] = '\\u2032\\u2032\\u2032';\n\t t['\\u2036'] = '\\u2035\\u2035';\n\t t['\\u2037'] = '\\u2035\\u2035\\u2035';\n\t t['\\u203C'] = '\\u0021\\u0021';\n\t t['\\u203E'] = '\\u0020\\u0305';\n\t t['\\u2047'] = '\\u003F\\u003F';\n\t t['\\u2048'] = '\\u003F\\u0021';\n\t t['\\u2049'] = '\\u0021\\u003F';\n\t t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n\t t['\\u205F'] = '\\u0020';\n\t t['\\u20A8'] = '\\u0052\\u0073';\n\t t['\\u2100'] = '\\u0061\\u002F\\u0063';\n\t t['\\u2101'] = '\\u0061\\u002F\\u0073';\n\t t['\\u2103'] = '\\u00B0\\u0043';\n\t t['\\u2105'] = '\\u0063\\u002F\\u006F';\n\t t['\\u2106'] = '\\u0063\\u002F\\u0075';\n\t t['\\u2107'] = '\\u0190';\n\t t['\\u2109'] = '\\u00B0\\u0046';\n\t t['\\u2116'] = '\\u004E\\u006F';\n\t t['\\u2121'] = '\\u0054\\u0045\\u004C';\n\t t['\\u2135'] = '\\u05D0';\n\t t['\\u2136'] = '\\u05D1';\n\t t['\\u2137'] = '\\u05D2';\n\t t['\\u2138'] = '\\u05D3';\n\t t['\\u213B'] = '\\u0046\\u0041\\u0058';\n\t t['\\u2160'] = '\\u0049';\n\t t['\\u2161'] = '\\u0049\\u0049';\n\t t['\\u2162'] = '\\u0049\\u0049\\u0049';\n\t t['\\u2163'] = '\\u0049\\u0056';\n\t t['\\u2164'] = '\\u0056';\n\t t['\\u2165'] = '\\u0056\\u0049';\n\t t['\\u2166'] = '\\u0056\\u0049\\u0049';\n\t t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n\t t['\\u2168'] = '\\u0049\\u0058';\n\t t['\\u2169'] = '\\u0058';\n\t t['\\u216A'] = '\\u0058\\u0049';\n\t t['\\u216B'] = '\\u0058\\u0049\\u0049';\n\t t['\\u216C'] = '\\u004C';\n\t t['\\u216D'] = '\\u0043';\n\t t['\\u216E'] = '\\u0044';\n\t t['\\u216F'] = '\\u004D';\n\t t['\\u2170'] = '\\u0069';\n\t t['\\u2171'] = '\\u0069\\u0069';\n\t t['\\u2172'] = '\\u0069\\u0069\\u0069';\n\t t['\\u2173'] = '\\u0069\\u0076';\n\t t['\\u2174'] = '\\u0076';\n\t t['\\u2175'] = '\\u0076\\u0069';\n\t t['\\u2176'] = '\\u0076\\u0069\\u0069';\n\t t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n\t t['\\u2178'] = '\\u0069\\u0078';\n\t t['\\u2179'] = '\\u0078';\n\t t['\\u217A'] = '\\u0078\\u0069';\n\t t['\\u217B'] = '\\u0078\\u0069\\u0069';\n\t t['\\u217C'] = '\\u006C';\n\t t['\\u217D'] = '\\u0063';\n\t t['\\u217E'] = '\\u0064';\n\t t['\\u217F'] = '\\u006D';\n\t t['\\u222C'] = '\\u222B\\u222B';\n\t t['\\u222D'] = '\\u222B\\u222B\\u222B';\n\t t['\\u222F'] = '\\u222E\\u222E';\n\t t['\\u2230'] = '\\u222E\\u222E\\u222E';\n\t t['\\u2474'] = '\\u0028\\u0031\\u0029';\n\t t['\\u2475'] = '\\u0028\\u0032\\u0029';\n\t t['\\u2476'] = '\\u0028\\u0033\\u0029';\n\t t['\\u2477'] = '\\u0028\\u0034\\u0029';\n\t t['\\u2478'] = '\\u0028\\u0035\\u0029';\n\t t['\\u2479'] = '\\u0028\\u0036\\u0029';\n\t t['\\u247A'] = '\\u0028\\u0037\\u0029';\n\t t['\\u247B'] = '\\u0028\\u0038\\u0029';\n\t t['\\u247C'] = '\\u0028\\u0039\\u0029';\n\t t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n\t t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n\t t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n\t t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n\t t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n\t t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n\t t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n\t t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n\t t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n\t t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n\t t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n\t t['\\u2488'] = '\\u0031\\u002E';\n\t t['\\u2489'] = '\\u0032\\u002E';\n\t t['\\u248A'] = '\\u0033\\u002E';\n\t t['\\u248B'] = '\\u0034\\u002E';\n\t t['\\u248C'] = '\\u0035\\u002E';\n\t t['\\u248D'] = '\\u0036\\u002E';\n\t t['\\u248E'] = '\\u0037\\u002E';\n\t t['\\u248F'] = '\\u0038\\u002E';\n\t t['\\u2490'] = '\\u0039\\u002E';\n\t t['\\u2491'] = '\\u0031\\u0030\\u002E';\n\t t['\\u2492'] = '\\u0031\\u0031\\u002E';\n\t t['\\u2493'] = '\\u0031\\u0032\\u002E';\n\t t['\\u2494'] = '\\u0031\\u0033\\u002E';\n\t t['\\u2495'] = '\\u0031\\u0034\\u002E';\n\t t['\\u2496'] = '\\u0031\\u0035\\u002E';\n\t t['\\u2497'] = '\\u0031\\u0036\\u002E';\n\t t['\\u2498'] = '\\u0031\\u0037\\u002E';\n\t t['\\u2499'] = '\\u0031\\u0038\\u002E';\n\t t['\\u249A'] = '\\u0031\\u0039\\u002E';\n\t t['\\u249B'] = '\\u0032\\u0030\\u002E';\n\t t['\\u249C'] = '\\u0028\\u0061\\u0029';\n\t t['\\u249D'] = '\\u0028\\u0062\\u0029';\n\t t['\\u249E'] = '\\u0028\\u0063\\u0029';\n\t t['\\u249F'] = '\\u0028\\u0064\\u0029';\n\t t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n\t t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n\t t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n\t t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n\t t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n\t t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n\t t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n\t t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n\t t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n\t t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n\t t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n\t t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n\t t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n\t t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n\t t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n\t t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n\t t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n\t t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n\t t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n\t t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n\t t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n\t t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n\t t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n\t t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n\t t['\\u2A75'] = '\\u003D\\u003D';\n\t t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n\t t['\\u2E9F'] = '\\u6BCD';\n\t t['\\u2EF3'] = '\\u9F9F';\n\t t['\\u2F00'] = '\\u4E00';\n\t t['\\u2F01'] = '\\u4E28';\n\t t['\\u2F02'] = '\\u4E36';\n\t t['\\u2F03'] = '\\u4E3F';\n\t t['\\u2F04'] = '\\u4E59';\n\t t['\\u2F05'] = '\\u4E85';\n\t t['\\u2F06'] = '\\u4E8C';\n\t t['\\u2F07'] = '\\u4EA0';\n\t t['\\u2F08'] = '\\u4EBA';\n\t t['\\u2F09'] = '\\u513F';\n\t t['\\u2F0A'] = '\\u5165';\n\t t['\\u2F0B'] = '\\u516B';\n\t t['\\u2F0C'] = '\\u5182';\n\t t['\\u2F0D'] = '\\u5196';\n\t t['\\u2F0E'] = '\\u51AB';\n\t t['\\u2F0F'] = '\\u51E0';\n\t t['\\u2F10'] = '\\u51F5';\n\t t['\\u2F11'] = '\\u5200';\n\t t['\\u2F12'] = '\\u529B';\n\t t['\\u2F13'] = '\\u52F9';\n\t t['\\u2F14'] = '\\u5315';\n\t t['\\u2F15'] = '\\u531A';\n\t t['\\u2F16'] = '\\u5338';\n\t t['\\u2F17'] = '\\u5341';\n\t t['\\u2F18'] = '\\u535C';\n\t t['\\u2F19'] = '\\u5369';\n\t t['\\u2F1A'] = '\\u5382';\n\t t['\\u2F1B'] = '\\u53B6';\n\t t['\\u2F1C'] = '\\u53C8';\n\t t['\\u2F1D'] = '\\u53E3';\n\t t['\\u2F1E'] = '\\u56D7';\n\t t['\\u2F1F'] = '\\u571F';\n\t t['\\u2F20'] = '\\u58EB';\n\t t['\\u2F21'] = '\\u5902';\n\t t['\\u2F22'] = '\\u590A';\n\t t['\\u2F23'] = '\\u5915';\n\t t['\\u2F24'] = '\\u5927';\n\t t['\\u2F25'] = '\\u5973';\n\t t['\\u2F26'] = '\\u5B50';\n\t t['\\u2F27'] = '\\u5B80';\n\t t['\\u2F28'] = '\\u5BF8';\n\t t['\\u2F29'] = '\\u5C0F';\n\t t['\\u2F2A'] = '\\u5C22';\n\t t['\\u2F2B'] = '\\u5C38';\n\t t['\\u2F2C'] = '\\u5C6E';\n\t t['\\u2F2D'] = '\\u5C71';\n\t t['\\u2F2E'] = '\\u5DDB';\n\t t['\\u2F2F'] = '\\u5DE5';\n\t t['\\u2F30'] = '\\u5DF1';\n\t t['\\u2F31'] = '\\u5DFE';\n\t t['\\u2F32'] = '\\u5E72';\n\t t['\\u2F33'] = '\\u5E7A';\n\t t['\\u2F34'] = '\\u5E7F';\n\t t['\\u2F35'] = '\\u5EF4';\n\t t['\\u2F36'] = '\\u5EFE';\n\t t['\\u2F37'] = '\\u5F0B';\n\t t['\\u2F38'] = '\\u5F13';\n\t t['\\u2F39'] = '\\u5F50';\n\t t['\\u2F3A'] = '\\u5F61';\n\t t['\\u2F3B'] = '\\u5F73';\n\t t['\\u2F3C'] = '\\u5FC3';\n\t t['\\u2F3D'] = '\\u6208';\n\t t['\\u2F3E'] = '\\u6236';\n\t t['\\u2F3F'] = '\\u624B';\n\t t['\\u2F40'] = '\\u652F';\n\t t['\\u2F41'] = '\\u6534';\n\t t['\\u2F42'] = '\\u6587';\n\t t['\\u2F43'] = '\\u6597';\n\t t['\\u2F44'] = '\\u65A4';\n\t t['\\u2F45'] = '\\u65B9';\n\t t['\\u2F46'] = '\\u65E0';\n\t t['\\u2F47'] = '\\u65E5';\n\t t['\\u2F48'] = '\\u66F0';\n\t t['\\u2F49'] = '\\u6708';\n\t t['\\u2F4A'] = '\\u6728';\n\t t['\\u2F4B'] = '\\u6B20';\n\t t['\\u2F4C'] = '\\u6B62';\n\t t['\\u2F4D'] = '\\u6B79';\n\t t['\\u2F4E'] = '\\u6BB3';\n\t t['\\u2F4F'] = '\\u6BCB';\n\t t['\\u2F50'] = '\\u6BD4';\n\t t['\\u2F51'] = '\\u6BDB';\n\t t['\\u2F52'] = '\\u6C0F';\n\t t['\\u2F53'] = '\\u6C14';\n\t t['\\u2F54'] = '\\u6C34';\n\t t['\\u2F55'] = '\\u706B';\n\t t['\\u2F56'] = '\\u722A';\n\t t['\\u2F57'] = '\\u7236';\n\t t['\\u2F58'] = '\\u723B';\n\t t['\\u2F59'] = '\\u723F';\n\t t['\\u2F5A'] = '\\u7247';\n\t t['\\u2F5B'] = '\\u7259';\n\t t['\\u2F5C'] = '\\u725B';\n\t t['\\u2F5D'] = '\\u72AC';\n\t t['\\u2F5E'] = '\\u7384';\n\t t['\\u2F5F'] = '\\u7389';\n\t t['\\u2F60'] = '\\u74DC';\n\t t['\\u2F61'] = '\\u74E6';\n\t t['\\u2F62'] = '\\u7518';\n\t t['\\u2F63'] = '\\u751F';\n\t t['\\u2F64'] = '\\u7528';\n\t t['\\u2F65'] = '\\u7530';\n\t t['\\u2F66'] = '\\u758B';\n\t t['\\u2F67'] = '\\u7592';\n\t t['\\u2F68'] = '\\u7676';\n\t t['\\u2F69'] = '\\u767D';\n\t t['\\u2F6A'] = '\\u76AE';\n\t t['\\u2F6B'] = '\\u76BF';\n\t t['\\u2F6C'] = '\\u76EE';\n\t t['\\u2F6D'] = '\\u77DB';\n\t t['\\u2F6E'] = '\\u77E2';\n\t t['\\u2F6F'] = '\\u77F3';\n\t t['\\u2F70'] = '\\u793A';\n\t t['\\u2F71'] = '\\u79B8';\n\t t['\\u2F72'] = '\\u79BE';\n\t t['\\u2F73'] = '\\u7A74';\n\t t['\\u2F74'] = '\\u7ACB';\n\t t['\\u2F75'] = '\\u7AF9';\n\t t['\\u2F76'] = '\\u7C73';\n\t t['\\u2F77'] = '\\u7CF8';\n\t t['\\u2F78'] = '\\u7F36';\n\t t['\\u2F79'] = '\\u7F51';\n\t t['\\u2F7A'] = '\\u7F8A';\n\t t['\\u2F7B'] = '\\u7FBD';\n\t t['\\u2F7C'] = '\\u8001';\n\t t['\\u2F7D'] = '\\u800C';\n\t t['\\u2F7E'] = '\\u8012';\n\t t['\\u2F7F'] = '\\u8033';\n\t t['\\u2F80'] = '\\u807F';\n\t t['\\u2F81'] = '\\u8089';\n\t t['\\u2F82'] = '\\u81E3';\n\t t['\\u2F83'] = '\\u81EA';\n\t t['\\u2F84'] = '\\u81F3';\n\t t['\\u2F85'] = '\\u81FC';\n\t t['\\u2F86'] = '\\u820C';\n\t t['\\u2F87'] = '\\u821B';\n\t t['\\u2F88'] = '\\u821F';\n\t t['\\u2F89'] = '\\u826E';\n\t t['\\u2F8A'] = '\\u8272';\n\t t['\\u2F8B'] = '\\u8278';\n\t t['\\u2F8C'] = '\\u864D';\n\t t['\\u2F8D'] = '\\u866B';\n\t t['\\u2F8E'] = '\\u8840';\n\t t['\\u2F8F'] = '\\u884C';\n\t t['\\u2F90'] = '\\u8863';\n\t t['\\u2F91'] = '\\u897E';\n\t t['\\u2F92'] = '\\u898B';\n\t t['\\u2F93'] = '\\u89D2';\n\t t['\\u2F94'] = '\\u8A00';\n\t t['\\u2F95'] = '\\u8C37';\n\t t['\\u2F96'] = '\\u8C46';\n\t t['\\u2F97'] = '\\u8C55';\n\t t['\\u2F98'] = '\\u8C78';\n\t t['\\u2F99'] = '\\u8C9D';\n\t t['\\u2F9A'] = '\\u8D64';\n\t t['\\u2F9B'] = '\\u8D70';\n\t t['\\u2F9C'] = '\\u8DB3';\n\t t['\\u2F9D'] = '\\u8EAB';\n\t t['\\u2F9E'] = '\\u8ECA';\n\t t['\\u2F9F'] = '\\u8F9B';\n\t t['\\u2FA0'] = '\\u8FB0';\n\t t['\\u2FA1'] = '\\u8FB5';\n\t t['\\u2FA2'] = '\\u9091';\n\t t['\\u2FA3'] = '\\u9149';\n\t t['\\u2FA4'] = '\\u91C6';\n\t t['\\u2FA5'] = '\\u91CC';\n\t t['\\u2FA6'] = '\\u91D1';\n\t t['\\u2FA7'] = '\\u9577';\n\t t['\\u2FA8'] = '\\u9580';\n\t t['\\u2FA9'] = '\\u961C';\n\t t['\\u2FAA'] = '\\u96B6';\n\t t['\\u2FAB'] = '\\u96B9';\n\t t['\\u2FAC'] = '\\u96E8';\n\t t['\\u2FAD'] = '\\u9751';\n\t t['\\u2FAE'] = '\\u975E';\n\t t['\\u2FAF'] = '\\u9762';\n\t t['\\u2FB0'] = '\\u9769';\n\t t['\\u2FB1'] = '\\u97CB';\n\t t['\\u2FB2'] = '\\u97ED';\n\t t['\\u2FB3'] = '\\u97F3';\n\t t['\\u2FB4'] = '\\u9801';\n\t t['\\u2FB5'] = '\\u98A8';\n\t t['\\u2FB6'] = '\\u98DB';\n\t t['\\u2FB7'] = '\\u98DF';\n\t t['\\u2FB8'] = '\\u9996';\n\t t['\\u2FB9'] = '\\u9999';\n\t t['\\u2FBA'] = '\\u99AC';\n\t t['\\u2FBB'] = '\\u9AA8';\n\t t['\\u2FBC'] = '\\u9AD8';\n\t t['\\u2FBD'] = '\\u9ADF';\n\t t['\\u2FBE'] = '\\u9B25';\n\t t['\\u2FBF'] = '\\u9B2F';\n\t t['\\u2FC0'] = '\\u9B32';\n\t t['\\u2FC1'] = '\\u9B3C';\n\t t['\\u2FC2'] = '\\u9B5A';\n\t t['\\u2FC3'] = '\\u9CE5';\n\t t['\\u2FC4'] = '\\u9E75';\n\t t['\\u2FC5'] = '\\u9E7F';\n\t t['\\u2FC6'] = '\\u9EA5';\n\t t['\\u2FC7'] = '\\u9EBB';\n\t t['\\u2FC8'] = '\\u9EC3';\n\t t['\\u2FC9'] = '\\u9ECD';\n\t t['\\u2FCA'] = '\\u9ED1';\n\t t['\\u2FCB'] = '\\u9EF9';\n\t t['\\u2FCC'] = '\\u9EFD';\n\t t['\\u2FCD'] = '\\u9F0E';\n\t t['\\u2FCE'] = '\\u9F13';\n\t t['\\u2FCF'] = '\\u9F20';\n\t t['\\u2FD0'] = '\\u9F3B';\n\t t['\\u2FD1'] = '\\u9F4A';\n\t t['\\u2FD2'] = '\\u9F52';\n\t t['\\u2FD3'] = '\\u9F8D';\n\t t['\\u2FD4'] = '\\u9F9C';\n\t t['\\u2FD5'] = '\\u9FA0';\n\t t['\\u3036'] = '\\u3012';\n\t t['\\u3038'] = '\\u5341';\n\t t['\\u3039'] = '\\u5344';\n\t t['\\u303A'] = '\\u5345';\n\t t['\\u309B'] = '\\u0020\\u3099';\n\t t['\\u309C'] = '\\u0020\\u309A';\n\t t['\\u3131'] = '\\u1100';\n\t t['\\u3132'] = '\\u1101';\n\t t['\\u3133'] = '\\u11AA';\n\t t['\\u3134'] = '\\u1102';\n\t t['\\u3135'] = '\\u11AC';\n\t t['\\u3136'] = '\\u11AD';\n\t t['\\u3137'] = '\\u1103';\n\t t['\\u3138'] = '\\u1104';\n\t t['\\u3139'] = '\\u1105';\n\t t['\\u313A'] = '\\u11B0';\n\t t['\\u313B'] = '\\u11B1';\n\t t['\\u313C'] = '\\u11B2';\n\t t['\\u313D'] = '\\u11B3';\n\t t['\\u313E'] = '\\u11B4';\n\t t['\\u313F'] = '\\u11B5';\n\t t['\\u3140'] = '\\u111A';\n\t t['\\u3141'] = '\\u1106';\n\t t['\\u3142'] = '\\u1107';\n\t t['\\u3143'] = '\\u1108';\n\t t['\\u3144'] = '\\u1121';\n\t t['\\u3145'] = '\\u1109';\n\t t['\\u3146'] = '\\u110A';\n\t t['\\u3147'] = '\\u110B';\n\t t['\\u3148'] = '\\u110C';\n\t t['\\u3149'] = '\\u110D';\n\t t['\\u314A'] = '\\u110E';\n\t t['\\u314B'] = '\\u110F';\n\t t['\\u314C'] = '\\u1110';\n\t t['\\u314D'] = '\\u1111';\n\t t['\\u314E'] = '\\u1112';\n\t t['\\u314F'] = '\\u1161';\n\t t['\\u3150'] = '\\u1162';\n\t t['\\u3151'] = '\\u1163';\n\t t['\\u3152'] = '\\u1164';\n\t t['\\u3153'] = '\\u1165';\n\t t['\\u3154'] = '\\u1166';\n\t t['\\u3155'] = '\\u1167';\n\t t['\\u3156'] = '\\u1168';\n\t t['\\u3157'] = '\\u1169';\n\t t['\\u3158'] = '\\u116A';\n\t t['\\u3159'] = '\\u116B';\n\t t['\\u315A'] = '\\u116C';\n\t t['\\u315B'] = '\\u116D';\n\t t['\\u315C'] = '\\u116E';\n\t t['\\u315D'] = '\\u116F';\n\t t['\\u315E'] = '\\u1170';\n\t t['\\u315F'] = '\\u1171';\n\t t['\\u3160'] = '\\u1172';\n\t t['\\u3161'] = '\\u1173';\n\t t['\\u3162'] = '\\u1174';\n\t t['\\u3163'] = '\\u1175';\n\t t['\\u3164'] = '\\u1160';\n\t t['\\u3165'] = '\\u1114';\n\t t['\\u3166'] = '\\u1115';\n\t t['\\u3167'] = '\\u11C7';\n\t t['\\u3168'] = '\\u11C8';\n\t t['\\u3169'] = '\\u11CC';\n\t t['\\u316A'] = '\\u11CE';\n\t t['\\u316B'] = '\\u11D3';\n\t t['\\u316C'] = '\\u11D7';\n\t t['\\u316D'] = '\\u11D9';\n\t t['\\u316E'] = '\\u111C';\n\t t['\\u316F'] = '\\u11DD';\n\t t['\\u3170'] = '\\u11DF';\n\t t['\\u3171'] = '\\u111D';\n\t t['\\u3172'] = '\\u111E';\n\t t['\\u3173'] = '\\u1120';\n\t t['\\u3174'] = '\\u1122';\n\t t['\\u3175'] = '\\u1123';\n\t t['\\u3176'] = '\\u1127';\n\t t['\\u3177'] = '\\u1129';\n\t t['\\u3178'] = '\\u112B';\n\t t['\\u3179'] = '\\u112C';\n\t t['\\u317A'] = '\\u112D';\n\t t['\\u317B'] = '\\u112E';\n\t t['\\u317C'] = '\\u112F';\n\t t['\\u317D'] = '\\u1132';\n\t t['\\u317E'] = '\\u1136';\n\t t['\\u317F'] = '\\u1140';\n\t t['\\u3180'] = '\\u1147';\n\t t['\\u3181'] = '\\u114C';\n\t t['\\u3182'] = '\\u11F1';\n\t t['\\u3183'] = '\\u11F2';\n\t t['\\u3184'] = '\\u1157';\n\t t['\\u3185'] = '\\u1158';\n\t t['\\u3186'] = '\\u1159';\n\t t['\\u3187'] = '\\u1184';\n\t t['\\u3188'] = '\\u1185';\n\t t['\\u3189'] = '\\u1188';\n\t t['\\u318A'] = '\\u1191';\n\t t['\\u318B'] = '\\u1192';\n\t t['\\u318C'] = '\\u1194';\n\t t['\\u318D'] = '\\u119E';\n\t t['\\u318E'] = '\\u11A1';\n\t t['\\u3200'] = '\\u0028\\u1100\\u0029';\n\t t['\\u3201'] = '\\u0028\\u1102\\u0029';\n\t t['\\u3202'] = '\\u0028\\u1103\\u0029';\n\t t['\\u3203'] = '\\u0028\\u1105\\u0029';\n\t t['\\u3204'] = '\\u0028\\u1106\\u0029';\n\t t['\\u3205'] = '\\u0028\\u1107\\u0029';\n\t t['\\u3206'] = '\\u0028\\u1109\\u0029';\n\t t['\\u3207'] = '\\u0028\\u110B\\u0029';\n\t t['\\u3208'] = '\\u0028\\u110C\\u0029';\n\t t['\\u3209'] = '\\u0028\\u110E\\u0029';\n\t t['\\u320A'] = '\\u0028\\u110F\\u0029';\n\t t['\\u320B'] = '\\u0028\\u1110\\u0029';\n\t t['\\u320C'] = '\\u0028\\u1111\\u0029';\n\t t['\\u320D'] = '\\u0028\\u1112\\u0029';\n\t t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n\t t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n\t t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n\t t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n\t t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n\t t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n\t t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n\t t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n\t t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n\t t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n\t t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n\t t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n\t t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n\t t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n\t t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n\t t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n\t t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n\t t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n\t t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n\t t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n\t t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n\t t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n\t t['\\u3225'] = '\\u0028\\u516D\\u0029';\n\t t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n\t t['\\u3227'] = '\\u0028\\u516B\\u0029';\n\t t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n\t t['\\u3229'] = '\\u0028\\u5341\\u0029';\n\t t['\\u322A'] = '\\u0028\\u6708\\u0029';\n\t t['\\u322B'] = '\\u0028\\u706B\\u0029';\n\t t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n\t t['\\u322D'] = '\\u0028\\u6728\\u0029';\n\t t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n\t t['\\u322F'] = '\\u0028\\u571F\\u0029';\n\t t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n\t t['\\u3231'] = '\\u0028\\u682A\\u0029';\n\t t['\\u3232'] = '\\u0028\\u6709\\u0029';\n\t t['\\u3233'] = '\\u0028\\u793E\\u0029';\n\t t['\\u3234'] = '\\u0028\\u540D\\u0029';\n\t t['\\u3235'] = '\\u0028\\u7279\\u0029';\n\t t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n\t t['\\u3237'] = '\\u0028\\u795D\\u0029';\n\t t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n\t t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n\t t['\\u323A'] = '\\u0028\\u547C\\u0029';\n\t t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n\t t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n\t t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n\t t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n\t t['\\u323F'] = '\\u0028\\u5354\\u0029';\n\t t['\\u3240'] = '\\u0028\\u796D\\u0029';\n\t t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n\t t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n\t t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n\t t['\\u32C0'] = '\\u0031\\u6708';\n\t t['\\u32C1'] = '\\u0032\\u6708';\n\t t['\\u32C2'] = '\\u0033\\u6708';\n\t t['\\u32C3'] = '\\u0034\\u6708';\n\t t['\\u32C4'] = '\\u0035\\u6708';\n\t t['\\u32C5'] = '\\u0036\\u6708';\n\t t['\\u32C6'] = '\\u0037\\u6708';\n\t t['\\u32C7'] = '\\u0038\\u6708';\n\t t['\\u32C8'] = '\\u0039\\u6708';\n\t t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n\t t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n\t t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n\t t['\\u3358'] = '\\u0030\\u70B9';\n\t t['\\u3359'] = '\\u0031\\u70B9';\n\t t['\\u335A'] = '\\u0032\\u70B9';\n\t t['\\u335B'] = '\\u0033\\u70B9';\n\t t['\\u335C'] = '\\u0034\\u70B9';\n\t t['\\u335D'] = '\\u0035\\u70B9';\n\t t['\\u335E'] = '\\u0036\\u70B9';\n\t t['\\u335F'] = '\\u0037\\u70B9';\n\t t['\\u3360'] = '\\u0038\\u70B9';\n\t t['\\u3361'] = '\\u0039\\u70B9';\n\t t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n\t t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n\t t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n\t t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n\t t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n\t t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n\t t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n\t t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n\t t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n\t t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n\t t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n\t t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n\t t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n\t t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n\t t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n\t t['\\u33E0'] = '\\u0031\\u65E5';\n\t t['\\u33E1'] = '\\u0032\\u65E5';\n\t t['\\u33E2'] = '\\u0033\\u65E5';\n\t t['\\u33E3'] = '\\u0034\\u65E5';\n\t t['\\u33E4'] = '\\u0035\\u65E5';\n\t t['\\u33E5'] = '\\u0036\\u65E5';\n\t t['\\u33E6'] = '\\u0037\\u65E5';\n\t t['\\u33E7'] = '\\u0038\\u65E5';\n\t t['\\u33E8'] = '\\u0039\\u65E5';\n\t t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n\t t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n\t t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n\t t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n\t t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n\t t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n\t t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n\t t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n\t t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n\t t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n\t t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n\t t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n\t t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n\t t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n\t t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n\t t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n\t t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n\t t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n\t t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n\t t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n\t t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n\t t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n\t t['\\uFB00'] = '\\u0066\\u0066';\n\t t['\\uFB01'] = '\\u0066\\u0069';\n\t t['\\uFB02'] = '\\u0066\\u006C';\n\t t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n\t t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n\t t['\\uFB05'] = '\\u017F\\u0074';\n\t t['\\uFB06'] = '\\u0073\\u0074';\n\t t['\\uFB13'] = '\\u0574\\u0576';\n\t t['\\uFB14'] = '\\u0574\\u0565';\n\t t['\\uFB15'] = '\\u0574\\u056B';\n\t t['\\uFB16'] = '\\u057E\\u0576';\n\t t['\\uFB17'] = '\\u0574\\u056D';\n\t t['\\uFB4F'] = '\\u05D0\\u05DC';\n\t t['\\uFB50'] = '\\u0671';\n\t t['\\uFB51'] = '\\u0671';\n\t t['\\uFB52'] = '\\u067B';\n\t t['\\uFB53'] = '\\u067B';\n\t t['\\uFB54'] = '\\u067B';\n\t t['\\uFB55'] = '\\u067B';\n\t t['\\uFB56'] = '\\u067E';\n\t t['\\uFB57'] = '\\u067E';\n\t t['\\uFB58'] = '\\u067E';\n\t t['\\uFB59'] = '\\u067E';\n\t t['\\uFB5A'] = '\\u0680';\n\t t['\\uFB5B'] = '\\u0680';\n\t t['\\uFB5C'] = '\\u0680';\n\t t['\\uFB5D'] = '\\u0680';\n\t t['\\uFB5E'] = '\\u067A';\n\t t['\\uFB5F'] = '\\u067A';\n\t t['\\uFB60'] = '\\u067A';\n\t t['\\uFB61'] = '\\u067A';\n\t t['\\uFB62'] = '\\u067F';\n\t t['\\uFB63'] = '\\u067F';\n\t t['\\uFB64'] = '\\u067F';\n\t t['\\uFB65'] = '\\u067F';\n\t t['\\uFB66'] = '\\u0679';\n\t t['\\uFB67'] = '\\u0679';\n\t t['\\uFB68'] = '\\u0679';\n\t t['\\uFB69'] = '\\u0679';\n\t t['\\uFB6A'] = '\\u06A4';\n\t t['\\uFB6B'] = '\\u06A4';\n\t t['\\uFB6C'] = '\\u06A4';\n\t t['\\uFB6D'] = '\\u06A4';\n\t t['\\uFB6E'] = '\\u06A6';\n\t t['\\uFB6F'] = '\\u06A6';\n\t t['\\uFB70'] = '\\u06A6';\n\t t['\\uFB71'] = '\\u06A6';\n\t t['\\uFB72'] = '\\u0684';\n\t t['\\uFB73'] = '\\u0684';\n\t t['\\uFB74'] = '\\u0684';\n\t t['\\uFB75'] = '\\u0684';\n\t t['\\uFB76'] = '\\u0683';\n\t t['\\uFB77'] = '\\u0683';\n\t t['\\uFB78'] = '\\u0683';\n\t t['\\uFB79'] = '\\u0683';\n\t t['\\uFB7A'] = '\\u0686';\n\t t['\\uFB7B'] = '\\u0686';\n\t t['\\uFB7C'] = '\\u0686';\n\t t['\\uFB7D'] = '\\u0686';\n\t t['\\uFB7E'] = '\\u0687';\n\t t['\\uFB7F'] = '\\u0687';\n\t t['\\uFB80'] = '\\u0687';\n\t t['\\uFB81'] = '\\u0687';\n\t t['\\uFB82'] = '\\u068D';\n\t t['\\uFB83'] = '\\u068D';\n\t t['\\uFB84'] = '\\u068C';\n\t t['\\uFB85'] = '\\u068C';\n\t t['\\uFB86'] = '\\u068E';\n\t t['\\uFB87'] = '\\u068E';\n\t t['\\uFB88'] = '\\u0688';\n\t t['\\uFB89'] = '\\u0688';\n\t t['\\uFB8A'] = '\\u0698';\n\t t['\\uFB8B'] = '\\u0698';\n\t t['\\uFB8C'] = '\\u0691';\n\t t['\\uFB8D'] = '\\u0691';\n\t t['\\uFB8E'] = '\\u06A9';\n\t t['\\uFB8F'] = '\\u06A9';\n\t t['\\uFB90'] = '\\u06A9';\n\t t['\\uFB91'] = '\\u06A9';\n\t t['\\uFB92'] = '\\u06AF';\n\t t['\\uFB93'] = '\\u06AF';\n\t t['\\uFB94'] = '\\u06AF';\n\t t['\\uFB95'] = '\\u06AF';\n\t t['\\uFB96'] = '\\u06B3';\n\t t['\\uFB97'] = '\\u06B3';\n\t t['\\uFB98'] = '\\u06B3';\n\t t['\\uFB99'] = '\\u06B3';\n\t t['\\uFB9A'] = '\\u06B1';\n\t t['\\uFB9B'] = '\\u06B1';\n\t t['\\uFB9C'] = '\\u06B1';\n\t t['\\uFB9D'] = '\\u06B1';\n\t t['\\uFB9E'] = '\\u06BA';\n\t t['\\uFB9F'] = '\\u06BA';\n\t t['\\uFBA0'] = '\\u06BB';\n\t t['\\uFBA1'] = '\\u06BB';\n\t t['\\uFBA2'] = '\\u06BB';\n\t t['\\uFBA3'] = '\\u06BB';\n\t t['\\uFBA4'] = '\\u06C0';\n\t t['\\uFBA5'] = '\\u06C0';\n\t t['\\uFBA6'] = '\\u06C1';\n\t t['\\uFBA7'] = '\\u06C1';\n\t t['\\uFBA8'] = '\\u06C1';\n\t t['\\uFBA9'] = '\\u06C1';\n\t t['\\uFBAA'] = '\\u06BE';\n\t t['\\uFBAB'] = '\\u06BE';\n\t t['\\uFBAC'] = '\\u06BE';\n\t t['\\uFBAD'] = '\\u06BE';\n\t t['\\uFBAE'] = '\\u06D2';\n\t t['\\uFBAF'] = '\\u06D2';\n\t t['\\uFBB0'] = '\\u06D3';\n\t t['\\uFBB1'] = '\\u06D3';\n\t t['\\uFBD3'] = '\\u06AD';\n\t t['\\uFBD4'] = '\\u06AD';\n\t t['\\uFBD5'] = '\\u06AD';\n\t t['\\uFBD6'] = '\\u06AD';\n\t t['\\uFBD7'] = '\\u06C7';\n\t t['\\uFBD8'] = '\\u06C7';\n\t t['\\uFBD9'] = '\\u06C6';\n\t t['\\uFBDA'] = '\\u06C6';\n\t t['\\uFBDB'] = '\\u06C8';\n\t t['\\uFBDC'] = '\\u06C8';\n\t t['\\uFBDD'] = '\\u0677';\n\t t['\\uFBDE'] = '\\u06CB';\n\t t['\\uFBDF'] = '\\u06CB';\n\t t['\\uFBE0'] = '\\u06C5';\n\t t['\\uFBE1'] = '\\u06C5';\n\t t['\\uFBE2'] = '\\u06C9';\n\t t['\\uFBE3'] = '\\u06C9';\n\t t['\\uFBE4'] = '\\u06D0';\n\t t['\\uFBE5'] = '\\u06D0';\n\t t['\\uFBE6'] = '\\u06D0';\n\t t['\\uFBE7'] = '\\u06D0';\n\t t['\\uFBE8'] = '\\u0649';\n\t t['\\uFBE9'] = '\\u0649';\n\t t['\\uFBEA'] = '\\u0626\\u0627';\n\t t['\\uFBEB'] = '\\u0626\\u0627';\n\t t['\\uFBEC'] = '\\u0626\\u06D5';\n\t t['\\uFBED'] = '\\u0626\\u06D5';\n\t t['\\uFBEE'] = '\\u0626\\u0648';\n\t t['\\uFBEF'] = '\\u0626\\u0648';\n\t t['\\uFBF0'] = '\\u0626\\u06C7';\n\t t['\\uFBF1'] = '\\u0626\\u06C7';\n\t t['\\uFBF2'] = '\\u0626\\u06C6';\n\t t['\\uFBF3'] = '\\u0626\\u06C6';\n\t t['\\uFBF4'] = '\\u0626\\u06C8';\n\t t['\\uFBF5'] = '\\u0626\\u06C8';\n\t t['\\uFBF6'] = '\\u0626\\u06D0';\n\t t['\\uFBF7'] = '\\u0626\\u06D0';\n\t t['\\uFBF8'] = '\\u0626\\u06D0';\n\t t['\\uFBF9'] = '\\u0626\\u0649';\n\t t['\\uFBFA'] = '\\u0626\\u0649';\n\t t['\\uFBFB'] = '\\u0626\\u0649';\n\t t['\\uFBFC'] = '\\u06CC';\n\t t['\\uFBFD'] = '\\u06CC';\n\t t['\\uFBFE'] = '\\u06CC';\n\t t['\\uFBFF'] = '\\u06CC';\n\t t['\\uFC00'] = '\\u0626\\u062C';\n\t t['\\uFC01'] = '\\u0626\\u062D';\n\t t['\\uFC02'] = '\\u0626\\u0645';\n\t t['\\uFC03'] = '\\u0626\\u0649';\n\t t['\\uFC04'] = '\\u0626\\u064A';\n\t t['\\uFC05'] = '\\u0628\\u062C';\n\t t['\\uFC06'] = '\\u0628\\u062D';\n\t t['\\uFC07'] = '\\u0628\\u062E';\n\t t['\\uFC08'] = '\\u0628\\u0645';\n\t t['\\uFC09'] = '\\u0628\\u0649';\n\t t['\\uFC0A'] = '\\u0628\\u064A';\n\t t['\\uFC0B'] = '\\u062A\\u062C';\n\t t['\\uFC0C'] = '\\u062A\\u062D';\n\t t['\\uFC0D'] = '\\u062A\\u062E';\n\t t['\\uFC0E'] = '\\u062A\\u0645';\n\t t['\\uFC0F'] = '\\u062A\\u0649';\n\t t['\\uFC10'] = '\\u062A\\u064A';\n\t t['\\uFC11'] = '\\u062B\\u062C';\n\t t['\\uFC12'] = '\\u062B\\u0645';\n\t t['\\uFC13'] = '\\u062B\\u0649';\n\t t['\\uFC14'] = '\\u062B\\u064A';\n\t t['\\uFC15'] = '\\u062C\\u062D';\n\t t['\\uFC16'] = '\\u062C\\u0645';\n\t t['\\uFC17'] = '\\u062D\\u062C';\n\t t['\\uFC18'] = '\\u062D\\u0645';\n\t t['\\uFC19'] = '\\u062E\\u062C';\n\t t['\\uFC1A'] = '\\u062E\\u062D';\n\t t['\\uFC1B'] = '\\u062E\\u0645';\n\t t['\\uFC1C'] = '\\u0633\\u062C';\n\t t['\\uFC1D'] = '\\u0633\\u062D';\n\t t['\\uFC1E'] = '\\u0633\\u062E';\n\t t['\\uFC1F'] = '\\u0633\\u0645';\n\t t['\\uFC20'] = '\\u0635\\u062D';\n\t t['\\uFC21'] = '\\u0635\\u0645';\n\t t['\\uFC22'] = '\\u0636\\u062C';\n\t t['\\uFC23'] = '\\u0636\\u062D';\n\t t['\\uFC24'] = '\\u0636\\u062E';\n\t t['\\uFC25'] = '\\u0636\\u0645';\n\t t['\\uFC26'] = '\\u0637\\u062D';\n\t t['\\uFC27'] = '\\u0637\\u0645';\n\t t['\\uFC28'] = '\\u0638\\u0645';\n\t t['\\uFC29'] = '\\u0639\\u062C';\n\t t['\\uFC2A'] = '\\u0639\\u0645';\n\t t['\\uFC2B'] = '\\u063A\\u062C';\n\t t['\\uFC2C'] = '\\u063A\\u0645';\n\t t['\\uFC2D'] = '\\u0641\\u062C';\n\t t['\\uFC2E'] = '\\u0641\\u062D';\n\t t['\\uFC2F'] = '\\u0641\\u062E';\n\t t['\\uFC30'] = '\\u0641\\u0645';\n\t t['\\uFC31'] = '\\u0641\\u0649';\n\t t['\\uFC32'] = '\\u0641\\u064A';\n\t t['\\uFC33'] = '\\u0642\\u062D';\n\t t['\\uFC34'] = '\\u0642\\u0645';\n\t t['\\uFC35'] = '\\u0642\\u0649';\n\t t['\\uFC36'] = '\\u0642\\u064A';\n\t t['\\uFC37'] = '\\u0643\\u0627';\n\t t['\\uFC38'] = '\\u0643\\u062C';\n\t t['\\uFC39'] = '\\u0643\\u062D';\n\t t['\\uFC3A'] = '\\u0643\\u062E';\n\t t['\\uFC3B'] = '\\u0643\\u0644';\n\t t['\\uFC3C'] = '\\u0643\\u0645';\n\t t['\\uFC3D'] = '\\u0643\\u0649';\n\t t['\\uFC3E'] = '\\u0643\\u064A';\n\t t['\\uFC3F'] = '\\u0644\\u062C';\n\t t['\\uFC40'] = '\\u0644\\u062D';\n\t t['\\uFC41'] = '\\u0644\\u062E';\n\t t['\\uFC42'] = '\\u0644\\u0645';\n\t t['\\uFC43'] = '\\u0644\\u0649';\n\t t['\\uFC44'] = '\\u0644\\u064A';\n\t t['\\uFC45'] = '\\u0645\\u062C';\n\t t['\\uFC46'] = '\\u0645\\u062D';\n\t t['\\uFC47'] = '\\u0645\\u062E';\n\t t['\\uFC48'] = '\\u0645\\u0645';\n\t t['\\uFC49'] = '\\u0645\\u0649';\n\t t['\\uFC4A'] = '\\u0645\\u064A';\n\t t['\\uFC4B'] = '\\u0646\\u062C';\n\t t['\\uFC4C'] = '\\u0646\\u062D';\n\t t['\\uFC4D'] = '\\u0646\\u062E';\n\t t['\\uFC4E'] = '\\u0646\\u0645';\n\t t['\\uFC4F'] = '\\u0646\\u0649';\n\t t['\\uFC50'] = '\\u0646\\u064A';\n\t t['\\uFC51'] = '\\u0647\\u062C';\n\t t['\\uFC52'] = '\\u0647\\u0645';\n\t t['\\uFC53'] = '\\u0647\\u0649';\n\t t['\\uFC54'] = '\\u0647\\u064A';\n\t t['\\uFC55'] = '\\u064A\\u062C';\n\t t['\\uFC56'] = '\\u064A\\u062D';\n\t t['\\uFC57'] = '\\u064A\\u062E';\n\t t['\\uFC58'] = '\\u064A\\u0645';\n\t t['\\uFC59'] = '\\u064A\\u0649';\n\t t['\\uFC5A'] = '\\u064A\\u064A';\n\t t['\\uFC5B'] = '\\u0630\\u0670';\n\t t['\\uFC5C'] = '\\u0631\\u0670';\n\t t['\\uFC5D'] = '\\u0649\\u0670';\n\t t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n\t t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n\t t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n\t t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n\t t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n\t t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n\t t['\\uFC64'] = '\\u0626\\u0631';\n\t t['\\uFC65'] = '\\u0626\\u0632';\n\t t['\\uFC66'] = '\\u0626\\u0645';\n\t t['\\uFC67'] = '\\u0626\\u0646';\n\t t['\\uFC68'] = '\\u0626\\u0649';\n\t t['\\uFC69'] = '\\u0626\\u064A';\n\t t['\\uFC6A'] = '\\u0628\\u0631';\n\t t['\\uFC6B'] = '\\u0628\\u0632';\n\t t['\\uFC6C'] = '\\u0628\\u0645';\n\t t['\\uFC6D'] = '\\u0628\\u0646';\n\t t['\\uFC6E'] = '\\u0628\\u0649';\n\t t['\\uFC6F'] = '\\u0628\\u064A';\n\t t['\\uFC70'] = '\\u062A\\u0631';\n\t t['\\uFC71'] = '\\u062A\\u0632';\n\t t['\\uFC72'] = '\\u062A\\u0645';\n\t t['\\uFC73'] = '\\u062A\\u0646';\n\t t['\\uFC74'] = '\\u062A\\u0649';\n\t t['\\uFC75'] = '\\u062A\\u064A';\n\t t['\\uFC76'] = '\\u062B\\u0631';\n\t t['\\uFC77'] = '\\u062B\\u0632';\n\t t['\\uFC78'] = '\\u062B\\u0645';\n\t t['\\uFC79'] = '\\u062B\\u0646';\n\t t['\\uFC7A'] = '\\u062B\\u0649';\n\t t['\\uFC7B'] = '\\u062B\\u064A';\n\t t['\\uFC7C'] = '\\u0641\\u0649';\n\t t['\\uFC7D'] = '\\u0641\\u064A';\n\t t['\\uFC7E'] = '\\u0642\\u0649';\n\t t['\\uFC7F'] = '\\u0642\\u064A';\n\t t['\\uFC80'] = '\\u0643\\u0627';\n\t t['\\uFC81'] = '\\u0643\\u0644';\n\t t['\\uFC82'] = '\\u0643\\u0645';\n\t t['\\uFC83'] = '\\u0643\\u0649';\n\t t['\\uFC84'] = '\\u0643\\u064A';\n\t t['\\uFC85'] = '\\u0644\\u0645';\n\t t['\\uFC86'] = '\\u0644\\u0649';\n\t t['\\uFC87'] = '\\u0644\\u064A';\n\t t['\\uFC88'] = '\\u0645\\u0627';\n\t t['\\uFC89'] = '\\u0645\\u0645';\n\t t['\\uFC8A'] = '\\u0646\\u0631';\n\t t['\\uFC8B'] = '\\u0646\\u0632';\n\t t['\\uFC8C'] = '\\u0646\\u0645';\n\t t['\\uFC8D'] = '\\u0646\\u0646';\n\t t['\\uFC8E'] = '\\u0646\\u0649';\n\t t['\\uFC8F'] = '\\u0646\\u064A';\n\t t['\\uFC90'] = '\\u0649\\u0670';\n\t t['\\uFC91'] = '\\u064A\\u0631';\n\t t['\\uFC92'] = '\\u064A\\u0632';\n\t t['\\uFC93'] = '\\u064A\\u0645';\n\t t['\\uFC94'] = '\\u064A\\u0646';\n\t t['\\uFC95'] = '\\u064A\\u0649';\n\t t['\\uFC96'] = '\\u064A\\u064A';\n\t t['\\uFC97'] = '\\u0626\\u062C';\n\t t['\\uFC98'] = '\\u0626\\u062D';\n\t t['\\uFC99'] = '\\u0626\\u062E';\n\t t['\\uFC9A'] = '\\u0626\\u0645';\n\t t['\\uFC9B'] = '\\u0626\\u0647';\n\t t['\\uFC9C'] = '\\u0628\\u062C';\n\t t['\\uFC9D'] = '\\u0628\\u062D';\n\t t['\\uFC9E'] = '\\u0628\\u062E';\n\t t['\\uFC9F'] = '\\u0628\\u0645';\n\t t['\\uFCA0'] = '\\u0628\\u0647';\n\t t['\\uFCA1'] = '\\u062A\\u062C';\n\t t['\\uFCA2'] = '\\u062A\\u062D';\n\t t['\\uFCA3'] = '\\u062A\\u062E';\n\t t['\\uFCA4'] = '\\u062A\\u0645';\n\t t['\\uFCA5'] = '\\u062A\\u0647';\n\t t['\\uFCA6'] = '\\u062B\\u0645';\n\t t['\\uFCA7'] = '\\u062C\\u062D';\n\t t['\\uFCA8'] = '\\u062C\\u0645';\n\t t['\\uFCA9'] = '\\u062D\\u062C';\n\t t['\\uFCAA'] = '\\u062D\\u0645';\n\t t['\\uFCAB'] = '\\u062E\\u062C';\n\t t['\\uFCAC'] = '\\u062E\\u0645';\n\t t['\\uFCAD'] = '\\u0633\\u062C';\n\t t['\\uFCAE'] = '\\u0633\\u062D';\n\t t['\\uFCAF'] = '\\u0633\\u062E';\n\t t['\\uFCB0'] = '\\u0633\\u0645';\n\t t['\\uFCB1'] = '\\u0635\\u062D';\n\t t['\\uFCB2'] = '\\u0635\\u062E';\n\t t['\\uFCB3'] = '\\u0635\\u0645';\n\t t['\\uFCB4'] = '\\u0636\\u062C';\n\t t['\\uFCB5'] = '\\u0636\\u062D';\n\t t['\\uFCB6'] = '\\u0636\\u062E';\n\t t['\\uFCB7'] = '\\u0636\\u0645';\n\t t['\\uFCB8'] = '\\u0637\\u062D';\n\t t['\\uFCB9'] = '\\u0638\\u0645';\n\t t['\\uFCBA'] = '\\u0639\\u062C';\n\t t['\\uFCBB'] = '\\u0639\\u0645';\n\t t['\\uFCBC'] = '\\u063A\\u062C';\n\t t['\\uFCBD'] = '\\u063A\\u0645';\n\t t['\\uFCBE'] = '\\u0641\\u062C';\n\t t['\\uFCBF'] = '\\u0641\\u062D';\n\t t['\\uFCC0'] = '\\u0641\\u062E';\n\t t['\\uFCC1'] = '\\u0641\\u0645';\n\t t['\\uFCC2'] = '\\u0642\\u062D';\n\t t['\\uFCC3'] = '\\u0642\\u0645';\n\t t['\\uFCC4'] = '\\u0643\\u062C';\n\t t['\\uFCC5'] = '\\u0643\\u062D';\n\t t['\\uFCC6'] = '\\u0643\\u062E';\n\t t['\\uFCC7'] = '\\u0643\\u0644';\n\t t['\\uFCC8'] = '\\u0643\\u0645';\n\t t['\\uFCC9'] = '\\u0644\\u062C';\n\t t['\\uFCCA'] = '\\u0644\\u062D';\n\t t['\\uFCCB'] = '\\u0644\\u062E';\n\t t['\\uFCCC'] = '\\u0644\\u0645';\n\t t['\\uFCCD'] = '\\u0644\\u0647';\n\t t['\\uFCCE'] = '\\u0645\\u062C';\n\t t['\\uFCCF'] = '\\u0645\\u062D';\n\t t['\\uFCD0'] = '\\u0645\\u062E';\n\t t['\\uFCD1'] = '\\u0645\\u0645';\n\t t['\\uFCD2'] = '\\u0646\\u062C';\n\t t['\\uFCD3'] = '\\u0646\\u062D';\n\t t['\\uFCD4'] = '\\u0646\\u062E';\n\t t['\\uFCD5'] = '\\u0646\\u0645';\n\t t['\\uFCD6'] = '\\u0646\\u0647';\n\t t['\\uFCD7'] = '\\u0647\\u062C';\n\t t['\\uFCD8'] = '\\u0647\\u0645';\n\t t['\\uFCD9'] = '\\u0647\\u0670';\n\t t['\\uFCDA'] = '\\u064A\\u062C';\n\t t['\\uFCDB'] = '\\u064A\\u062D';\n\t t['\\uFCDC'] = '\\u064A\\u062E';\n\t t['\\uFCDD'] = '\\u064A\\u0645';\n\t t['\\uFCDE'] = '\\u064A\\u0647';\n\t t['\\uFCDF'] = '\\u0626\\u0645';\n\t t['\\uFCE0'] = '\\u0626\\u0647';\n\t t['\\uFCE1'] = '\\u0628\\u0645';\n\t t['\\uFCE2'] = '\\u0628\\u0647';\n\t t['\\uFCE3'] = '\\u062A\\u0645';\n\t t['\\uFCE4'] = '\\u062A\\u0647';\n\t t['\\uFCE5'] = '\\u062B\\u0645';\n\t t['\\uFCE6'] = '\\u062B\\u0647';\n\t t['\\uFCE7'] = '\\u0633\\u0645';\n\t t['\\uFCE8'] = '\\u0633\\u0647';\n\t t['\\uFCE9'] = '\\u0634\\u0645';\n\t t['\\uFCEA'] = '\\u0634\\u0647';\n\t t['\\uFCEB'] = '\\u0643\\u0644';\n\t t['\\uFCEC'] = '\\u0643\\u0645';\n\t t['\\uFCED'] = '\\u0644\\u0645';\n\t t['\\uFCEE'] = '\\u0646\\u0645';\n\t t['\\uFCEF'] = '\\u0646\\u0647';\n\t t['\\uFCF0'] = '\\u064A\\u0645';\n\t t['\\uFCF1'] = '\\u064A\\u0647';\n\t t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n\t t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n\t t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n\t t['\\uFCF5'] = '\\u0637\\u0649';\n\t t['\\uFCF6'] = '\\u0637\\u064A';\n\t t['\\uFCF7'] = '\\u0639\\u0649';\n\t t['\\uFCF8'] = '\\u0639\\u064A';\n\t t['\\uFCF9'] = '\\u063A\\u0649';\n\t t['\\uFCFA'] = '\\u063A\\u064A';\n\t t['\\uFCFB'] = '\\u0633\\u0649';\n\t t['\\uFCFC'] = '\\u0633\\u064A';\n\t t['\\uFCFD'] = '\\u0634\\u0649';\n\t t['\\uFCFE'] = '\\u0634\\u064A';\n\t t['\\uFCFF'] = '\\u062D\\u0649';\n\t t['\\uFD00'] = '\\u062D\\u064A';\n\t t['\\uFD01'] = '\\u062C\\u0649';\n\t t['\\uFD02'] = '\\u062C\\u064A';\n\t t['\\uFD03'] = '\\u062E\\u0649';\n\t t['\\uFD04'] = '\\u062E\\u064A';\n\t t['\\uFD05'] = '\\u0635\\u0649';\n\t t['\\uFD06'] = '\\u0635\\u064A';\n\t t['\\uFD07'] = '\\u0636\\u0649';\n\t t['\\uFD08'] = '\\u0636\\u064A';\n\t t['\\uFD09'] = '\\u0634\\u062C';\n\t t['\\uFD0A'] = '\\u0634\\u062D';\n\t t['\\uFD0B'] = '\\u0634\\u062E';\n\t t['\\uFD0C'] = '\\u0634\\u0645';\n\t t['\\uFD0D'] = '\\u0634\\u0631';\n\t t['\\uFD0E'] = '\\u0633\\u0631';\n\t t['\\uFD0F'] = '\\u0635\\u0631';\n\t t['\\uFD10'] = '\\u0636\\u0631';\n\t t['\\uFD11'] = '\\u0637\\u0649';\n\t t['\\uFD12'] = '\\u0637\\u064A';\n\t t['\\uFD13'] = '\\u0639\\u0649';\n\t t['\\uFD14'] = '\\u0639\\u064A';\n\t t['\\uFD15'] = '\\u063A\\u0649';\n\t t['\\uFD16'] = '\\u063A\\u064A';\n\t t['\\uFD17'] = '\\u0633\\u0649';\n\t t['\\uFD18'] = '\\u0633\\u064A';\n\t t['\\uFD19'] = '\\u0634\\u0649';\n\t t['\\uFD1A'] = '\\u0634\\u064A';\n\t t['\\uFD1B'] = '\\u062D\\u0649';\n\t t['\\uFD1C'] = '\\u062D\\u064A';\n\t t['\\uFD1D'] = '\\u062C\\u0649';\n\t t['\\uFD1E'] = '\\u062C\\u064A';\n\t t['\\uFD1F'] = '\\u062E\\u0649';\n\t t['\\uFD20'] = '\\u062E\\u064A';\n\t t['\\uFD21'] = '\\u0635\\u0649';\n\t t['\\uFD22'] = '\\u0635\\u064A';\n\t t['\\uFD23'] = '\\u0636\\u0649';\n\t t['\\uFD24'] = '\\u0636\\u064A';\n\t t['\\uFD25'] = '\\u0634\\u062C';\n\t t['\\uFD26'] = '\\u0634\\u062D';\n\t t['\\uFD27'] = '\\u0634\\u062E';\n\t t['\\uFD28'] = '\\u0634\\u0645';\n\t t['\\uFD29'] = '\\u0634\\u0631';\n\t t['\\uFD2A'] = '\\u0633\\u0631';\n\t t['\\uFD2B'] = '\\u0635\\u0631';\n\t t['\\uFD2C'] = '\\u0636\\u0631';\n\t t['\\uFD2D'] = '\\u0634\\u062C';\n\t t['\\uFD2E'] = '\\u0634\\u062D';\n\t t['\\uFD2F'] = '\\u0634\\u062E';\n\t t['\\uFD30'] = '\\u0634\\u0645';\n\t t['\\uFD31'] = '\\u0633\\u0647';\n\t t['\\uFD32'] = '\\u0634\\u0647';\n\t t['\\uFD33'] = '\\u0637\\u0645';\n\t t['\\uFD34'] = '\\u0633\\u062C';\n\t t['\\uFD35'] = '\\u0633\\u062D';\n\t t['\\uFD36'] = '\\u0633\\u062E';\n\t t['\\uFD37'] = '\\u0634\\u062C';\n\t t['\\uFD38'] = '\\u0634\\u062D';\n\t t['\\uFD39'] = '\\u0634\\u062E';\n\t t['\\uFD3A'] = '\\u0637\\u0645';\n\t t['\\uFD3B'] = '\\u0638\\u0645';\n\t t['\\uFD3C'] = '\\u0627\\u064B';\n\t t['\\uFD3D'] = '\\u0627\\u064B';\n\t t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n\t t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n\t t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n\t t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n\t t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n\t t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n\t t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n\t t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n\t t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n\t t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n\t t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n\t t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n\t t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n\t t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n\t t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n\t t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n\t t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n\t t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n\t t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n\t t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n\t t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n\t t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n\t t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n\t t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n\t t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n\t t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n\t t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n\t t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n\t t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n\t t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n\t t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n\t t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n\t t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n\t t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n\t t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n\t t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n\t t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n\t t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n\t t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n\t t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n\t t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n\t t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n\t t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n\t t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n\t t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n\t t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n\t t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n\t t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n\t t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n\t t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n\t t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n\t t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n\t t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n\t t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n\t t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n\t t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n\t t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n\t t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n\t t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n\t t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n\t t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n\t t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n\t t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n\t t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n\t t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n\t t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n\t t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n\t t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n\t t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n\t t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n\t t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n\t t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n\t t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n\t t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n\t t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n\t t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n\t t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n\t t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n\t t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n\t t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n\t t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n\t t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n\t t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n\t t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n\t t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n\t t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n\t t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n\t t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n\t t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n\t t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n\t t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n\t t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n\t t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n\t t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n\t t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n\t t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n\t t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n\t t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n\t t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n\t t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n\t t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n\t t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n\t t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n\t t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n\t t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n\t t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n\t t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n\t t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n\t t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n\t t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n\t t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n\t t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n\t t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n\t t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n\t t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n\t t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n\t t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n\t t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n\t t['\\uFE49'] = '\\u203E';\n\t t['\\uFE4A'] = '\\u203E';\n\t t['\\uFE4B'] = '\\u203E';\n\t t['\\uFE4C'] = '\\u203E';\n\t t['\\uFE4D'] = '\\u005F';\n\t t['\\uFE4E'] = '\\u005F';\n\t t['\\uFE4F'] = '\\u005F';\n\t t['\\uFE80'] = '\\u0621';\n\t t['\\uFE81'] = '\\u0622';\n\t t['\\uFE82'] = '\\u0622';\n\t t['\\uFE83'] = '\\u0623';\n\t t['\\uFE84'] = '\\u0623';\n\t t['\\uFE85'] = '\\u0624';\n\t t['\\uFE86'] = '\\u0624';\n\t t['\\uFE87'] = '\\u0625';\n\t t['\\uFE88'] = '\\u0625';\n\t t['\\uFE89'] = '\\u0626';\n\t t['\\uFE8A'] = '\\u0626';\n\t t['\\uFE8B'] = '\\u0626';\n\t t['\\uFE8C'] = '\\u0626';\n\t t['\\uFE8D'] = '\\u0627';\n\t t['\\uFE8E'] = '\\u0627';\n\t t['\\uFE8F'] = '\\u0628';\n\t t['\\uFE90'] = '\\u0628';\n\t t['\\uFE91'] = '\\u0628';\n\t t['\\uFE92'] = '\\u0628';\n\t t['\\uFE93'] = '\\u0629';\n\t t['\\uFE94'] = '\\u0629';\n\t t['\\uFE95'] = '\\u062A';\n\t t['\\uFE96'] = '\\u062A';\n\t t['\\uFE97'] = '\\u062A';\n\t t['\\uFE98'] = '\\u062A';\n\t t['\\uFE99'] = '\\u062B';\n\t t['\\uFE9A'] = '\\u062B';\n\t t['\\uFE9B'] = '\\u062B';\n\t t['\\uFE9C'] = '\\u062B';\n\t t['\\uFE9D'] = '\\u062C';\n\t t['\\uFE9E'] = '\\u062C';\n\t t['\\uFE9F'] = '\\u062C';\n\t t['\\uFEA0'] = '\\u062C';\n\t t['\\uFEA1'] = '\\u062D';\n\t t['\\uFEA2'] = '\\u062D';\n\t t['\\uFEA3'] = '\\u062D';\n\t t['\\uFEA4'] = '\\u062D';\n\t t['\\uFEA5'] = '\\u062E';\n\t t['\\uFEA6'] = '\\u062E';\n\t t['\\uFEA7'] = '\\u062E';\n\t t['\\uFEA8'] = '\\u062E';\n\t t['\\uFEA9'] = '\\u062F';\n\t t['\\uFEAA'] = '\\u062F';\n\t t['\\uFEAB'] = '\\u0630';\n\t t['\\uFEAC'] = '\\u0630';\n\t t['\\uFEAD'] = '\\u0631';\n\t t['\\uFEAE'] = '\\u0631';\n\t t['\\uFEAF'] = '\\u0632';\n\t t['\\uFEB0'] = '\\u0632';\n\t t['\\uFEB1'] = '\\u0633';\n\t t['\\uFEB2'] = '\\u0633';\n\t t['\\uFEB3'] = '\\u0633';\n\t t['\\uFEB4'] = '\\u0633';\n\t t['\\uFEB5'] = '\\u0634';\n\t t['\\uFEB6'] = '\\u0634';\n\t t['\\uFEB7'] = '\\u0634';\n\t t['\\uFEB8'] = '\\u0634';\n\t t['\\uFEB9'] = '\\u0635';\n\t t['\\uFEBA'] = '\\u0635';\n\t t['\\uFEBB'] = '\\u0635';\n\t t['\\uFEBC'] = '\\u0635';\n\t t['\\uFEBD'] = '\\u0636';\n\t t['\\uFEBE'] = '\\u0636';\n\t t['\\uFEBF'] = '\\u0636';\n\t t['\\uFEC0'] = '\\u0636';\n\t t['\\uFEC1'] = '\\u0637';\n\t t['\\uFEC2'] = '\\u0637';\n\t t['\\uFEC3'] = '\\u0637';\n\t t['\\uFEC4'] = '\\u0637';\n\t t['\\uFEC5'] = '\\u0638';\n\t t['\\uFEC6'] = '\\u0638';\n\t t['\\uFEC7'] = '\\u0638';\n\t t['\\uFEC8'] = '\\u0638';\n\t t['\\uFEC9'] = '\\u0639';\n\t t['\\uFECA'] = '\\u0639';\n\t t['\\uFECB'] = '\\u0639';\n\t t['\\uFECC'] = '\\u0639';\n\t t['\\uFECD'] = '\\u063A';\n\t t['\\uFECE'] = '\\u063A';\n\t t['\\uFECF'] = '\\u063A';\n\t t['\\uFED0'] = '\\u063A';\n\t t['\\uFED1'] = '\\u0641';\n\t t['\\uFED2'] = '\\u0641';\n\t t['\\uFED3'] = '\\u0641';\n\t t['\\uFED4'] = '\\u0641';\n\t t['\\uFED5'] = '\\u0642';\n\t t['\\uFED6'] = '\\u0642';\n\t t['\\uFED7'] = '\\u0642';\n\t t['\\uFED8'] = '\\u0642';\n\t t['\\uFED9'] = '\\u0643';\n\t t['\\uFEDA'] = '\\u0643';\n\t t['\\uFEDB'] = '\\u0643';\n\t t['\\uFEDC'] = '\\u0643';\n\t t['\\uFEDD'] = '\\u0644';\n\t t['\\uFEDE'] = '\\u0644';\n\t t['\\uFEDF'] = '\\u0644';\n\t t['\\uFEE0'] = '\\u0644';\n\t t['\\uFEE1'] = '\\u0645';\n\t t['\\uFEE2'] = '\\u0645';\n\t t['\\uFEE3'] = '\\u0645';\n\t t['\\uFEE4'] = '\\u0645';\n\t t['\\uFEE5'] = '\\u0646';\n\t t['\\uFEE6'] = '\\u0646';\n\t t['\\uFEE7'] = '\\u0646';\n\t t['\\uFEE8'] = '\\u0646';\n\t t['\\uFEE9'] = '\\u0647';\n\t t['\\uFEEA'] = '\\u0647';\n\t t['\\uFEEB'] = '\\u0647';\n\t t['\\uFEEC'] = '\\u0647';\n\t t['\\uFEED'] = '\\u0648';\n\t t['\\uFEEE'] = '\\u0648';\n\t t['\\uFEEF'] = '\\u0649';\n\t t['\\uFEF0'] = '\\u0649';\n\t t['\\uFEF1'] = '\\u064A';\n\t t['\\uFEF2'] = '\\u064A';\n\t t['\\uFEF3'] = '\\u064A';\n\t t['\\uFEF4'] = '\\u064A';\n\t t['\\uFEF5'] = '\\u0644\\u0622';\n\t t['\\uFEF6'] = '\\u0644\\u0622';\n\t t['\\uFEF7'] = '\\u0644\\u0623';\n\t t['\\uFEF8'] = '\\u0644\\u0623';\n\t t['\\uFEF9'] = '\\u0644\\u0625';\n\t t['\\uFEFA'] = '\\u0644\\u0625';\n\t t['\\uFEFB'] = '\\u0644\\u0627';\n\t t['\\uFEFC'] = '\\u0644\\u0627';\n\t});\n\tfunction reverseIfRtl(chars) {\n\t var charsLength = chars.length;\n\t if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n\t  return chars;\n\t }\n\t var s = '';\n\t for (var ii = charsLength - 1; ii >= 0; ii--) {\n\t  s += chars[ii];\n\t }\n\t return s;\n\t}\n\texports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n\texports.reverseIfRtl = reverseIfRtl;\n\texports.getUnicodeRangeFor = getUnicodeRangeFor;\n\texports.getNormalizedUnicodes = getNormalizedUnicodes;\n\texports.getUnicodeForGlyph = getUnicodeForGlyph;\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreWorker = __w_pdfjs_require__(8);\n\tvar OK_RESPONSE = 200;\n\tvar PARTIAL_CONTENT_RESPONSE = 206;\n\tfunction NetworkManager(url, args) {\n\t this.url = url;\n\t args = args || {};\n\t this.isHttp = /^https?:/i.test(url);\n\t this.httpHeaders = this.isHttp && args.httpHeaders || {};\n\t this.withCredentials = args.withCredentials || false;\n\t this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n\t  return new XMLHttpRequest();\n\t };\n\t this.currXhrId = 0;\n\t this.pendingRequests = Object.create(null);\n\t this.loadedRequests = Object.create(null);\n\t}\n\tfunction getArrayBuffer(xhr) {\n\t var data = xhr.response;\n\t if (typeof data !== 'string') {\n\t  return data;\n\t }\n\t var length = data.length;\n\t var array = new Uint8Array(length);\n\t for (var i = 0; i < length; i++) {\n\t  array[i] = data.charCodeAt(i) & 0xFF;\n\t }\n\t return array.buffer;\n\t}\n\tvar supportsMozChunked = function supportsMozChunkedClosure() {\n\t try {\n\t  var x = new XMLHttpRequest();\n\t  x.open('GET', 'https://example.com');\n\t  x.responseType = 'moz-chunked-arraybuffer';\n\t  return x.responseType === 'moz-chunked-arraybuffer';\n\t } catch (e) {\n\t  return false;\n\t }\n\t}();\n\tNetworkManager.prototype = {\n\t requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n\t  var args = {\n\t   begin: begin,\n\t   end: end\n\t  };\n\t  for (var prop in listeners) {\n\t   args[prop] = listeners[prop];\n\t  }\n\t  return this.request(args);\n\t },\n\t requestFull: function NetworkManager_requestFull(listeners) {\n\t  return this.request(listeners);\n\t },\n\t request: function NetworkManager_request(args) {\n\t  var xhr = this.getXhr();\n\t  var xhrId = this.currXhrId++;\n\t  var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n\t  xhr.open('GET', this.url);\n\t  xhr.withCredentials = this.withCredentials;\n\t  for (var property in this.httpHeaders) {\n\t   var value = this.httpHeaders[property];\n\t   if (typeof value === 'undefined') {\n\t    continue;\n\t   }\n\t   xhr.setRequestHeader(property, value);\n\t  }\n\t  if (this.isHttp && 'begin' in args && 'end' in args) {\n\t   var rangeStr = args.begin + '-' + (args.end - 1);\n\t   xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n\t   pendingRequest.expectedStatus = 206;\n\t  } else {\n\t   pendingRequest.expectedStatus = 200;\n\t  }\n\t  var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n\t  if (useMozChunkedLoading) {\n\t   xhr.responseType = 'moz-chunked-arraybuffer';\n\t   pendingRequest.onProgressiveData = args.onProgressiveData;\n\t   pendingRequest.mozChunked = true;\n\t  } else {\n\t   xhr.responseType = 'arraybuffer';\n\t  }\n\t  if (args.onError) {\n\t   xhr.onerror = function (evt) {\n\t    args.onError(xhr.status);\n\t   };\n\t  }\n\t  xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n\t  xhr.onprogress = this.onProgress.bind(this, xhrId);\n\t  pendingRequest.onHeadersReceived = args.onHeadersReceived;\n\t  pendingRequest.onDone = args.onDone;\n\t  pendingRequest.onError = args.onError;\n\t  pendingRequest.onProgress = args.onProgress;\n\t  xhr.send(null);\n\t  return xhrId;\n\t },\n\t onProgress: function NetworkManager_onProgress(xhrId, evt) {\n\t  var pendingRequest = this.pendingRequests[xhrId];\n\t  if (!pendingRequest) {\n\t   return;\n\t  }\n\t  if (pendingRequest.mozChunked) {\n\t   var chunk = getArrayBuffer(pendingRequest.xhr);\n\t   pendingRequest.onProgressiveData(chunk);\n\t  }\n\t  var onProgress = pendingRequest.onProgress;\n\t  if (onProgress) {\n\t   onProgress(evt);\n\t  }\n\t },\n\t onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n\t  var pendingRequest = this.pendingRequests[xhrId];\n\t  if (!pendingRequest) {\n\t   return;\n\t  }\n\t  var xhr = pendingRequest.xhr;\n\t  if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n\t   pendingRequest.onHeadersReceived();\n\t   delete pendingRequest.onHeadersReceived;\n\t  }\n\t  if (xhr.readyState !== 4) {\n\t   return;\n\t  }\n\t  if (!(xhrId in this.pendingRequests)) {\n\t   return;\n\t  }\n\t  delete this.pendingRequests[xhrId];\n\t  if (xhr.status === 0 && this.isHttp) {\n\t   if (pendingRequest.onError) {\n\t    pendingRequest.onError(xhr.status);\n\t   }\n\t   return;\n\t  }\n\t  var xhrStatus = xhr.status || OK_RESPONSE;\n\t  var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\t  if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n\t   if (pendingRequest.onError) {\n\t    pendingRequest.onError(xhr.status);\n\t   }\n\t   return;\n\t  }\n\t  this.loadedRequests[xhrId] = true;\n\t  var chunk = getArrayBuffer(xhr);\n\t  if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n\t   var rangeHeader = xhr.getResponseHeader('Content-Range');\n\t   var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n\t   var begin = parseInt(matches[1], 10);\n\t   pendingRequest.onDone({\n\t    begin: begin,\n\t    chunk: chunk\n\t   });\n\t  } else if (pendingRequest.onProgressiveData) {\n\t   pendingRequest.onDone(null);\n\t  } else if (chunk) {\n\t   pendingRequest.onDone({\n\t    begin: 0,\n\t    chunk: chunk\n\t   });\n\t  } else if (pendingRequest.onError) {\n\t   pendingRequest.onError(xhr.status);\n\t  }\n\t },\n\t hasPendingRequests: function NetworkManager_hasPendingRequests() {\n\t  for (var xhrId in this.pendingRequests) {\n\t   return true;\n\t  }\n\t  return false;\n\t },\n\t getRequestXhr: function NetworkManager_getXhr(xhrId) {\n\t  return this.pendingRequests[xhrId].xhr;\n\t },\n\t isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n\t  return !!this.pendingRequests[xhrId].onProgressiveData;\n\t },\n\t isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n\t  return xhrId in this.pendingRequests;\n\t },\n\t isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n\t  return xhrId in this.loadedRequests;\n\t },\n\t abortAllRequests: function NetworkManager_abortAllRequests() {\n\t  for (var xhrId in this.pendingRequests) {\n\t   this.abortRequest(xhrId | 0);\n\t  }\n\t },\n\t abortRequest: function NetworkManager_abortRequest(xhrId) {\n\t  var xhr = this.pendingRequests[xhrId].xhr;\n\t  delete this.pendingRequests[xhrId];\n\t  xhr.abort();\n\t }\n\t};\n\tvar assert = sharedUtil.assert;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar isInt = sharedUtil.isInt;\n\tvar MissingPDFException = sharedUtil.MissingPDFException;\n\tvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\n\tfunction PDFNetworkStream(options) {\n\t this._options = options;\n\t var source = options.source;\n\t this._manager = new NetworkManager(source.url, {\n\t  httpHeaders: source.httpHeaders,\n\t  withCredentials: source.withCredentials\n\t });\n\t this._rangeChunkSize = source.rangeChunkSize;\n\t this._fullRequestReader = null;\n\t this._rangeRequestReaders = [];\n\t}\n\tPDFNetworkStream.prototype = {\n\t _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n\t  var i = this._rangeRequestReaders.indexOf(reader);\n\t  if (i >= 0) {\n\t   this._rangeRequestReaders.splice(i, 1);\n\t  }\n\t },\n\t getFullReader: function PDFNetworkStream_getFullReader() {\n\t  assert(!this._fullRequestReader);\n\t  this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n\t  return this._fullRequestReader;\n\t },\n\t getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n\t  var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n\t  reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\t  this._rangeRequestReaders.push(reader);\n\t  return reader;\n\t },\n\t cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n\t  if (this._fullRequestReader) {\n\t   this._fullRequestReader.cancel(reason);\n\t  }\n\t  var readers = this._rangeRequestReaders.slice(0);\n\t  readers.forEach(function (reader) {\n\t   reader.cancel(reason);\n\t  });\n\t }\n\t};\n\tfunction PDFNetworkStreamFullRequestReader(manager, options) {\n\t this._manager = manager;\n\t var source = options.source;\n\t var args = {\n\t  onHeadersReceived: this._onHeadersReceived.bind(this),\n\t  onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n\t  onDone: this._onDone.bind(this),\n\t  onError: this._onError.bind(this),\n\t  onProgress: this._onProgress.bind(this)\n\t };\n\t this._url = source.url;\n\t this._fullRequestId = manager.requestFull(args);\n\t this._headersReceivedCapability = createPromiseCapability();\n\t this._disableRange = options.disableRange || false;\n\t this._contentLength = source.length;\n\t this._rangeChunkSize = source.rangeChunkSize;\n\t if (!this._rangeChunkSize && !this._disableRange) {\n\t  this._disableRange = true;\n\t }\n\t this._isStreamingSupported = false;\n\t this._isRangeSupported = false;\n\t this._cachedChunks = [];\n\t this._requests = [];\n\t this._done = false;\n\t this._storedError = undefined;\n\t this.onProgress = null;\n\t}\n\tPDFNetworkStreamFullRequestReader.prototype = {\n\t _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n\t  if (this._disableRange) {\n\t   return false;\n\t  }\n\t  var networkManager = this._manager;\n\t  if (!networkManager.isHttp) {\n\t   return false;\n\t  }\n\t  var fullRequestXhrId = this._fullRequestId;\n\t  var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n\t  if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n\t   return false;\n\t  }\n\t  var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n\t  if (contentEncoding !== 'identity') {\n\t   return false;\n\t  }\n\t  var length = fullRequestXhr.getResponseHeader('Content-Length');\n\t  length = parseInt(length, 10);\n\t  if (!isInt(length)) {\n\t   return false;\n\t  }\n\t  this._contentLength = length;\n\t  if (length <= 2 * this._rangeChunkSize) {\n\t   return false;\n\t  }\n\t  return true;\n\t },\n\t _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n\t  if (this._validateRangeRequestCapabilities()) {\n\t   this._isRangeSupported = true;\n\t  }\n\t  var networkManager = this._manager;\n\t  var fullRequestXhrId = this._fullRequestId;\n\t  if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n\t   this._isStreamingSupported = true;\n\t  } else if (this._isRangeSupported) {\n\t   networkManager.abortRequest(fullRequestXhrId);\n\t  }\n\t  this._headersReceivedCapability.resolve();\n\t },\n\t _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n\t  if (this._requests.length > 0) {\n\t   var requestCapability = this._requests.shift();\n\t   requestCapability.resolve({\n\t    value: chunk,\n\t    done: false\n\t   });\n\t  } else {\n\t   this._cachedChunks.push(chunk);\n\t  }\n\t },\n\t _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n\t  if (args) {\n\t   this._onProgressiveData(args.chunk);\n\t  }\n\t  this._done = true;\n\t  if (this._cachedChunks.length > 0) {\n\t   return;\n\t  }\n\t  this._requests.forEach(function (requestCapability) {\n\t   requestCapability.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  });\n\t  this._requests = [];\n\t },\n\t _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n\t  var url = this._url;\n\t  var exception;\n\t  if (status === 404 || status === 0 && /^file:/.test(url)) {\n\t   exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n\t  } else {\n\t   exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n\t  }\n\t  this._storedError = exception;\n\t  this._headersReceivedCapability.reject(exception);\n\t  this._requests.forEach(function (requestCapability) {\n\t   requestCapability.reject(exception);\n\t  });\n\t  this._requests = [];\n\t  this._cachedChunks = [];\n\t },\n\t _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n\t  if (this.onProgress) {\n\t   this.onProgress({\n\t    loaded: data.loaded,\n\t    total: data.lengthComputable ? data.total : this._contentLength\n\t   });\n\t  }\n\t },\n\t get isRangeSupported() {\n\t  return this._isRangeSupported;\n\t },\n\t get isStreamingSupported() {\n\t  return this._isStreamingSupported;\n\t },\n\t get contentLength() {\n\t  return this._contentLength;\n\t },\n\t get headersReady() {\n\t  return this._headersReceivedCapability.promise;\n\t },\n\t read: function PDFNetworkStreamFullRequestReader_read() {\n\t  if (this._storedError) {\n\t   return Promise.reject(this._storedError);\n\t  }\n\t  if (this._cachedChunks.length > 0) {\n\t   var chunk = this._cachedChunks.shift();\n\t   return Promise.resolve(chunk);\n\t  }\n\t  if (this._done) {\n\t   return Promise.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  }\n\t  var requestCapability = createPromiseCapability();\n\t  this._requests.push(requestCapability);\n\t  return requestCapability.promise;\n\t },\n\t cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n\t  this._done = true;\n\t  this._headersReceivedCapability.reject(reason);\n\t  this._requests.forEach(function (requestCapability) {\n\t   requestCapability.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  });\n\t  this._requests = [];\n\t  if (this._manager.isPendingRequest(this._fullRequestId)) {\n\t   this._manager.abortRequest(this._fullRequestId);\n\t  }\n\t  this._fullRequestReader = null;\n\t }\n\t};\n\tfunction PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n\t this._manager = manager;\n\t var args = {\n\t  onDone: this._onDone.bind(this),\n\t  onProgress: this._onProgress.bind(this)\n\t };\n\t this._requestId = manager.requestRange(begin, end, args);\n\t this._requests = [];\n\t this._queuedChunk = null;\n\t this._done = false;\n\t this.onProgress = null;\n\t this.onClosed = null;\n\t}\n\tPDFNetworkStreamRangeRequestReader.prototype = {\n\t _close: function PDFNetworkStreamRangeRequestReader_close() {\n\t  if (this.onClosed) {\n\t   this.onClosed(this);\n\t  }\n\t },\n\t _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n\t  var chunk = data.chunk;\n\t  if (this._requests.length > 0) {\n\t   var requestCapability = this._requests.shift();\n\t   requestCapability.resolve({\n\t    value: chunk,\n\t    done: false\n\t   });\n\t  } else {\n\t   this._queuedChunk = chunk;\n\t  }\n\t  this._done = true;\n\t  this._requests.forEach(function (requestCapability) {\n\t   requestCapability.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  });\n\t  this._requests = [];\n\t  this._close();\n\t },\n\t _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n\t  if (!this.isStreamingSupported && this.onProgress) {\n\t   this.onProgress({ loaded: evt.loaded });\n\t  }\n\t },\n\t get isStreamingSupported() {\n\t  return false;\n\t },\n\t read: function PDFNetworkStreamRangeRequestReader_read() {\n\t  if (this._queuedChunk !== null) {\n\t   var chunk = this._queuedChunk;\n\t   this._queuedChunk = null;\n\t   return Promise.resolve({\n\t    value: chunk,\n\t    done: false\n\t   });\n\t  }\n\t  if (this._done) {\n\t   return Promise.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  }\n\t  var requestCapability = createPromiseCapability();\n\t  this._requests.push(requestCapability);\n\t  return requestCapability.promise;\n\t },\n\t cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n\t  this._done = true;\n\t  this._requests.forEach(function (requestCapability) {\n\t   requestCapability.resolve({\n\t    value: undefined,\n\t    done: true\n\t   });\n\t  });\n\t  this._requests = [];\n\t  if (this._manager.isPendingRequest(this._requestId)) {\n\t   this._manager.abortRequest(this._requestId);\n\t  }\n\t  this._close();\n\t }\n\t};\n\tcoreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\n\texports.PDFNetworkStream = PDFNetworkStream;\n\texports.NetworkManager = NetworkManager;\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports) {\n\t\n\tvar g;\n\tg = function () {\n\t return this;\n\t}();\n\ttry {\n\t g = g || Function(\"return this\")() || (1, eval)(\"this\");\n\t} catch (e) {\n\t if (typeof window === \"object\")\n\t  g = window;\n\t}\n\tmodule.exports = g;\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreColorSpace = __w_pdfjs_require__(3);\n\tvar coreObj = __w_pdfjs_require__(15);\n\tvar coreEvaluator = __w_pdfjs_require__(13);\n\tvar AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\n\tvar AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\n\tvar AnnotationFlag = sharedUtil.AnnotationFlag;\n\tvar AnnotationType = sharedUtil.AnnotationType;\n\tvar OPS = sharedUtil.OPS;\n\tvar Util = sharedUtil.Util;\n\tvar isArray = sharedUtil.isArray;\n\tvar isInt = sharedUtil.isInt;\n\tvar stringToBytes = sharedUtil.stringToBytes;\n\tvar stringToPDFString = sharedUtil.stringToPDFString;\n\tvar warn = sharedUtil.warn;\n\tvar Dict = corePrimitives.Dict;\n\tvar isDict = corePrimitives.isDict;\n\tvar isName = corePrimitives.isName;\n\tvar isRef = corePrimitives.isRef;\n\tvar isStream = corePrimitives.isStream;\n\tvar Stream = coreStream.Stream;\n\tvar ColorSpace = coreColorSpace.ColorSpace;\n\tvar Catalog = coreObj.Catalog;\n\tvar ObjectLoader = coreObj.ObjectLoader;\n\tvar FileSpec = coreObj.FileSpec;\n\tvar OperatorList = coreEvaluator.OperatorList;\n\tfunction AnnotationFactory() {\n\t}\n\tAnnotationFactory.prototype = {\n\t create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n\t  var dict = xref.fetchIfRef(ref);\n\t  if (!isDict(dict)) {\n\t   return;\n\t  }\n\t  var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n\t  var subtype = dict.get('Subtype');\n\t  subtype = isName(subtype) ? subtype.name : null;\n\t  var parameters = {\n\t   xref: xref,\n\t   dict: dict,\n\t   ref: isRef(ref) ? ref : null,\n\t   subtype: subtype,\n\t   id: id,\n\t   pdfManager: pdfManager\n\t  };\n\t  switch (subtype) {\n\t  case 'Link':\n\t   return new LinkAnnotation(parameters);\n\t  case 'Text':\n\t   return new TextAnnotation(parameters);\n\t  case 'Widget':\n\t   var fieldType = Util.getInheritableProperty(dict, 'FT');\n\t   fieldType = isName(fieldType) ? fieldType.name : null;\n\t   switch (fieldType) {\n\t   case 'Tx':\n\t    return new TextWidgetAnnotation(parameters);\n\t   case 'Btn':\n\t    return new ButtonWidgetAnnotation(parameters);\n\t   case 'Ch':\n\t    return new ChoiceWidgetAnnotation(parameters);\n\t   }\n\t   warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n\t   return new WidgetAnnotation(parameters);\n\t  case 'Popup':\n\t   return new PopupAnnotation(parameters);\n\t  case 'Highlight':\n\t   return new HighlightAnnotation(parameters);\n\t  case 'Underline':\n\t   return new UnderlineAnnotation(parameters);\n\t  case 'Squiggly':\n\t   return new SquigglyAnnotation(parameters);\n\t  case 'StrikeOut':\n\t   return new StrikeOutAnnotation(parameters);\n\t  case 'FileAttachment':\n\t   return new FileAttachmentAnnotation(parameters);\n\t  default:\n\t   if (!subtype) {\n\t    warn('Annotation is missing the required /Subtype.');\n\t   } else {\n\t    warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n\t   }\n\t   return new Annotation(parameters);\n\t  }\n\t }\n\t};\n\tvar Annotation = function AnnotationClosure() {\n\t function getTransformMatrix(rect, bbox, matrix) {\n\t  var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n\t  var minX = bounds[0];\n\t  var minY = bounds[1];\n\t  var maxX = bounds[2];\n\t  var maxY = bounds[3];\n\t  if (minX === maxX || minY === maxY) {\n\t   return [\n\t    1,\n\t    0,\n\t    0,\n\t    1,\n\t    rect[0],\n\t    rect[1]\n\t   ];\n\t  }\n\t  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n\t  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n\t  return [\n\t   xRatio,\n\t   0,\n\t   0,\n\t   yRatio,\n\t   rect[0] - minX * xRatio,\n\t   rect[1] - minY * yRatio\n\t  ];\n\t }\n\t function Annotation(params) {\n\t  var dict = params.dict;\n\t  this.setFlags(dict.get('F'));\n\t  this.setRectangle(dict.getArray('Rect'));\n\t  this.setColor(dict.getArray('C'));\n\t  this.setBorderStyle(dict);\n\t  this.setAppearance(dict);\n\t  this.data = {};\n\t  this.data.id = params.id;\n\t  this.data.subtype = params.subtype;\n\t  this.data.annotationFlags = this.flags;\n\t  this.data.rect = this.rectangle;\n\t  this.data.color = this.color;\n\t  this.data.borderStyle = this.borderStyle;\n\t  this.data.hasAppearance = !!this.appearance;\n\t }\n\t Annotation.prototype = {\n\t  _hasFlag: function Annotation_hasFlag(flags, flag) {\n\t   return !!(flags & flag);\n\t  },\n\t  _isViewable: function Annotation_isViewable(flags) {\n\t   return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n\t  },\n\t  _isPrintable: function AnnotationFlag_isPrintable(flags) {\n\t   return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n\t  },\n\t  get viewable() {\n\t   if (this.flags === 0) {\n\t    return true;\n\t   }\n\t   return this._isViewable(this.flags);\n\t  },\n\t  get printable() {\n\t   if (this.flags === 0) {\n\t    return false;\n\t   }\n\t   return this._isPrintable(this.flags);\n\t  },\n\t  setFlags: function Annotation_setFlags(flags) {\n\t   this.flags = isInt(flags) && flags > 0 ? flags : 0;\n\t  },\n\t  hasFlag: function Annotation_hasFlag(flag) {\n\t   return this._hasFlag(this.flags, flag);\n\t  },\n\t  setRectangle: function Annotation_setRectangle(rectangle) {\n\t   if (isArray(rectangle) && rectangle.length === 4) {\n\t    this.rectangle = Util.normalizeRect(rectangle);\n\t   } else {\n\t    this.rectangle = [\n\t     0,\n\t     0,\n\t     0,\n\t     0\n\t    ];\n\t   }\n\t  },\n\t  setColor: function Annotation_setColor(color) {\n\t   var rgbColor = new Uint8Array(3);\n\t   if (!isArray(color)) {\n\t    this.color = rgbColor;\n\t    return;\n\t   }\n\t   switch (color.length) {\n\t   case 0:\n\t    this.color = null;\n\t    break;\n\t   case 1:\n\t    ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\t    this.color = rgbColor;\n\t    break;\n\t   case 3:\n\t    ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\t    this.color = rgbColor;\n\t    break;\n\t   case 4:\n\t    ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\t    this.color = rgbColor;\n\t    break;\n\t   default:\n\t    this.color = rgbColor;\n\t    break;\n\t   }\n\t  },\n\t  setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n\t   this.borderStyle = new AnnotationBorderStyle();\n\t   if (!isDict(borderStyle)) {\n\t    return;\n\t   }\n\t   if (borderStyle.has('BS')) {\n\t    var dict = borderStyle.get('BS');\n\t    var dictType = dict.get('Type');\n\t    if (!dictType || isName(dictType, 'Border')) {\n\t     this.borderStyle.setWidth(dict.get('W'));\n\t     this.borderStyle.setStyle(dict.get('S'));\n\t     this.borderStyle.setDashArray(dict.getArray('D'));\n\t    }\n\t   } else if (borderStyle.has('Border')) {\n\t    var array = borderStyle.getArray('Border');\n\t    if (isArray(array) && array.length >= 3) {\n\t     this.borderStyle.setHorizontalCornerRadius(array[0]);\n\t     this.borderStyle.setVerticalCornerRadius(array[1]);\n\t     this.borderStyle.setWidth(array[2]);\n\t     if (array.length === 4) {\n\t      this.borderStyle.setDashArray(array[3]);\n\t     }\n\t    }\n\t   } else {\n\t    this.borderStyle.setWidth(0);\n\t   }\n\t  },\n\t  setAppearance: function Annotation_setAppearance(dict) {\n\t   this.appearance = null;\n\t   var appearanceStates = dict.get('AP');\n\t   if (!isDict(appearanceStates)) {\n\t    return;\n\t   }\n\t   var normalAppearanceState = appearanceStates.get('N');\n\t   if (isStream(normalAppearanceState)) {\n\t    this.appearance = normalAppearanceState;\n\t    return;\n\t   }\n\t   if (!isDict(normalAppearanceState)) {\n\t    return;\n\t   }\n\t   var as = dict.get('AS');\n\t   if (!isName(as) || !normalAppearanceState.has(as.name)) {\n\t    return;\n\t   }\n\t   this.appearance = normalAppearanceState.get(as.name);\n\t  },\n\t  _preparePopup: function Annotation_preparePopup(dict) {\n\t   if (!dict.has('C')) {\n\t    this.data.color = null;\n\t   }\n\t   this.data.hasPopup = dict.has('Popup');\n\t   this.data.title = stringToPDFString(dict.get('T') || '');\n\t   this.data.contents = stringToPDFString(dict.get('Contents') || '');\n\t  },\n\t  loadResources: function Annotation_loadResources(keys) {\n\t   return new Promise(function (resolve, reject) {\n\t    this.appearance.dict.getAsync('Resources').then(function (resources) {\n\t     if (!resources) {\n\t      resolve();\n\t      return;\n\t     }\n\t     var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n\t     objectLoader.load().then(function () {\n\t      resolve(resources);\n\t     }, reject);\n\t    }, reject);\n\t   }.bind(this));\n\t  },\n\t  getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n\t   if (!this.appearance) {\n\t    return Promise.resolve(new OperatorList());\n\t   }\n\t   var data = this.data;\n\t   var appearanceDict = this.appearance.dict;\n\t   var resourcesPromise = this.loadResources([\n\t    'ExtGState',\n\t    'ColorSpace',\n\t    'Pattern',\n\t    'Shading',\n\t    'XObject',\n\t    'Font'\n\t   ]);\n\t   var bbox = appearanceDict.getArray('BBox') || [\n\t    0,\n\t    0,\n\t    1,\n\t    1\n\t   ];\n\t   var matrix = appearanceDict.getArray('Matrix') || [\n\t    1,\n\t    0,\n\t    0,\n\t    1,\n\t    0,\n\t    0\n\t   ];\n\t   var transform = getTransformMatrix(data.rect, bbox, matrix);\n\t   var self = this;\n\t   return resourcesPromise.then(function (resources) {\n\t    var opList = new OperatorList();\n\t    opList.addOp(OPS.beginAnnotation, [\n\t     data.rect,\n\t     transform,\n\t     matrix\n\t    ]);\n\t    return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n\t     opList.addOp(OPS.endAnnotation, []);\n\t     self.appearance.reset();\n\t     return opList;\n\t    });\n\t   });\n\t  }\n\t };\n\t Annotation.appendToOperatorList = function Annotation_appendToOperatorList(annotations, opList, partialEvaluator, task, intent, renderForms) {\n\t  var annotationPromises = [];\n\t  for (var i = 0, n = annotations.length; i < n; ++i) {\n\t   if (intent === 'display' && annotations[i].viewable || intent === 'print' && annotations[i].printable) {\n\t    annotationPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderForms));\n\t   }\n\t  }\n\t  return Promise.all(annotationPromises).then(function (operatorLists) {\n\t   opList.addOp(OPS.beginAnnotations, []);\n\t   for (var i = 0, n = operatorLists.length; i < n; ++i) {\n\t    opList.addOpList(operatorLists[i]);\n\t   }\n\t   opList.addOp(OPS.endAnnotations, []);\n\t  });\n\t };\n\t return Annotation;\n\t}();\n\tvar AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n\t function AnnotationBorderStyle() {\n\t  this.width = 1;\n\t  this.style = AnnotationBorderStyleType.SOLID;\n\t  this.dashArray = [3];\n\t  this.horizontalCornerRadius = 0;\n\t  this.verticalCornerRadius = 0;\n\t }\n\t AnnotationBorderStyle.prototype = {\n\t  setWidth: function AnnotationBorderStyle_setWidth(width) {\n\t   if (width === (width | 0)) {\n\t    this.width = width;\n\t   }\n\t  },\n\t  setStyle: function AnnotationBorderStyle_setStyle(style) {\n\t   if (!style) {\n\t    return;\n\t   }\n\t   switch (style.name) {\n\t   case 'S':\n\t    this.style = AnnotationBorderStyleType.SOLID;\n\t    break;\n\t   case 'D':\n\t    this.style = AnnotationBorderStyleType.DASHED;\n\t    break;\n\t   case 'B':\n\t    this.style = AnnotationBorderStyleType.BEVELED;\n\t    break;\n\t   case 'I':\n\t    this.style = AnnotationBorderStyleType.INSET;\n\t    break;\n\t   case 'U':\n\t    this.style = AnnotationBorderStyleType.UNDERLINE;\n\t    break;\n\t   default:\n\t    break;\n\t   }\n\t  },\n\t  setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n\t   if (isArray(dashArray) && dashArray.length > 0) {\n\t    var isValid = true;\n\t    var allZeros = true;\n\t    for (var i = 0, len = dashArray.length; i < len; i++) {\n\t     var element = dashArray[i];\n\t     var validNumber = +element >= 0;\n\t     if (!validNumber) {\n\t      isValid = false;\n\t      break;\n\t     } else if (element > 0) {\n\t      allZeros = false;\n\t     }\n\t    }\n\t    if (isValid && !allZeros) {\n\t     this.dashArray = dashArray;\n\t    } else {\n\t     this.width = 0;\n\t    }\n\t   } else if (dashArray) {\n\t    this.width = 0;\n\t   }\n\t  },\n\t  setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n\t   if (radius === (radius | 0)) {\n\t    this.horizontalCornerRadius = radius;\n\t   }\n\t  },\n\t  setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n\t   if (radius === (radius | 0)) {\n\t    this.verticalCornerRadius = radius;\n\t   }\n\t  }\n\t };\n\t return AnnotationBorderStyle;\n\t}();\n\tvar WidgetAnnotation = function WidgetAnnotationClosure() {\n\t function WidgetAnnotation(params) {\n\t  Annotation.call(this, params);\n\t  var dict = params.dict;\n\t  var data = this.data;\n\t  data.annotationType = AnnotationType.WIDGET;\n\t  data.fieldName = this._constructFieldName(dict);\n\t  data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n\t  data.alternativeText = stringToPDFString(dict.get('TU') || '');\n\t  data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n\t  var fieldType = Util.getInheritableProperty(dict, 'FT');\n\t  data.fieldType = isName(fieldType) ? fieldType.name : null;\n\t  this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n\t  data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n\t  if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n\t   data.fieldFlags = 0;\n\t  }\n\t  data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n\t  if (data.fieldType === 'Sig') {\n\t   this.setFlags(AnnotationFlag.HIDDEN);\n\t  }\n\t }\n\t Util.inherit(WidgetAnnotation, Annotation, {\n\t  _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n\t   if (!dict.has('T') && !dict.has('Parent')) {\n\t    warn('Unknown field name, falling back to empty field name.');\n\t    return '';\n\t   }\n\t   if (!dict.has('Parent')) {\n\t    return stringToPDFString(dict.get('T'));\n\t   }\n\t   var fieldName = [];\n\t   if (dict.has('T')) {\n\t    fieldName.unshift(stringToPDFString(dict.get('T')));\n\t   }\n\t   var loopDict = dict;\n\t   while (loopDict.has('Parent')) {\n\t    loopDict = loopDict.get('Parent');\n\t    if (loopDict.has('T')) {\n\t     fieldName.unshift(stringToPDFString(loopDict.get('T')));\n\t    }\n\t   }\n\t   return fieldName.join('.');\n\t  },\n\t  hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n\t   return !!(this.data.fieldFlags & flag);\n\t  }\n\t });\n\t return WidgetAnnotation;\n\t}();\n\tvar TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n\t function TextWidgetAnnotation(params) {\n\t  WidgetAnnotation.call(this, params);\n\t  this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n\t  var alignment = Util.getInheritableProperty(params.dict, 'Q');\n\t  if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n\t   alignment = null;\n\t  }\n\t  this.data.textAlignment = alignment;\n\t  var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n\t  if (!isInt(maximumLength) || maximumLength < 0) {\n\t   maximumLength = null;\n\t  }\n\t  this.data.maxLen = maximumLength;\n\t  this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n\t  this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n\t }\n\t Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n\t  getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t   var operatorList = new OperatorList();\n\t   if (renderForms) {\n\t    return Promise.resolve(operatorList);\n\t   }\n\t   if (this.appearance) {\n\t    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t   }\n\t   if (!this.data.defaultAppearance) {\n\t    return Promise.resolve(operatorList);\n\t   }\n\t   var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n\t   return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n\t    return operatorList;\n\t   });\n\t  }\n\t });\n\t return TextWidgetAnnotation;\n\t}();\n\tvar ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n\t function ButtonWidgetAnnotation(params) {\n\t  WidgetAnnotation.call(this, params);\n\t  this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n\t  if (this.data.checkBox) {\n\t   if (!isName(this.data.fieldValue)) {\n\t    return;\n\t   }\n\t   this.data.fieldValue = this.data.fieldValue.name;\n\t  }\n\t  this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n\t  if (this.data.radioButton) {\n\t   this.data.fieldValue = this.data.buttonValue = null;\n\t   var fieldParent = params.dict.get('Parent');\n\t   if (isDict(fieldParent) && fieldParent.has('V')) {\n\t    var fieldParentValue = fieldParent.get('V');\n\t    if (isName(fieldParentValue)) {\n\t     this.data.fieldValue = fieldParentValue.name;\n\t    }\n\t   }\n\t   var appearanceStates = params.dict.get('AP');\n\t   if (!isDict(appearanceStates)) {\n\t    return;\n\t   }\n\t   var normalAppearanceState = appearanceStates.get('N');\n\t   if (!isDict(normalAppearanceState)) {\n\t    return;\n\t   }\n\t   var keys = normalAppearanceState.getKeys();\n\t   for (var i = 0, ii = keys.length; i < ii; i++) {\n\t    if (keys[i] !== 'Off') {\n\t     this.data.buttonValue = keys[i];\n\t     break;\n\t    }\n\t   }\n\t  }\n\t }\n\t Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n\t  getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t   var operatorList = new OperatorList();\n\t   if (renderForms) {\n\t    return Promise.resolve(operatorList);\n\t   }\n\t   if (this.appearance) {\n\t    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t   }\n\t   return Promise.resolve(operatorList);\n\t  }\n\t });\n\t return ButtonWidgetAnnotation;\n\t}();\n\tvar ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n\t function ChoiceWidgetAnnotation(params) {\n\t  WidgetAnnotation.call(this, params);\n\t  this.data.options = [];\n\t  var options = params.dict.get('Opt');\n\t  if (isArray(options)) {\n\t   var xref = params.xref;\n\t   for (var i = 0, ii = options.length; i < ii; i++) {\n\t    var option = xref.fetchIfRef(options[i]);\n\t    var isOptionArray = isArray(option);\n\t    this.data.options[i] = {\n\t     exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n\t     displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n\t    };\n\t   }\n\t  }\n\t  if (!isArray(this.data.fieldValue)) {\n\t   this.data.fieldValue = [this.data.fieldValue];\n\t  }\n\t  this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n\t  this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n\t }\n\t Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n\t  getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n\t   var operatorList = new OperatorList();\n\t   if (renderForms) {\n\t    return Promise.resolve(operatorList);\n\t   }\n\t   return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n\t  }\n\t });\n\t return ChoiceWidgetAnnotation;\n\t}();\n\tvar TextAnnotation = function TextAnnotationClosure() {\n\t var DEFAULT_ICON_SIZE = 22;\n\t function TextAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.TEXT;\n\t  if (this.data.hasAppearance) {\n\t   this.data.name = 'NoIcon';\n\t  } else {\n\t   this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n\t   this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n\t   this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n\t  }\n\t  this._preparePopup(parameters.dict);\n\t }\n\t Util.inherit(TextAnnotation, Annotation, {});\n\t return TextAnnotation;\n\t}();\n\tvar LinkAnnotation = function LinkAnnotationClosure() {\n\t function LinkAnnotation(params) {\n\t  Annotation.call(this, params);\n\t  var data = this.data;\n\t  data.annotationType = AnnotationType.LINK;\n\t  Catalog.parseDestDictionary({\n\t   destDict: params.dict,\n\t   resultObj: data,\n\t   docBaseUrl: params.pdfManager.docBaseUrl\n\t  });\n\t }\n\t Util.inherit(LinkAnnotation, Annotation, {});\n\t return LinkAnnotation;\n\t}();\n\tvar PopupAnnotation = function PopupAnnotationClosure() {\n\t function PopupAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.POPUP;\n\t  var dict = parameters.dict;\n\t  var parentItem = dict.get('Parent');\n\t  if (!parentItem) {\n\t   warn('Popup annotation has a missing or invalid parent annotation.');\n\t   return;\n\t  }\n\t  this.data.parentId = dict.getRaw('Parent').toString();\n\t  this.data.title = stringToPDFString(parentItem.get('T') || '');\n\t  this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n\t  if (!parentItem.has('C')) {\n\t   this.data.color = null;\n\t  } else {\n\t   this.setColor(parentItem.getArray('C'));\n\t   this.data.color = this.color;\n\t  }\n\t  if (!this.viewable) {\n\t   var parentFlags = parentItem.get('F');\n\t   if (this._isViewable(parentFlags)) {\n\t    this.setFlags(parentFlags);\n\t   }\n\t  }\n\t }\n\t Util.inherit(PopupAnnotation, Annotation, {});\n\t return PopupAnnotation;\n\t}();\n\tvar HighlightAnnotation = function HighlightAnnotationClosure() {\n\t function HighlightAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.HIGHLIGHT;\n\t  this._preparePopup(parameters.dict);\n\t  this.data.borderStyle.setWidth(0);\n\t }\n\t Util.inherit(HighlightAnnotation, Annotation, {});\n\t return HighlightAnnotation;\n\t}();\n\tvar UnderlineAnnotation = function UnderlineAnnotationClosure() {\n\t function UnderlineAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.UNDERLINE;\n\t  this._preparePopup(parameters.dict);\n\t  this.data.borderStyle.setWidth(0);\n\t }\n\t Util.inherit(UnderlineAnnotation, Annotation, {});\n\t return UnderlineAnnotation;\n\t}();\n\tvar SquigglyAnnotation = function SquigglyAnnotationClosure() {\n\t function SquigglyAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.SQUIGGLY;\n\t  this._preparePopup(parameters.dict);\n\t  this.data.borderStyle.setWidth(0);\n\t }\n\t Util.inherit(SquigglyAnnotation, Annotation, {});\n\t return SquigglyAnnotation;\n\t}();\n\tvar StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n\t function StrikeOutAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  this.data.annotationType = AnnotationType.STRIKEOUT;\n\t  this._preparePopup(parameters.dict);\n\t  this.data.borderStyle.setWidth(0);\n\t }\n\t Util.inherit(StrikeOutAnnotation, Annotation, {});\n\t return StrikeOutAnnotation;\n\t}();\n\tvar FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n\t function FileAttachmentAnnotation(parameters) {\n\t  Annotation.call(this, parameters);\n\t  var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n\t  this.data.annotationType = AnnotationType.FILEATTACHMENT;\n\t  this.data.file = file.serializable;\n\t  this._preparePopup(parameters.dict);\n\t }\n\t Util.inherit(FileAttachmentAnnotation, Annotation, {});\n\t return FileAttachmentAnnotation;\n\t}();\n\texports.Annotation = Annotation;\n\texports.AnnotationBorderStyle = AnnotationBorderStyle;\n\texports.AnnotationFactory = AnnotationFactory;\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar warn = sharedUtil.warn;\n\tvar baseTypes = [\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'S',\n\t 'B',\n\t 'S',\n\t 'WS',\n\t 'B',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'B',\n\t 'B',\n\t 'B',\n\t 'S',\n\t 'WS',\n\t 'ON',\n\t 'ON',\n\t 'ET',\n\t 'ET',\n\t 'ET',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ES',\n\t 'CS',\n\t 'ES',\n\t 'CS',\n\t 'CS',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'CS',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'B',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'BN',\n\t 'CS',\n\t 'ON',\n\t 'ET',\n\t 'ET',\n\t 'ET',\n\t 'ET',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'L',\n\t 'ON',\n\t 'ON',\n\t 'BN',\n\t 'ON',\n\t 'ON',\n\t 'ET',\n\t 'ET',\n\t 'EN',\n\t 'EN',\n\t 'ON',\n\t 'L',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'EN',\n\t 'L',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'ON',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'ON',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'ON',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L',\n\t 'L'\n\t];\n\tvar arabicTypes = [\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'ON',\n\t 'ON',\n\t 'AL',\n\t 'ET',\n\t 'ET',\n\t 'AL',\n\t 'CS',\n\t 'AL',\n\t 'ON',\n\t 'ON',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'AL',\n\t 'AL',\n\t '',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'AN',\n\t 'ET',\n\t 'AN',\n\t 'AN',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'NSM',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'AN',\n\t 'ON',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'AL',\n\t 'AL',\n\t 'NSM',\n\t 'NSM',\n\t 'ON',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'NSM',\n\t 'AL',\n\t 'AL',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'EN',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL',\n\t 'AL'\n\t];\n\tfunction isOdd(i) {\n\t return (i & 1) !== 0;\n\t}\n\tfunction isEven(i) {\n\t return (i & 1) === 0;\n\t}\n\tfunction findUnequal(arr, start, value) {\n\t for (var j = start, jj = arr.length; j < jj; ++j) {\n\t  if (arr[j] !== value) {\n\t   return j;\n\t  }\n\t }\n\t return j;\n\t}\n\tfunction setValues(arr, start, end, value) {\n\t for (var j = start; j < end; ++j) {\n\t  arr[j] = value;\n\t }\n\t}\n\tfunction reverseValues(arr, start, end) {\n\t for (var i = start, j = end - 1; i < j; ++i, --j) {\n\t  var temp = arr[i];\n\t  arr[i] = arr[j];\n\t  arr[j] = temp;\n\t }\n\t}\n\tfunction createBidiText(str, isLTR, vertical) {\n\t return {\n\t  str: str,\n\t  dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n\t };\n\t}\n\tvar chars = [];\n\tvar types = [];\n\tfunction bidi(str, startLevel, vertical) {\n\t var isLTR = true;\n\t var strLength = str.length;\n\t if (strLength === 0 || vertical) {\n\t  return createBidiText(str, isLTR, vertical);\n\t }\n\t chars.length = strLength;\n\t types.length = strLength;\n\t var numBidi = 0;\n\t var i, ii;\n\t for (i = 0; i < strLength; ++i) {\n\t  chars[i] = str.charAt(i);\n\t  var charCode = str.charCodeAt(i);\n\t  var charType = 'L';\n\t  if (charCode <= 0x00ff) {\n\t   charType = baseTypes[charCode];\n\t  } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n\t   charType = 'R';\n\t  } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n\t   charType = arabicTypes[charCode & 0xff];\n\t   if (!charType) {\n\t    warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n\t   }\n\t  } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n\t   charType = 'AL';\n\t  }\n\t  if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n\t   numBidi++;\n\t  }\n\t  types[i] = charType;\n\t }\n\t if (numBidi === 0) {\n\t  isLTR = true;\n\t  return createBidiText(str, isLTR);\n\t }\n\t if (startLevel === -1) {\n\t  if (numBidi / strLength < 0.3) {\n\t   isLTR = true;\n\t   startLevel = 0;\n\t  } else {\n\t   isLTR = false;\n\t   startLevel = 1;\n\t  }\n\t }\n\t var levels = [];\n\t for (i = 0; i < strLength; ++i) {\n\t  levels[i] = startLevel;\n\t }\n\t var e = isOdd(startLevel) ? 'R' : 'L';\n\t var sor = e;\n\t var eor = sor;\n\t var lastType = sor;\n\t for (i = 0; i < strLength; ++i) {\n\t  if (types[i] === 'NSM') {\n\t   types[i] = lastType;\n\t  } else {\n\t   lastType = types[i];\n\t  }\n\t }\n\t lastType = sor;\n\t var t;\n\t for (i = 0; i < strLength; ++i) {\n\t  t = types[i];\n\t  if (t === 'EN') {\n\t   types[i] = lastType === 'AL' ? 'AN' : 'EN';\n\t  } else if (t === 'R' || t === 'L' || t === 'AL') {\n\t   lastType = t;\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  t = types[i];\n\t  if (t === 'AL') {\n\t   types[i] = 'R';\n\t  }\n\t }\n\t for (i = 1; i < strLength - 1; ++i) {\n\t  if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n\t   types[i] = 'EN';\n\t  }\n\t  if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n\t   types[i] = types[i - 1];\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  if (types[i] === 'EN') {\n\t   var j;\n\t   for (j = i - 1; j >= 0; --j) {\n\t    if (types[j] !== 'ET') {\n\t     break;\n\t    }\n\t    types[j] = 'EN';\n\t   }\n\t   for (j = i + 1; j < strLength; ++j) {\n\t    if (types[j] !== 'ET') {\n\t     break;\n\t    }\n\t    types[j] = 'EN';\n\t   }\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  t = types[i];\n\t  if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n\t   types[i] = 'ON';\n\t  }\n\t }\n\t lastType = sor;\n\t for (i = 0; i < strLength; ++i) {\n\t  t = types[i];\n\t  if (t === 'EN') {\n\t   types[i] = lastType === 'L' ? 'L' : 'EN';\n\t  } else if (t === 'R' || t === 'L') {\n\t   lastType = t;\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  if (types[i] === 'ON') {\n\t   var end = findUnequal(types, i + 1, 'ON');\n\t   var before = sor;\n\t   if (i > 0) {\n\t    before = types[i - 1];\n\t   }\n\t   var after = eor;\n\t   if (end + 1 < strLength) {\n\t    after = types[end + 1];\n\t   }\n\t   if (before !== 'L') {\n\t    before = 'R';\n\t   }\n\t   if (after !== 'L') {\n\t    after = 'R';\n\t   }\n\t   if (before === after) {\n\t    setValues(types, i, end, before);\n\t   }\n\t   i = end - 1;\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  if (types[i] === 'ON') {\n\t   types[i] = e;\n\t  }\n\t }\n\t for (i = 0; i < strLength; ++i) {\n\t  t = types[i];\n\t  if (isEven(levels[i])) {\n\t   if (t === 'R') {\n\t    levels[i] += 1;\n\t   } else if (t === 'AN' || t === 'EN') {\n\t    levels[i] += 2;\n\t   }\n\t  } else {\n\t   if (t === 'L' || t === 'AN' || t === 'EN') {\n\t    levels[i] += 1;\n\t   }\n\t  }\n\t }\n\t var highestLevel = -1;\n\t var lowestOddLevel = 99;\n\t var level;\n\t for (i = 0, ii = levels.length; i < ii; ++i) {\n\t  level = levels[i];\n\t  if (highestLevel < level) {\n\t   highestLevel = level;\n\t  }\n\t  if (lowestOddLevel > level && isOdd(level)) {\n\t   lowestOddLevel = level;\n\t  }\n\t }\n\t for (level = highestLevel; level >= lowestOddLevel; --level) {\n\t  var start = -1;\n\t  for (i = 0, ii = levels.length; i < ii; ++i) {\n\t   if (levels[i] < level) {\n\t    if (start >= 0) {\n\t     reverseValues(chars, start, i);\n\t     start = -1;\n\t    }\n\t   } else if (start < 0) {\n\t    start = i;\n\t   }\n\t  }\n\t  if (start >= 0) {\n\t   reverseValues(chars, start, levels.length);\n\t  }\n\t }\n\t for (i = 0, ii = chars.length; i < ii; ++i) {\n\t  var ch = chars[i];\n\t  if (ch === '<' || ch === '>') {\n\t   chars[i] = '';\n\t  }\n\t }\n\t return createBidiText(chars.join(''), isLTR);\n\t}\n\texports.bidi = bidi;\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar ISOAdobeCharset = [\n\t '.notdef',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quoteright',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'quoteleft',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t 'exclamdown',\n\t 'cent',\n\t 'sterling',\n\t 'fraction',\n\t 'yen',\n\t 'florin',\n\t 'section',\n\t 'currency',\n\t 'quotesingle',\n\t 'quotedblleft',\n\t 'guillemotleft',\n\t 'guilsinglleft',\n\t 'guilsinglright',\n\t 'fi',\n\t 'fl',\n\t 'endash',\n\t 'dagger',\n\t 'daggerdbl',\n\t 'periodcentered',\n\t 'paragraph',\n\t 'bullet',\n\t 'quotesinglbase',\n\t 'quotedblbase',\n\t 'quotedblright',\n\t 'guillemotright',\n\t 'ellipsis',\n\t 'perthousand',\n\t 'questiondown',\n\t 'grave',\n\t 'acute',\n\t 'circumflex',\n\t 'tilde',\n\t 'macron',\n\t 'breve',\n\t 'dotaccent',\n\t 'dieresis',\n\t 'ring',\n\t 'cedilla',\n\t 'hungarumlaut',\n\t 'ogonek',\n\t 'caron',\n\t 'emdash',\n\t 'AE',\n\t 'ordfeminine',\n\t 'Lslash',\n\t 'Oslash',\n\t 'OE',\n\t 'ordmasculine',\n\t 'ae',\n\t 'dotlessi',\n\t 'lslash',\n\t 'oslash',\n\t 'oe',\n\t 'germandbls',\n\t 'onesuperior',\n\t 'logicalnot',\n\t 'mu',\n\t 'trademark',\n\t 'Eth',\n\t 'onehalf',\n\t 'plusminus',\n\t 'Thorn',\n\t 'onequarter',\n\t 'divide',\n\t 'brokenbar',\n\t 'degree',\n\t 'thorn',\n\t 'threequarters',\n\t 'twosuperior',\n\t 'registered',\n\t 'minus',\n\t 'eth',\n\t 'multiply',\n\t 'threesuperior',\n\t 'copyright',\n\t 'Aacute',\n\t 'Acircumflex',\n\t 'Adieresis',\n\t 'Agrave',\n\t 'Aring',\n\t 'Atilde',\n\t 'Ccedilla',\n\t 'Eacute',\n\t 'Ecircumflex',\n\t 'Edieresis',\n\t 'Egrave',\n\t 'Iacute',\n\t 'Icircumflex',\n\t 'Idieresis',\n\t 'Igrave',\n\t 'Ntilde',\n\t 'Oacute',\n\t 'Ocircumflex',\n\t 'Odieresis',\n\t 'Ograve',\n\t 'Otilde',\n\t 'Scaron',\n\t 'Uacute',\n\t 'Ucircumflex',\n\t 'Udieresis',\n\t 'Ugrave',\n\t 'Yacute',\n\t 'Ydieresis',\n\t 'Zcaron',\n\t 'aacute',\n\t 'acircumflex',\n\t 'adieresis',\n\t 'agrave',\n\t 'aring',\n\t 'atilde',\n\t 'ccedilla',\n\t 'eacute',\n\t 'ecircumflex',\n\t 'edieresis',\n\t 'egrave',\n\t 'iacute',\n\t 'icircumflex',\n\t 'idieresis',\n\t 'igrave',\n\t 'ntilde',\n\t 'oacute',\n\t 'ocircumflex',\n\t 'odieresis',\n\t 'ograve',\n\t 'otilde',\n\t 'scaron',\n\t 'uacute',\n\t 'ucircumflex',\n\t 'udieresis',\n\t 'ugrave',\n\t 'yacute',\n\t 'ydieresis',\n\t 'zcaron'\n\t];\n\tvar ExpertCharset = [\n\t '.notdef',\n\t 'space',\n\t 'exclamsmall',\n\t 'Hungarumlautsmall',\n\t 'dollaroldstyle',\n\t 'dollarsuperior',\n\t 'ampersandsmall',\n\t 'Acutesmall',\n\t 'parenleftsuperior',\n\t 'parenrightsuperior',\n\t 'twodotenleader',\n\t 'onedotenleader',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'fraction',\n\t 'zerooldstyle',\n\t 'oneoldstyle',\n\t 'twooldstyle',\n\t 'threeoldstyle',\n\t 'fouroldstyle',\n\t 'fiveoldstyle',\n\t 'sixoldstyle',\n\t 'sevenoldstyle',\n\t 'eightoldstyle',\n\t 'nineoldstyle',\n\t 'colon',\n\t 'semicolon',\n\t 'commasuperior',\n\t 'threequartersemdash',\n\t 'periodsuperior',\n\t 'questionsmall',\n\t 'asuperior',\n\t 'bsuperior',\n\t 'centsuperior',\n\t 'dsuperior',\n\t 'esuperior',\n\t 'isuperior',\n\t 'lsuperior',\n\t 'msuperior',\n\t 'nsuperior',\n\t 'osuperior',\n\t 'rsuperior',\n\t 'ssuperior',\n\t 'tsuperior',\n\t 'ff',\n\t 'fi',\n\t 'fl',\n\t 'ffi',\n\t 'ffl',\n\t 'parenleftinferior',\n\t 'parenrightinferior',\n\t 'Circumflexsmall',\n\t 'hyphensuperior',\n\t 'Gravesmall',\n\t 'Asmall',\n\t 'Bsmall',\n\t 'Csmall',\n\t 'Dsmall',\n\t 'Esmall',\n\t 'Fsmall',\n\t 'Gsmall',\n\t 'Hsmall',\n\t 'Ismall',\n\t 'Jsmall',\n\t 'Ksmall',\n\t 'Lsmall',\n\t 'Msmall',\n\t 'Nsmall',\n\t 'Osmall',\n\t 'Psmall',\n\t 'Qsmall',\n\t 'Rsmall',\n\t 'Ssmall',\n\t 'Tsmall',\n\t 'Usmall',\n\t 'Vsmall',\n\t 'Wsmall',\n\t 'Xsmall',\n\t 'Ysmall',\n\t 'Zsmall',\n\t 'colonmonetary',\n\t 'onefitted',\n\t 'rupiah',\n\t 'Tildesmall',\n\t 'exclamdownsmall',\n\t 'centoldstyle',\n\t 'Lslashsmall',\n\t 'Scaronsmall',\n\t 'Zcaronsmall',\n\t 'Dieresissmall',\n\t 'Brevesmall',\n\t 'Caronsmall',\n\t 'Dotaccentsmall',\n\t 'Macronsmall',\n\t 'figuredash',\n\t 'hypheninferior',\n\t 'Ogoneksmall',\n\t 'Ringsmall',\n\t 'Cedillasmall',\n\t 'onequarter',\n\t 'onehalf',\n\t 'threequarters',\n\t 'questiondownsmall',\n\t 'oneeighth',\n\t 'threeeighths',\n\t 'fiveeighths',\n\t 'seveneighths',\n\t 'onethird',\n\t 'twothirds',\n\t 'zerosuperior',\n\t 'onesuperior',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'foursuperior',\n\t 'fivesuperior',\n\t 'sixsuperior',\n\t 'sevensuperior',\n\t 'eightsuperior',\n\t 'ninesuperior',\n\t 'zeroinferior',\n\t 'oneinferior',\n\t 'twoinferior',\n\t 'threeinferior',\n\t 'fourinferior',\n\t 'fiveinferior',\n\t 'sixinferior',\n\t 'seveninferior',\n\t 'eightinferior',\n\t 'nineinferior',\n\t 'centinferior',\n\t 'dollarinferior',\n\t 'periodinferior',\n\t 'commainferior',\n\t 'Agravesmall',\n\t 'Aacutesmall',\n\t 'Acircumflexsmall',\n\t 'Atildesmall',\n\t 'Adieresissmall',\n\t 'Aringsmall',\n\t 'AEsmall',\n\t 'Ccedillasmall',\n\t 'Egravesmall',\n\t 'Eacutesmall',\n\t 'Ecircumflexsmall',\n\t 'Edieresissmall',\n\t 'Igravesmall',\n\t 'Iacutesmall',\n\t 'Icircumflexsmall',\n\t 'Idieresissmall',\n\t 'Ethsmall',\n\t 'Ntildesmall',\n\t 'Ogravesmall',\n\t 'Oacutesmall',\n\t 'Ocircumflexsmall',\n\t 'Otildesmall',\n\t 'Odieresissmall',\n\t 'OEsmall',\n\t 'Oslashsmall',\n\t 'Ugravesmall',\n\t 'Uacutesmall',\n\t 'Ucircumflexsmall',\n\t 'Udieresissmall',\n\t 'Yacutesmall',\n\t 'Thornsmall',\n\t 'Ydieresissmall'\n\t];\n\tvar ExpertSubsetCharset = [\n\t '.notdef',\n\t 'space',\n\t 'dollaroldstyle',\n\t 'dollarsuperior',\n\t 'parenleftsuperior',\n\t 'parenrightsuperior',\n\t 'twodotenleader',\n\t 'onedotenleader',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'fraction',\n\t 'zerooldstyle',\n\t 'oneoldstyle',\n\t 'twooldstyle',\n\t 'threeoldstyle',\n\t 'fouroldstyle',\n\t 'fiveoldstyle',\n\t 'sixoldstyle',\n\t 'sevenoldstyle',\n\t 'eightoldstyle',\n\t 'nineoldstyle',\n\t 'colon',\n\t 'semicolon',\n\t 'commasuperior',\n\t 'threequartersemdash',\n\t 'periodsuperior',\n\t 'asuperior',\n\t 'bsuperior',\n\t 'centsuperior',\n\t 'dsuperior',\n\t 'esuperior',\n\t 'isuperior',\n\t 'lsuperior',\n\t 'msuperior',\n\t 'nsuperior',\n\t 'osuperior',\n\t 'rsuperior',\n\t 'ssuperior',\n\t 'tsuperior',\n\t 'ff',\n\t 'fi',\n\t 'fl',\n\t 'ffi',\n\t 'ffl',\n\t 'parenleftinferior',\n\t 'parenrightinferior',\n\t 'hyphensuperior',\n\t 'colonmonetary',\n\t 'onefitted',\n\t 'rupiah',\n\t 'centoldstyle',\n\t 'figuredash',\n\t 'hypheninferior',\n\t 'onequarter',\n\t 'onehalf',\n\t 'threequarters',\n\t 'oneeighth',\n\t 'threeeighths',\n\t 'fiveeighths',\n\t 'seveneighths',\n\t 'onethird',\n\t 'twothirds',\n\t 'zerosuperior',\n\t 'onesuperior',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'foursuperior',\n\t 'fivesuperior',\n\t 'sixsuperior',\n\t 'sevensuperior',\n\t 'eightsuperior',\n\t 'ninesuperior',\n\t 'zeroinferior',\n\t 'oneinferior',\n\t 'twoinferior',\n\t 'threeinferior',\n\t 'fourinferior',\n\t 'fiveinferior',\n\t 'sixinferior',\n\t 'seveninferior',\n\t 'eightinferior',\n\t 'nineinferior',\n\t 'centinferior',\n\t 'dollarinferior',\n\t 'periodinferior',\n\t 'commainferior'\n\t];\n\texports.ISOAdobeCharset = ISOAdobeCharset;\n\texports.ExpertCharset = ExpertCharset;\n\texports.ExpertSubsetCharset = ExpertSubsetCharset;\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreParser = __w_pdfjs_require__(5);\n\tvar Util = sharedUtil.Util;\n\tvar assert = sharedUtil.assert;\n\tvar warn = sharedUtil.warn;\n\tvar error = sharedUtil.error;\n\tvar isInt = sharedUtil.isInt;\n\tvar isString = sharedUtil.isString;\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar CMapCompressionType = sharedUtil.CMapCompressionType;\n\tvar isEOF = corePrimitives.isEOF;\n\tvar isName = corePrimitives.isName;\n\tvar isCmd = corePrimitives.isCmd;\n\tvar isStream = corePrimitives.isStream;\n\tvar Stream = coreStream.Stream;\n\tvar Lexer = coreParser.Lexer;\n\tvar BUILT_IN_CMAPS = [\n\t 'Adobe-GB1-UCS2',\n\t 'Adobe-CNS1-UCS2',\n\t 'Adobe-Japan1-UCS2',\n\t 'Adobe-Korea1-UCS2',\n\t '78-EUC-H',\n\t '78-EUC-V',\n\t '78-H',\n\t '78-RKSJ-H',\n\t '78-RKSJ-V',\n\t '78-V',\n\t '78ms-RKSJ-H',\n\t '78ms-RKSJ-V',\n\t '83pv-RKSJ-H',\n\t '90ms-RKSJ-H',\n\t '90ms-RKSJ-V',\n\t '90msp-RKSJ-H',\n\t '90msp-RKSJ-V',\n\t '90pv-RKSJ-H',\n\t '90pv-RKSJ-V',\n\t 'Add-H',\n\t 'Add-RKSJ-H',\n\t 'Add-RKSJ-V',\n\t 'Add-V',\n\t 'Adobe-CNS1-0',\n\t 'Adobe-CNS1-1',\n\t 'Adobe-CNS1-2',\n\t 'Adobe-CNS1-3',\n\t 'Adobe-CNS1-4',\n\t 'Adobe-CNS1-5',\n\t 'Adobe-CNS1-6',\n\t 'Adobe-GB1-0',\n\t 'Adobe-GB1-1',\n\t 'Adobe-GB1-2',\n\t 'Adobe-GB1-3',\n\t 'Adobe-GB1-4',\n\t 'Adobe-GB1-5',\n\t 'Adobe-Japan1-0',\n\t 'Adobe-Japan1-1',\n\t 'Adobe-Japan1-2',\n\t 'Adobe-Japan1-3',\n\t 'Adobe-Japan1-4',\n\t 'Adobe-Japan1-5',\n\t 'Adobe-Japan1-6',\n\t 'Adobe-Korea1-0',\n\t 'Adobe-Korea1-1',\n\t 'Adobe-Korea1-2',\n\t 'B5-H',\n\t 'B5-V',\n\t 'B5pc-H',\n\t 'B5pc-V',\n\t 'CNS-EUC-H',\n\t 'CNS-EUC-V',\n\t 'CNS1-H',\n\t 'CNS1-V',\n\t 'CNS2-H',\n\t 'CNS2-V',\n\t 'ETHK-B5-H',\n\t 'ETHK-B5-V',\n\t 'ETen-B5-H',\n\t 'ETen-B5-V',\n\t 'ETenms-B5-H',\n\t 'ETenms-B5-V',\n\t 'EUC-H',\n\t 'EUC-V',\n\t 'Ext-H',\n\t 'Ext-RKSJ-H',\n\t 'Ext-RKSJ-V',\n\t 'Ext-V',\n\t 'GB-EUC-H',\n\t 'GB-EUC-V',\n\t 'GB-H',\n\t 'GB-V',\n\t 'GBK-EUC-H',\n\t 'GBK-EUC-V',\n\t 'GBK2K-H',\n\t 'GBK2K-V',\n\t 'GBKp-EUC-H',\n\t 'GBKp-EUC-V',\n\t 'GBT-EUC-H',\n\t 'GBT-EUC-V',\n\t 'GBT-H',\n\t 'GBT-V',\n\t 'GBTpc-EUC-H',\n\t 'GBTpc-EUC-V',\n\t 'GBpc-EUC-H',\n\t 'GBpc-EUC-V',\n\t 'H',\n\t 'HKdla-B5-H',\n\t 'HKdla-B5-V',\n\t 'HKdlb-B5-H',\n\t 'HKdlb-B5-V',\n\t 'HKgccs-B5-H',\n\t 'HKgccs-B5-V',\n\t 'HKm314-B5-H',\n\t 'HKm314-B5-V',\n\t 'HKm471-B5-H',\n\t 'HKm471-B5-V',\n\t 'HKscs-B5-H',\n\t 'HKscs-B5-V',\n\t 'Hankaku',\n\t 'Hiragana',\n\t 'KSC-EUC-H',\n\t 'KSC-EUC-V',\n\t 'KSC-H',\n\t 'KSC-Johab-H',\n\t 'KSC-Johab-V',\n\t 'KSC-V',\n\t 'KSCms-UHC-H',\n\t 'KSCms-UHC-HW-H',\n\t 'KSCms-UHC-HW-V',\n\t 'KSCms-UHC-V',\n\t 'KSCpc-EUC-H',\n\t 'KSCpc-EUC-V',\n\t 'Katakana',\n\t 'NWP-H',\n\t 'NWP-V',\n\t 'RKSJ-H',\n\t 'RKSJ-V',\n\t 'Roman',\n\t 'UniCNS-UCS2-H',\n\t 'UniCNS-UCS2-V',\n\t 'UniCNS-UTF16-H',\n\t 'UniCNS-UTF16-V',\n\t 'UniCNS-UTF32-H',\n\t 'UniCNS-UTF32-V',\n\t 'UniCNS-UTF8-H',\n\t 'UniCNS-UTF8-V',\n\t 'UniGB-UCS2-H',\n\t 'UniGB-UCS2-V',\n\t 'UniGB-UTF16-H',\n\t 'UniGB-UTF16-V',\n\t 'UniGB-UTF32-H',\n\t 'UniGB-UTF32-V',\n\t 'UniGB-UTF8-H',\n\t 'UniGB-UTF8-V',\n\t 'UniJIS-UCS2-H',\n\t 'UniJIS-UCS2-HW-H',\n\t 'UniJIS-UCS2-HW-V',\n\t 'UniJIS-UCS2-V',\n\t 'UniJIS-UTF16-H',\n\t 'UniJIS-UTF16-V',\n\t 'UniJIS-UTF32-H',\n\t 'UniJIS-UTF32-V',\n\t 'UniJIS-UTF8-H',\n\t 'UniJIS-UTF8-V',\n\t 'UniJIS2004-UTF16-H',\n\t 'UniJIS2004-UTF16-V',\n\t 'UniJIS2004-UTF32-H',\n\t 'UniJIS2004-UTF32-V',\n\t 'UniJIS2004-UTF8-H',\n\t 'UniJIS2004-UTF8-V',\n\t 'UniJISPro-UCS2-HW-V',\n\t 'UniJISPro-UCS2-V',\n\t 'UniJISPro-UTF8-V',\n\t 'UniJISX0213-UTF32-H',\n\t 'UniJISX0213-UTF32-V',\n\t 'UniJISX02132004-UTF32-H',\n\t 'UniJISX02132004-UTF32-V',\n\t 'UniKS-UCS2-H',\n\t 'UniKS-UCS2-V',\n\t 'UniKS-UTF16-H',\n\t 'UniKS-UTF16-V',\n\t 'UniKS-UTF32-H',\n\t 'UniKS-UTF32-V',\n\t 'UniKS-UTF8-H',\n\t 'UniKS-UTF8-V',\n\t 'V',\n\t 'WP-Symbol'\n\t];\n\tvar CMap = function CMapClosure() {\n\t function CMap(builtInCMap) {\n\t  this.codespaceRanges = [\n\t   [],\n\t   [],\n\t   [],\n\t   []\n\t  ];\n\t  this.numCodespaceRanges = 0;\n\t  this._map = [];\n\t  this.name = '';\n\t  this.vertical = false;\n\t  this.useCMap = null;\n\t  this.builtInCMap = builtInCMap;\n\t }\n\t CMap.prototype = {\n\t  addCodespaceRange: function (n, low, high) {\n\t   this.codespaceRanges[n - 1].push(low, high);\n\t   this.numCodespaceRanges++;\n\t  },\n\t  mapCidRange: function (low, high, dstLow) {\n\t   while (low <= high) {\n\t    this._map[low++] = dstLow++;\n\t   }\n\t  },\n\t  mapBfRange: function (low, high, dstLow) {\n\t   var lastByte = dstLow.length - 1;\n\t   while (low <= high) {\n\t    this._map[low++] = dstLow;\n\t    dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n\t   }\n\t  },\n\t  mapBfRangeToArray: function (low, high, array) {\n\t   var i = 0, ii = array.length;\n\t   while (low <= high && i < ii) {\n\t    this._map[low] = array[i++];\n\t    ++low;\n\t   }\n\t  },\n\t  mapOne: function (src, dst) {\n\t   this._map[src] = dst;\n\t  },\n\t  lookup: function (code) {\n\t   return this._map[code];\n\t  },\n\t  contains: function (code) {\n\t   return this._map[code] !== undefined;\n\t  },\n\t  forEach: function (callback) {\n\t   var map = this._map;\n\t   var length = map.length;\n\t   var i;\n\t   if (length <= 0x10000) {\n\t    for (i = 0; i < length; i++) {\n\t     if (map[i] !== undefined) {\n\t      callback(i, map[i]);\n\t     }\n\t    }\n\t   } else {\n\t    for (i in this._map) {\n\t     callback(i, map[i]);\n\t    }\n\t   }\n\t  },\n\t  charCodeOf: function (value) {\n\t   return this._map.indexOf(value);\n\t  },\n\t  getMap: function () {\n\t   return this._map;\n\t  },\n\t  readCharCode: function (str, offset, out) {\n\t   var c = 0;\n\t   var codespaceRanges = this.codespaceRanges;\n\t   var codespaceRangesLen = this.codespaceRanges.length;\n\t   for (var n = 0; n < codespaceRangesLen; n++) {\n\t    c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n\t    var codespaceRange = codespaceRanges[n];\n\t    for (var k = 0, kk = codespaceRange.length; k < kk;) {\n\t     var low = codespaceRange[k++];\n\t     var high = codespaceRange[k++];\n\t     if (c >= low && c <= high) {\n\t      out.charcode = c;\n\t      out.length = n + 1;\n\t      return;\n\t     }\n\t    }\n\t   }\n\t   out.charcode = 0;\n\t   out.length = 1;\n\t  },\n\t  get length() {\n\t   return this._map.length;\n\t  },\n\t  get isIdentityCMap() {\n\t   if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n\t    return false;\n\t   }\n\t   if (this._map.length !== 0x10000) {\n\t    return false;\n\t   }\n\t   for (var i = 0; i < 0x10000; i++) {\n\t    if (this._map[i] !== i) {\n\t     return false;\n\t    }\n\t   }\n\t   return true;\n\t  }\n\t };\n\t return CMap;\n\t}();\n\tvar IdentityCMap = function IdentityCMapClosure() {\n\t function IdentityCMap(vertical, n) {\n\t  CMap.call(this);\n\t  this.vertical = vertical;\n\t  this.addCodespaceRange(n, 0, 0xffff);\n\t }\n\t Util.inherit(IdentityCMap, CMap, {});\n\t IdentityCMap.prototype = {\n\t  addCodespaceRange: CMap.prototype.addCodespaceRange,\n\t  mapCidRange: function (low, high, dstLow) {\n\t   error('should not call mapCidRange');\n\t  },\n\t  mapBfRange: function (low, high, dstLow) {\n\t   error('should not call mapBfRange');\n\t  },\n\t  mapBfRangeToArray: function (low, high, array) {\n\t   error('should not call mapBfRangeToArray');\n\t  },\n\t  mapOne: function (src, dst) {\n\t   error('should not call mapCidOne');\n\t  },\n\t  lookup: function (code) {\n\t   return isInt(code) && code <= 0xffff ? code : undefined;\n\t  },\n\t  contains: function (code) {\n\t   return isInt(code) && code <= 0xffff;\n\t  },\n\t  forEach: function (callback) {\n\t   for (var i = 0; i <= 0xffff; i++) {\n\t    callback(i, i);\n\t   }\n\t  },\n\t  charCodeOf: function (value) {\n\t   return isInt(value) && value <= 0xffff ? value : -1;\n\t  },\n\t  getMap: function () {\n\t   var map = new Array(0x10000);\n\t   for (var i = 0; i <= 0xffff; i++) {\n\t    map[i] = i;\n\t   }\n\t   return map;\n\t  },\n\t  readCharCode: CMap.prototype.readCharCode,\n\t  get length() {\n\t   return 0x10000;\n\t  },\n\t  get isIdentityCMap() {\n\t   error('should not access .isIdentityCMap');\n\t  }\n\t };\n\t return IdentityCMap;\n\t}();\n\tvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n\t function hexToInt(a, size) {\n\t  var n = 0;\n\t  for (var i = 0; i <= size; i++) {\n\t   n = n << 8 | a[i];\n\t  }\n\t  return n >>> 0;\n\t }\n\t function hexToStr(a, size) {\n\t  if (size === 1) {\n\t   return String.fromCharCode(a[0], a[1]);\n\t  }\n\t  if (size === 3) {\n\t   return String.fromCharCode(a[0], a[1], a[2], a[3]);\n\t  }\n\t  return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n\t }\n\t function addHex(a, b, size) {\n\t  var c = 0;\n\t  for (var i = size; i >= 0; i--) {\n\t   c += a[i] + b[i];\n\t   a[i] = c & 255;\n\t   c >>= 8;\n\t  }\n\t }\n\t function incHex(a, size) {\n\t  var c = 1;\n\t  for (var i = size; i >= 0 && c > 0; i--) {\n\t   c += a[i];\n\t   a[i] = c & 255;\n\t   c >>= 8;\n\t  }\n\t }\n\t var MAX_NUM_SIZE = 16;\n\t var MAX_ENCODED_NUM_SIZE = 19;\n\t function BinaryCMapStream(data) {\n\t  this.buffer = data;\n\t  this.pos = 0;\n\t  this.end = data.length;\n\t  this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n\t }\n\t BinaryCMapStream.prototype = {\n\t  readByte: function () {\n\t   if (this.pos >= this.end) {\n\t    return -1;\n\t   }\n\t   return this.buffer[this.pos++];\n\t  },\n\t  readNumber: function () {\n\t   var n = 0;\n\t   var last;\n\t   do {\n\t    var b = this.readByte();\n\t    if (b < 0) {\n\t     error('unexpected EOF in bcmap');\n\t    }\n\t    last = !(b & 0x80);\n\t    n = n << 7 | b & 0x7F;\n\t   } while (!last);\n\t   return n;\n\t  },\n\t  readSigned: function () {\n\t   var n = this.readNumber();\n\t   return n & 1 ? ~(n >>> 1) : n >>> 1;\n\t  },\n\t  readHex: function (num, size) {\n\t   num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n\t   this.pos += size + 1;\n\t  },\n\t  readHexNumber: function (num, size) {\n\t   var last;\n\t   var stack = this.tmpBuf, sp = 0;\n\t   do {\n\t    var b = this.readByte();\n\t    if (b < 0) {\n\t     error('unexpected EOF in bcmap');\n\t    }\n\t    last = !(b & 0x80);\n\t    stack[sp++] = b & 0x7F;\n\t   } while (!last);\n\t   var i = size, buffer = 0, bufferSize = 0;\n\t   while (i >= 0) {\n\t    while (bufferSize < 8 && stack.length > 0) {\n\t     buffer = stack[--sp] << bufferSize | buffer;\n\t     bufferSize += 7;\n\t    }\n\t    num[i] = buffer & 255;\n\t    i--;\n\t    buffer >>= 8;\n\t    bufferSize -= 8;\n\t   }\n\t  },\n\t  readHexSigned: function (num, size) {\n\t   this.readHexNumber(num, size);\n\t   var sign = num[size] & 1 ? 255 : 0;\n\t   var c = 0;\n\t   for (var i = 0; i <= size; i++) {\n\t    c = (c & 1) << 8 | num[i];\n\t    num[i] = c >> 1 ^ sign;\n\t   }\n\t  },\n\t  readString: function () {\n\t   var len = this.readNumber();\n\t   var s = '';\n\t   for (var i = 0; i < len; i++) {\n\t    s += String.fromCharCode(this.readNumber());\n\t   }\n\t   return s;\n\t  }\n\t };\n\t function processBinaryCMap(data, cMap, extend) {\n\t  return new Promise(function (resolve, reject) {\n\t   var stream = new BinaryCMapStream(data);\n\t   var header = stream.readByte();\n\t   cMap.vertical = !!(header & 1);\n\t   var useCMap = null;\n\t   var start = new Uint8Array(MAX_NUM_SIZE);\n\t   var end = new Uint8Array(MAX_NUM_SIZE);\n\t   var char = new Uint8Array(MAX_NUM_SIZE);\n\t   var charCode = new Uint8Array(MAX_NUM_SIZE);\n\t   var tmp = new Uint8Array(MAX_NUM_SIZE);\n\t   var code;\n\t   var b;\n\t   while ((b = stream.readByte()) >= 0) {\n\t    var type = b >> 5;\n\t    if (type === 7) {\n\t     switch (b & 0x1F) {\n\t     case 0:\n\t      stream.readString();\n\t      break;\n\t     case 1:\n\t      useCMap = stream.readString();\n\t      break;\n\t     }\n\t     continue;\n\t    }\n\t    var sequence = !!(b & 0x10);\n\t    var dataSize = b & 15;\n\t    assert(dataSize + 1 <= MAX_NUM_SIZE);\n\t    var ucs2DataSize = 1;\n\t    var subitemsCount = stream.readNumber();\n\t    var i;\n\t    switch (type) {\n\t    case 0:\n\t     stream.readHex(start, dataSize);\n\t     stream.readHexNumber(end, dataSize);\n\t     addHex(end, start, dataSize);\n\t     cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(end, dataSize);\n\t      stream.readHexNumber(start, dataSize);\n\t      addHex(start, end, dataSize);\n\t      stream.readHexNumber(end, dataSize);\n\t      addHex(end, start, dataSize);\n\t      cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t     }\n\t     break;\n\t    case 1:\n\t     stream.readHex(start, dataSize);\n\t     stream.readHexNumber(end, dataSize);\n\t     addHex(end, start, dataSize);\n\t     code = stream.readNumber();\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(end, dataSize);\n\t      stream.readHexNumber(start, dataSize);\n\t      addHex(start, end, dataSize);\n\t      stream.readHexNumber(end, dataSize);\n\t      addHex(end, start, dataSize);\n\t      code = stream.readNumber();\n\t     }\n\t     break;\n\t    case 2:\n\t     stream.readHex(char, dataSize);\n\t     code = stream.readNumber();\n\t     cMap.mapOne(hexToInt(char, dataSize), code);\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(char, dataSize);\n\t      if (!sequence) {\n\t       stream.readHexNumber(tmp, dataSize);\n\t       addHex(char, tmp, dataSize);\n\t      }\n\t      code = stream.readSigned() + (code + 1);\n\t      cMap.mapOne(hexToInt(char, dataSize), code);\n\t     }\n\t     break;\n\t    case 3:\n\t     stream.readHex(start, dataSize);\n\t     stream.readHexNumber(end, dataSize);\n\t     addHex(end, start, dataSize);\n\t     code = stream.readNumber();\n\t     cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(end, dataSize);\n\t      if (!sequence) {\n\t       stream.readHexNumber(start, dataSize);\n\t       addHex(start, end, dataSize);\n\t      } else {\n\t       start.set(end);\n\t      }\n\t      stream.readHexNumber(end, dataSize);\n\t      addHex(end, start, dataSize);\n\t      code = stream.readNumber();\n\t      cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t     }\n\t     break;\n\t    case 4:\n\t     stream.readHex(char, ucs2DataSize);\n\t     stream.readHex(charCode, dataSize);\n\t     cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(char, ucs2DataSize);\n\t      if (!sequence) {\n\t       stream.readHexNumber(tmp, ucs2DataSize);\n\t       addHex(char, tmp, ucs2DataSize);\n\t      }\n\t      incHex(charCode, dataSize);\n\t      stream.readHexSigned(tmp, dataSize);\n\t      addHex(charCode, tmp, dataSize);\n\t      cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t     }\n\t     break;\n\t    case 5:\n\t     stream.readHex(start, ucs2DataSize);\n\t     stream.readHexNumber(end, ucs2DataSize);\n\t     addHex(end, start, ucs2DataSize);\n\t     stream.readHex(charCode, dataSize);\n\t     cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t     for (i = 1; i < subitemsCount; i++) {\n\t      incHex(end, ucs2DataSize);\n\t      if (!sequence) {\n\t       stream.readHexNumber(start, ucs2DataSize);\n\t       addHex(start, end, ucs2DataSize);\n\t      } else {\n\t       start.set(end);\n\t      }\n\t      stream.readHexNumber(end, ucs2DataSize);\n\t      addHex(end, start, ucs2DataSize);\n\t      stream.readHex(charCode, dataSize);\n\t      cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t     }\n\t     break;\n\t    default:\n\t     reject(new Error('processBinaryCMap: Unknown type: ' + type));\n\t     return;\n\t    }\n\t   }\n\t   if (useCMap) {\n\t    resolve(extend(useCMap));\n\t    return;\n\t   }\n\t   resolve(cMap);\n\t  });\n\t }\n\t function BinaryCMapReader() {\n\t }\n\t BinaryCMapReader.prototype = { process: processBinaryCMap };\n\t return BinaryCMapReader;\n\t}();\n\tvar CMapFactory = function CMapFactoryClosure() {\n\t function strToInt(str) {\n\t  var a = 0;\n\t  for (var i = 0; i < str.length; i++) {\n\t   a = a << 8 | str.charCodeAt(i);\n\t  }\n\t  return a >>> 0;\n\t }\n\t function expectString(obj) {\n\t  if (!isString(obj)) {\n\t   error('Malformed CMap: expected string.');\n\t  }\n\t }\n\t function expectInt(obj) {\n\t  if (!isInt(obj)) {\n\t   error('Malformed CMap: expected int.');\n\t  }\n\t }\n\t function parseBfChar(cMap, lexer) {\n\t  while (true) {\n\t   var obj = lexer.getObj();\n\t   if (isEOF(obj)) {\n\t    break;\n\t   }\n\t   if (isCmd(obj, 'endbfchar')) {\n\t    return;\n\t   }\n\t   expectString(obj);\n\t   var src = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   expectString(obj);\n\t   var dst = obj;\n\t   cMap.mapOne(src, dst);\n\t  }\n\t }\n\t function parseBfRange(cMap, lexer) {\n\t  while (true) {\n\t   var obj = lexer.getObj();\n\t   if (isEOF(obj)) {\n\t    break;\n\t   }\n\t   if (isCmd(obj, 'endbfrange')) {\n\t    return;\n\t   }\n\t   expectString(obj);\n\t   var low = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   expectString(obj);\n\t   var high = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   if (isInt(obj) || isString(obj)) {\n\t    var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n\t    cMap.mapBfRange(low, high, dstLow);\n\t   } else if (isCmd(obj, '[')) {\n\t    obj = lexer.getObj();\n\t    var array = [];\n\t    while (!isCmd(obj, ']') && !isEOF(obj)) {\n\t     array.push(obj);\n\t     obj = lexer.getObj();\n\t    }\n\t    cMap.mapBfRangeToArray(low, high, array);\n\t   } else {\n\t    break;\n\t   }\n\t  }\n\t  error('Invalid bf range.');\n\t }\n\t function parseCidChar(cMap, lexer) {\n\t  while (true) {\n\t   var obj = lexer.getObj();\n\t   if (isEOF(obj)) {\n\t    break;\n\t   }\n\t   if (isCmd(obj, 'endcidchar')) {\n\t    return;\n\t   }\n\t   expectString(obj);\n\t   var src = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   expectInt(obj);\n\t   var dst = obj;\n\t   cMap.mapOne(src, dst);\n\t  }\n\t }\n\t function parseCidRange(cMap, lexer) {\n\t  while (true) {\n\t   var obj = lexer.getObj();\n\t   if (isEOF(obj)) {\n\t    break;\n\t   }\n\t   if (isCmd(obj, 'endcidrange')) {\n\t    return;\n\t   }\n\t   expectString(obj);\n\t   var low = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   expectString(obj);\n\t   var high = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   expectInt(obj);\n\t   var dstLow = obj;\n\t   cMap.mapCidRange(low, high, dstLow);\n\t  }\n\t }\n\t function parseCodespaceRange(cMap, lexer) {\n\t  while (true) {\n\t   var obj = lexer.getObj();\n\t   if (isEOF(obj)) {\n\t    break;\n\t   }\n\t   if (isCmd(obj, 'endcodespacerange')) {\n\t    return;\n\t   }\n\t   if (!isString(obj)) {\n\t    break;\n\t   }\n\t   var low = strToInt(obj);\n\t   obj = lexer.getObj();\n\t   if (!isString(obj)) {\n\t    break;\n\t   }\n\t   var high = strToInt(obj);\n\t   cMap.addCodespaceRange(obj.length, low, high);\n\t  }\n\t  error('Invalid codespace range.');\n\t }\n\t function parseWMode(cMap, lexer) {\n\t  var obj = lexer.getObj();\n\t  if (isInt(obj)) {\n\t   cMap.vertical = !!obj;\n\t  }\n\t }\n\t function parseCMapName(cMap, lexer) {\n\t  var obj = lexer.getObj();\n\t  if (isName(obj) && isString(obj.name)) {\n\t   cMap.name = obj.name;\n\t  }\n\t }\n\t function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n\t  var previous;\n\t  var embededUseCMap;\n\t  objLoop:\n\t   while (true) {\n\t    try {\n\t     var obj = lexer.getObj();\n\t     if (isEOF(obj)) {\n\t      break;\n\t     } else if (isName(obj)) {\n\t      if (obj.name === 'WMode') {\n\t       parseWMode(cMap, lexer);\n\t      } else if (obj.name === 'CMapName') {\n\t       parseCMapName(cMap, lexer);\n\t      }\n\t      previous = obj;\n\t     } else if (isCmd(obj)) {\n\t      switch (obj.cmd) {\n\t      case 'endcmap':\n\t       break objLoop;\n\t      case 'usecmap':\n\t       if (isName(previous)) {\n\t        embededUseCMap = previous.name;\n\t       }\n\t       break;\n\t      case 'begincodespacerange':\n\t       parseCodespaceRange(cMap, lexer);\n\t       break;\n\t      case 'beginbfchar':\n\t       parseBfChar(cMap, lexer);\n\t       break;\n\t      case 'begincidchar':\n\t       parseCidChar(cMap, lexer);\n\t       break;\n\t      case 'beginbfrange':\n\t       parseBfRange(cMap, lexer);\n\t       break;\n\t      case 'begincidrange':\n\t       parseCidRange(cMap, lexer);\n\t       break;\n\t      }\n\t     }\n\t    } catch (ex) {\n\t     if (ex instanceof MissingDataException) {\n\t      throw ex;\n\t     }\n\t     warn('Invalid cMap data: ' + ex);\n\t     continue;\n\t    }\n\t   }\n\t  if (!useCMap && embededUseCMap) {\n\t   useCMap = embededUseCMap;\n\t  }\n\t  if (useCMap) {\n\t   return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t  }\n\t  return Promise.resolve(cMap);\n\t }\n\t function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n\t  return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n\t   cMap.useCMap = newCMap;\n\t   if (cMap.numCodespaceRanges === 0) {\n\t    var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\t    for (var i = 0; i < useCodespaceRanges.length; i++) {\n\t     cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n\t    }\n\t    cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n\t   }\n\t   cMap.useCMap.forEach(function (key, value) {\n\t    if (!cMap.contains(key)) {\n\t     cMap.mapOne(key, cMap.useCMap.lookup(key));\n\t    }\n\t   });\n\t   return cMap;\n\t  });\n\t }\n\t function createBuiltInCMap(name, fetchBuiltInCMap) {\n\t  if (name === 'Identity-H') {\n\t   return Promise.resolve(new IdentityCMap(false, 2));\n\t  } else if (name === 'Identity-V') {\n\t   return Promise.resolve(new IdentityCMap(true, 2));\n\t  }\n\t  if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n\t   return Promise.reject(new Error('Unknown cMap name: ' + name));\n\t  }\n\t  assert(fetchBuiltInCMap, 'Built-in CMap parameters are not provided.');\n\t  return fetchBuiltInCMap(name).then(function (data) {\n\t   var cMapData = data.cMapData, compressionType = data.compressionType;\n\t   var cMap = new CMap(true);\n\t   if (compressionType === CMapCompressionType.BINARY) {\n\t    return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n\t     return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t    });\n\t   }\n\t   assert(compressionType === CMapCompressionType.NONE, 'TODO: Only BINARY/NONE CMap compression is currently supported.');\n\t   var lexer = new Lexer(new Stream(cMapData));\n\t   return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n\t  });\n\t }\n\t return {\n\t  create: function (params) {\n\t   var encoding = params.encoding;\n\t   var fetchBuiltInCMap = params.fetchBuiltInCMap;\n\t   var useCMap = params.useCMap;\n\t   if (isName(encoding)) {\n\t    return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n\t   } else if (isStream(encoding)) {\n\t    var cMap = new CMap();\n\t    var lexer = new Lexer(encoding);\n\t    return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n\t     if (parsedCMap.isIdentityCMap) {\n\t      return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n\t     }\n\t     return parsedCMap;\n\t    });\n\t   }\n\t   return Promise.reject(new Error('Encoding required.'));\n\t  }\n\t };\n\t}();\n\texports.CMap = CMap;\n\texports.CMapFactory = CMapFactory;\n\texports.IdentityCMap = IdentityCMap;\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreObj = __w_pdfjs_require__(15);\n\tvar coreParser = __w_pdfjs_require__(5);\n\tvar coreCrypto = __w_pdfjs_require__(12);\n\tvar coreEvaluator = __w_pdfjs_require__(13);\n\tvar coreAnnotation = __w_pdfjs_require__(20);\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar Util = sharedUtil.Util;\n\tvar assert = sharedUtil.assert;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isArrayBuffer = sharedUtil.isArrayBuffer;\n\tvar isNum = sharedUtil.isNum;\n\tvar isString = sharedUtil.isString;\n\tvar shadow = sharedUtil.shadow;\n\tvar stringToBytes = sharedUtil.stringToBytes;\n\tvar stringToPDFString = sharedUtil.stringToPDFString;\n\tvar warn = sharedUtil.warn;\n\tvar isSpace = sharedUtil.isSpace;\n\tvar Dict = corePrimitives.Dict;\n\tvar isDict = corePrimitives.isDict;\n\tvar isName = corePrimitives.isName;\n\tvar isStream = corePrimitives.isStream;\n\tvar NullStream = coreStream.NullStream;\n\tvar Stream = coreStream.Stream;\n\tvar StreamsSequenceStream = coreStream.StreamsSequenceStream;\n\tvar Catalog = coreObj.Catalog;\n\tvar ObjectLoader = coreObj.ObjectLoader;\n\tvar XRef = coreObj.XRef;\n\tvar Linearization = coreParser.Linearization;\n\tvar calculateMD5 = coreCrypto.calculateMD5;\n\tvar OperatorList = coreEvaluator.OperatorList;\n\tvar PartialEvaluator = coreEvaluator.PartialEvaluator;\n\tvar Annotation = coreAnnotation.Annotation;\n\tvar AnnotationFactory = coreAnnotation.AnnotationFactory;\n\tvar Page = function PageClosure() {\n\t var DEFAULT_USER_UNIT = 1.0;\n\t var LETTER_SIZE_MEDIABOX = [\n\t  0,\n\t  0,\n\t  612,\n\t  792\n\t ];\n\t function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache, builtInCMapCache) {\n\t  this.pdfManager = pdfManager;\n\t  this.pageIndex = pageIndex;\n\t  this.pageDict = pageDict;\n\t  this.xref = xref;\n\t  this.ref = ref;\n\t  this.fontCache = fontCache;\n\t  this.builtInCMapCache = builtInCMapCache;\n\t  this.evaluatorOptions = pdfManager.evaluatorOptions;\n\t  this.resourcesPromise = null;\n\t  var uniquePrefix = 'p' + this.pageIndex + '_';\n\t  var idCounters = { obj: 0 };\n\t  this.idFactory = {\n\t   createObjId: function () {\n\t    return uniquePrefix + ++idCounters.obj;\n\t   }\n\t  };\n\t }\n\t Page.prototype = {\n\t  getPageProp: function Page_getPageProp(key) {\n\t   return this.pageDict.get(key);\n\t  },\n\t  getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n\t   var dict = this.pageDict, valueArray = null, loopCount = 0;\n\t   var MAX_LOOP_COUNT = 100;\n\t   getArray = getArray || false;\n\t   while (dict) {\n\t    var value = getArray ? dict.getArray(key) : dict.get(key);\n\t    if (value) {\n\t     if (!valueArray) {\n\t      valueArray = [];\n\t     }\n\t     valueArray.push(value);\n\t    }\n\t    if (++loopCount > MAX_LOOP_COUNT) {\n\t     warn('Page_getInheritedPageProp: maximum loop count exceeded.');\n\t     break;\n\t    }\n\t    dict = dict.get('Parent');\n\t   }\n\t   if (!valueArray) {\n\t    return Dict.empty;\n\t   }\n\t   if (valueArray.length === 1 || !isDict(valueArray[0]) || loopCount > MAX_LOOP_COUNT) {\n\t    return valueArray[0];\n\t   }\n\t   return Dict.merge(this.xref, valueArray);\n\t  },\n\t  get content() {\n\t   return this.getPageProp('Contents');\n\t  },\n\t  get resources() {\n\t   return shadow(this, 'resources', this.getInheritedPageProp('Resources'));\n\t  },\n\t  get mediaBox() {\n\t   var mediaBox = this.getInheritedPageProp('MediaBox', true);\n\t   if (!isArray(mediaBox) || mediaBox.length !== 4) {\n\t    return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n\t   }\n\t   return shadow(this, 'mediaBox', mediaBox);\n\t  },\n\t  get cropBox() {\n\t   var cropBox = this.getInheritedPageProp('CropBox', true);\n\t   if (!isArray(cropBox) || cropBox.length !== 4) {\n\t    return shadow(this, 'cropBox', this.mediaBox);\n\t   }\n\t   return shadow(this, 'cropBox', cropBox);\n\t  },\n\t  get userUnit() {\n\t   var obj = this.getPageProp('UserUnit');\n\t   if (!isNum(obj) || obj <= 0) {\n\t    obj = DEFAULT_USER_UNIT;\n\t   }\n\t   return shadow(this, 'userUnit', obj);\n\t  },\n\t  get view() {\n\t   var mediaBox = this.mediaBox, cropBox = this.cropBox;\n\t   if (mediaBox === cropBox) {\n\t    return shadow(this, 'view', mediaBox);\n\t   }\n\t   var intersection = Util.intersect(cropBox, mediaBox);\n\t   return shadow(this, 'view', intersection || mediaBox);\n\t  },\n\t  get rotate() {\n\t   var rotate = this.getInheritedPageProp('Rotate') || 0;\n\t   if (rotate % 90 !== 0) {\n\t    rotate = 0;\n\t   } else if (rotate >= 360) {\n\t    rotate = rotate % 360;\n\t   } else if (rotate < 0) {\n\t    rotate = (rotate % 360 + 360) % 360;\n\t   }\n\t   return shadow(this, 'rotate', rotate);\n\t  },\n\t  getContentStream: function Page_getContentStream() {\n\t   var content = this.content;\n\t   var stream;\n\t   if (isArray(content)) {\n\t    var xref = this.xref;\n\t    var i, n = content.length;\n\t    var streams = [];\n\t    for (i = 0; i < n; ++i) {\n\t     streams.push(xref.fetchIfRef(content[i]));\n\t    }\n\t    stream = new StreamsSequenceStream(streams);\n\t   } else if (isStream(content)) {\n\t    stream = content;\n\t   } else {\n\t    stream = new NullStream();\n\t   }\n\t   return stream;\n\t  },\n\t  loadResources: function Page_loadResources(keys) {\n\t   if (!this.resourcesPromise) {\n\t    this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n\t   }\n\t   return this.resourcesPromise.then(function resourceSuccess() {\n\t    var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n\t    return objectLoader.load();\n\t   }.bind(this));\n\t  },\n\t  getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n\t   var self = this;\n\t   var pdfManager = this.pdfManager;\n\t   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n\t   var resourcesPromise = this.loadResources([\n\t    'ExtGState',\n\t    'ColorSpace',\n\t    'Pattern',\n\t    'Shading',\n\t    'XObject',\n\t    'Font'\n\t   ]);\n\t   var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.builtInCMapCache, this.evaluatorOptions);\n\t   var dataPromises = Promise.all([\n\t    contentStreamPromise,\n\t    resourcesPromise\n\t   ]);\n\t   var pageListPromise = dataPromises.then(function (data) {\n\t    var contentStream = data[0];\n\t    var opList = new OperatorList(intent, handler, self.pageIndex);\n\t    handler.send('StartRenderPage', {\n\t     transparency: partialEvaluator.hasBlendModes(self.resources),\n\t     pageIndex: self.pageIndex,\n\t     intent: intent\n\t    });\n\t    return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n\t     return opList;\n\t    });\n\t   });\n\t   var annotationsPromise = pdfManager.ensure(this, 'annotations');\n\t   return Promise.all([\n\t    pageListPromise,\n\t    annotationsPromise\n\t   ]).then(function (datas) {\n\t    var pageOpList = datas[0];\n\t    var annotations = datas[1];\n\t    if (annotations.length === 0) {\n\t     pageOpList.flush(true);\n\t     return pageOpList;\n\t    }\n\t    var annotationsReadyPromise = Annotation.appendToOperatorList(annotations, pageOpList, partialEvaluator, task, intent, renderInteractiveForms);\n\t    return annotationsReadyPromise.then(function () {\n\t     pageOpList.flush(true);\n\t     return pageOpList;\n\t    });\n\t   });\n\t  },\n\t  extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n\t   var handler = {\n\t    on: function nullHandlerOn() {\n\t    },\n\t    send: function nullHandlerSend() {\n\t    }\n\t   };\n\t   var self = this;\n\t   var pdfManager = this.pdfManager;\n\t   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n\t   var resourcesPromise = this.loadResources([\n\t    'ExtGState',\n\t    'XObject',\n\t    'Font'\n\t   ]);\n\t   var dataPromises = Promise.all([\n\t    contentStreamPromise,\n\t    resourcesPromise\n\t   ]);\n\t   return dataPromises.then(function (data) {\n\t    var contentStream = data[0];\n\t    var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.builtInCMapCache, self.evaluatorOptions);\n\t    return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n\t   });\n\t  },\n\t  getAnnotationsData: function Page_getAnnotationsData(intent) {\n\t   var annotations = this.annotations;\n\t   var annotationsData = [];\n\t   for (var i = 0, n = annotations.length; i < n; ++i) {\n\t    if (intent) {\n\t     if (!(intent === 'display' && annotations[i].viewable) && !(intent === 'print' && annotations[i].printable)) {\n\t      continue;\n\t     }\n\t    }\n\t    annotationsData.push(annotations[i].data);\n\t   }\n\t   return annotationsData;\n\t  },\n\t  get annotations() {\n\t   var annotations = [];\n\t   var annotationRefs = this.getInheritedPageProp('Annots') || [];\n\t   var annotationFactory = new AnnotationFactory();\n\t   for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n\t    var annotationRef = annotationRefs[i];\n\t    var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n\t    if (annotation) {\n\t     annotations.push(annotation);\n\t    }\n\t   }\n\t   return shadow(this, 'annotations', annotations);\n\t  }\n\t };\n\t return Page;\n\t}();\n\tvar PDFDocument = function PDFDocumentClosure() {\n\t var FINGERPRINT_FIRST_BYTES = 1024;\n\t var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\t function PDFDocument(pdfManager, arg) {\n\t  var stream;\n\t  if (isStream(arg)) {\n\t   stream = arg;\n\t  } else if (isArrayBuffer(arg)) {\n\t   stream = new Stream(arg);\n\t  } else {\n\t   error('PDFDocument: Unknown argument type');\n\t  }\n\t  assert(stream.length > 0, 'stream must have data');\n\t  this.pdfManager = pdfManager;\n\t  this.stream = stream;\n\t  this.xref = new XRef(stream, pdfManager);\n\t }\n\t function find(stream, needle, limit, backwards) {\n\t  var pos = stream.pos;\n\t  var end = stream.end;\n\t  var strBuf = [];\n\t  if (pos + limit > end) {\n\t   limit = end - pos;\n\t  }\n\t  for (var n = 0; n < limit; ++n) {\n\t   strBuf.push(String.fromCharCode(stream.getByte()));\n\t  }\n\t  var str = strBuf.join('');\n\t  stream.pos = pos;\n\t  var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n\t  if (index === -1) {\n\t   return false;\n\t  }\n\t  stream.pos += index;\n\t  return true;\n\t }\n\t var DocumentInfoValidators = {\n\t  get entries() {\n\t   return shadow(this, 'entries', {\n\t    Title: isString,\n\t    Author: isString,\n\t    Subject: isString,\n\t    Keywords: isString,\n\t    Creator: isString,\n\t    Producer: isString,\n\t    CreationDate: isString,\n\t    ModDate: isString,\n\t    Trapped: isName\n\t   });\n\t  }\n\t };\n\t PDFDocument.prototype = {\n\t  parse: function PDFDocument_parse(recoveryMode) {\n\t   this.setup(recoveryMode);\n\t   var version = this.catalog.catDict.get('Version');\n\t   if (isName(version)) {\n\t    this.pdfFormatVersion = version.name;\n\t   }\n\t   try {\n\t    this.acroForm = this.catalog.catDict.get('AcroForm');\n\t    if (this.acroForm) {\n\t     this.xfa = this.acroForm.get('XFA');\n\t     var fields = this.acroForm.get('Fields');\n\t     if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n\t      this.acroForm = null;\n\t     }\n\t    }\n\t   } catch (ex) {\n\t    info('Something wrong with AcroForm entry');\n\t    this.acroForm = null;\n\t   }\n\t  },\n\t  get linearization() {\n\t   var linearization = null;\n\t   if (this.stream.length) {\n\t    try {\n\t     linearization = Linearization.create(this.stream);\n\t    } catch (err) {\n\t     if (err instanceof MissingDataException) {\n\t      throw err;\n\t     }\n\t     info(err);\n\t    }\n\t   }\n\t   return shadow(this, 'linearization', linearization);\n\t  },\n\t  get startXRef() {\n\t   var stream = this.stream;\n\t   var startXRef = 0;\n\t   var linearization = this.linearization;\n\t   if (linearization) {\n\t    stream.reset();\n\t    if (find(stream, 'endobj', 1024)) {\n\t     startXRef = stream.pos + 6;\n\t    }\n\t   } else {\n\t    var step = 1024;\n\t    var found = false, pos = stream.end;\n\t    while (!found && pos > 0) {\n\t     pos -= step - 'startxref'.length;\n\t     if (pos < 0) {\n\t      pos = 0;\n\t     }\n\t     stream.pos = pos;\n\t     found = find(stream, 'startxref', step, true);\n\t    }\n\t    if (found) {\n\t     stream.skip(9);\n\t     var ch;\n\t     do {\n\t      ch = stream.getByte();\n\t     } while (isSpace(ch));\n\t     var str = '';\n\t     while (ch >= 0x20 && ch <= 0x39) {\n\t      str += String.fromCharCode(ch);\n\t      ch = stream.getByte();\n\t     }\n\t     startXRef = parseInt(str, 10);\n\t     if (isNaN(startXRef)) {\n\t      startXRef = 0;\n\t     }\n\t    }\n\t   }\n\t   return shadow(this, 'startXRef', startXRef);\n\t  },\n\t  get mainXRefEntriesOffset() {\n\t   var mainXRefEntriesOffset = 0;\n\t   var linearization = this.linearization;\n\t   if (linearization) {\n\t    mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n\t   }\n\t   return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n\t  },\n\t  checkHeader: function PDFDocument_checkHeader() {\n\t   var stream = this.stream;\n\t   stream.reset();\n\t   if (find(stream, '%PDF-', 1024)) {\n\t    stream.moveStart();\n\t    var MAX_VERSION_LENGTH = 12;\n\t    var version = '', ch;\n\t    while ((ch = stream.getByte()) > 0x20) {\n\t     if (version.length >= MAX_VERSION_LENGTH) {\n\t      break;\n\t     }\n\t     version += String.fromCharCode(ch);\n\t    }\n\t    if (!this.pdfFormatVersion) {\n\t     this.pdfFormatVersion = version.substring(5);\n\t    }\n\t    return;\n\t   }\n\t  },\n\t  parseStartXRef: function PDFDocument_parseStartXRef() {\n\t   var startXRef = this.startXRef;\n\t   this.xref.setStartXRef(startXRef);\n\t  },\n\t  setup: function PDFDocument_setup(recoveryMode) {\n\t   this.xref.parse(recoveryMode);\n\t   var self = this;\n\t   var pageFactory = {\n\t    createPage: function (pageIndex, dict, ref, fontCache, builtInCMapCache) {\n\t     return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache, builtInCMapCache);\n\t    }\n\t   };\n\t   this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n\t  },\n\t  get numPages() {\n\t   var linearization = this.linearization;\n\t   var num = linearization ? linearization.numPages : this.catalog.numPages;\n\t   return shadow(this, 'numPages', num);\n\t  },\n\t  get documentInfo() {\n\t   var docInfo = {\n\t    PDFFormatVersion: this.pdfFormatVersion,\n\t    IsAcroFormPresent: !!this.acroForm,\n\t    IsXFAPresent: !!this.xfa\n\t   };\n\t   var infoDict;\n\t   try {\n\t    infoDict = this.xref.trailer.get('Info');\n\t   } catch (err) {\n\t    info('The document information dictionary is invalid.');\n\t   }\n\t   if (infoDict) {\n\t    var validEntries = DocumentInfoValidators.entries;\n\t    for (var key in validEntries) {\n\t     if (infoDict.has(key)) {\n\t      var value = infoDict.get(key);\n\t      if (validEntries[key](value)) {\n\t       docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n\t      } else {\n\t       info('Bad value in document info for \"' + key + '\"');\n\t      }\n\t     }\n\t    }\n\t   }\n\t   return shadow(this, 'documentInfo', docInfo);\n\t  },\n\t  get fingerprint() {\n\t   var xref = this.xref, hash, fileID = '';\n\t   var idArray = xref.trailer.get('ID');\n\t   if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n\t    hash = stringToBytes(idArray[0]);\n\t   } else {\n\t    if (this.stream.ensureRange) {\n\t     this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n\t    }\n\t    hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n\t   }\n\t   for (var i = 0, n = hash.length; i < n; i++) {\n\t    var hex = hash[i].toString(16);\n\t    fileID += hex.length === 1 ? '0' + hex : hex;\n\t   }\n\t   return shadow(this, 'fingerprint', fileID);\n\t  },\n\t  getPage: function PDFDocument_getPage(pageIndex) {\n\t   return this.catalog.getPage(pageIndex);\n\t  },\n\t  cleanup: function PDFDocument_cleanup() {\n\t   return this.catalog.cleanup();\n\t  }\n\t };\n\t return PDFDocument;\n\t}();\n\texports.Page = Page;\n\texports.PDFDocument = PDFDocument;\n\t\n\t/***/ }),\n\t/* 25 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreGlyphList = __w_pdfjs_require__(7);\n\tvar coreEncodings = __w_pdfjs_require__(4);\n\tvar coreCFFParser = __w_pdfjs_require__(10);\n\tvar Util = sharedUtil.Util;\n\tvar bytesToString = sharedUtil.bytesToString;\n\tvar error = sharedUtil.error;\n\tvar Stream = coreStream.Stream;\n\tvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\tvar StandardEncoding = coreEncodings.StandardEncoding;\n\tvar CFFParser = coreCFFParser.CFFParser;\n\tvar FontRendererFactory = function FontRendererFactoryClosure() {\n\t function getLong(data, offset) {\n\t  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t }\n\t function getUshort(data, offset) {\n\t  return data[offset] << 8 | data[offset + 1];\n\t }\n\t function parseCmap(data, start, end) {\n\t  var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n\t  var format = getUshort(data, start + offset);\n\t  var ranges, p, i;\n\t  if (format === 4) {\n\t   getUshort(data, start + offset + 2);\n\t   var segCount = getUshort(data, start + offset + 6) >> 1;\n\t   p = start + offset + 14;\n\t   ranges = [];\n\t   for (i = 0; i < segCount; i++, p += 2) {\n\t    ranges[i] = { end: getUshort(data, p) };\n\t   }\n\t   p += 2;\n\t   for (i = 0; i < segCount; i++, p += 2) {\n\t    ranges[i].start = getUshort(data, p);\n\t   }\n\t   for (i = 0; i < segCount; i++, p += 2) {\n\t    ranges[i].idDelta = getUshort(data, p);\n\t   }\n\t   for (i = 0; i < segCount; i++, p += 2) {\n\t    var idOffset = getUshort(data, p);\n\t    if (idOffset === 0) {\n\t     continue;\n\t    }\n\t    ranges[i].ids = [];\n\t    for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n\t     ranges[i].ids[j] = getUshort(data, p + idOffset);\n\t     idOffset += 2;\n\t    }\n\t   }\n\t   return ranges;\n\t  } else if (format === 12) {\n\t   getLong(data, start + offset + 4);\n\t   var groups = getLong(data, start + offset + 12);\n\t   p = start + offset + 16;\n\t   ranges = [];\n\t   for (i = 0; i < groups; i++) {\n\t    ranges.push({\n\t     start: getLong(data, p),\n\t     end: getLong(data, p + 4),\n\t     idDelta: getLong(data, p + 8) - getLong(data, p)\n\t    });\n\t    p += 12;\n\t   }\n\t   return ranges;\n\t  }\n\t  error('not supported cmap: ' + format);\n\t }\n\t function parseCff(data, start, end, seacAnalysisEnabled) {\n\t  var properties = {};\n\t  var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n\t  var cff = parser.parse();\n\t  return {\n\t   glyphs: cff.charStrings.objects,\n\t   subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n\t   gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n\t  };\n\t }\n\t function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n\t  var itemSize, itemDecode;\n\t  if (isGlyphLocationsLong) {\n\t   itemSize = 4;\n\t   itemDecode = function fontItemDecodeLong(data, offset) {\n\t    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t   };\n\t  } else {\n\t   itemSize = 2;\n\t   itemDecode = function fontItemDecode(data, offset) {\n\t    return data[offset] << 9 | data[offset + 1] << 1;\n\t   };\n\t  }\n\t  var glyphs = [];\n\t  var startOffset = itemDecode(loca, 0);\n\t  for (var j = itemSize; j < loca.length; j += itemSize) {\n\t   var endOffset = itemDecode(loca, j);\n\t   glyphs.push(glyf.subarray(startOffset, endOffset));\n\t   startOffset = endOffset;\n\t  }\n\t  return glyphs;\n\t }\n\t function lookupCmap(ranges, unicode) {\n\t  var code = unicode.charCodeAt(0), gid = 0;\n\t  var l = 0, r = ranges.length - 1;\n\t  while (l < r) {\n\t   var c = l + r + 1 >> 1;\n\t   if (code < ranges[c].start) {\n\t    r = c - 1;\n\t   } else {\n\t    l = c;\n\t   }\n\t  }\n\t  if (ranges[l].start <= code && code <= ranges[l].end) {\n\t   gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n\t  }\n\t  return {\n\t   charCode: code,\n\t   glyphId: gid\n\t  };\n\t }\n\t function compileGlyf(code, cmds, font) {\n\t  function moveTo(x, y) {\n\t   cmds.push({\n\t    cmd: 'moveTo',\n\t    args: [\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  function lineTo(x, y) {\n\t   cmds.push({\n\t    cmd: 'lineTo',\n\t    args: [\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  function quadraticCurveTo(xa, ya, x, y) {\n\t   cmds.push({\n\t    cmd: 'quadraticCurveTo',\n\t    args: [\n\t     xa,\n\t     ya,\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  var i = 0;\n\t  var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t  var flags;\n\t  var x = 0, y = 0;\n\t  i += 10;\n\t  if (numberOfContours < 0) {\n\t   do {\n\t    flags = code[i] << 8 | code[i + 1];\n\t    var glyphIndex = code[i + 2] << 8 | code[i + 3];\n\t    i += 4;\n\t    var arg1, arg2;\n\t    if (flags & 0x01) {\n\t     arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t     arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n\t     i += 4;\n\t    } else {\n\t     arg1 = code[i++];\n\t     arg2 = code[i++];\n\t    }\n\t    if (flags & 0x02) {\n\t     x = arg1;\n\t     y = arg2;\n\t    } else {\n\t     x = 0;\n\t     y = 0;\n\t    }\n\t    var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n\t    if (flags & 0x08) {\n\t     scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t     i += 2;\n\t    } else if (flags & 0x40) {\n\t     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t     scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t     i += 4;\n\t    } else if (flags & 0x80) {\n\t     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t     scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t     scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n\t     scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n\t     i += 8;\n\t    }\n\t    var subglyph = font.glyphs[glyphIndex];\n\t    if (subglyph) {\n\t     cmds.push({ cmd: 'save' });\n\t     cmds.push({\n\t      cmd: 'transform',\n\t      args: [\n\t       scaleX,\n\t       scale01,\n\t       scale10,\n\t       scaleY,\n\t       x,\n\t       y\n\t      ]\n\t     });\n\t     compileGlyf(subglyph, cmds, font);\n\t     cmds.push({ cmd: 'restore' });\n\t    }\n\t   } while (flags & 0x20);\n\t  } else {\n\t   var endPtsOfContours = [];\n\t   var j, jj;\n\t   for (j = 0; j < numberOfContours; j++) {\n\t    endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n\t    i += 2;\n\t   }\n\t   var instructionLength = code[i] << 8 | code[i + 1];\n\t   i += 2 + instructionLength;\n\t   var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\t   var points = [];\n\t   while (points.length < numberOfPoints) {\n\t    flags = code[i++];\n\t    var repeat = 1;\n\t    if (flags & 0x08) {\n\t     repeat += code[i++];\n\t    }\n\t    while (repeat-- > 0) {\n\t     points.push({ flags: flags });\n\t    }\n\t   }\n\t   for (j = 0; j < numberOfPoints; j++) {\n\t    switch (points[j].flags & 0x12) {\n\t    case 0x00:\n\t     x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t     i += 2;\n\t     break;\n\t    case 0x02:\n\t     x -= code[i++];\n\t     break;\n\t    case 0x12:\n\t     x += code[i++];\n\t     break;\n\t    }\n\t    points[j].x = x;\n\t   }\n\t   for (j = 0; j < numberOfPoints; j++) {\n\t    switch (points[j].flags & 0x24) {\n\t    case 0x00:\n\t     y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t     i += 2;\n\t     break;\n\t    case 0x04:\n\t     y -= code[i++];\n\t     break;\n\t    case 0x24:\n\t     y += code[i++];\n\t     break;\n\t    }\n\t    points[j].y = y;\n\t   }\n\t   var startPoint = 0;\n\t   for (i = 0; i < numberOfContours; i++) {\n\t    var endPoint = endPtsOfContours[i];\n\t    var contour = points.slice(startPoint, endPoint + 1);\n\t    if (contour[0].flags & 1) {\n\t     contour.push(contour[0]);\n\t    } else if (contour[contour.length - 1].flags & 1) {\n\t     contour.unshift(contour[contour.length - 1]);\n\t    } else {\n\t     var p = {\n\t      flags: 1,\n\t      x: (contour[0].x + contour[contour.length - 1].x) / 2,\n\t      y: (contour[0].y + contour[contour.length - 1].y) / 2\n\t     };\n\t     contour.unshift(p);\n\t     contour.push(p);\n\t    }\n\t    moveTo(contour[0].x, contour[0].y);\n\t    for (j = 1, jj = contour.length; j < jj; j++) {\n\t     if (contour[j].flags & 1) {\n\t      lineTo(contour[j].x, contour[j].y);\n\t     } else if (contour[j + 1].flags & 1) {\n\t      quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n\t      j++;\n\t     } else {\n\t      quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n\t     }\n\t    }\n\t    startPoint = endPoint + 1;\n\t   }\n\t  }\n\t }\n\t function compileCharString(code, cmds, font) {\n\t  var stack = [];\n\t  var x = 0, y = 0;\n\t  var stems = 0;\n\t  function moveTo(x, y) {\n\t   cmds.push({\n\t    cmd: 'moveTo',\n\t    args: [\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  function lineTo(x, y) {\n\t   cmds.push({\n\t    cmd: 'lineTo',\n\t    args: [\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t   cmds.push({\n\t    cmd: 'bezierCurveTo',\n\t    args: [\n\t     x1,\n\t     y1,\n\t     x2,\n\t     y2,\n\t     x,\n\t     y\n\t    ]\n\t   });\n\t  }\n\t  function parse(code) {\n\t   var i = 0;\n\t   while (i < code.length) {\n\t    var stackClean = false;\n\t    var v = code[i++];\n\t    var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\t    switch (v) {\n\t    case 1:\n\t     stems += stack.length >> 1;\n\t     stackClean = true;\n\t     break;\n\t    case 3:\n\t     stems += stack.length >> 1;\n\t     stackClean = true;\n\t     break;\n\t    case 4:\n\t     y += stack.pop();\n\t     moveTo(x, y);\n\t     stackClean = true;\n\t     break;\n\t    case 5:\n\t     while (stack.length > 0) {\n\t      x += stack.shift();\n\t      y += stack.shift();\n\t      lineTo(x, y);\n\t     }\n\t     break;\n\t    case 6:\n\t     while (stack.length > 0) {\n\t      x += stack.shift();\n\t      lineTo(x, y);\n\t      if (stack.length === 0) {\n\t       break;\n\t      }\n\t      y += stack.shift();\n\t      lineTo(x, y);\n\t     }\n\t     break;\n\t    case 7:\n\t     while (stack.length > 0) {\n\t      y += stack.shift();\n\t      lineTo(x, y);\n\t      if (stack.length === 0) {\n\t       break;\n\t      }\n\t      x += stack.shift();\n\t      lineTo(x, y);\n\t     }\n\t     break;\n\t    case 8:\n\t     while (stack.length > 0) {\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     break;\n\t    case 10:\n\t     n = stack.pop() + font.subrsBias;\n\t     subrCode = font.subrs[n];\n\t     if (subrCode) {\n\t      parse(subrCode);\n\t     }\n\t     break;\n\t    case 11:\n\t     return;\n\t    case 12:\n\t     v = code[i++];\n\t     switch (v) {\n\t     case 34:\n\t      xa = x + stack.shift();\n\t      xb = xa + stack.shift();\n\t      y1 = y + stack.shift();\n\t      x = xb + stack.shift();\n\t      bezierCurveTo(xa, y, xb, y1, x, y1);\n\t      xa = x + stack.shift();\n\t      xb = xa + stack.shift();\n\t      x = xb + stack.shift();\n\t      bezierCurveTo(xa, y1, xb, y, x, y);\n\t      break;\n\t     case 35:\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      stack.pop();\n\t      break;\n\t     case 36:\n\t      xa = x + stack.shift();\n\t      y1 = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      y2 = y1 + stack.shift();\n\t      x = xb + stack.shift();\n\t      bezierCurveTo(xa, y1, xb, y2, x, y2);\n\t      xa = x + stack.shift();\n\t      xb = xa + stack.shift();\n\t      y3 = y2 + stack.shift();\n\t      x = xb + stack.shift();\n\t      bezierCurveTo(xa, y2, xb, y3, x, y);\n\t      break;\n\t     case 37:\n\t      var x0 = x, y0 = y;\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb;\n\t      y = yb;\n\t      if (Math.abs(x - x0) > Math.abs(y - y0)) {\n\t       x += stack.shift();\n\t      } else {\n\t       y += stack.shift();\n\t      }\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      break;\n\t     default:\n\t      error('unknown operator: 12 ' + v);\n\t     }\n\t     break;\n\t    case 14:\n\t     if (stack.length >= 4) {\n\t      var achar = stack.pop();\n\t      var bchar = stack.pop();\n\t      y = stack.pop();\n\t      x = stack.pop();\n\t      cmds.push({ cmd: 'save' });\n\t      cmds.push({\n\t       cmd: 'translate',\n\t       args: [\n\t        x,\n\t        y\n\t       ]\n\t      });\n\t      var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n\t      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t      cmds.push({ cmd: 'restore' });\n\t      cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n\t      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t     }\n\t     return;\n\t    case 18:\n\t     stems += stack.length >> 1;\n\t     stackClean = true;\n\t     break;\n\t    case 19:\n\t     stems += stack.length >> 1;\n\t     i += stems + 7 >> 3;\n\t     stackClean = true;\n\t     break;\n\t    case 20:\n\t     stems += stack.length >> 1;\n\t     i += stems + 7 >> 3;\n\t     stackClean = true;\n\t     break;\n\t    case 21:\n\t     y += stack.pop();\n\t     x += stack.pop();\n\t     moveTo(x, y);\n\t     stackClean = true;\n\t     break;\n\t    case 22:\n\t     x += stack.pop();\n\t     moveTo(x, y);\n\t     stackClean = true;\n\t     break;\n\t    case 23:\n\t     stems += stack.length >> 1;\n\t     stackClean = true;\n\t     break;\n\t    case 24:\n\t     while (stack.length > 2) {\n\t      xa = x + stack.shift();\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     x += stack.shift();\n\t     y += stack.shift();\n\t     lineTo(x, y);\n\t     break;\n\t    case 25:\n\t     while (stack.length > 6) {\n\t      x += stack.shift();\n\t      y += stack.shift();\n\t      lineTo(x, y);\n\t     }\n\t     xa = x + stack.shift();\n\t     ya = y + stack.shift();\n\t     xb = xa + stack.shift();\n\t     yb = ya + stack.shift();\n\t     x = xb + stack.shift();\n\t     y = yb + stack.shift();\n\t     bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     break;\n\t    case 26:\n\t     if (stack.length % 2) {\n\t      x += stack.shift();\n\t     }\n\t     while (stack.length > 0) {\n\t      xa = x;\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb;\n\t      y = yb + stack.shift();\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     break;\n\t    case 27:\n\t     if (stack.length % 2) {\n\t      y += stack.shift();\n\t     }\n\t     while (stack.length > 0) {\n\t      xa = x + stack.shift();\n\t      ya = y;\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb;\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     break;\n\t    case 28:\n\t     stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n\t     i += 2;\n\t     break;\n\t    case 29:\n\t     n = stack.pop() + font.gsubrsBias;\n\t     subrCode = font.gsubrs[n];\n\t     if (subrCode) {\n\t      parse(subrCode);\n\t     }\n\t     break;\n\t    case 30:\n\t     while (stack.length > 0) {\n\t      xa = x;\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      if (stack.length === 0) {\n\t       break;\n\t      }\n\t      xa = x + stack.shift();\n\t      ya = y;\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      y = yb + stack.shift();\n\t      x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     break;\n\t    case 31:\n\t     while (stack.length > 0) {\n\t      xa = x + stack.shift();\n\t      ya = y;\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      y = yb + stack.shift();\n\t      x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t      if (stack.length === 0) {\n\t       break;\n\t      }\n\t      xa = x;\n\t      ya = y + stack.shift();\n\t      xb = xa + stack.shift();\n\t      yb = ya + stack.shift();\n\t      x = xb + stack.shift();\n\t      y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t      bezierCurveTo(xa, ya, xb, yb, x, y);\n\t     }\n\t     break;\n\t    default:\n\t     if (v < 32) {\n\t      error('unknown operator: ' + v);\n\t     }\n\t     if (v < 247) {\n\t      stack.push(v - 139);\n\t     } else if (v < 251) {\n\t      stack.push((v - 247) * 256 + code[i++] + 108);\n\t     } else if (v < 255) {\n\t      stack.push(-(v - 251) * 256 - code[i++] - 108);\n\t     } else {\n\t      stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n\t      i += 4;\n\t     }\n\t     break;\n\t    }\n\t    if (stackClean) {\n\t     stack.length = 0;\n\t    }\n\t   }\n\t  }\n\t  parse(code);\n\t }\n\t var noop = '';\n\t function CompiledFont(fontMatrix) {\n\t  this.compiledGlyphs = Object.create(null);\n\t  this.compiledCharCodeToGlyphId = Object.create(null);\n\t  this.fontMatrix = fontMatrix;\n\t }\n\t CompiledFont.prototype = {\n\t  getPathJs: function (unicode) {\n\t   var cmap = lookupCmap(this.cmap, unicode);\n\t   var fn = this.compiledGlyphs[cmap.glyphId];\n\t   if (!fn) {\n\t    fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n\t    this.compiledGlyphs[cmap.glyphId] = fn;\n\t   }\n\t   if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n\t    this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n\t   }\n\t   return fn;\n\t  },\n\t  compileGlyph: function (code) {\n\t   if (!code || code.length === 0 || code[0] === 14) {\n\t    return noop;\n\t   }\n\t   var cmds = [];\n\t   cmds.push({ cmd: 'save' });\n\t   cmds.push({\n\t    cmd: 'transform',\n\t    args: this.fontMatrix.slice()\n\t   });\n\t   cmds.push({\n\t    cmd: 'scale',\n\t    args: [\n\t     'size',\n\t     '-size'\n\t    ]\n\t   });\n\t   this.compileGlyphImpl(code, cmds);\n\t   cmds.push({ cmd: 'restore' });\n\t   return cmds;\n\t  },\n\t  compileGlyphImpl: function () {\n\t   error('Children classes should implement this.');\n\t  },\n\t  hasBuiltPath: function (unicode) {\n\t   var cmap = lookupCmap(this.cmap, unicode);\n\t   return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n\t  }\n\t };\n\t function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n\t  fontMatrix = fontMatrix || [\n\t   0.000488,\n\t   0,\n\t   0,\n\t   0.000488,\n\t   0,\n\t   0\n\t  ];\n\t  CompiledFont.call(this, fontMatrix);\n\t  this.glyphs = glyphs;\n\t  this.cmap = cmap;\n\t }\n\t Util.inherit(TrueTypeCompiled, CompiledFont, {\n\t  compileGlyphImpl: function (code, cmds) {\n\t   compileGlyf(code, cmds, this);\n\t  }\n\t });\n\t function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n\t  fontMatrix = fontMatrix || [\n\t   0.001,\n\t   0,\n\t   0,\n\t   0.001,\n\t   0,\n\t   0\n\t  ];\n\t  CompiledFont.call(this, fontMatrix);\n\t  this.glyphs = cffInfo.glyphs;\n\t  this.gsubrs = cffInfo.gsubrs || [];\n\t  this.subrs = cffInfo.subrs || [];\n\t  this.cmap = cmap;\n\t  this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n\t  this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n\t  this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n\t }\n\t Util.inherit(Type2Compiled, CompiledFont, {\n\t  compileGlyphImpl: function (code, cmds) {\n\t   compileCharString(code, cmds, this);\n\t  }\n\t });\n\t return {\n\t  create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n\t   var data = new Uint8Array(font.data);\n\t   var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n\t   var numTables = getUshort(data, 4);\n\t   for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n\t    var tag = bytesToString(data.subarray(p, p + 4));\n\t    var offset = getLong(data, p + 8);\n\t    var length = getLong(data, p + 12);\n\t    switch (tag) {\n\t    case 'cmap':\n\t     cmap = parseCmap(data, offset, offset + length);\n\t     break;\n\t    case 'glyf':\n\t     glyf = data.subarray(offset, offset + length);\n\t     break;\n\t    case 'loca':\n\t     loca = data.subarray(offset, offset + length);\n\t     break;\n\t    case 'head':\n\t     unitsPerEm = getUshort(data, offset + 18);\n\t     indexToLocFormat = getUshort(data, offset + 50);\n\t     break;\n\t    case 'CFF ':\n\t     cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n\t     break;\n\t    }\n\t   }\n\t   if (glyf) {\n\t    var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n\t     1 / unitsPerEm,\n\t     0,\n\t     0,\n\t     1 / unitsPerEm,\n\t     0,\n\t     0\n\t    ];\n\t    return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n\t   }\n\t   return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n\t  }\n\t };\n\t}();\n\texports.FontRendererFactory = FontRendererFactory;\n\t\n\t/***/ }),\n\t/* 26 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreGlyphList = __w_pdfjs_require__(7);\n\tvar coreFontRenderer = __w_pdfjs_require__(25);\n\tvar coreEncodings = __w_pdfjs_require__(4);\n\tvar coreStandardFonts = __w_pdfjs_require__(16);\n\tvar coreUnicode = __w_pdfjs_require__(17);\n\tvar coreType1Parser = __w_pdfjs_require__(35);\n\tvar coreCFFParser = __w_pdfjs_require__(10);\n\tvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\n\tvar FontType = sharedUtil.FontType;\n\tvar assert = sharedUtil.assert;\n\tvar bytesToString = sharedUtil.bytesToString;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar isInt = sharedUtil.isInt;\n\tvar isNum = sharedUtil.isNum;\n\tvar readUint32 = sharedUtil.readUint32;\n\tvar shadow = sharedUtil.shadow;\n\tvar string32 = sharedUtil.string32;\n\tvar warn = sharedUtil.warn;\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar isSpace = sharedUtil.isSpace;\n\tvar Stream = coreStream.Stream;\n\tvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\n\tvar getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\n\tvar FontRendererFactory = coreFontRenderer.FontRendererFactory;\n\tvar StandardEncoding = coreEncodings.StandardEncoding;\n\tvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\n\tvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\n\tvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\n\tvar getEncoding = coreEncodings.getEncoding;\n\tvar getStdFontMap = coreStandardFonts.getStdFontMap;\n\tvar getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\n\tvar getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\n\tvar getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\n\tvar getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\n\tvar mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\n\tvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\n\tvar Type1Parser = coreType1Parser.Type1Parser;\n\tvar CFFStandardStrings = coreCFFParser.CFFStandardStrings;\n\tvar CFFParser = coreCFFParser.CFFParser;\n\tvar CFFCompiler = coreCFFParser.CFFCompiler;\n\tvar CFF = coreCFFParser.CFF;\n\tvar CFFHeader = coreCFFParser.CFFHeader;\n\tvar CFFTopDict = coreCFFParser.CFFTopDict;\n\tvar CFFPrivateDict = coreCFFParser.CFFPrivateDict;\n\tvar CFFStrings = coreCFFParser.CFFStrings;\n\tvar CFFIndex = coreCFFParser.CFFIndex;\n\tvar CFFCharset = coreCFFParser.CFFCharset;\n\tvar PRIVATE_USE_OFFSET_START = 0xE000;\n\tvar PRIVATE_USE_OFFSET_END = 0xF8FF;\n\tvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\tvar PDF_GLYPH_SPACE_UNITS = 1000;\n\tvar SEAC_ANALYSIS_ENABLED = false;\n\tvar FontFlags = {\n\t FixedPitch: 1,\n\t Serif: 2,\n\t Symbolic: 4,\n\t Script: 8,\n\t Nonsymbolic: 32,\n\t Italic: 64,\n\t AllCap: 65536,\n\t SmallCap: 131072,\n\t ForceBold: 262144\n\t};\n\tvar MacStandardGlyphOrdering = [\n\t '.notdef',\n\t '.null',\n\t 'nonmarkingreturn',\n\t 'space',\n\t 'exclam',\n\t 'quotedbl',\n\t 'numbersign',\n\t 'dollar',\n\t 'percent',\n\t 'ampersand',\n\t 'quotesingle',\n\t 'parenleft',\n\t 'parenright',\n\t 'asterisk',\n\t 'plus',\n\t 'comma',\n\t 'hyphen',\n\t 'period',\n\t 'slash',\n\t 'zero',\n\t 'one',\n\t 'two',\n\t 'three',\n\t 'four',\n\t 'five',\n\t 'six',\n\t 'seven',\n\t 'eight',\n\t 'nine',\n\t 'colon',\n\t 'semicolon',\n\t 'less',\n\t 'equal',\n\t 'greater',\n\t 'question',\n\t 'at',\n\t 'A',\n\t 'B',\n\t 'C',\n\t 'D',\n\t 'E',\n\t 'F',\n\t 'G',\n\t 'H',\n\t 'I',\n\t 'J',\n\t 'K',\n\t 'L',\n\t 'M',\n\t 'N',\n\t 'O',\n\t 'P',\n\t 'Q',\n\t 'R',\n\t 'S',\n\t 'T',\n\t 'U',\n\t 'V',\n\t 'W',\n\t 'X',\n\t 'Y',\n\t 'Z',\n\t 'bracketleft',\n\t 'backslash',\n\t 'bracketright',\n\t 'asciicircum',\n\t 'underscore',\n\t 'grave',\n\t 'a',\n\t 'b',\n\t 'c',\n\t 'd',\n\t 'e',\n\t 'f',\n\t 'g',\n\t 'h',\n\t 'i',\n\t 'j',\n\t 'k',\n\t 'l',\n\t 'm',\n\t 'n',\n\t 'o',\n\t 'p',\n\t 'q',\n\t 'r',\n\t 's',\n\t 't',\n\t 'u',\n\t 'v',\n\t 'w',\n\t 'x',\n\t 'y',\n\t 'z',\n\t 'braceleft',\n\t 'bar',\n\t 'braceright',\n\t 'asciitilde',\n\t 'Adieresis',\n\t 'Aring',\n\t 'Ccedilla',\n\t 'Eacute',\n\t 'Ntilde',\n\t 'Odieresis',\n\t 'Udieresis',\n\t 'aacute',\n\t 'agrave',\n\t 'acircumflex',\n\t 'adieresis',\n\t 'atilde',\n\t 'aring',\n\t 'ccedilla',\n\t 'eacute',\n\t 'egrave',\n\t 'ecircumflex',\n\t 'edieresis',\n\t 'iacute',\n\t 'igrave',\n\t 'icircumflex',\n\t 'idieresis',\n\t 'ntilde',\n\t 'oacute',\n\t 'ograve',\n\t 'ocircumflex',\n\t 'odieresis',\n\t 'otilde',\n\t 'uacute',\n\t 'ugrave',\n\t 'ucircumflex',\n\t 'udieresis',\n\t 'dagger',\n\t 'degree',\n\t 'cent',\n\t 'sterling',\n\t 'section',\n\t 'bullet',\n\t 'paragraph',\n\t 'germandbls',\n\t 'registered',\n\t 'copyright',\n\t 'trademark',\n\t 'acute',\n\t 'dieresis',\n\t 'notequal',\n\t 'AE',\n\t 'Oslash',\n\t 'infinity',\n\t 'plusminus',\n\t 'lessequal',\n\t 'greaterequal',\n\t 'yen',\n\t 'mu',\n\t 'partialdiff',\n\t 'summation',\n\t 'product',\n\t 'pi',\n\t 'integral',\n\t 'ordfeminine',\n\t 'ordmasculine',\n\t 'Omega',\n\t 'ae',\n\t 'oslash',\n\t 'questiondown',\n\t 'exclamdown',\n\t 'logicalnot',\n\t 'radical',\n\t 'florin',\n\t 'approxequal',\n\t 'Delta',\n\t 'guillemotleft',\n\t 'guillemotright',\n\t 'ellipsis',\n\t 'nonbreakingspace',\n\t 'Agrave',\n\t 'Atilde',\n\t 'Otilde',\n\t 'OE',\n\t 'oe',\n\t 'endash',\n\t 'emdash',\n\t 'quotedblleft',\n\t 'quotedblright',\n\t 'quoteleft',\n\t 'quoteright',\n\t 'divide',\n\t 'lozenge',\n\t 'ydieresis',\n\t 'Ydieresis',\n\t 'fraction',\n\t 'currency',\n\t 'guilsinglleft',\n\t 'guilsinglright',\n\t 'fi',\n\t 'fl',\n\t 'daggerdbl',\n\t 'periodcentered',\n\t 'quotesinglbase',\n\t 'quotedblbase',\n\t 'perthousand',\n\t 'Acircumflex',\n\t 'Ecircumflex',\n\t 'Aacute',\n\t 'Edieresis',\n\t 'Egrave',\n\t 'Iacute',\n\t 'Icircumflex',\n\t 'Idieresis',\n\t 'Igrave',\n\t 'Oacute',\n\t 'Ocircumflex',\n\t 'apple',\n\t 'Ograve',\n\t 'Uacute',\n\t 'Ucircumflex',\n\t 'Ugrave',\n\t 'dotlessi',\n\t 'circumflex',\n\t 'tilde',\n\t 'macron',\n\t 'breve',\n\t 'dotaccent',\n\t 'ring',\n\t 'cedilla',\n\t 'hungarumlaut',\n\t 'ogonek',\n\t 'caron',\n\t 'Lslash',\n\t 'lslash',\n\t 'Scaron',\n\t 'scaron',\n\t 'Zcaron',\n\t 'zcaron',\n\t 'brokenbar',\n\t 'Eth',\n\t 'eth',\n\t 'Yacute',\n\t 'yacute',\n\t 'Thorn',\n\t 'thorn',\n\t 'minus',\n\t 'multiply',\n\t 'onesuperior',\n\t 'twosuperior',\n\t 'threesuperior',\n\t 'onehalf',\n\t 'onequarter',\n\t 'threequarters',\n\t 'franc',\n\t 'Gbreve',\n\t 'gbreve',\n\t 'Idotaccent',\n\t 'Scedilla',\n\t 'scedilla',\n\t 'Cacute',\n\t 'cacute',\n\t 'Ccaron',\n\t 'ccaron',\n\t 'dcroat'\n\t];\n\tfunction adjustWidths(properties) {\n\t if (!properties.fontMatrix) {\n\t  return;\n\t }\n\t if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n\t  return;\n\t }\n\t var scale = 0.001 / properties.fontMatrix[0];\n\t var glyphsWidths = properties.widths;\n\t for (var glyph in glyphsWidths) {\n\t  glyphsWidths[glyph] *= scale;\n\t }\n\t properties.defaultWidth *= scale;\n\t}\n\tfunction adjustToUnicode(properties, builtInEncoding) {\n\t if (properties.hasIncludedToUnicodeMap) {\n\t  return;\n\t }\n\t if (properties.hasEncoding) {\n\t  return;\n\t }\n\t if (builtInEncoding === properties.defaultEncoding) {\n\t  return;\n\t }\n\t if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n\t  return;\n\t }\n\t var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n\t for (var charCode in builtInEncoding) {\n\t  var glyphName = builtInEncoding[charCode];\n\t  var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t  if (unicode !== -1) {\n\t   toUnicode[charCode] = String.fromCharCode(unicode);\n\t  }\n\t }\n\t properties.toUnicode.amend(toUnicode);\n\t}\n\tfunction getFontType(type, subtype) {\n\t switch (type) {\n\t case 'Type1':\n\t  return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n\t case 'CIDFontType0':\n\t  return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n\t case 'OpenType':\n\t  return FontType.OPENTYPE;\n\t case 'TrueType':\n\t  return FontType.TRUETYPE;\n\t case 'CIDFontType2':\n\t  return FontType.CIDFONTTYPE2;\n\t case 'MMType1':\n\t  return FontType.MMTYPE1;\n\t case 'Type0':\n\t  return FontType.TYPE0;\n\t default:\n\t  return FontType.UNKNOWN;\n\t }\n\t}\n\tfunction recoverGlyphName(name, glyphsUnicodeMap) {\n\t if (glyphsUnicodeMap[name] !== undefined) {\n\t  return name;\n\t }\n\t var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n\t if (unicode !== -1) {\n\t  for (var key in glyphsUnicodeMap) {\n\t   if (glyphsUnicodeMap[key] === unicode) {\n\t    return key;\n\t   }\n\t  }\n\t }\n\t info('Unable to recover a standard glyph name for: ' + name);\n\t return name;\n\t}\n\tvar Glyph = function GlyphClosure() {\n\t function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t  this.fontChar = fontChar;\n\t  this.unicode = unicode;\n\t  this.accent = accent;\n\t  this.width = width;\n\t  this.vmetric = vmetric;\n\t  this.operatorListId = operatorListId;\n\t  this.isSpace = isSpace;\n\t  this.isInFont = isInFont;\n\t }\n\t Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t  return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n\t };\n\t return Glyph;\n\t}();\n\tvar ToUnicodeMap = function ToUnicodeMapClosure() {\n\t function ToUnicodeMap(cmap) {\n\t  this._map = cmap;\n\t }\n\t ToUnicodeMap.prototype = {\n\t  get length() {\n\t   return this._map.length;\n\t  },\n\t  forEach: function (callback) {\n\t   for (var charCode in this._map) {\n\t    callback(charCode, this._map[charCode].charCodeAt(0));\n\t   }\n\t  },\n\t  has: function (i) {\n\t   return this._map[i] !== undefined;\n\t  },\n\t  get: function (i) {\n\t   return this._map[i];\n\t  },\n\t  charCodeOf: function (v) {\n\t   return this._map.indexOf(v);\n\t  },\n\t  amend: function (map) {\n\t   for (var charCode in map) {\n\t    this._map[charCode] = map[charCode];\n\t   }\n\t  }\n\t };\n\t return ToUnicodeMap;\n\t}();\n\tvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n\t function IdentityToUnicodeMap(firstChar, lastChar) {\n\t  this.firstChar = firstChar;\n\t  this.lastChar = lastChar;\n\t }\n\t IdentityToUnicodeMap.prototype = {\n\t  get length() {\n\t   return this.lastChar + 1 - this.firstChar;\n\t  },\n\t  forEach: function (callback) {\n\t   for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n\t    callback(i, i);\n\t   }\n\t  },\n\t  has: function (i) {\n\t   return this.firstChar <= i && i <= this.lastChar;\n\t  },\n\t  get: function (i) {\n\t   if (this.firstChar <= i && i <= this.lastChar) {\n\t    return String.fromCharCode(i);\n\t   }\n\t   return undefined;\n\t  },\n\t  charCodeOf: function (v) {\n\t   return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n\t  },\n\t  amend: function (map) {\n\t   error('Should not call amend()');\n\t  }\n\t };\n\t return IdentityToUnicodeMap;\n\t}();\n\tvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n\t function writeInt16(dest, offset, num) {\n\t  dest[offset] = num >> 8 & 0xFF;\n\t  dest[offset + 1] = num & 0xFF;\n\t }\n\t function writeInt32(dest, offset, num) {\n\t  dest[offset] = num >> 24 & 0xFF;\n\t  dest[offset + 1] = num >> 16 & 0xFF;\n\t  dest[offset + 2] = num >> 8 & 0xFF;\n\t  dest[offset + 3] = num & 0xFF;\n\t }\n\t function writeData(dest, offset, data) {\n\t  var i, ii;\n\t  if (data instanceof Uint8Array) {\n\t   dest.set(data, offset);\n\t  } else if (typeof data === 'string') {\n\t   for (i = 0, ii = data.length; i < ii; i++) {\n\t    dest[offset++] = data.charCodeAt(i) & 0xFF;\n\t   }\n\t  } else {\n\t   for (i = 0, ii = data.length; i < ii; i++) {\n\t    dest[offset++] = data[i] & 0xFF;\n\t   }\n\t  }\n\t }\n\t function OpenTypeFileBuilder(sfnt) {\n\t  this.sfnt = sfnt;\n\t  this.tables = Object.create(null);\n\t }\n\t OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n\t  var maxPower2 = 1, log2 = 0;\n\t  while ((maxPower2 ^ entriesCount) > maxPower2) {\n\t   maxPower2 <<= 1;\n\t   log2++;\n\t  }\n\t  var searchRange = maxPower2 * entrySize;\n\t  return {\n\t   range: searchRange,\n\t   entry: log2,\n\t   rangeShift: entrySize * entriesCount - searchRange\n\t  };\n\t };\n\t var OTF_HEADER_SIZE = 12;\n\t var OTF_TABLE_ENTRY_SIZE = 16;\n\t OpenTypeFileBuilder.prototype = {\n\t  toArray: function OpenTypeFileBuilder_toArray() {\n\t   var sfnt = this.sfnt;\n\t   var tables = this.tables;\n\t   var tablesNames = Object.keys(tables);\n\t   tablesNames.sort();\n\t   var numTables = tablesNames.length;\n\t   var i, j, jj, table, tableName;\n\t   var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n\t   var tableOffsets = [offset];\n\t   for (i = 0; i < numTables; i++) {\n\t    table = tables[tablesNames[i]];\n\t    var paddedLength = (table.length + 3 & ~3) >>> 0;\n\t    offset += paddedLength;\n\t    tableOffsets.push(offset);\n\t   }\n\t   var file = new Uint8Array(offset);\n\t   for (i = 0; i < numTables; i++) {\n\t    table = tables[tablesNames[i]];\n\t    writeData(file, tableOffsets[i], table);\n\t   }\n\t   if (sfnt === 'true') {\n\t    sfnt = string32(0x00010000);\n\t   }\n\t   file[0] = sfnt.charCodeAt(0) & 0xFF;\n\t   file[1] = sfnt.charCodeAt(1) & 0xFF;\n\t   file[2] = sfnt.charCodeAt(2) & 0xFF;\n\t   file[3] = sfnt.charCodeAt(3) & 0xFF;\n\t   writeInt16(file, 4, numTables);\n\t   var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\t   writeInt16(file, 6, searchParams.range);\n\t   writeInt16(file, 8, searchParams.entry);\n\t   writeInt16(file, 10, searchParams.rangeShift);\n\t   offset = OTF_HEADER_SIZE;\n\t   for (i = 0; i < numTables; i++) {\n\t    tableName = tablesNames[i];\n\t    file[offset] = tableName.charCodeAt(0) & 0xFF;\n\t    file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n\t    file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n\t    file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\t    var checksum = 0;\n\t    for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n\t     var quad = readUint32(file, j);\n\t     checksum = checksum + quad >>> 0;\n\t    }\n\t    writeInt32(file, offset + 4, checksum);\n\t    writeInt32(file, offset + 8, tableOffsets[i]);\n\t    writeInt32(file, offset + 12, tables[tableName].length);\n\t    offset += OTF_TABLE_ENTRY_SIZE;\n\t   }\n\t   return file;\n\t  },\n\t  addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n\t   if (tag in this.tables) {\n\t    throw new Error('Table ' + tag + ' already exists');\n\t   }\n\t   this.tables[tag] = data;\n\t  }\n\t };\n\t return OpenTypeFileBuilder;\n\t}();\n\tvar ProblematicCharRanges = new Int32Array([\n\t 0x0000,\n\t 0x0020,\n\t 0x007F,\n\t 0x00A1,\n\t 0x00AD,\n\t 0x00AE,\n\t 0x0600,\n\t 0x0780,\n\t 0x08A0,\n\t 0x10A0,\n\t 0x1780,\n\t 0x1800,\n\t 0x1C00,\n\t 0x1C50,\n\t 0x2000,\n\t 0x2010,\n\t 0x2011,\n\t 0x2012,\n\t 0x2028,\n\t 0x2030,\n\t 0x205F,\n\t 0x2070,\n\t 0x25CC,\n\t 0x25CD,\n\t 0x3000,\n\t 0x3001,\n\t 0xAA60,\n\t 0xAA80,\n\t 0xFFF0,\n\t 0x10000\n\t]);\n\tvar Font = function FontClosure() {\n\t function Font(name, file, properties) {\n\t  var charCode, glyphName, unicode;\n\t  this.name = name;\n\t  this.loadedName = properties.loadedName;\n\t  this.isType3Font = properties.isType3Font;\n\t  this.sizes = [];\n\t  this.missingFile = false;\n\t  this.glyphCache = Object.create(null);\n\t  this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n\t  this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t  this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\t  var type = properties.type;\n\t  var subtype = properties.subtype;\n\t  this.type = type;\n\t  this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n\t  this.differences = properties.differences;\n\t  this.widths = properties.widths;\n\t  this.defaultWidth = properties.defaultWidth;\n\t  this.composite = properties.composite;\n\t  this.wideChars = properties.wideChars;\n\t  this.cMap = properties.cMap;\n\t  this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n\t  this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n\t  this.fontMatrix = properties.fontMatrix;\n\t  this.bbox = properties.bbox;\n\t  this.toUnicode = properties.toUnicode;\n\t  this.toFontChar = [];\n\t  if (properties.type === 'Type3') {\n\t   for (charCode = 0; charCode < 256; charCode++) {\n\t    this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n\t   }\n\t   this.fontType = FontType.TYPE3;\n\t   return;\n\t  }\n\t  this.cidEncoding = properties.cidEncoding;\n\t  this.vertical = properties.vertical;\n\t  if (this.vertical) {\n\t   this.vmetrics = properties.vmetrics;\n\t   this.defaultVMetrics = properties.defaultVMetrics;\n\t  }\n\t  var glyphsUnicodeMap;\n\t  if (!file || file.isEmpty) {\n\t   if (file) {\n\t    warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n\t   }\n\t   this.missingFile = true;\n\t   var fontName = name.replace(/[,_]/g, '-');\n\t   var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n\t   var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n\t   fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\t   this.bold = fontName.search(/bold/gi) !== -1;\n\t   this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n\t   this.black = name.search(/Black/g) !== -1;\n\t   this.remeasure = Object.keys(this.widths).length > 0;\n\t   if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n\t    var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n\t    var map = [];\n\t    for (charCode in GlyphMapForStandardFonts) {\n\t     map[+charCode] = GlyphMapForStandardFonts[charCode];\n\t    }\n\t    if (/Arial-?Black/i.test(name)) {\n\t     var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n\t     for (charCode in SupplementalGlyphMapForArialBlack) {\n\t      map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n\t     }\n\t    }\n\t    var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\t    if (!isIdentityUnicode) {\n\t     this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t      map[+charCode] = unicodeCharCode;\n\t     });\n\t    }\n\t    this.toFontChar = map;\n\t    this.toUnicode = new ToUnicodeMap(map);\n\t   } else if (/Symbol/i.test(fontName)) {\n\t    this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n\t   } else if (/Dingbats/i.test(fontName)) {\n\t    if (/Wingdings/i.test(name)) {\n\t     warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n\t    }\n\t    this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n\t   } else if (isStandardFont) {\n\t    this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n\t   } else {\n\t    glyphsUnicodeMap = getGlyphsUnicode();\n\t    this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t     if (!this.composite) {\n\t      glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n\t      unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t       unicodeCharCode = unicode;\n\t      }\n\t     }\n\t     this.toFontChar[charCode] = unicodeCharCode;\n\t    }.bind(this));\n\t   }\n\t   this.loadedName = fontName.split('-')[0];\n\t   this.loading = false;\n\t   this.fontType = getFontType(type, subtype);\n\t   return;\n\t  }\n\t  if (subtype === 'Type1C') {\n\t   if (type !== 'Type1' && type !== 'MMType1') {\n\t    if (isTrueTypeFile(file)) {\n\t     subtype = 'TrueType';\n\t    } else {\n\t     type = 'Type1';\n\t    }\n\t   } else if (isOpenTypeFile(file)) {\n\t    type = subtype = 'OpenType';\n\t   }\n\t  }\n\t  if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n\t   type = 'CIDFontType0';\n\t  }\n\t  if (subtype === 'OpenType') {\n\t   type = 'OpenType';\n\t  }\n\t  if (type === 'CIDFontType0') {\n\t   if (isType1File(file)) {\n\t    subtype = 'CIDFontType0';\n\t   } else if (isOpenTypeFile(file)) {\n\t    type = subtype = 'OpenType';\n\t   } else {\n\t    subtype = 'CIDFontType0C';\n\t   }\n\t  }\n\t  var data;\n\t  switch (type) {\n\t  case 'MMType1':\n\t   info('MMType1 font (' + name + '), falling back to Type1.');\n\t  case 'Type1':\n\t  case 'CIDFontType0':\n\t   this.mimetype = 'font/opentype';\n\t   var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\t   adjustWidths(properties);\n\t   data = this.convert(name, cff, properties);\n\t   break;\n\t  case 'OpenType':\n\t  case 'TrueType':\n\t  case 'CIDFontType2':\n\t   this.mimetype = 'font/opentype';\n\t   data = this.checkAndRepair(name, file, properties);\n\t   if (this.isOpenType) {\n\t    adjustWidths(properties);\n\t    type = 'OpenType';\n\t   }\n\t   break;\n\t  default:\n\t   error('Font ' + type + ' is not supported');\n\t   break;\n\t  }\n\t  this.data = data;\n\t  this.fontType = getFontType(type, subtype);\n\t  this.fontMatrix = properties.fontMatrix;\n\t  this.widths = properties.widths;\n\t  this.defaultWidth = properties.defaultWidth;\n\t  this.toUnicode = properties.toUnicode;\n\t  this.encoding = properties.baseEncoding;\n\t  this.seacMap = properties.seacMap;\n\t  this.loading = true;\n\t }\n\t Font.getFontID = function () {\n\t  var ID = 1;\n\t  return function Font_getFontID() {\n\t   return String(ID++);\n\t  };\n\t }();\n\t function int16(b0, b1) {\n\t  return (b0 << 8) + b1;\n\t }\n\t function signedInt16(b0, b1) {\n\t  var value = (b0 << 8) + b1;\n\t  return value & 1 << 15 ? value - 0x10000 : value;\n\t }\n\t function int32(b0, b1, b2, b3) {\n\t  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t }\n\t function string16(value) {\n\t  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t }\n\t function safeString16(value) {\n\t  value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n\t  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t }\n\t function isTrueTypeFile(file) {\n\t  var header = file.peekBytes(4);\n\t  return readUint32(header, 0) === 0x00010000;\n\t }\n\t function isOpenTypeFile(file) {\n\t  var header = file.peekBytes(4);\n\t  return bytesToString(header) === 'OTTO';\n\t }\n\t function isType1File(file) {\n\t  var header = file.peekBytes(2);\n\t  if (header[0] === 0x25 && header[1] === 0x21) {\n\t   return true;\n\t  }\n\t  if (header[0] === 0x80 && header[1] === 0x01) {\n\t   return true;\n\t  }\n\t  return false;\n\t }\n\t function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n\t  var toFontChar = [], unicode;\n\t  for (var i = 0, ii = encoding.length; i < ii; i++) {\n\t   unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n\t   if (unicode !== -1) {\n\t    toFontChar[i] = unicode;\n\t   }\n\t  }\n\t  for (var charCode in differences) {\n\t   unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n\t   if (unicode !== -1) {\n\t    toFontChar[+charCode] = unicode;\n\t   }\n\t  }\n\t  return toFontChar;\n\t }\n\t function isProblematicUnicodeLocation(code) {\n\t  var i = 0, j = ProblematicCharRanges.length - 1;\n\t  while (i < j) {\n\t   var c = i + j + 1 >> 1;\n\t   if (code < ProblematicCharRanges[c]) {\n\t    j = c - 1;\n\t   } else {\n\t    i = c;\n\t   }\n\t  }\n\t  return !(i & 1);\n\t }\n\t function adjustMapping(charCodeToGlyphId, properties) {\n\t  var toUnicode = properties.toUnicode;\n\t  var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n\t  var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n\t  var newMap = Object.create(null);\n\t  var toFontChar = [];\n\t  var usedFontCharCodes = [];\n\t  var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n\t  for (var originalCharCode in charCodeToGlyphId) {\n\t   originalCharCode |= 0;\n\t   var glyphId = charCodeToGlyphId[originalCharCode];\n\t   var fontCharCode = originalCharCode;\n\t   var hasUnicodeValue = false;\n\t   if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n\t    hasUnicodeValue = true;\n\t    var unicode = toUnicode.get(fontCharCode);\n\t    if (unicode.length === 1) {\n\t     fontCharCode = unicode.charCodeAt(0);\n\t    }\n\t   }\n\t   if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n\t    do {\n\t     fontCharCode = nextAvailableFontCharCode++;\n\t     if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n\t      fontCharCode = 0xF020;\n\t      nextAvailableFontCharCode = fontCharCode + 1;\n\t     }\n\t    } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n\t   }\n\t   newMap[fontCharCode] = glyphId;\n\t   toFontChar[originalCharCode] = fontCharCode;\n\t   usedFontCharCodes[fontCharCode] = true;\n\t  }\n\t  return {\n\t   toFontChar: toFontChar,\n\t   charCodeToGlyphId: newMap,\n\t   nextAvailableFontCharCode: nextAvailableFontCharCode\n\t  };\n\t }\n\t function getRanges(glyphs, numGlyphs) {\n\t  var codes = [];\n\t  for (var charCode in glyphs) {\n\t   if (glyphs[charCode] >= numGlyphs) {\n\t    continue;\n\t   }\n\t   codes.push({\n\t    fontCharCode: charCode | 0,\n\t    glyphId: glyphs[charCode]\n\t   });\n\t  }\n\t  codes.sort(function fontGetRangesSort(a, b) {\n\t   return a.fontCharCode - b.fontCharCode;\n\t  });\n\t  var ranges = [];\n\t  var length = codes.length;\n\t  for (var n = 0; n < length;) {\n\t   var start = codes[n].fontCharCode;\n\t   var codeIndices = [codes[n].glyphId];\n\t   ++n;\n\t   var end = start;\n\t   while (n < length && end + 1 === codes[n].fontCharCode) {\n\t    codeIndices.push(codes[n].glyphId);\n\t    ++end;\n\t    ++n;\n\t    if (end === 0xFFFF) {\n\t     break;\n\t    }\n\t   }\n\t   ranges.push([\n\t    start,\n\t    end,\n\t    codeIndices\n\t   ]);\n\t  }\n\t  return ranges;\n\t }\n\t function createCmapTable(glyphs, numGlyphs) {\n\t  var ranges = getRanges(glyphs, numGlyphs);\n\t  var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n\t  var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n\t  var i, ii, j, jj;\n\t  for (i = ranges.length - 1; i >= 0; --i) {\n\t   if (ranges[i][0] <= 0xFFFF) {\n\t    break;\n\t   }\n\t  }\n\t  var bmpLength = i + 1;\n\t  if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n\t   ranges[i][1] = 0xFFFE;\n\t  }\n\t  var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n\t  var segCount = bmpLength + trailingRangesCount;\n\t  var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\t  var startCount = '';\n\t  var endCount = '';\n\t  var idDeltas = '';\n\t  var idRangeOffsets = '';\n\t  var glyphsIds = '';\n\t  var bias = 0;\n\t  var range, start, end, codes;\n\t  for (i = 0, ii = bmpLength; i < ii; i++) {\n\t   range = ranges[i];\n\t   start = range[0];\n\t   end = range[1];\n\t   startCount += string16(start);\n\t   endCount += string16(end);\n\t   codes = range[2];\n\t   var contiguous = true;\n\t   for (j = 1, jj = codes.length; j < jj; ++j) {\n\t    if (codes[j] !== codes[j - 1] + 1) {\n\t     contiguous = false;\n\t     break;\n\t    }\n\t   }\n\t   if (!contiguous) {\n\t    var offset = (segCount - i) * 2 + bias * 2;\n\t    bias += end - start + 1;\n\t    idDeltas += string16(0);\n\t    idRangeOffsets += string16(offset);\n\t    for (j = 0, jj = codes.length; j < jj; ++j) {\n\t     glyphsIds += string16(codes[j]);\n\t    }\n\t   } else {\n\t    var startCode = codes[0];\n\t    idDeltas += string16(startCode - start & 0xFFFF);\n\t    idRangeOffsets += string16(0);\n\t   }\n\t  }\n\t  if (trailingRangesCount > 0) {\n\t   endCount += '\\xFF\\xFF';\n\t   startCount += '\\xFF\\xFF';\n\t   idDeltas += '\\x00\\x01';\n\t   idRangeOffsets += '\\x00\\x00';\n\t  }\n\t  var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n\t  var format31012 = '';\n\t  var header31012 = '';\n\t  if (numTables > 1) {\n\t   cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n\t   format31012 = '';\n\t   for (i = 0, ii = ranges.length; i < ii; i++) {\n\t    range = ranges[i];\n\t    start = range[0];\n\t    codes = range[2];\n\t    var code = codes[0];\n\t    for (j = 1, jj = codes.length; j < jj; ++j) {\n\t     if (codes[j] !== codes[j - 1] + 1) {\n\t      end = range[0] + j - 1;\n\t      format31012 += string32(start) + string32(end) + string32(code);\n\t      start = end + 1;\n\t      code = codes[j];\n\t     }\n\t    }\n\t    format31012 += string32(start) + string32(range[1]) + string32(code);\n\t   }\n\t   header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n\t  }\n\t  return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n\t }\n\t function validateOS2Table(os2) {\n\t  var stream = new Stream(os2.data);\n\t  var version = stream.getUint16();\n\t  stream.getBytes(60);\n\t  var selection = stream.getUint16();\n\t  if (version < 4 && selection & 0x0300) {\n\t   return false;\n\t  }\n\t  var firstChar = stream.getUint16();\n\t  var lastChar = stream.getUint16();\n\t  if (firstChar > lastChar) {\n\t   return false;\n\t  }\n\t  stream.getBytes(6);\n\t  var usWinAscent = stream.getUint16();\n\t  if (usWinAscent === 0) {\n\t   return false;\n\t  }\n\t  os2.data[8] = os2.data[9] = 0;\n\t  return true;\n\t }\n\t function createOS2Table(properties, charstrings, override) {\n\t  override = override || {\n\t   unitsPerEm: 0,\n\t   yMax: 0,\n\t   yMin: 0,\n\t   ascent: 0,\n\t   descent: 0\n\t  };\n\t  var ulUnicodeRange1 = 0;\n\t  var ulUnicodeRange2 = 0;\n\t  var ulUnicodeRange3 = 0;\n\t  var ulUnicodeRange4 = 0;\n\t  var firstCharIndex = null;\n\t  var lastCharIndex = 0;\n\t  if (charstrings) {\n\t   for (var code in charstrings) {\n\t    code |= 0;\n\t    if (firstCharIndex > code || !firstCharIndex) {\n\t     firstCharIndex = code;\n\t    }\n\t    if (lastCharIndex < code) {\n\t     lastCharIndex = code;\n\t    }\n\t    var position = getUnicodeRangeFor(code);\n\t    if (position < 32) {\n\t     ulUnicodeRange1 |= 1 << position;\n\t    } else if (position < 64) {\n\t     ulUnicodeRange2 |= 1 << position - 32;\n\t    } else if (position < 96) {\n\t     ulUnicodeRange3 |= 1 << position - 64;\n\t    } else if (position < 123) {\n\t     ulUnicodeRange4 |= 1 << position - 96;\n\t    } else {\n\t     error('Unicode ranges Bits > 123 are reserved for internal usage');\n\t    }\n\t   }\n\t  } else {\n\t   firstCharIndex = 0;\n\t   lastCharIndex = 255;\n\t  }\n\t  var bbox = properties.bbox || [\n\t   0,\n\t   0,\n\t   0,\n\t   0\n\t  ];\n\t  var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n\t  var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n\t  var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n\t  var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\t  if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n\t   typoDescent = -typoDescent;\n\t  }\n\t  var winAscent = override.yMax || typoAscent;\n\t  var winDescent = -override.yMin || -typoDescent;\n\t  return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n\t }\n\t function createPostTable(properties) {\n\t  var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n\t  return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n\t }\n\t function createNameTable(name, proto) {\n\t  if (!proto) {\n\t   proto = [\n\t    [],\n\t    []\n\t   ];\n\t  }\n\t  var strings = [\n\t   proto[0][0] || 'Original licence',\n\t   proto[0][1] || name,\n\t   proto[0][2] || 'Unknown',\n\t   proto[0][3] || 'uniqueID',\n\t   proto[0][4] || name,\n\t   proto[0][5] || 'Version 0.11',\n\t   proto[0][6] || '',\n\t   proto[0][7] || 'Unknown',\n\t   proto[0][8] || 'Unknown',\n\t   proto[0][9] || 'Unknown'\n\t  ];\n\t  var stringsUnicode = [];\n\t  var i, ii, j, jj, str;\n\t  for (i = 0, ii = strings.length; i < ii; i++) {\n\t   str = proto[1][i] || strings[i];\n\t   var strBufUnicode = [];\n\t   for (j = 0, jj = str.length; j < jj; j++) {\n\t    strBufUnicode.push(string16(str.charCodeAt(j)));\n\t   }\n\t   stringsUnicode.push(strBufUnicode.join(''));\n\t  }\n\t  var names = [\n\t   strings,\n\t   stringsUnicode\n\t  ];\n\t  var platforms = [\n\t   '\\x00\\x01',\n\t   '\\x00\\x03'\n\t  ];\n\t  var encodings = [\n\t   '\\x00\\x00',\n\t   '\\x00\\x01'\n\t  ];\n\t  var languages = [\n\t   '\\x00\\x00',\n\t   '\\x04\\x09'\n\t  ];\n\t  var namesRecordCount = strings.length * platforms.length;\n\t  var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n\t  var strOffset = 0;\n\t  for (i = 0, ii = platforms.length; i < ii; i++) {\n\t   var strs = names[i];\n\t   for (j = 0, jj = strs.length; j < jj; j++) {\n\t    str = strs[j];\n\t    var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n\t    nameTable += nameRecord;\n\t    strOffset += str.length;\n\t   }\n\t  }\n\t  nameTable += strings.join('') + stringsUnicode.join('');\n\t  return nameTable;\n\t }\n\t Font.prototype = {\n\t  name: null,\n\t  font: null,\n\t  mimetype: null,\n\t  encoding: null,\n\t  get renderer() {\n\t   var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\t   return shadow(this, 'renderer', renderer);\n\t  },\n\t  exportData: function Font_exportData() {\n\t   var data = {};\n\t   for (var i in this) {\n\t    if (this.hasOwnProperty(i)) {\n\t     data[i] = this[i];\n\t    }\n\t   }\n\t   return data;\n\t  },\n\t  checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n\t   function readTableEntry(file) {\n\t    var tag = bytesToString(file.getBytes(4));\n\t    var checksum = file.getInt32() >>> 0;\n\t    var offset = file.getInt32() >>> 0;\n\t    var length = file.getInt32() >>> 0;\n\t    var previousPosition = file.pos;\n\t    file.pos = file.start ? file.start : 0;\n\t    file.skip(offset);\n\t    var data = file.getBytes(length);\n\t    file.pos = previousPosition;\n\t    if (tag === 'head') {\n\t     data[8] = data[9] = data[10] = data[11] = 0;\n\t     data[17] |= 0x20;\n\t    }\n\t    return {\n\t     tag: tag,\n\t     checksum: checksum,\n\t     length: length,\n\t     offset: offset,\n\t     data: data\n\t    };\n\t   }\n\t   function readOpenTypeHeader(ttf) {\n\t    return {\n\t     version: bytesToString(ttf.getBytes(4)),\n\t     numTables: ttf.getUint16(),\n\t     searchRange: ttf.getUint16(),\n\t     entrySelector: ttf.getUint16(),\n\t     rangeShift: ttf.getUint16()\n\t    };\n\t   }\n\t   function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n\t    if (!cmap) {\n\t     warn('No cmap table available.');\n\t     return {\n\t      platformId: -1,\n\t      encodingId: -1,\n\t      mappings: [],\n\t      hasShortCmap: false\n\t     };\n\t    }\n\t    var segment;\n\t    var start = (font.start ? font.start : 0) + cmap.offset;\n\t    font.pos = start;\n\t    font.getUint16();\n\t    var numTables = font.getUint16();\n\t    var potentialTable;\n\t    var canBreak = false;\n\t    for (var i = 0; i < numTables; i++) {\n\t     var platformId = font.getUint16();\n\t     var encodingId = font.getUint16();\n\t     var offset = font.getInt32() >>> 0;\n\t     var useTable = false;\n\t     if (platformId === 0 && encodingId === 0) {\n\t      useTable = true;\n\t     } else if (platformId === 1 && encodingId === 0) {\n\t      useTable = true;\n\t     } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n\t      useTable = true;\n\t      if (!isSymbolicFont) {\n\t       canBreak = true;\n\t      }\n\t     } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n\t      useTable = true;\n\t      canBreak = true;\n\t     }\n\t     if (useTable) {\n\t      potentialTable = {\n\t       platformId: platformId,\n\t       encodingId: encodingId,\n\t       offset: offset\n\t      };\n\t     }\n\t     if (canBreak) {\n\t      break;\n\t     }\n\t    }\n\t    if (potentialTable) {\n\t     font.pos = start + potentialTable.offset;\n\t    }\n\t    if (!potentialTable || font.peekByte() === -1) {\n\t     warn('Could not find a preferred cmap table.');\n\t     return {\n\t      platformId: -1,\n\t      encodingId: -1,\n\t      mappings: [],\n\t      hasShortCmap: false\n\t     };\n\t    }\n\t    var format = font.getUint16();\n\t    font.getUint16();\n\t    font.getUint16();\n\t    var hasShortCmap = false;\n\t    var mappings = [];\n\t    var j, glyphId;\n\t    if (format === 0) {\n\t     for (j = 0; j < 256; j++) {\n\t      var index = font.getByte();\n\t      if (!index) {\n\t       continue;\n\t      }\n\t      mappings.push({\n\t       charCode: j,\n\t       glyphId: index\n\t      });\n\t     }\n\t     hasShortCmap = true;\n\t    } else if (format === 4) {\n\t     var segCount = font.getUint16() >> 1;\n\t     font.getBytes(6);\n\t     var segIndex, segments = [];\n\t     for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t      segments.push({ end: font.getUint16() });\n\t     }\n\t     font.getUint16();\n\t     for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t      segments[segIndex].start = font.getUint16();\n\t     }\n\t     for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t      segments[segIndex].delta = font.getUint16();\n\t     }\n\t     var offsetsCount = 0;\n\t     for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t      segment = segments[segIndex];\n\t      var rangeOffset = font.getUint16();\n\t      if (!rangeOffset) {\n\t       segment.offsetIndex = -1;\n\t       continue;\n\t      }\n\t      var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n\t      segment.offsetIndex = offsetIndex;\n\t      offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n\t     }\n\t     var offsets = [];\n\t     for (j = 0; j < offsetsCount; j++) {\n\t      offsets.push(font.getUint16());\n\t     }\n\t     for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t      segment = segments[segIndex];\n\t      start = segment.start;\n\t      var end = segment.end;\n\t      var delta = segment.delta;\n\t      offsetIndex = segment.offsetIndex;\n\t      for (j = start; j <= end; j++) {\n\t       if (j === 0xFFFF) {\n\t        continue;\n\t       }\n\t       glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n\t       glyphId = glyphId + delta & 0xFFFF;\n\t       if (glyphId === 0) {\n\t        continue;\n\t       }\n\t       mappings.push({\n\t        charCode: j,\n\t        glyphId: glyphId\n\t       });\n\t      }\n\t     }\n\t    } else if (format === 6) {\n\t     var firstCode = font.getUint16();\n\t     var entryCount = font.getUint16();\n\t     for (j = 0; j < entryCount; j++) {\n\t      glyphId = font.getUint16();\n\t      var charCode = firstCode + j;\n\t      mappings.push({\n\t       charCode: charCode,\n\t       glyphId: glyphId\n\t      });\n\t     }\n\t    } else {\n\t     warn('cmap table has unsupported format: ' + format);\n\t     return {\n\t      platformId: -1,\n\t      encodingId: -1,\n\t      mappings: [],\n\t      hasShortCmap: false\n\t     };\n\t    }\n\t    mappings.sort(function (a, b) {\n\t     return a.charCode - b.charCode;\n\t    });\n\t    for (i = 1; i < mappings.length; i++) {\n\t     if (mappings[i - 1].charCode === mappings[i].charCode) {\n\t      mappings.splice(i, 1);\n\t      i--;\n\t     }\n\t    }\n\t    return {\n\t     platformId: potentialTable.platformId,\n\t     encodingId: potentialTable.encodingId,\n\t     mappings: mappings,\n\t     hasShortCmap: hasShortCmap\n\t    };\n\t   }\n\t   function sanitizeMetrics(font, header, metrics, numGlyphs) {\n\t    if (!header) {\n\t     if (metrics) {\n\t      metrics.data = null;\n\t     }\n\t     return;\n\t    }\n\t    font.pos = (font.start ? font.start : 0) + header.offset;\n\t    font.pos += header.length - 2;\n\t    var numOfMetrics = font.getUint16();\n\t    if (numOfMetrics > numGlyphs) {\n\t     info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n\t     numOfMetrics = numGlyphs;\n\t     header.data[34] = (numOfMetrics & 0xff00) >> 8;\n\t     header.data[35] = numOfMetrics & 0x00ff;\n\t    }\n\t    var numOfSidebearings = numGlyphs - numOfMetrics;\n\t    var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\t    if (numMissing > 0) {\n\t     var entries = new Uint8Array(metrics.length + numMissing * 2);\n\t     entries.set(metrics.data);\n\t     metrics.data = entries;\n\t    }\n\t   }\n\t   function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n\t    if (sourceEnd - sourceStart <= 12) {\n\t     return 0;\n\t    }\n\t    var glyf = source.subarray(sourceStart, sourceEnd);\n\t    var contoursCount = glyf[0] << 8 | glyf[1];\n\t    if (contoursCount & 0x8000) {\n\t     dest.set(glyf, destStart);\n\t     return glyf.length;\n\t    }\n\t    var i, j = 10, flagsCount = 0;\n\t    for (i = 0; i < contoursCount; i++) {\n\t     var endPoint = glyf[j] << 8 | glyf[j + 1];\n\t     flagsCount = endPoint + 1;\n\t     j += 2;\n\t    }\n\t    var instructionsStart = j;\n\t    var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n\t    j += 2 + instructionsLength;\n\t    var instructionsEnd = j;\n\t    var coordinatesLength = 0;\n\t    for (i = 0; i < flagsCount; i++) {\n\t     var flag = glyf[j++];\n\t     if (flag & 0xC0) {\n\t      glyf[j - 1] = flag & 0x3F;\n\t     }\n\t     var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n\t     coordinatesLength += xyLength;\n\t     if (flag & 8) {\n\t      var repeat = glyf[j++];\n\t      i += repeat;\n\t      coordinatesLength += repeat * xyLength;\n\t     }\n\t    }\n\t    if (coordinatesLength === 0) {\n\t     return 0;\n\t    }\n\t    var glyphDataLength = j + coordinatesLength;\n\t    if (glyphDataLength > glyf.length) {\n\t     return 0;\n\t    }\n\t    if (!hintsValid && instructionsLength > 0) {\n\t     dest.set(glyf.subarray(0, instructionsStart), destStart);\n\t     dest.set([\n\t      0,\n\t      0\n\t     ], destStart + instructionsStart);\n\t     dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n\t     glyphDataLength -= instructionsLength;\n\t     if (glyf.length - glyphDataLength > 3) {\n\t      glyphDataLength = glyphDataLength + 3 & ~3;\n\t     }\n\t     return glyphDataLength;\n\t    }\n\t    if (glyf.length - glyphDataLength > 3) {\n\t     glyphDataLength = glyphDataLength + 3 & ~3;\n\t     dest.set(glyf.subarray(0, glyphDataLength), destStart);\n\t     return glyphDataLength;\n\t    }\n\t    dest.set(glyf, destStart);\n\t    return glyf.length;\n\t   }\n\t   function sanitizeHead(head, numGlyphs, locaLength) {\n\t    var data = head.data;\n\t    var version = int32(data[0], data[1], data[2], data[3]);\n\t    if (version >> 16 !== 1) {\n\t     info('Attempting to fix invalid version in head table: ' + version);\n\t     data[0] = 0;\n\t     data[1] = 1;\n\t     data[2] = 0;\n\t     data[3] = 0;\n\t    }\n\t    var indexToLocFormat = int16(data[50], data[51]);\n\t    if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n\t     info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n\t     var numGlyphsPlusOne = numGlyphs + 1;\n\t     if (locaLength === numGlyphsPlusOne << 1) {\n\t      data[50] = 0;\n\t      data[51] = 0;\n\t     } else if (locaLength === numGlyphsPlusOne << 2) {\n\t      data[50] = 0;\n\t      data[51] = 1;\n\t     } else {\n\t      warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n\t     }\n\t    }\n\t   }\n\t   function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n\t    var itemSize, itemDecode, itemEncode;\n\t    if (isGlyphLocationsLong) {\n\t     itemSize = 4;\n\t     itemDecode = function fontItemDecodeLong(data, offset) {\n\t      return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t     };\n\t     itemEncode = function fontItemEncodeLong(data, offset, value) {\n\t      data[offset] = value >>> 24 & 0xFF;\n\t      data[offset + 1] = value >> 16 & 0xFF;\n\t      data[offset + 2] = value >> 8 & 0xFF;\n\t      data[offset + 3] = value & 0xFF;\n\t     };\n\t    } else {\n\t     itemSize = 2;\n\t     itemDecode = function fontItemDecode(data, offset) {\n\t      return data[offset] << 9 | data[offset + 1] << 1;\n\t     };\n\t     itemEncode = function fontItemEncode(data, offset, value) {\n\t      data[offset] = value >> 9 & 0xFF;\n\t      data[offset + 1] = value >> 1 & 0xFF;\n\t     };\n\t    }\n\t    var locaData = loca.data;\n\t    var locaDataSize = itemSize * (1 + numGlyphs);\n\t    if (locaData.length !== locaDataSize) {\n\t     locaData = new Uint8Array(locaDataSize);\n\t     locaData.set(loca.data.subarray(0, locaDataSize));\n\t     loca.data = locaData;\n\t    }\n\t    var oldGlyfData = glyf.data;\n\t    var oldGlyfDataLength = oldGlyfData.length;\n\t    var newGlyfData = new Uint8Array(oldGlyfDataLength);\n\t    var startOffset = itemDecode(locaData, 0);\n\t    var writeOffset = 0;\n\t    var missingGlyphData = Object.create(null);\n\t    itemEncode(locaData, 0, writeOffset);\n\t    var i, j;\n\t    for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t     var endOffset = itemDecode(locaData, j);\n\t     if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n\t      endOffset = oldGlyfDataLength;\n\t     }\n\t     if (endOffset > oldGlyfDataLength) {\n\t      itemEncode(locaData, j, writeOffset);\n\t      startOffset = endOffset;\n\t      continue;\n\t     }\n\t     if (startOffset === endOffset) {\n\t      missingGlyphData[i] = true;\n\t     }\n\t     var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n\t     writeOffset += newLength;\n\t     itemEncode(locaData, j, writeOffset);\n\t     startOffset = endOffset;\n\t    }\n\t    if (writeOffset === 0) {\n\t     var simpleGlyph = new Uint8Array([\n\t      0,\n\t      1,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      0,\n\t      49,\n\t      0\n\t     ]);\n\t     for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t      itemEncode(locaData, j, simpleGlyph.length);\n\t     }\n\t     glyf.data = simpleGlyph;\n\t     return missingGlyphData;\n\t    }\n\t    if (dupFirstEntry) {\n\t     var firstEntryLength = itemDecode(locaData, itemSize);\n\t     if (newGlyfData.length > firstEntryLength + writeOffset) {\n\t      glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n\t     } else {\n\t      glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n\t      glyf.data.set(newGlyfData.subarray(0, writeOffset));\n\t     }\n\t     glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n\t     itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n\t    } else {\n\t     glyf.data = newGlyfData.subarray(0, writeOffset);\n\t    }\n\t    return missingGlyphData;\n\t   }\n\t   function readPostScriptTable(post, properties, maxpNumGlyphs) {\n\t    var start = (font.start ? font.start : 0) + post.offset;\n\t    font.pos = start;\n\t    var length = post.length, end = start + length;\n\t    var version = font.getInt32();\n\t    font.getBytes(28);\n\t    var glyphNames;\n\t    var valid = true;\n\t    var i;\n\t    switch (version) {\n\t    case 0x00010000:\n\t     glyphNames = MacStandardGlyphOrdering;\n\t     break;\n\t    case 0x00020000:\n\t     var numGlyphs = font.getUint16();\n\t     if (numGlyphs !== maxpNumGlyphs) {\n\t      valid = false;\n\t      break;\n\t     }\n\t     var glyphNameIndexes = [];\n\t     for (i = 0; i < numGlyphs; ++i) {\n\t      var index = font.getUint16();\n\t      if (index >= 32768) {\n\t       valid = false;\n\t       break;\n\t      }\n\t      glyphNameIndexes.push(index);\n\t     }\n\t     if (!valid) {\n\t      break;\n\t     }\n\t     var customNames = [];\n\t     var strBuf = [];\n\t     while (font.pos < end) {\n\t      var stringLength = font.getByte();\n\t      strBuf.length = stringLength;\n\t      for (i = 0; i < stringLength; ++i) {\n\t       strBuf[i] = String.fromCharCode(font.getByte());\n\t      }\n\t      customNames.push(strBuf.join(''));\n\t     }\n\t     glyphNames = [];\n\t     for (i = 0; i < numGlyphs; ++i) {\n\t      var j = glyphNameIndexes[i];\n\t      if (j < 258) {\n\t       glyphNames.push(MacStandardGlyphOrdering[j]);\n\t       continue;\n\t      }\n\t      glyphNames.push(customNames[j - 258]);\n\t     }\n\t     break;\n\t    case 0x00030000:\n\t     break;\n\t    default:\n\t     warn('Unknown/unsupported post table version ' + version);\n\t     valid = false;\n\t     if (properties.defaultEncoding) {\n\t      glyphNames = properties.defaultEncoding;\n\t     }\n\t     break;\n\t    }\n\t    properties.glyphNames = glyphNames;\n\t    return valid;\n\t   }\n\t   function readNameTable(nameTable) {\n\t    var start = (font.start ? font.start : 0) + nameTable.offset;\n\t    font.pos = start;\n\t    var names = [\n\t     [],\n\t     []\n\t    ];\n\t    var length = nameTable.length, end = start + length;\n\t    var format = font.getUint16();\n\t    var FORMAT_0_HEADER_LENGTH = 6;\n\t    if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n\t     return names;\n\t    }\n\t    var numRecords = font.getUint16();\n\t    var stringsStart = font.getUint16();\n\t    var records = [];\n\t    var NAME_RECORD_LENGTH = 12;\n\t    var i, ii;\n\t    for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n\t     var r = {\n\t      platform: font.getUint16(),\n\t      encoding: font.getUint16(),\n\t      language: font.getUint16(),\n\t      name: font.getUint16(),\n\t      length: font.getUint16(),\n\t      offset: font.getUint16()\n\t     };\n\t     if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n\t      records.push(r);\n\t     }\n\t    }\n\t    for (i = 0, ii = records.length; i < ii; i++) {\n\t     var record = records[i];\n\t     if (record.length <= 0) {\n\t      continue;\n\t     }\n\t     var pos = start + stringsStart + record.offset;\n\t     if (pos + record.length > end) {\n\t      continue;\n\t     }\n\t     font.pos = pos;\n\t     var nameIndex = record.name;\n\t     if (record.encoding) {\n\t      var str = '';\n\t      for (var j = 0, jj = record.length; j < jj; j += 2) {\n\t       str += String.fromCharCode(font.getUint16());\n\t      }\n\t      names[1][nameIndex] = str;\n\t     } else {\n\t      names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n\t     }\n\t    }\n\t    return names;\n\t   }\n\t   var TTOpsStackDeltas = [\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    -2,\n\t    -2,\n\t    -2,\n\t    -2,\n\t    0,\n\t    0,\n\t    -2,\n\t    -5,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    0,\n\t    0,\n\t    -1,\n\t    0,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    1,\n\t    -1,\n\t    -999,\n\t    0,\n\t    1,\n\t    0,\n\t    -1,\n\t    -2,\n\t    0,\n\t    -1,\n\t    -2,\n\t    -1,\n\t    -1,\n\t    0,\n\t    -1,\n\t    -1,\n\t    0,\n\t    0,\n\t    -999,\n\t    -999,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -2,\n\t    -999,\n\t    -2,\n\t    -2,\n\t    -999,\n\t    0,\n\t    -2,\n\t    -2,\n\t    0,\n\t    0,\n\t    -2,\n\t    0,\n\t    -2,\n\t    0,\n\t    0,\n\t    0,\n\t    -2,\n\t    -1,\n\t    -1,\n\t    1,\n\t    1,\n\t    0,\n\t    0,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    0,\n\t    0,\n\t    -1,\n\t    0,\n\t    -1,\n\t    -1,\n\t    0,\n\t    -999,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    -2,\n\t    -999,\n\t    -999,\n\t    -999,\n\t    -999,\n\t    -999,\n\t    -1,\n\t    -1,\n\t    -2,\n\t    -2,\n\t    0,\n\t    0,\n\t    0,\n\t    0,\n\t    -1,\n\t    -1,\n\t    -999,\n\t    -2,\n\t    -2,\n\t    0,\n\t    0,\n\t    -1,\n\t    -2,\n\t    -2,\n\t    0,\n\t    0,\n\t    0,\n\t    -1,\n\t    -1,\n\t    -1,\n\t    -2\n\t   ];\n\t   function sanitizeTTProgram(table, ttContext) {\n\t    var data = table.data;\n\t    var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n\t    var stack = [];\n\t    var callstack = [];\n\t    var functionsCalled = [];\n\t    var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n\t    var inFDEF = false, ifLevel = 0, inELSE = 0;\n\t    for (var ii = data.length; i < ii;) {\n\t     var op = data[i++];\n\t     if (op === 0x40) {\n\t      n = data[i++];\n\t      if (inFDEF || inELSE) {\n\t       i += n;\n\t      } else {\n\t       for (j = 0; j < n; j++) {\n\t        stack.push(data[i++]);\n\t       }\n\t      }\n\t     } else if (op === 0x41) {\n\t      n = data[i++];\n\t      if (inFDEF || inELSE) {\n\t       i += n * 2;\n\t      } else {\n\t       for (j = 0; j < n; j++) {\n\t        b = data[i++];\n\t        stack.push(b << 8 | data[i++]);\n\t       }\n\t      }\n\t     } else if ((op & 0xF8) === 0xB0) {\n\t      n = op - 0xB0 + 1;\n\t      if (inFDEF || inELSE) {\n\t       i += n;\n\t      } else {\n\t       for (j = 0; j < n; j++) {\n\t        stack.push(data[i++]);\n\t       }\n\t      }\n\t     } else if ((op & 0xF8) === 0xB8) {\n\t      n = op - 0xB8 + 1;\n\t      if (inFDEF || inELSE) {\n\t       i += n * 2;\n\t      } else {\n\t       for (j = 0; j < n; j++) {\n\t        b = data[i++];\n\t        stack.push(b << 8 | data[i++]);\n\t       }\n\t      }\n\t     } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n\t      if (!inFDEF && !inELSE) {\n\t       funcId = stack[stack.length - 1];\n\t       ttContext.functionsUsed[funcId] = true;\n\t       if (funcId in ttContext.functionsStackDeltas) {\n\t        stack.length += ttContext.functionsStackDeltas[funcId];\n\t       } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n\t        callstack.push({\n\t         data: data,\n\t         i: i,\n\t         stackTop: stack.length - 1\n\t        });\n\t        functionsCalled.push(funcId);\n\t        pc = ttContext.functionsDefined[funcId];\n\t        if (!pc) {\n\t         warn('TT: CALL non-existent function');\n\t         ttContext.hintsValid = false;\n\t         return;\n\t        }\n\t        data = pc.data;\n\t        i = pc.i;\n\t       }\n\t      }\n\t     } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n\t      if (inFDEF || inELSE) {\n\t       warn('TT: nested FDEFs not allowed');\n\t       tooComplexToFollowFunctions = true;\n\t      }\n\t      inFDEF = true;\n\t      lastDeff = i;\n\t      funcId = stack.pop();\n\t      ttContext.functionsDefined[funcId] = {\n\t       data: data,\n\t       i: i\n\t      };\n\t     } else if (op === 0x2D) {\n\t      if (inFDEF) {\n\t       inFDEF = false;\n\t       lastEndf = i;\n\t      } else {\n\t       pc = callstack.pop();\n\t       if (!pc) {\n\t        warn('TT: ENDF bad stack');\n\t        ttContext.hintsValid = false;\n\t        return;\n\t       }\n\t       funcId = functionsCalled.pop();\n\t       data = pc.data;\n\t       i = pc.i;\n\t       ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n\t      }\n\t     } else if (op === 0x89) {\n\t      if (inFDEF || inELSE) {\n\t       warn('TT: nested IDEFs not allowed');\n\t       tooComplexToFollowFunctions = true;\n\t      }\n\t      inFDEF = true;\n\t      lastDeff = i;\n\t     } else if (op === 0x58) {\n\t      ++ifLevel;\n\t     } else if (op === 0x1B) {\n\t      inELSE = ifLevel;\n\t     } else if (op === 0x59) {\n\t      if (inELSE === ifLevel) {\n\t       inELSE = 0;\n\t      }\n\t      --ifLevel;\n\t     } else if (op === 0x1C) {\n\t      if (!inFDEF && !inELSE) {\n\t       var offset = stack[stack.length - 1];\n\t       if (offset > 0) {\n\t        i += offset - 1;\n\t       }\n\t      }\n\t     }\n\t     if (!inFDEF && !inELSE) {\n\t      var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n\t      if (op >= 0x71 && op <= 0x75) {\n\t       n = stack.pop();\n\t       if (!isNaN(n)) {\n\t        stackDelta = -n * 2;\n\t       }\n\t      }\n\t      while (stackDelta < 0 && stack.length > 0) {\n\t       stack.pop();\n\t       stackDelta++;\n\t      }\n\t      while (stackDelta > 0) {\n\t       stack.push(NaN);\n\t       stackDelta--;\n\t      }\n\t     }\n\t    }\n\t    ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n\t    var content = [data];\n\t    if (i > data.length) {\n\t     content.push(new Uint8Array(i - data.length));\n\t    }\n\t    if (lastDeff > lastEndf) {\n\t     warn('TT: complementing a missing function tail');\n\t     content.push(new Uint8Array([\n\t      0x22,\n\t      0x2D\n\t     ]));\n\t    }\n\t    foldTTTable(table, content);\n\t   }\n\t   function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n\t    if (ttContext.tooComplexToFollowFunctions) {\n\t     return;\n\t    }\n\t    if (ttContext.functionsDefined.length > maxFunctionDefs) {\n\t     warn('TT: more functions defined than expected');\n\t     ttContext.hintsValid = false;\n\t     return;\n\t    }\n\t    for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n\t     if (j > maxFunctionDefs) {\n\t      warn('TT: invalid function id: ' + j);\n\t      ttContext.hintsValid = false;\n\t      return;\n\t     }\n\t     if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n\t      warn('TT: undefined function: ' + j);\n\t      ttContext.hintsValid = false;\n\t      return;\n\t     }\n\t    }\n\t   }\n\t   function foldTTTable(table, content) {\n\t    if (content.length > 1) {\n\t     var newLength = 0;\n\t     var j, jj;\n\t     for (j = 0, jj = content.length; j < jj; j++) {\n\t      newLength += content[j].length;\n\t     }\n\t     newLength = newLength + 3 & ~3;\n\t     var result = new Uint8Array(newLength);\n\t     var pos = 0;\n\t     for (j = 0, jj = content.length; j < jj; j++) {\n\t      result.set(content[j], pos);\n\t      pos += content[j].length;\n\t     }\n\t     table.data = result;\n\t     table.length = newLength;\n\t    }\n\t   }\n\t   function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n\t    var ttContext = {\n\t     functionsDefined: [],\n\t     functionsUsed: [],\n\t     functionsStackDeltas: [],\n\t     tooComplexToFollowFunctions: false,\n\t     hintsValid: true\n\t    };\n\t    if (fpgm) {\n\t     sanitizeTTProgram(fpgm, ttContext);\n\t    }\n\t    if (prep) {\n\t     sanitizeTTProgram(prep, ttContext);\n\t    }\n\t    if (fpgm) {\n\t     checkInvalidFunctions(ttContext, maxFunctionDefs);\n\t    }\n\t    if (cvt && cvt.length & 1) {\n\t     var cvtData = new Uint8Array(cvt.length + 1);\n\t     cvtData.set(cvt.data);\n\t     cvt.data = cvtData;\n\t    }\n\t    return ttContext.hintsValid;\n\t   }\n\t   font = new Stream(new Uint8Array(font.getBytes()));\n\t   var VALID_TABLES = [\n\t    'OS/2',\n\t    'cmap',\n\t    'head',\n\t    'hhea',\n\t    'hmtx',\n\t    'maxp',\n\t    'name',\n\t    'post',\n\t    'loca',\n\t    'glyf',\n\t    'fpgm',\n\t    'prep',\n\t    'cvt ',\n\t    'CFF '\n\t   ];\n\t   var header = readOpenTypeHeader(font);\n\t   var numTables = header.numTables;\n\t   var cff, cffFile;\n\t   var tables = Object.create(null);\n\t   tables['OS/2'] = null;\n\t   tables['cmap'] = null;\n\t   tables['head'] = null;\n\t   tables['hhea'] = null;\n\t   tables['hmtx'] = null;\n\t   tables['maxp'] = null;\n\t   tables['name'] = null;\n\t   tables['post'] = null;\n\t   var table;\n\t   for (var i = 0; i < numTables; i++) {\n\t    table = readTableEntry(font);\n\t    if (VALID_TABLES.indexOf(table.tag) < 0) {\n\t     continue;\n\t    }\n\t    if (table.length === 0) {\n\t     continue;\n\t    }\n\t    tables[table.tag] = table;\n\t   }\n\t   var isTrueType = !tables['CFF '];\n\t   if (!isTrueType) {\n\t    if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n\t     cffFile = new Stream(tables['CFF '].data);\n\t     cff = new CFFFont(cffFile, properties);\n\t     adjustWidths(properties);\n\t     return this.convert(name, cff, properties);\n\t    }\n\t    delete tables['glyf'];\n\t    delete tables['loca'];\n\t    delete tables['fpgm'];\n\t    delete tables['prep'];\n\t    delete tables['cvt '];\n\t    this.isOpenType = true;\n\t   } else {\n\t    if (!tables['loca']) {\n\t     error('Required \"loca\" table is not found');\n\t    }\n\t    if (!tables['glyf']) {\n\t     warn('Required \"glyf\" table is not found -- trying to recover.');\n\t     tables['glyf'] = {\n\t      tag: 'glyf',\n\t      data: new Uint8Array(0)\n\t     };\n\t    }\n\t    this.isOpenType = false;\n\t   }\n\t   if (!tables['maxp']) {\n\t    error('Required \"maxp\" table is not found');\n\t   }\n\t   font.pos = (font.start || 0) + tables['maxp'].offset;\n\t   var version = font.getInt32();\n\t   var numGlyphs = font.getUint16();\n\t   var maxFunctionDefs = 0;\n\t   if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t    font.pos += 8;\n\t    var maxZones = font.getUint16();\n\t    if (maxZones > 2) {\n\t     tables['maxp'].data[14] = 0;\n\t     tables['maxp'].data[15] = 2;\n\t    }\n\t    font.pos += 4;\n\t    maxFunctionDefs = font.getUint16();\n\t   }\n\t   var dupFirstEntry = false;\n\t   if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n\t    dupFirstEntry = true;\n\t    numGlyphs++;\n\t    tables['maxp'].data[4] = numGlyphs >> 8;\n\t    tables['maxp'].data[5] = numGlyphs & 255;\n\t   }\n\t   var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n\t   if (!hintsValid) {\n\t    delete tables['fpgm'];\n\t    delete tables['prep'];\n\t    delete tables['cvt '];\n\t   }\n\t   sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n\t   if (!tables['head']) {\n\t    error('Required \"head\" table is not found');\n\t   }\n\t   sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n\t   var missingGlyphs = Object.create(null);\n\t   if (isTrueType) {\n\t    var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n\t    missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n\t   }\n\t   if (!tables['hhea']) {\n\t    error('Required \"hhea\" table is not found');\n\t   }\n\t   if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n\t    tables['hhea'].data[10] = 0xFF;\n\t    tables['hhea'].data[11] = 0xFF;\n\t   }\n\t   var metricsOverride = {\n\t    unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n\t    yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n\t    yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n\t    ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n\t    descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n\t   };\n\t   this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n\t   this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\t   if (tables['post']) {\n\t    var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n\t    if (!valid) {\n\t     tables['post'] = null;\n\t    }\n\t   }\n\t   var charCodeToGlyphId = [], charCode;\n\t   var toUnicode = properties.toUnicode, widths = properties.widths;\n\t   var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n\t   function hasGlyph(glyphId, charCode, widthCode) {\n\t    if (!missingGlyphs[glyphId]) {\n\t     return true;\n\t    }\n\t    if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n\t     return true;\n\t    }\n\t    if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n\t     return true;\n\t    }\n\t    return false;\n\t   }\n\t   if (properties.composite) {\n\t    var cidToGidMap = properties.cidToGidMap || [];\n\t    var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\t    properties.cMap.forEach(function (charCode, cid) {\n\t     assert(cid <= 0xffff, 'Max size of CID is 65,535');\n\t     var glyphId = -1;\n\t     if (isCidToGidMapEmpty) {\n\t      glyphId = cid;\n\t     } else if (cidToGidMap[cid] !== undefined) {\n\t      glyphId = cidToGidMap[cid];\n\t     }\n\t     if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n\t      charCodeToGlyphId[charCode] = glyphId;\n\t     }\n\t    });\n\t    if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n\t     charCodeToGlyphId[0] = numGlyphs - 1;\n\t    }\n\t   } else {\n\t    var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n\t    var cmapPlatformId = cmapTable.platformId;\n\t    var cmapEncodingId = cmapTable.encodingId;\n\t    var cmapMappings = cmapTable.mappings;\n\t    var cmapMappingsLength = cmapMappings.length;\n\t    if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n\t     var baseEncoding = [];\n\t     if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n\t      baseEncoding = getEncoding(properties.baseEncodingName);\n\t     }\n\t     var glyphsUnicodeMap = getGlyphsUnicode();\n\t     for (charCode = 0; charCode < 256; charCode++) {\n\t      var glyphName, standardGlyphName;\n\t      if (this.differences && charCode in this.differences) {\n\t       glyphName = this.differences[charCode];\n\t      } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n\t       glyphName = baseEncoding[charCode];\n\t      } else {\n\t       glyphName = StandardEncoding[charCode];\n\t      }\n\t      if (!glyphName) {\n\t       continue;\n\t      }\n\t      standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t      var unicodeOrCharCode, isUnicode = false;\n\t      if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n\t       unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n\t       isUnicode = true;\n\t      } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n\t       unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n\t      }\n\t      var found = false;\n\t      for (i = 0; i < cmapMappingsLength; ++i) {\n\t       if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n\t        continue;\n\t       }\n\t       var code = isUnicode ? charCode : unicodeOrCharCode;\n\t       if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n\t        charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t        found = true;\n\t        break;\n\t       }\n\t      }\n\t      if (!found && properties.glyphNames) {\n\t       var glyphId = properties.glyphNames.indexOf(glyphName);\n\t       if (glyphId === -1 && standardGlyphName !== glyphName) {\n\t        glyphId = properties.glyphNames.indexOf(standardGlyphName);\n\t       }\n\t       if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t        found = true;\n\t       }\n\t      }\n\t      if (!found) {\n\t       charCodeToGlyphId[charCode] = 0;\n\t      }\n\t     }\n\t    } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n\t     for (i = 0; i < cmapMappingsLength; ++i) {\n\t      charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n\t     }\n\t    } else {\n\t     for (i = 0; i < cmapMappingsLength; ++i) {\n\t      charCode = cmapMappings[i].charCode & 0xFF;\n\t      charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t     }\n\t    }\n\t   }\n\t   if (charCodeToGlyphId.length === 0) {\n\t    charCodeToGlyphId[0] = 0;\n\t   }\n\t   var newMapping = adjustMapping(charCodeToGlyphId, properties);\n\t   this.toFontChar = newMapping.toFontChar;\n\t   tables['cmap'] = {\n\t    tag: 'cmap',\n\t    data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n\t   };\n\t   if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n\t    tables['OS/2'] = {\n\t     tag: 'OS/2',\n\t     data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n\t    };\n\t   }\n\t   if (!tables['post']) {\n\t    tables['post'] = {\n\t     tag: 'post',\n\t     data: createPostTable(properties)\n\t    };\n\t   }\n\t   if (!isTrueType) {\n\t    try {\n\t     cffFile = new Stream(tables['CFF '].data);\n\t     var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n\t     cff = parser.parse();\n\t     var compiler = new CFFCompiler(cff);\n\t     tables['CFF '].data = compiler.compile();\n\t    } catch (e) {\n\t     warn('Failed to compile font ' + properties.loadedName);\n\t    }\n\t   }\n\t   if (!tables['name']) {\n\t    tables['name'] = {\n\t     tag: 'name',\n\t     data: createNameTable(this.name)\n\t    };\n\t   } else {\n\t    var namePrototype = readNameTable(tables['name']);\n\t    tables['name'].data = createNameTable(name, namePrototype);\n\t   }\n\t   var builder = new OpenTypeFileBuilder(header.version);\n\t   for (var tableTag in tables) {\n\t    builder.addTable(tableTag, tables[tableTag].data);\n\t   }\n\t   return builder.toArray();\n\t  },\n\t  convert: function Font_convert(fontName, font, properties) {\n\t   properties.fixedPitch = false;\n\t   if (properties.builtInEncoding) {\n\t    adjustToUnicode(properties, properties.builtInEncoding);\n\t   }\n\t   var mapping = font.getGlyphMapping(properties);\n\t   var newMapping = adjustMapping(mapping, properties);\n\t   this.toFontChar = newMapping.toFontChar;\n\t   var numGlyphs = font.numGlyphs;\n\t   function getCharCodes(charCodeToGlyphId, glyphId) {\n\t    var charCodes = null;\n\t    for (var charCode in charCodeToGlyphId) {\n\t     if (glyphId === charCodeToGlyphId[charCode]) {\n\t      if (!charCodes) {\n\t       charCodes = [];\n\t      }\n\t      charCodes.push(charCode | 0);\n\t     }\n\t    }\n\t    return charCodes;\n\t   }\n\t   function createCharCode(charCodeToGlyphId, glyphId) {\n\t    for (var charCode in charCodeToGlyphId) {\n\t     if (glyphId === charCodeToGlyphId[charCode]) {\n\t      return charCode | 0;\n\t     }\n\t    }\n\t    newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n\t    return newMapping.nextAvailableFontCharCode++;\n\t   }\n\t   var seacs = font.seacs;\n\t   if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n\t    var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n\t    var charset = font.getCharset();\n\t    var seacMap = Object.create(null);\n\t    for (var glyphId in seacs) {\n\t     glyphId |= 0;\n\t     var seac = seacs[glyphId];\n\t     var baseGlyphName = StandardEncoding[seac[2]];\n\t     var accentGlyphName = StandardEncoding[seac[3]];\n\t     var baseGlyphId = charset.indexOf(baseGlyphName);\n\t     var accentGlyphId = charset.indexOf(accentGlyphName);\n\t     if (baseGlyphId < 0 || accentGlyphId < 0) {\n\t      continue;\n\t     }\n\t     var accentOffset = {\n\t      x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n\t      y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n\t     };\n\t     var charCodes = getCharCodes(mapping, glyphId);\n\t     if (!charCodes) {\n\t      continue;\n\t     }\n\t     for (var i = 0, ii = charCodes.length; i < ii; i++) {\n\t      var charCode = charCodes[i];\n\t      var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n\t      var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n\t      var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n\t      seacMap[charCode] = {\n\t       baseFontCharCode: baseFontCharCode,\n\t       accentFontCharCode: accentFontCharCode,\n\t       accentOffset: accentOffset\n\t      };\n\t     }\n\t    }\n\t    properties.seacMap = seacMap;\n\t   }\n\t   var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n\t   var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n\t   builder.addTable('CFF ', font.data);\n\t   builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n\t   builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n\t   builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n\t   builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n\t   builder.addTable('hmtx', function fontFieldsHmtx() {\n\t    var charstrings = font.charstrings;\n\t    var cffWidths = font.cff ? font.cff.widths : null;\n\t    var hmtx = '\\x00\\x00\\x00\\x00';\n\t    for (var i = 1, ii = numGlyphs; i < ii; i++) {\n\t     var width = 0;\n\t     if (charstrings) {\n\t      var charstring = charstrings[i - 1];\n\t      width = 'width' in charstring ? charstring.width : 0;\n\t     } else if (cffWidths) {\n\t      width = Math.ceil(cffWidths[i] || 0);\n\t     }\n\t     hmtx += string16(width) + string16(0);\n\t    }\n\t    return hmtx;\n\t   }());\n\t   builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n\t   builder.addTable('name', createNameTable(fontName));\n\t   builder.addTable('post', createPostTable(properties));\n\t   return builder.toArray();\n\t  },\n\t  get spaceWidth() {\n\t   if ('_shadowWidth' in this) {\n\t    return this._shadowWidth;\n\t   }\n\t   var possibleSpaceReplacements = [\n\t    'space',\n\t    'minus',\n\t    'one',\n\t    'i',\n\t    'I'\n\t   ];\n\t   var width;\n\t   for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n\t    var glyphName = possibleSpaceReplacements[i];\n\t    if (glyphName in this.widths) {\n\t     width = this.widths[glyphName];\n\t     break;\n\t    }\n\t    var glyphsUnicodeMap = getGlyphsUnicode();\n\t    var glyphUnicode = glyphsUnicodeMap[glyphName];\n\t    var charcode = 0;\n\t    if (this.composite) {\n\t     if (this.cMap.contains(glyphUnicode)) {\n\t      charcode = this.cMap.lookup(glyphUnicode);\n\t     }\n\t    }\n\t    if (!charcode && this.toUnicode) {\n\t     charcode = this.toUnicode.charCodeOf(glyphUnicode);\n\t    }\n\t    if (charcode <= 0) {\n\t     charcode = glyphUnicode;\n\t    }\n\t    width = this.widths[charcode];\n\t    if (width) {\n\t     break;\n\t    }\n\t   }\n\t   width = width || this.defaultWidth;\n\t   this._shadowWidth = width;\n\t   return width;\n\t  },\n\t  charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n\t   var fontCharCode, width, operatorListId;\n\t   var widthCode = charcode;\n\t   if (this.cMap && this.cMap.contains(charcode)) {\n\t    widthCode = this.cMap.lookup(charcode);\n\t   }\n\t   width = this.widths[widthCode];\n\t   width = isNum(width) ? width : this.defaultWidth;\n\t   var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\t   var unicode = this.toUnicode.get(charcode) || charcode;\n\t   if (typeof unicode === 'number') {\n\t    unicode = String.fromCharCode(unicode);\n\t   }\n\t   var isInFont = charcode in this.toFontChar;\n\t   fontCharCode = this.toFontChar[charcode] || charcode;\n\t   if (this.missingFile) {\n\t    fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n\t   }\n\t   if (this.isType3Font) {\n\t    operatorListId = fontCharCode;\n\t   }\n\t   var accent = null;\n\t   if (this.seacMap && this.seacMap[charcode]) {\n\t    isInFont = true;\n\t    var seac = this.seacMap[charcode];\n\t    fontCharCode = seac.baseFontCharCode;\n\t    accent = {\n\t     fontChar: String.fromCharCode(seac.accentFontCharCode),\n\t     offset: seac.accentOffset\n\t    };\n\t   }\n\t   var fontChar = String.fromCharCode(fontCharCode);\n\t   var glyph = this.glyphCache[charcode];\n\t   if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n\t    glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n\t    this.glyphCache[charcode] = glyph;\n\t   }\n\t   return glyph;\n\t  },\n\t  charsToGlyphs: function Font_charsToGlyphs(chars) {\n\t   var charsCache = this.charsCache;\n\t   var glyphs, glyph, charcode;\n\t   if (charsCache) {\n\t    glyphs = charsCache[chars];\n\t    if (glyphs) {\n\t     return glyphs;\n\t    }\n\t   }\n\t   if (!charsCache) {\n\t    charsCache = this.charsCache = Object.create(null);\n\t   }\n\t   glyphs = [];\n\t   var charsCacheKey = chars;\n\t   var i = 0, ii;\n\t   if (this.cMap) {\n\t    var c = Object.create(null);\n\t    while (i < chars.length) {\n\t     this.cMap.readCharCode(chars, i, c);\n\t     charcode = c.charcode;\n\t     var length = c.length;\n\t     i += length;\n\t     var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n\t     glyph = this.charToGlyph(charcode, isSpace);\n\t     glyphs.push(glyph);\n\t    }\n\t   } else {\n\t    for (i = 0, ii = chars.length; i < ii; ++i) {\n\t     charcode = chars.charCodeAt(i);\n\t     glyph = this.charToGlyph(charcode, charcode === 0x20);\n\t     glyphs.push(glyph);\n\t    }\n\t   }\n\t   return charsCache[charsCacheKey] = glyphs;\n\t  }\n\t };\n\t return Font;\n\t}();\n\tvar ErrorFont = function ErrorFontClosure() {\n\t function ErrorFont(error) {\n\t  this.error = error;\n\t  this.loadedName = 'g_font_error';\n\t  this.loading = false;\n\t }\n\t ErrorFont.prototype = {\n\t  charsToGlyphs: function ErrorFont_charsToGlyphs() {\n\t   return [];\n\t  },\n\t  exportData: function ErrorFont_exportData() {\n\t   return { error: this.error };\n\t  }\n\t };\n\t return ErrorFont;\n\t}();\n\tfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n\t var charCodeToGlyphId = Object.create(null);\n\t var glyphId, charCode, baseEncoding;\n\t var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t if (properties.baseEncodingName) {\n\t  baseEncoding = getEncoding(properties.baseEncodingName);\n\t  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t   if (glyphId >= 0) {\n\t    charCodeToGlyphId[charCode] = glyphId;\n\t   } else {\n\t    charCodeToGlyphId[charCode] = 0;\n\t   }\n\t  }\n\t } else if (isSymbolicFont) {\n\t  for (charCode in builtInEncoding) {\n\t   charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n\t  }\n\t } else {\n\t  baseEncoding = StandardEncoding;\n\t  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t   if (glyphId >= 0) {\n\t    charCodeToGlyphId[charCode] = glyphId;\n\t   } else {\n\t    charCodeToGlyphId[charCode] = 0;\n\t   }\n\t  }\n\t }\n\t var differences = properties.differences, glyphsUnicodeMap;\n\t if (differences) {\n\t  for (charCode in differences) {\n\t   var glyphName = differences[charCode];\n\t   glyphId = glyphNames.indexOf(glyphName);\n\t   if (glyphId === -1) {\n\t    if (!glyphsUnicodeMap) {\n\t     glyphsUnicodeMap = getGlyphsUnicode();\n\t    }\n\t    var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t    if (standardGlyphName !== glyphName) {\n\t     glyphId = glyphNames.indexOf(standardGlyphName);\n\t    }\n\t   }\n\t   if (glyphId >= 0) {\n\t    charCodeToGlyphId[charCode] = glyphId;\n\t   } else {\n\t    charCodeToGlyphId[charCode] = 0;\n\t   }\n\t  }\n\t }\n\t return charCodeToGlyphId;\n\t}\n\tvar Type1Font = function Type1FontClosure() {\n\t function findBlock(streamBytes, signature, startIndex) {\n\t  var streamBytesLength = streamBytes.length;\n\t  var signatureLength = signature.length;\n\t  var scanLength = streamBytesLength - signatureLength;\n\t  var i = startIndex, j, found = false;\n\t  while (i < scanLength) {\n\t   j = 0;\n\t   while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n\t    j++;\n\t   }\n\t   if (j >= signatureLength) {\n\t    i += j;\n\t    while (i < streamBytesLength && isSpace(streamBytes[i])) {\n\t     i++;\n\t    }\n\t    found = true;\n\t    break;\n\t   }\n\t   i++;\n\t  }\n\t  return {\n\t   found: found,\n\t   length: i\n\t  };\n\t }\n\t function getHeaderBlock(stream, suggestedLength) {\n\t  var EEXEC_SIGNATURE = [\n\t   0x65,\n\t   0x65,\n\t   0x78,\n\t   0x65,\n\t   0x63\n\t  ];\n\t  var streamStartPos = stream.pos;\n\t  var headerBytes, headerBytesLength, block;\n\t  try {\n\t   headerBytes = stream.getBytes(suggestedLength);\n\t   headerBytesLength = headerBytes.length;\n\t  } catch (ex) {\n\t   if (ex instanceof MissingDataException) {\n\t    throw ex;\n\t   }\n\t  }\n\t  if (headerBytesLength === suggestedLength) {\n\t   block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\t   if (block.found && block.length === suggestedLength) {\n\t    return {\n\t     stream: new Stream(headerBytes),\n\t     length: suggestedLength\n\t    };\n\t   }\n\t  }\n\t  warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n\t  stream.pos = streamStartPos;\n\t  var SCAN_BLOCK_LENGTH = 2048;\n\t  var actualLength;\n\t  while (true) {\n\t   var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n\t   block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\t   if (block.length === 0) {\n\t    break;\n\t   }\n\t   stream.pos += block.length;\n\t   if (block.found) {\n\t    actualLength = stream.pos - streamStartPos;\n\t    break;\n\t   }\n\t  }\n\t  stream.pos = streamStartPos;\n\t  if (actualLength) {\n\t   return {\n\t    stream: new Stream(stream.getBytes(actualLength)),\n\t    length: actualLength\n\t   };\n\t  }\n\t  warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n\t  return {\n\t   stream: new Stream(stream.getBytes(suggestedLength)),\n\t   length: suggestedLength\n\t  };\n\t }\n\t function getEexecBlock(stream, suggestedLength) {\n\t  var eexecBytes = stream.getBytes();\n\t  return {\n\t   stream: new Stream(eexecBytes),\n\t   length: eexecBytes.length\n\t  };\n\t }\n\t function Type1Font(name, file, properties) {\n\t  var PFB_HEADER_SIZE = 6;\n\t  var headerBlockLength = properties.length1;\n\t  var eexecBlockLength = properties.length2;\n\t  var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n\t  var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\t  if (pfbHeaderPresent) {\n\t   file.skip(PFB_HEADER_SIZE);\n\t   headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t  }\n\t  var headerBlock = getHeaderBlock(file, headerBlockLength);\n\t  headerBlockLength = headerBlock.length;\n\t  var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n\t  headerBlockParser.extractFontHeader(properties);\n\t  if (pfbHeaderPresent) {\n\t   pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n\t   eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t  }\n\t  var eexecBlock = getEexecBlock(file, eexecBlockLength);\n\t  eexecBlockLength = eexecBlock.length;\n\t  var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n\t  var data = eexecBlockParser.extractFontProgram();\n\t  for (var info in data.properties) {\n\t   properties[info] = data.properties[info];\n\t  }\n\t  var charstrings = data.charstrings;\n\t  var type2Charstrings = this.getType2Charstrings(charstrings);\n\t  var subrs = this.getType2Subrs(data.subrs);\n\t  this.charstrings = charstrings;\n\t  this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n\t  this.seacs = this.getSeacs(data.charstrings);\n\t }\n\t Type1Font.prototype = {\n\t  get numGlyphs() {\n\t   return this.charstrings.length + 1;\n\t  },\n\t  getCharset: function Type1Font_getCharset() {\n\t   var charset = ['.notdef'];\n\t   var charstrings = this.charstrings;\n\t   for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t    charset.push(charstrings[glyphId].glyphName);\n\t   }\n\t   return charset;\n\t  },\n\t  getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n\t   var charstrings = this.charstrings;\n\t   var glyphNames = ['.notdef'], glyphId;\n\t   for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t    glyphNames.push(charstrings[glyphId].glyphName);\n\t   }\n\t   var encoding = properties.builtInEncoding;\n\t   if (encoding) {\n\t    var builtInEncoding = Object.create(null);\n\t    for (var charCode in encoding) {\n\t     glyphId = glyphNames.indexOf(encoding[charCode]);\n\t     if (glyphId >= 0) {\n\t      builtInEncoding[charCode] = glyphId;\n\t     }\n\t    }\n\t   }\n\t   return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n\t  },\n\t  getSeacs: function Type1Font_getSeacs(charstrings) {\n\t   var i, ii;\n\t   var seacMap = [];\n\t   for (i = 0, ii = charstrings.length; i < ii; i++) {\n\t    var charstring = charstrings[i];\n\t    if (charstring.seac) {\n\t     seacMap[i + 1] = charstring.seac;\n\t    }\n\t   }\n\t   return seacMap;\n\t  },\n\t  getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n\t   var type2Charstrings = [];\n\t   for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n\t    type2Charstrings.push(type1Charstrings[i].charstring);\n\t   }\n\t   return type2Charstrings;\n\t  },\n\t  getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n\t   var bias = 0;\n\t   var count = type1Subrs.length;\n\t   if (count < 1133) {\n\t    bias = 107;\n\t   } else if (count < 33769) {\n\t    bias = 1131;\n\t   } else {\n\t    bias = 32768;\n\t   }\n\t   var type2Subrs = [];\n\t   var i;\n\t   for (i = 0; i < bias; i++) {\n\t    type2Subrs.push([0x0B]);\n\t   }\n\t   for (i = 0; i < count; i++) {\n\t    type2Subrs.push(type1Subrs[i]);\n\t   }\n\t   return type2Subrs;\n\t  },\n\t  wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n\t   var cff = new CFF();\n\t   cff.header = new CFFHeader(1, 0, 4, 4);\n\t   cff.names = [name];\n\t   var topDict = new CFFTopDict();\n\t   topDict.setByName('version', 391);\n\t   topDict.setByName('Notice', 392);\n\t   topDict.setByName('FullName', 393);\n\t   topDict.setByName('FamilyName', 394);\n\t   topDict.setByName('Weight', 395);\n\t   topDict.setByName('Encoding', null);\n\t   topDict.setByName('FontMatrix', properties.fontMatrix);\n\t   topDict.setByName('FontBBox', properties.bbox);\n\t   topDict.setByName('charset', null);\n\t   topDict.setByName('CharStrings', null);\n\t   topDict.setByName('Private', null);\n\t   cff.topDict = topDict;\n\t   var strings = new CFFStrings();\n\t   strings.add('Version 0.11');\n\t   strings.add('See original notice');\n\t   strings.add(name);\n\t   strings.add(name);\n\t   strings.add('Medium');\n\t   cff.strings = strings;\n\t   cff.globalSubrIndex = new CFFIndex();\n\t   var count = glyphs.length;\n\t   var charsetArray = [0];\n\t   var i, ii;\n\t   for (i = 0; i < count; i++) {\n\t    var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n\t    if (index === -1) {\n\t     index = 0;\n\t    }\n\t    charsetArray.push(index >> 8 & 0xff, index & 0xff);\n\t   }\n\t   cff.charset = new CFFCharset(false, 0, [], charsetArray);\n\t   var charStringsIndex = new CFFIndex();\n\t   charStringsIndex.add([\n\t    0x8B,\n\t    0x0E\n\t   ]);\n\t   for (i = 0; i < count; i++) {\n\t    var glyph = glyphs[i];\n\t    if (glyph.length === 0) {\n\t     charStringsIndex.add([\n\t      0x8B,\n\t      0x0E\n\t     ]);\n\t     continue;\n\t    }\n\t    charStringsIndex.add(glyph);\n\t   }\n\t   cff.charStrings = charStringsIndex;\n\t   var privateDict = new CFFPrivateDict();\n\t   privateDict.setByName('Subrs', null);\n\t   var fields = [\n\t    'BlueValues',\n\t    'OtherBlues',\n\t    'FamilyBlues',\n\t    'FamilyOtherBlues',\n\t    'StemSnapH',\n\t    'StemSnapV',\n\t    'BlueShift',\n\t    'BlueFuzz',\n\t    'BlueScale',\n\t    'LanguageGroup',\n\t    'ExpansionFactor',\n\t    'ForceBold',\n\t    'StdHW',\n\t    'StdVW'\n\t   ];\n\t   for (i = 0, ii = fields.length; i < ii; i++) {\n\t    var field = fields[i];\n\t    if (!(field in properties.privateData)) {\n\t     continue;\n\t    }\n\t    var value = properties.privateData[field];\n\t    if (isArray(value)) {\n\t     for (var j = value.length - 1; j > 0; j--) {\n\t      value[j] -= value[j - 1];\n\t     }\n\t    }\n\t    privateDict.setByName(field, value);\n\t   }\n\t   cff.topDict.privateDict = privateDict;\n\t   var subrIndex = new CFFIndex();\n\t   for (i = 0, ii = subrs.length; i < ii; i++) {\n\t    subrIndex.add(subrs[i]);\n\t   }\n\t   privateDict.subrsIndex = subrIndex;\n\t   var compiler = new CFFCompiler(cff);\n\t   return compiler.compile();\n\t  }\n\t };\n\t return Type1Font;\n\t}();\n\tvar CFFFont = function CFFFontClosure() {\n\t function CFFFont(file, properties) {\n\t  this.properties = properties;\n\t  var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n\t  this.cff = parser.parse();\n\t  var compiler = new CFFCompiler(this.cff);\n\t  this.seacs = this.cff.seacs;\n\t  try {\n\t   this.data = compiler.compile();\n\t  } catch (e) {\n\t   warn('Failed to compile font ' + properties.loadedName);\n\t   this.data = file;\n\t  }\n\t }\n\t CFFFont.prototype = {\n\t  get numGlyphs() {\n\t   return this.cff.charStrings.count;\n\t  },\n\t  getCharset: function CFFFont_getCharset() {\n\t   return this.cff.charset.charset;\n\t  },\n\t  getGlyphMapping: function CFFFont_getGlyphMapping() {\n\t   var cff = this.cff;\n\t   var properties = this.properties;\n\t   var charsets = cff.charset.charset;\n\t   var charCodeToGlyphId;\n\t   var glyphId;\n\t   if (properties.composite) {\n\t    charCodeToGlyphId = Object.create(null);\n\t    if (cff.isCIDFont) {\n\t     for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n\t      var cid = charsets[glyphId];\n\t      var charCode = properties.cMap.charCodeOf(cid);\n\t      charCodeToGlyphId[charCode] = glyphId;\n\t     }\n\t    } else {\n\t     for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n\t      charCodeToGlyphId[glyphId] = glyphId;\n\t     }\n\t    }\n\t    return charCodeToGlyphId;\n\t   }\n\t   var encoding = cff.encoding ? cff.encoding.encoding : null;\n\t   charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n\t   return charCodeToGlyphId;\n\t  }\n\t };\n\t return CFFFont;\n\t}();\n\t(function checkSeacSupport() {\n\t if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n\t  SEAC_ANALYSIS_ENABLED = true;\n\t }\n\t}());\n\t(function checkChromeWindows() {\n\t if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n\t  SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n\t }\n\t}());\n\texports.ErrorFont = ErrorFont;\n\texports.Font = Font;\n\texports.FontFlags = FontFlags;\n\texports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\texports.ToUnicodeMap = ToUnicodeMap;\n\texports.getFontType = getFontType;\n\t\n\t/***/ }),\n\t/* 27 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreColorSpace = __w_pdfjs_require__(3);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreJpx = __w_pdfjs_require__(14);\n\tvar ImageKind = sharedUtil.ImageKind;\n\tvar assert = sharedUtil.assert;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar isArray = sharedUtil.isArray;\n\tvar warn = sharedUtil.warn;\n\tvar Name = corePrimitives.Name;\n\tvar isStream = corePrimitives.isStream;\n\tvar ColorSpace = coreColorSpace.ColorSpace;\n\tvar DecodeStream = coreStream.DecodeStream;\n\tvar JpegStream = coreStream.JpegStream;\n\tvar JpxImage = coreJpx.JpxImage;\n\tvar PDFImage = function PDFImageClosure() {\n\t function handleImageData(image, nativeDecoder) {\n\t  if (nativeDecoder && nativeDecoder.canDecode(image)) {\n\t   return nativeDecoder.decode(image);\n\t  }\n\t  return Promise.resolve(image);\n\t }\n\t function decodeAndClamp(value, addend, coefficient, max) {\n\t  value = addend + value * coefficient;\n\t  return value < 0 ? 0 : value > max ? max : value;\n\t }\n\t function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n\t  var length = w2 * h2;\n\t  var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t  var xRatio = w1 / w2;\n\t  var yRatio = h1 / h2;\n\t  var i, j, py, newIndex = 0, oldIndex;\n\t  var xScaled = new Uint16Array(w2);\n\t  var w1Scanline = w1;\n\t  for (i = 0; i < w2; i++) {\n\t   xScaled[i] = Math.floor(i * xRatio);\n\t  }\n\t  for (i = 0; i < h2; i++) {\n\t   py = Math.floor(i * yRatio) * w1Scanline;\n\t   for (j = 0; j < w2; j++) {\n\t    oldIndex = py + xScaled[j];\n\t    dest[newIndex++] = src[oldIndex];\n\t   }\n\t  }\n\t  return dest;\n\t }\n\t function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n\t  this.image = image;\n\t  var dict = image.dict;\n\t  if (dict.has('Filter')) {\n\t   var filter = dict.get('Filter').name;\n\t   if (filter === 'JPXDecode') {\n\t    var jpxImage = new JpxImage();\n\t    jpxImage.parseImageProperties(image.stream);\n\t    image.stream.reset();\n\t    image.bitsPerComponent = jpxImage.bitsPerComponent;\n\t    image.numComps = jpxImage.componentsCount;\n\t   } else if (filter === 'JBIG2Decode') {\n\t    image.bitsPerComponent = 1;\n\t    image.numComps = 1;\n\t   }\n\t  }\n\t  this.width = dict.get('Width', 'W');\n\t  this.height = dict.get('Height', 'H');\n\t  if (this.width < 1 || this.height < 1) {\n\t   error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n\t  }\n\t  this.interpolate = dict.get('Interpolate', 'I') || false;\n\t  this.imageMask = dict.get('ImageMask', 'IM') || false;\n\t  this.matte = dict.get('Matte') || false;\n\t  var bitsPerComponent = image.bitsPerComponent;\n\t  if (!bitsPerComponent) {\n\t   bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n\t   if (!bitsPerComponent) {\n\t    if (this.imageMask) {\n\t     bitsPerComponent = 1;\n\t    } else {\n\t     error('Bits per component missing in image: ' + this.imageMask);\n\t    }\n\t   }\n\t  }\n\t  this.bpc = bitsPerComponent;\n\t  if (!this.imageMask) {\n\t   var colorSpace = dict.get('ColorSpace', 'CS');\n\t   if (!colorSpace) {\n\t    info('JPX images (which do not require color spaces)');\n\t    switch (image.numComps) {\n\t    case 1:\n\t     colorSpace = Name.get('DeviceGray');\n\t     break;\n\t    case 3:\n\t     colorSpace = Name.get('DeviceRGB');\n\t     break;\n\t    case 4:\n\t     colorSpace = Name.get('DeviceCMYK');\n\t     break;\n\t    default:\n\t     error('JPX images with ' + this.numComps + ' color components not supported.');\n\t    }\n\t   }\n\t   this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n\t   this.numComps = this.colorSpace.numComps;\n\t  }\n\t  this.decode = dict.getArray('Decode', 'D');\n\t  this.needsDecode = false;\n\t  if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n\t   this.needsDecode = true;\n\t   var max = (1 << bitsPerComponent) - 1;\n\t   this.decodeCoefficients = [];\n\t   this.decodeAddends = [];\n\t   for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n\t    var dmin = this.decode[i];\n\t    var dmax = this.decode[i + 1];\n\t    this.decodeCoefficients[j] = dmax - dmin;\n\t    this.decodeAddends[j] = max * dmin;\n\t   }\n\t  }\n\t  if (smask) {\n\t   this.smask = new PDFImage(xref, res, smask, false);\n\t  } else if (mask) {\n\t   if (isStream(mask)) {\n\t    var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n\t    if (!imageMask) {\n\t     warn('Ignoring /Mask in image without /ImageMask.');\n\t    } else {\n\t     this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n\t    }\n\t   } else {\n\t    this.mask = mask;\n\t   }\n\t  }\n\t }\n\t PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n\t  var imagePromise = handleImageData(image, nativeDecoder);\n\t  var smaskPromise;\n\t  var maskPromise;\n\t  var smask = image.dict.get('SMask');\n\t  var mask = image.dict.get('Mask');\n\t  if (smask) {\n\t   smaskPromise = handleImageData(smask, nativeDecoder);\n\t   maskPromise = Promise.resolve(null);\n\t  } else {\n\t   smaskPromise = Promise.resolve(null);\n\t   if (mask) {\n\t    if (isStream(mask)) {\n\t     maskPromise = handleImageData(mask, nativeDecoder);\n\t    } else if (isArray(mask)) {\n\t     maskPromise = Promise.resolve(mask);\n\t    } else {\n\t     warn('Unsupported mask format.');\n\t     maskPromise = Promise.resolve(null);\n\t    }\n\t   } else {\n\t    maskPromise = Promise.resolve(null);\n\t   }\n\t  }\n\t  return Promise.all([\n\t   imagePromise,\n\t   smaskPromise,\n\t   maskPromise\n\t  ]).then(function (results) {\n\t   var imageData = results[0];\n\t   var smaskData = results[1];\n\t   var maskData = results[2];\n\t   return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n\t  });\n\t };\n\t PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n\t  var computedLength = (width + 7 >> 3) * height;\n\t  var actualLength = imgArray.byteLength;\n\t  var haveFullData = computedLength === actualLength;\n\t  var data, i;\n\t  if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n\t   data = imgArray;\n\t  } else if (!inverseDecode) {\n\t   data = new Uint8Array(actualLength);\n\t   data.set(imgArray);\n\t  } else {\n\t   data = new Uint8Array(computedLength);\n\t   data.set(imgArray);\n\t   for (i = actualLength; i < computedLength; i++) {\n\t    data[i] = 0xff;\n\t   }\n\t  }\n\t  if (inverseDecode) {\n\t   for (i = 0; i < actualLength; i++) {\n\t    data[i] = ~data[i];\n\t   }\n\t  }\n\t  return {\n\t   data: data,\n\t   width: width,\n\t   height: height\n\t  };\n\t };\n\t PDFImage.prototype = {\n\t  get drawWidth() {\n\t   return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n\t  },\n\t  get drawHeight() {\n\t   return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n\t  },\n\t  decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n\t   var bpc = this.bpc;\n\t   var numComps = this.numComps;\n\t   var decodeAddends = this.decodeAddends;\n\t   var decodeCoefficients = this.decodeCoefficients;\n\t   var max = (1 << bpc) - 1;\n\t   var i, ii;\n\t   if (bpc === 1) {\n\t    for (i = 0, ii = buffer.length; i < ii; i++) {\n\t     buffer[i] = +!buffer[i];\n\t    }\n\t    return;\n\t   }\n\t   var index = 0;\n\t   for (i = 0, ii = this.width * this.height; i < ii; i++) {\n\t    for (var j = 0; j < numComps; j++) {\n\t     buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n\t     index++;\n\t    }\n\t   }\n\t  },\n\t  getComponents: function PDFImage_getComponents(buffer) {\n\t   var bpc = this.bpc;\n\t   if (bpc === 8) {\n\t    return buffer;\n\t   }\n\t   var width = this.width;\n\t   var height = this.height;\n\t   var numComps = this.numComps;\n\t   var length = width * height * numComps;\n\t   var bufferPos = 0;\n\t   var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t   var rowComps = width * numComps;\n\t   var max = (1 << bpc) - 1;\n\t   var i = 0, ii, buf;\n\t   if (bpc === 1) {\n\t    var mask, loop1End, loop2End;\n\t    for (var j = 0; j < height; j++) {\n\t     loop1End = i + (rowComps & ~7);\n\t     loop2End = i + rowComps;\n\t     while (i < loop1End) {\n\t      buf = buffer[bufferPos++];\n\t      output[i] = buf >> 7 & 1;\n\t      output[i + 1] = buf >> 6 & 1;\n\t      output[i + 2] = buf >> 5 & 1;\n\t      output[i + 3] = buf >> 4 & 1;\n\t      output[i + 4] = buf >> 3 & 1;\n\t      output[i + 5] = buf >> 2 & 1;\n\t      output[i + 6] = buf >> 1 & 1;\n\t      output[i + 7] = buf & 1;\n\t      i += 8;\n\t     }\n\t     if (i < loop2End) {\n\t      buf = buffer[bufferPos++];\n\t      mask = 128;\n\t      while (i < loop2End) {\n\t       output[i++] = +!!(buf & mask);\n\t       mask >>= 1;\n\t      }\n\t     }\n\t    }\n\t   } else {\n\t    var bits = 0;\n\t    buf = 0;\n\t    for (i = 0, ii = length; i < ii; ++i) {\n\t     if (i % rowComps === 0) {\n\t      buf = 0;\n\t      bits = 0;\n\t     }\n\t     while (bits < bpc) {\n\t      buf = buf << 8 | buffer[bufferPos++];\n\t      bits += 8;\n\t     }\n\t     var remainingBits = bits - bpc;\n\t     var value = buf >> remainingBits;\n\t     output[i] = value < 0 ? 0 : value > max ? max : value;\n\t     buf = buf & (1 << remainingBits) - 1;\n\t     bits = remainingBits;\n\t    }\n\t   }\n\t   return output;\n\t  },\n\t  fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n\t   var smask = this.smask;\n\t   var mask = this.mask;\n\t   var alphaBuf, sw, sh, i, ii, j;\n\t   if (smask) {\n\t    sw = smask.width;\n\t    sh = smask.height;\n\t    alphaBuf = new Uint8Array(sw * sh);\n\t    smask.fillGrayBuffer(alphaBuf);\n\t    if (sw !== width || sh !== height) {\n\t     alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n\t    }\n\t   } else if (mask) {\n\t    if (mask instanceof PDFImage) {\n\t     sw = mask.width;\n\t     sh = mask.height;\n\t     alphaBuf = new Uint8Array(sw * sh);\n\t     mask.numComps = 1;\n\t     mask.fillGrayBuffer(alphaBuf);\n\t     for (i = 0, ii = sw * sh; i < ii; ++i) {\n\t      alphaBuf[i] = 255 - alphaBuf[i];\n\t     }\n\t     if (sw !== width || sh !== height) {\n\t      alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n\t     }\n\t    } else if (isArray(mask)) {\n\t     alphaBuf = new Uint8Array(width * height);\n\t     var numComps = this.numComps;\n\t     for (i = 0, ii = width * height; i < ii; ++i) {\n\t      var opacity = 0;\n\t      var imageOffset = i * numComps;\n\t      for (j = 0; j < numComps; ++j) {\n\t       var color = image[imageOffset + j];\n\t       var maskOffset = j * 2;\n\t       if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n\t        opacity = 255;\n\t        break;\n\t       }\n\t      }\n\t      alphaBuf[i] = opacity;\n\t     }\n\t    } else {\n\t     error('Unknown mask format.');\n\t    }\n\t   }\n\t   if (alphaBuf) {\n\t    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t     rgbaBuf[j] = alphaBuf[i];\n\t    }\n\t   } else {\n\t    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t     rgbaBuf[j] = 255;\n\t    }\n\t   }\n\t  },\n\t  undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n\t   var matte = this.smask && this.smask.matte;\n\t   if (!matte) {\n\t    return;\n\t   }\n\t   var matteRgb = this.colorSpace.getRgb(matte, 0);\n\t   var matteR = matteRgb[0];\n\t   var matteG = matteRgb[1];\n\t   var matteB = matteRgb[2];\n\t   var length = width * height * 4;\n\t   var r, g, b;\n\t   for (var i = 0; i < length; i += 4) {\n\t    var alpha = buffer[i + 3];\n\t    if (alpha === 0) {\n\t     buffer[i] = 255;\n\t     buffer[i + 1] = 255;\n\t     buffer[i + 2] = 255;\n\t     continue;\n\t    }\n\t    var k = 255 / alpha;\n\t    r = (buffer[i] - matteR) * k + matteR;\n\t    g = (buffer[i + 1] - matteG) * k + matteG;\n\t    b = (buffer[i + 2] - matteB) * k + matteB;\n\t    buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n\t    buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n\t    buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n\t   }\n\t  },\n\t  createImageData: function PDFImage_createImageData(forceRGBA) {\n\t   var drawWidth = this.drawWidth;\n\t   var drawHeight = this.drawHeight;\n\t   var imgData = {\n\t    width: drawWidth,\n\t    height: drawHeight\n\t   };\n\t   var numComps = this.numComps;\n\t   var originalWidth = this.width;\n\t   var originalHeight = this.height;\n\t   var bpc = this.bpc;\n\t   var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n\t   var imgArray;\n\t   if (!forceRGBA) {\n\t    var kind;\n\t    if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n\t     kind = ImageKind.GRAYSCALE_1BPP;\n\t    } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n\t     kind = ImageKind.RGB_24BPP;\n\t    }\n\t    if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n\t     imgData.kind = kind;\n\t     imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t     if (this.image instanceof DecodeStream) {\n\t      imgData.data = imgArray;\n\t     } else {\n\t      var newArray = new Uint8Array(imgArray.length);\n\t      newArray.set(imgArray);\n\t      imgData.data = newArray;\n\t     }\n\t     if (this.needsDecode) {\n\t      assert(kind === ImageKind.GRAYSCALE_1BPP);\n\t      var buffer = imgData.data;\n\t      for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t       buffer[i] ^= 0xff;\n\t      }\n\t     }\n\t     return imgData;\n\t    }\n\t    if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n\t     imgData.kind = ImageKind.RGB_24BPP;\n\t     imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n\t     return imgData;\n\t    }\n\t   }\n\t   imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t   var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n\t   var comps = this.getComponents(imgArray);\n\t   var alpha01, maybeUndoPreblend;\n\t   if (!forceRGBA && !this.smask && !this.mask) {\n\t    imgData.kind = ImageKind.RGB_24BPP;\n\t    imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n\t    alpha01 = 0;\n\t    maybeUndoPreblend = false;\n\t   } else {\n\t    imgData.kind = ImageKind.RGBA_32BPP;\n\t    imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n\t    alpha01 = 1;\n\t    maybeUndoPreblend = true;\n\t    this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n\t   }\n\t   if (this.needsDecode) {\n\t    this.decodeBuffer(comps);\n\t   }\n\t   this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\t   if (maybeUndoPreblend) {\n\t    this.undoPreblend(imgData.data, drawWidth, actualHeight);\n\t   }\n\t   return imgData;\n\t  },\n\t  fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n\t   var numComps = this.numComps;\n\t   if (numComps !== 1) {\n\t    error('Reading gray scale from a color image: ' + numComps);\n\t   }\n\t   var width = this.width;\n\t   var height = this.height;\n\t   var bpc = this.bpc;\n\t   var rowBytes = width * numComps * bpc + 7 >> 3;\n\t   var imgArray = this.getImageBytes(height * rowBytes);\n\t   var comps = this.getComponents(imgArray);\n\t   var i, length;\n\t   if (bpc === 1) {\n\t    length = width * height;\n\t    if (this.needsDecode) {\n\t     for (i = 0; i < length; ++i) {\n\t      buffer[i] = comps[i] - 1 & 255;\n\t     }\n\t    } else {\n\t     for (i = 0; i < length; ++i) {\n\t      buffer[i] = -comps[i] & 255;\n\t     }\n\t    }\n\t    return;\n\t   }\n\t   if (this.needsDecode) {\n\t    this.decodeBuffer(comps);\n\t   }\n\t   length = width * height;\n\t   var scale = 255 / ((1 << bpc) - 1);\n\t   for (i = 0; i < length; ++i) {\n\t    buffer[i] = scale * comps[i] | 0;\n\t   }\n\t  },\n\t  getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n\t   this.image.reset();\n\t   this.image.drawWidth = drawWidth || this.width;\n\t   this.image.drawHeight = drawHeight || this.height;\n\t   this.image.forceRGB = !!forceRGB;\n\t   return this.image.getBytes(length);\n\t  }\n\t };\n\t return PDFImage;\n\t}();\n\texports.PDFImage = PDFImage;\n\t\n\t/***/ }),\n\t/* 28 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreArithmeticDecoder = __w_pdfjs_require__(9);\n\tvar error = sharedUtil.error;\n\tvar log2 = sharedUtil.log2;\n\tvar readInt8 = sharedUtil.readInt8;\n\tvar readUint16 = sharedUtil.readUint16;\n\tvar readUint32 = sharedUtil.readUint32;\n\tvar shadow = sharedUtil.shadow;\n\tvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\n\tvar Jbig2Image = function Jbig2ImageClosure() {\n\t function ContextCache() {\n\t }\n\t ContextCache.prototype = {\n\t  getContexts: function (id) {\n\t   if (id in this) {\n\t    return this[id];\n\t   }\n\t   return this[id] = new Int8Array(1 << 16);\n\t  }\n\t };\n\t function DecodingContext(data, start, end) {\n\t  this.data = data;\n\t  this.start = start;\n\t  this.end = end;\n\t }\n\t DecodingContext.prototype = {\n\t  get decoder() {\n\t   var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n\t   return shadow(this, 'decoder', decoder);\n\t  },\n\t  get contextCache() {\n\t   var cache = new ContextCache();\n\t   return shadow(this, 'contextCache', cache);\n\t  }\n\t };\n\t function decodeInteger(contextCache, procedure, decoder) {\n\t  var contexts = contextCache.getContexts(procedure);\n\t  var prev = 1;\n\t  function readBits(length) {\n\t   var v = 0;\n\t   for (var i = 0; i < length; i++) {\n\t    var bit = decoder.readBit(contexts, prev);\n\t    prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n\t    v = v << 1 | bit;\n\t   }\n\t   return v >>> 0;\n\t  }\n\t  var sign = readBits(1);\n\t  var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\t  return sign === 0 ? value : value > 0 ? -value : null;\n\t }\n\t function decodeIAID(contextCache, decoder, codeLength) {\n\t  var contexts = contextCache.getContexts('IAID');\n\t  var prev = 1;\n\t  for (var i = 0; i < codeLength; i++) {\n\t   var bit = decoder.readBit(contexts, prev);\n\t   prev = prev << 1 | bit;\n\t  }\n\t  if (codeLength < 31) {\n\t   return prev & (1 << codeLength) - 1;\n\t  }\n\t  return prev & 0x7FFFFFFF;\n\t }\n\t var SegmentTypes = [\n\t  'SymbolDictionary',\n\t  null,\n\t  null,\n\t  null,\n\t  'IntermediateTextRegion',\n\t  null,\n\t  'ImmediateTextRegion',\n\t  'ImmediateLosslessTextRegion',\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  'patternDictionary',\n\t  null,\n\t  null,\n\t  null,\n\t  'IntermediateHalftoneRegion',\n\t  null,\n\t  'ImmediateHalftoneRegion',\n\t  'ImmediateLosslessHalftoneRegion',\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  'IntermediateGenericRegion',\n\t  null,\n\t  'ImmediateGenericRegion',\n\t  'ImmediateLosslessGenericRegion',\n\t  'IntermediateGenericRefinementRegion',\n\t  null,\n\t  'ImmediateGenericRefinementRegion',\n\t  'ImmediateLosslessGenericRefinementRegion',\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  'PageInformation',\n\t  'EndOfPage',\n\t  'EndOfStripe',\n\t  'EndOfFile',\n\t  'Profiles',\n\t  'Tables',\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  null,\n\t  'Extension'\n\t ];\n\t var CodingTemplates = [\n\t  [\n\t   {\n\t    x: -1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: -2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -4,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -3,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -2,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -1,\n\t    y: 0\n\t   }\n\t  ],\n\t  [\n\t   {\n\t    x: -1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 2,\n\t    y: -2\n\t   },\n\t   {\n\t    x: -2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -3,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -2,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -1,\n\t    y: 0\n\t   }\n\t  ],\n\t  [\n\t   {\n\t    x: -1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -2\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -2\n\t   },\n\t   {\n\t    x: -2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -2,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -1,\n\t    y: 0\n\t   }\n\t  ],\n\t  [\n\t   {\n\t    x: -3,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -2,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 0,\n\t    y: -1\n\t   },\n\t   {\n\t    x: 1,\n\t    y: -1\n\t   },\n\t   {\n\t    x: -4,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -3,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -2,\n\t    y: 0\n\t   },\n\t   {\n\t    x: -1,\n\t    y: 0\n\t   }\n\t  ]\n\t ];\n\t var RefinementTemplates = [\n\t  {\n\t   coding: [\n\t    {\n\t     x: 0,\n\t     y: -1\n\t    },\n\t    {\n\t     x: 1,\n\t     y: -1\n\t    },\n\t    {\n\t     x: -1,\n\t     y: 0\n\t    }\n\t   ],\n\t   reference: [\n\t    {\n\t     x: 0,\n\t     y: -1\n\t    },\n\t    {\n\t     x: 1,\n\t     y: -1\n\t    },\n\t    {\n\t     x: -1,\n\t     y: 0\n\t    },\n\t    {\n\t     x: 0,\n\t     y: 0\n\t    },\n\t    {\n\t     x: 1,\n\t     y: 0\n\t    },\n\t    {\n\t     x: -1,\n\t     y: 1\n\t    },\n\t    {\n\t     x: 0,\n\t     y: 1\n\t    },\n\t    {\n\t     x: 1,\n\t     y: 1\n\t    }\n\t   ]\n\t  },\n\t  {\n\t   coding: [\n\t    {\n\t     x: -1,\n\t     y: -1\n\t    },\n\t    {\n\t     x: 0,\n\t     y: -1\n\t    },\n\t    {\n\t     x: 1,\n\t     y: -1\n\t    },\n\t    {\n\t     x: -1,\n\t     y: 0\n\t    }\n\t   ],\n\t   reference: [\n\t    {\n\t     x: 0,\n\t     y: -1\n\t    },\n\t    {\n\t     x: -1,\n\t     y: 0\n\t    },\n\t    {\n\t     x: 0,\n\t     y: 0\n\t    },\n\t    {\n\t     x: 1,\n\t     y: 0\n\t    },\n\t    {\n\t     x: 0,\n\t     y: 1\n\t    },\n\t    {\n\t     x: 1,\n\t     y: 1\n\t    }\n\t   ]\n\t  }\n\t ];\n\t var ReusedContexts = [\n\t  0x9B25,\n\t  0x0795,\n\t  0x00E5,\n\t  0x0195\n\t ];\n\t var RefinementReusedContexts = [\n\t  0x0020,\n\t  0x0008\n\t ];\n\t function decodeBitmapTemplate0(width, height, decodingContext) {\n\t  var decoder = decodingContext.decoder;\n\t  var contexts = decodingContext.contextCache.getContexts('GB');\n\t  var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n\t  var OLD_PIXEL_MASK = 0x7BF7;\n\t  for (i = 0; i < height; i++) {\n\t   row = bitmap[i] = new Uint8Array(width);\n\t   row1 = i < 1 ? row : bitmap[i - 1];\n\t   row2 = i < 2 ? row : bitmap[i - 2];\n\t   contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\t   for (j = 0; j < width; j++) {\n\t    row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\t    contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n\t   }\n\t  }\n\t  return bitmap;\n\t }\n\t function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n\t  if (mmr) {\n\t   error('JBIG2 error: MMR encoding is not supported');\n\t  }\n\t  if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n\t   return decodeBitmapTemplate0(width, height, decodingContext);\n\t  }\n\t  var useskip = !!skip;\n\t  var template = CodingTemplates[templateIndex].concat(at);\n\t  template.sort(function (a, b) {\n\t   return a.y - b.y || a.x - b.x;\n\t  });\n\t  var templateLength = template.length;\n\t  var templateX = new Int8Array(templateLength);\n\t  var templateY = new Int8Array(templateLength);\n\t  var changingTemplateEntries = [];\n\t  var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n\t  var c, k;\n\t  for (k = 0; k < templateLength; k++) {\n\t   templateX[k] = template[k].x;\n\t   templateY[k] = template[k].y;\n\t   minX = Math.min(minX, template[k].x);\n\t   maxX = Math.max(maxX, template[k].x);\n\t   minY = Math.min(minY, template[k].y);\n\t   if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n\t    reuseMask |= 1 << templateLength - 1 - k;\n\t   } else {\n\t    changingTemplateEntries.push(k);\n\t   }\n\t  }\n\t  var changingEntriesLength = changingTemplateEntries.length;\n\t  var changingTemplateX = new Int8Array(changingEntriesLength);\n\t  var changingTemplateY = new Int8Array(changingEntriesLength);\n\t  var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\t  for (c = 0; c < changingEntriesLength; c++) {\n\t   k = changingTemplateEntries[c];\n\t   changingTemplateX[c] = template[k].x;\n\t   changingTemplateY[c] = template[k].y;\n\t   changingTemplateBit[c] = 1 << templateLength - 1 - k;\n\t  }\n\t  var sbb_left = -minX;\n\t  var sbb_top = -minY;\n\t  var sbb_right = width - maxX;\n\t  var pseudoPixelContext = ReusedContexts[templateIndex];\n\t  var row = new Uint8Array(width);\n\t  var bitmap = [];\n\t  var decoder = decodingContext.decoder;\n\t  var contexts = decodingContext.contextCache.getContexts('GB');\n\t  var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n\t  for (var i = 0; i < height; i++) {\n\t   if (prediction) {\n\t    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t    ltp ^= sltp;\n\t    if (ltp) {\n\t     bitmap.push(row);\n\t     continue;\n\t    }\n\t   }\n\t   row = new Uint8Array(row);\n\t   bitmap.push(row);\n\t   for (j = 0; j < width; j++) {\n\t    if (useskip && skip[i][j]) {\n\t     row[j] = 0;\n\t     continue;\n\t    }\n\t    if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n\t     contextLabel = contextLabel << 1 & reuseMask;\n\t     for (k = 0; k < changingEntriesLength; k++) {\n\t      i0 = i + changingTemplateY[k];\n\t      j0 = j + changingTemplateX[k];\n\t      bit = bitmap[i0][j0];\n\t      if (bit) {\n\t       bit = changingTemplateBit[k];\n\t       contextLabel |= bit;\n\t      }\n\t     }\n\t    } else {\n\t     contextLabel = 0;\n\t     shift = templateLength - 1;\n\t     for (k = 0; k < templateLength; k++, shift--) {\n\t      j0 = j + templateX[k];\n\t      if (j0 >= 0 && j0 < width) {\n\t       i0 = i + templateY[k];\n\t       if (i0 >= 0) {\n\t        bit = bitmap[i0][j0];\n\t        if (bit) {\n\t         contextLabel |= bit << shift;\n\t        }\n\t       }\n\t      }\n\t     }\n\t    }\n\t    var pixel = decoder.readBit(contexts, contextLabel);\n\t    row[j] = pixel;\n\t   }\n\t  }\n\t  return bitmap;\n\t }\n\t function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n\t  var codingTemplate = RefinementTemplates[templateIndex].coding;\n\t  if (templateIndex === 0) {\n\t   codingTemplate = codingTemplate.concat([at[0]]);\n\t  }\n\t  var codingTemplateLength = codingTemplate.length;\n\t  var codingTemplateX = new Int32Array(codingTemplateLength);\n\t  var codingTemplateY = new Int32Array(codingTemplateLength);\n\t  var k;\n\t  for (k = 0; k < codingTemplateLength; k++) {\n\t   codingTemplateX[k] = codingTemplate[k].x;\n\t   codingTemplateY[k] = codingTemplate[k].y;\n\t  }\n\t  var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\t  if (templateIndex === 0) {\n\t   referenceTemplate = referenceTemplate.concat([at[1]]);\n\t  }\n\t  var referenceTemplateLength = referenceTemplate.length;\n\t  var referenceTemplateX = new Int32Array(referenceTemplateLength);\n\t  var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\t  for (k = 0; k < referenceTemplateLength; k++) {\n\t   referenceTemplateX[k] = referenceTemplate[k].x;\n\t   referenceTemplateY[k] = referenceTemplate[k].y;\n\t  }\n\t  var referenceWidth = referenceBitmap[0].length;\n\t  var referenceHeight = referenceBitmap.length;\n\t  var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n\t  var bitmap = [];\n\t  var decoder = decodingContext.decoder;\n\t  var contexts = decodingContext.contextCache.getContexts('GR');\n\t  var ltp = 0;\n\t  for (var i = 0; i < height; i++) {\n\t   if (prediction) {\n\t    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t    ltp ^= sltp;\n\t    if (ltp) {\n\t     error('JBIG2 error: prediction is not supported');\n\t    }\n\t   }\n\t   var row = new Uint8Array(width);\n\t   bitmap.push(row);\n\t   for (var j = 0; j < width; j++) {\n\t    var i0, j0;\n\t    var contextLabel = 0;\n\t    for (k = 0; k < codingTemplateLength; k++) {\n\t     i0 = i + codingTemplateY[k];\n\t     j0 = j + codingTemplateX[k];\n\t     if (i0 < 0 || j0 < 0 || j0 >= width) {\n\t      contextLabel <<= 1;\n\t     } else {\n\t      contextLabel = contextLabel << 1 | bitmap[i0][j0];\n\t     }\n\t    }\n\t    for (k = 0; k < referenceTemplateLength; k++) {\n\t     i0 = i + referenceTemplateY[k] + offsetY;\n\t     j0 = j + referenceTemplateX[k] + offsetX;\n\t     if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n\t      contextLabel <<= 1;\n\t     } else {\n\t      contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n\t     }\n\t    }\n\t    var pixel = decoder.readBit(contexts, contextLabel);\n\t    row[j] = pixel;\n\t   }\n\t  }\n\t  return bitmap;\n\t }\n\t function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n\t  if (huffman) {\n\t   error('JBIG2 error: huffman is not supported');\n\t  }\n\t  var newSymbols = [];\n\t  var currentHeight = 0;\n\t  var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n\t  var decoder = decodingContext.decoder;\n\t  var contextCache = decodingContext.contextCache;\n\t  while (newSymbols.length < numberOfNewSymbols) {\n\t   var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n\t   currentHeight += deltaHeight;\n\t   var currentWidth = 0;\n\t   while (true) {\n\t    var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n\t    if (deltaWidth === null) {\n\t     break;\n\t    }\n\t    currentWidth += deltaWidth;\n\t    var bitmap;\n\t    if (refinement) {\n\t     var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n\t     if (numberOfInstances > 1) {\n\t      bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n\t     } else {\n\t      var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t      var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t      var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t      var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n\t      bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n\t     }\n\t    } else {\n\t     bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n\t    }\n\t    newSymbols.push(bitmap);\n\t   }\n\t  }\n\t  var exportedSymbols = [];\n\t  var flags = [], currentFlag = false;\n\t  var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\t  while (flags.length < totalSymbolsLength) {\n\t   var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n\t   while (runLength--) {\n\t    flags.push(currentFlag);\n\t   }\n\t   currentFlag = !currentFlag;\n\t  }\n\t  for (var i = 0, ii = symbols.length; i < ii; i++) {\n\t   if (flags[i]) {\n\t    exportedSymbols.push(symbols[i]);\n\t   }\n\t  }\n\t  for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n\t   if (flags[i]) {\n\t    exportedSymbols.push(newSymbols[j]);\n\t   }\n\t  }\n\t  return exportedSymbols;\n\t }\n\t function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n\t  if (huffman) {\n\t   error('JBIG2 error: huffman is not supported');\n\t  }\n\t  var bitmap = [];\n\t  var i, row;\n\t  for (i = 0; i < height; i++) {\n\t   row = new Uint8Array(width);\n\t   if (defaultPixelValue) {\n\t    for (var j = 0; j < width; j++) {\n\t     row[j] = defaultPixelValue;\n\t    }\n\t   }\n\t   bitmap.push(row);\n\t  }\n\t  var decoder = decodingContext.decoder;\n\t  var contextCache = decodingContext.contextCache;\n\t  var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n\t  var firstS = 0;\n\t  i = 0;\n\t  while (i < numberOfSymbolInstances) {\n\t   var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n\t   stripT += deltaT;\n\t   var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n\t   firstS += deltaFirstS;\n\t   var currentS = firstS;\n\t   do {\n\t    var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n\t    var t = stripSize * stripT + currentT;\n\t    var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t    var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n\t    var symbolBitmap = inputSymbols[symbolId];\n\t    var symbolWidth = symbolBitmap[0].length;\n\t    var symbolHeight = symbolBitmap.length;\n\t    if (applyRefinement) {\n\t     var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n\t     var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n\t     var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t     var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t     symbolWidth += rdw;\n\t     symbolHeight += rdh;\n\t     symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n\t    }\n\t    var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n\t    var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n\t    var s2, t2, symbolRow;\n\t    if (transposed) {\n\t     for (s2 = 0; s2 < symbolHeight; s2++) {\n\t      row = bitmap[offsetS + s2];\n\t      if (!row) {\n\t       continue;\n\t      }\n\t      symbolRow = symbolBitmap[s2];\n\t      var maxWidth = Math.min(width - offsetT, symbolWidth);\n\t      switch (combinationOperator) {\n\t      case 0:\n\t       for (t2 = 0; t2 < maxWidth; t2++) {\n\t        row[offsetT + t2] |= symbolRow[t2];\n\t       }\n\t       break;\n\t      case 2:\n\t       for (t2 = 0; t2 < maxWidth; t2++) {\n\t        row[offsetT + t2] ^= symbolRow[t2];\n\t       }\n\t       break;\n\t      default:\n\t       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t      }\n\t     }\n\t     currentS += symbolHeight - 1;\n\t    } else {\n\t     for (t2 = 0; t2 < symbolHeight; t2++) {\n\t      row = bitmap[offsetT + t2];\n\t      if (!row) {\n\t       continue;\n\t      }\n\t      symbolRow = symbolBitmap[t2];\n\t      switch (combinationOperator) {\n\t      case 0:\n\t       for (s2 = 0; s2 < symbolWidth; s2++) {\n\t        row[offsetS + s2] |= symbolRow[s2];\n\t       }\n\t       break;\n\t      case 2:\n\t       for (s2 = 0; s2 < symbolWidth; s2++) {\n\t        row[offsetS + s2] ^= symbolRow[s2];\n\t       }\n\t       break;\n\t      default:\n\t       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t      }\n\t     }\n\t     currentS += symbolWidth - 1;\n\t    }\n\t    i++;\n\t    var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n\t    if (deltaS === null) {\n\t     break;\n\t    }\n\t    currentS += deltaS + dsOffset;\n\t   } while (true);\n\t  }\n\t  return bitmap;\n\t }\n\t function readSegmentHeader(data, start) {\n\t  var segmentHeader = {};\n\t  segmentHeader.number = readUint32(data, start);\n\t  var flags = data[start + 4];\n\t  var segmentType = flags & 0x3F;\n\t  if (!SegmentTypes[segmentType]) {\n\t   error('JBIG2 error: invalid segment type: ' + segmentType);\n\t  }\n\t  segmentHeader.type = segmentType;\n\t  segmentHeader.typeName = SegmentTypes[segmentType];\n\t  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\t  var pageAssociationFieldSize = !!(flags & 0x40);\n\t  var referredFlags = data[start + 5];\n\t  var referredToCount = referredFlags >> 5 & 7;\n\t  var retainBits = [referredFlags & 31];\n\t  var position = start + 6;\n\t  if (referredFlags === 7) {\n\t   referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n\t   position += 3;\n\t   var bytes = referredToCount + 7 >> 3;\n\t   retainBits[0] = data[position++];\n\t   while (--bytes > 0) {\n\t    retainBits.push(data[position++]);\n\t   }\n\t  } else if (referredFlags === 5 || referredFlags === 6) {\n\t   error('JBIG2 error: invalid referred-to flags');\n\t  }\n\t  segmentHeader.retainBits = retainBits;\n\t  var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n\t  var referredTo = [];\n\t  var i, ii;\n\t  for (i = 0; i < referredToCount; i++) {\n\t   var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n\t   referredTo.push(number);\n\t   position += referredToSegmentNumberSize;\n\t  }\n\t  segmentHeader.referredTo = referredTo;\n\t  if (!pageAssociationFieldSize) {\n\t   segmentHeader.pageAssociation = data[position++];\n\t  } else {\n\t   segmentHeader.pageAssociation = readUint32(data, position);\n\t   position += 4;\n\t  }\n\t  segmentHeader.length = readUint32(data, position);\n\t  position += 4;\n\t  if (segmentHeader.length === 0xFFFFFFFF) {\n\t   if (segmentType === 38) {\n\t    var genericRegionInfo = readRegionSegmentInformation(data, position);\n\t    var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n\t    var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n\t    var searchPatternLength = 6;\n\t    var searchPattern = new Uint8Array(searchPatternLength);\n\t    if (!genericRegionMmr) {\n\t     searchPattern[0] = 0xFF;\n\t     searchPattern[1] = 0xAC;\n\t    }\n\t    searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n\t    searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n\t    searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n\t    searchPattern[5] = genericRegionInfo.height & 0xFF;\n\t    for (i = position, ii = data.length; i < ii; i++) {\n\t     var j = 0;\n\t     while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n\t      j++;\n\t     }\n\t     if (j === searchPatternLength) {\n\t      segmentHeader.length = i + searchPatternLength;\n\t      break;\n\t     }\n\t    }\n\t    if (segmentHeader.length === 0xFFFFFFFF) {\n\t     error('JBIG2 error: segment end was not found');\n\t    }\n\t   } else {\n\t    error('JBIG2 error: invalid unknown segment length');\n\t   }\n\t  }\n\t  segmentHeader.headerEnd = position;\n\t  return segmentHeader;\n\t }\n\t function readSegments(header, data, start, end) {\n\t  var segments = [];\n\t  var position = start;\n\t  while (position < end) {\n\t   var segmentHeader = readSegmentHeader(data, position);\n\t   position = segmentHeader.headerEnd;\n\t   var segment = {\n\t    header: segmentHeader,\n\t    data: data\n\t   };\n\t   if (!header.randomAccess) {\n\t    segment.start = position;\n\t    position += segmentHeader.length;\n\t    segment.end = position;\n\t   }\n\t   segments.push(segment);\n\t   if (segmentHeader.type === 51) {\n\t    break;\n\t   }\n\t  }\n\t  if (header.randomAccess) {\n\t   for (var i = 0, ii = segments.length; i < ii; i++) {\n\t    segments[i].start = position;\n\t    position += segments[i].header.length;\n\t    segments[i].end = position;\n\t   }\n\t  }\n\t  return segments;\n\t }\n\t function readRegionSegmentInformation(data, start) {\n\t  return {\n\t   width: readUint32(data, start),\n\t   height: readUint32(data, start + 4),\n\t   x: readUint32(data, start + 8),\n\t   y: readUint32(data, start + 12),\n\t   combinationOperator: data[start + 16] & 7\n\t  };\n\t }\n\t var RegionSegmentInformationFieldLength = 17;\n\t function processSegment(segment, visitor) {\n\t  var header = segment.header;\n\t  var data = segment.data, position = segment.start, end = segment.end;\n\t  var args, at, i, atLength;\n\t  switch (header.type) {\n\t  case 0:\n\t   var dictionary = {};\n\t   var dictionaryFlags = readUint16(data, position);\n\t   dictionary.huffman = !!(dictionaryFlags & 1);\n\t   dictionary.refinement = !!(dictionaryFlags & 2);\n\t   dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n\t   dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n\t   dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n\t   dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n\t   dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n\t   dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n\t   dictionary.template = dictionaryFlags >> 10 & 3;\n\t   dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n\t   position += 2;\n\t   if (!dictionary.huffman) {\n\t    atLength = dictionary.template === 0 ? 4 : 1;\n\t    at = [];\n\t    for (i = 0; i < atLength; i++) {\n\t     at.push({\n\t      x: readInt8(data, position),\n\t      y: readInt8(data, position + 1)\n\t     });\n\t     position += 2;\n\t    }\n\t    dictionary.at = at;\n\t   }\n\t   if (dictionary.refinement && !dictionary.refinementTemplate) {\n\t    at = [];\n\t    for (i = 0; i < 2; i++) {\n\t     at.push({\n\t      x: readInt8(data, position),\n\t      y: readInt8(data, position + 1)\n\t     });\n\t     position += 2;\n\t    }\n\t    dictionary.refinementAt = at;\n\t   }\n\t   dictionary.numberOfExportedSymbols = readUint32(data, position);\n\t   position += 4;\n\t   dictionary.numberOfNewSymbols = readUint32(data, position);\n\t   position += 4;\n\t   args = [\n\t    dictionary,\n\t    header.number,\n\t    header.referredTo,\n\t    data,\n\t    position,\n\t    end\n\t   ];\n\t   break;\n\t  case 6:\n\t  case 7:\n\t   var textRegion = {};\n\t   textRegion.info = readRegionSegmentInformation(data, position);\n\t   position += RegionSegmentInformationFieldLength;\n\t   var textRegionSegmentFlags = readUint16(data, position);\n\t   position += 2;\n\t   textRegion.huffman = !!(textRegionSegmentFlags & 1);\n\t   textRegion.refinement = !!(textRegionSegmentFlags & 2);\n\t   textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n\t   textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n\t   textRegion.transposed = !!(textRegionSegmentFlags & 64);\n\t   textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n\t   textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n\t   textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n\t   textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\t   if (textRegion.huffman) {\n\t    var textRegionHuffmanFlags = readUint16(data, position);\n\t    position += 2;\n\t    textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n\t    textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n\t    textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n\t    textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n\t    textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n\t    textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n\t    textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n\t    textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n\t   }\n\t   if (textRegion.refinement && !textRegion.refinementTemplate) {\n\t    at = [];\n\t    for (i = 0; i < 2; i++) {\n\t     at.push({\n\t      x: readInt8(data, position),\n\t      y: readInt8(data, position + 1)\n\t     });\n\t     position += 2;\n\t    }\n\t    textRegion.refinementAt = at;\n\t   }\n\t   textRegion.numberOfSymbolInstances = readUint32(data, position);\n\t   position += 4;\n\t   if (textRegion.huffman) {\n\t    error('JBIG2 error: huffman is not supported');\n\t   }\n\t   args = [\n\t    textRegion,\n\t    header.referredTo,\n\t    data,\n\t    position,\n\t    end\n\t   ];\n\t   break;\n\t  case 38:\n\t  case 39:\n\t   var genericRegion = {};\n\t   genericRegion.info = readRegionSegmentInformation(data, position);\n\t   position += RegionSegmentInformationFieldLength;\n\t   var genericRegionSegmentFlags = data[position++];\n\t   genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n\t   genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n\t   genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\t   if (!genericRegion.mmr) {\n\t    atLength = genericRegion.template === 0 ? 4 : 1;\n\t    at = [];\n\t    for (i = 0; i < atLength; i++) {\n\t     at.push({\n\t      x: readInt8(data, position),\n\t      y: readInt8(data, position + 1)\n\t     });\n\t     position += 2;\n\t    }\n\t    genericRegion.at = at;\n\t   }\n\t   args = [\n\t    genericRegion,\n\t    data,\n\t    position,\n\t    end\n\t   ];\n\t   break;\n\t  case 48:\n\t   var pageInfo = {\n\t    width: readUint32(data, position),\n\t    height: readUint32(data, position + 4),\n\t    resolutionX: readUint32(data, position + 8),\n\t    resolutionY: readUint32(data, position + 12)\n\t   };\n\t   if (pageInfo.height === 0xFFFFFFFF) {\n\t    delete pageInfo.height;\n\t   }\n\t   var pageSegmentFlags = data[position + 16];\n\t   readUint16(data, position + 17);\n\t   pageInfo.lossless = !!(pageSegmentFlags & 1);\n\t   pageInfo.refinement = !!(pageSegmentFlags & 2);\n\t   pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n\t   pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n\t   pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n\t   pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n\t   args = [pageInfo];\n\t   break;\n\t  case 49:\n\t   break;\n\t  case 50:\n\t   break;\n\t  case 51:\n\t   break;\n\t  case 62:\n\t   break;\n\t  default:\n\t   error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n\t  }\n\t  var callbackName = 'on' + header.typeName;\n\t  if (callbackName in visitor) {\n\t   visitor[callbackName].apply(visitor, args);\n\t  }\n\t }\n\t function processSegments(segments, visitor) {\n\t  for (var i = 0, ii = segments.length; i < ii; i++) {\n\t   processSegment(segments[i], visitor);\n\t  }\n\t }\n\t function parseJbig2(data, start, end) {\n\t  var position = start;\n\t  if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n\t   error('JBIG2 error: invalid header');\n\t  }\n\t  var header = {};\n\t  position += 8;\n\t  var flags = data[position++];\n\t  header.randomAccess = !(flags & 1);\n\t  if (!(flags & 2)) {\n\t   header.numberOfPages = readUint32(data, position);\n\t   position += 4;\n\t  }\n\t  readSegments(header, data, position, end);\n\t  error('Not implemented');\n\t }\n\t function parseJbig2Chunks(chunks) {\n\t  var visitor = new SimpleSegmentVisitor();\n\t  for (var i = 0, ii = chunks.length; i < ii; i++) {\n\t   var chunk = chunks[i];\n\t   var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n\t   processSegments(segments, visitor);\n\t  }\n\t  return visitor.buffer;\n\t }\n\t function SimpleSegmentVisitor() {\n\t }\n\t SimpleSegmentVisitor.prototype = {\n\t  onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n\t   this.currentPageInfo = info;\n\t   var rowSize = info.width + 7 >> 3;\n\t   var buffer = new Uint8Array(rowSize * info.height);\n\t   if (info.defaultPixelValue) {\n\t    for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t     buffer[i] = 0xFF;\n\t    }\n\t   }\n\t   this.buffer = buffer;\n\t  },\n\t  drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n\t   var pageInfo = this.currentPageInfo;\n\t   var width = regionInfo.width, height = regionInfo.height;\n\t   var rowSize = pageInfo.width + 7 >> 3;\n\t   var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n\t   var buffer = this.buffer;\n\t   var mask0 = 128 >> (regionInfo.x & 7);\n\t   var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n\t   var i, j, mask, offset;\n\t   switch (combinationOperator) {\n\t   case 0:\n\t    for (i = 0; i < height; i++) {\n\t     mask = mask0;\n\t     offset = offset0;\n\t     for (j = 0; j < width; j++) {\n\t      if (bitmap[i][j]) {\n\t       buffer[offset] |= mask;\n\t      }\n\t      mask >>= 1;\n\t      if (!mask) {\n\t       mask = 128;\n\t       offset++;\n\t      }\n\t     }\n\t     offset0 += rowSize;\n\t    }\n\t    break;\n\t   case 2:\n\t    for (i = 0; i < height; i++) {\n\t     mask = mask0;\n\t     offset = offset0;\n\t     for (j = 0; j < width; j++) {\n\t      if (bitmap[i][j]) {\n\t       buffer[offset] ^= mask;\n\t      }\n\t      mask >>= 1;\n\t      if (!mask) {\n\t       mask = 128;\n\t       offset++;\n\t      }\n\t     }\n\t     offset0 += rowSize;\n\t    }\n\t    break;\n\t   default:\n\t    error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n\t   }\n\t  },\n\t  onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n\t   var regionInfo = region.info;\n\t   var decodingContext = new DecodingContext(data, start, end);\n\t   var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n\t   this.drawBitmap(regionInfo, bitmap);\n\t  },\n\t  onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n\t   this.onImmediateGenericRegion.apply(this, arguments);\n\t  },\n\t  onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n\t   var huffmanTables;\n\t   if (dictionary.huffman) {\n\t    error('JBIG2 error: huffman is not supported');\n\t   }\n\t   var symbols = this.symbols;\n\t   if (!symbols) {\n\t    this.symbols = symbols = {};\n\t   }\n\t   var inputSymbols = [];\n\t   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t   }\n\t   var decodingContext = new DecodingContext(data, start, end);\n\t   symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n\t  },\n\t  onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n\t   var regionInfo = region.info;\n\t   var huffmanTables;\n\t   var symbols = this.symbols;\n\t   var inputSymbols = [];\n\t   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t   }\n\t   var symbolCodeLength = log2(inputSymbols.length);\n\t   var decodingContext = new DecodingContext(data, start, end);\n\t   var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n\t   this.drawBitmap(regionInfo, bitmap);\n\t  },\n\t  onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n\t   this.onImmediateTextRegion.apply(this, arguments);\n\t  }\n\t };\n\t function Jbig2Image() {\n\t }\n\t Jbig2Image.prototype = {\n\t  parseChunks: function Jbig2Image_parseChunks(chunks) {\n\t   return parseJbig2Chunks(chunks);\n\t  }\n\t };\n\t return Jbig2Image;\n\t}();\n\texports.Jbig2Image = Jbig2Image;\n\t\n\t/***/ }),\n\t/* 29 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar error = sharedUtil.error;\n\tvar JpegImage = function JpegImageClosure() {\n\t var dctZigZag = new Uint8Array([\n\t  0,\n\t  1,\n\t  8,\n\t  16,\n\t  9,\n\t  2,\n\t  3,\n\t  10,\n\t  17,\n\t  24,\n\t  32,\n\t  25,\n\t  18,\n\t  11,\n\t  4,\n\t  5,\n\t  12,\n\t  19,\n\t  26,\n\t  33,\n\t  40,\n\t  48,\n\t  41,\n\t  34,\n\t  27,\n\t  20,\n\t  13,\n\t  6,\n\t  7,\n\t  14,\n\t  21,\n\t  28,\n\t  35,\n\t  42,\n\t  49,\n\t  56,\n\t  57,\n\t  50,\n\t  43,\n\t  36,\n\t  29,\n\t  22,\n\t  15,\n\t  23,\n\t  30,\n\t  37,\n\t  44,\n\t  51,\n\t  58,\n\t  59,\n\t  52,\n\t  45,\n\t  38,\n\t  31,\n\t  39,\n\t  46,\n\t  53,\n\t  60,\n\t  61,\n\t  54,\n\t  47,\n\t  55,\n\t  62,\n\t  63\n\t ]);\n\t var dctCos1 = 4017;\n\t var dctSin1 = 799;\n\t var dctCos3 = 3406;\n\t var dctSin3 = 2276;\n\t var dctCos6 = 1567;\n\t var dctSin6 = 3784;\n\t var dctSqrt2 = 5793;\n\t var dctSqrt1d2 = 2896;\n\t function JpegImage() {\n\t  this.decodeTransform = null;\n\t  this.colorTransform = -1;\n\t }\n\t function buildHuffmanTable(codeLengths, values) {\n\t  var k = 0, code = [], i, j, length = 16;\n\t  while (length > 0 && !codeLengths[length - 1]) {\n\t   length--;\n\t  }\n\t  code.push({\n\t   children: [],\n\t   index: 0\n\t  });\n\t  var p = code[0], q;\n\t  for (i = 0; i < length; i++) {\n\t   for (j = 0; j < codeLengths[i]; j++) {\n\t    p = code.pop();\n\t    p.children[p.index] = values[k];\n\t    while (p.index > 0) {\n\t     p = code.pop();\n\t    }\n\t    p.index++;\n\t    code.push(p);\n\t    while (code.length <= i) {\n\t     code.push(q = {\n\t      children: [],\n\t      index: 0\n\t     });\n\t     p.children[p.index] = q.children;\n\t     p = q;\n\t    }\n\t    k++;\n\t   }\n\t   if (i + 1 < length) {\n\t    code.push(q = {\n\t     children: [],\n\t     index: 0\n\t    });\n\t    p.children[p.index] = q.children;\n\t    p = q;\n\t   }\n\t  }\n\t  return code[0].children;\n\t }\n\t function getBlockBufferOffset(component, row, col) {\n\t  return 64 * ((component.blocksPerLine + 1) * row + col);\n\t }\n\t function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n\t  var mcusPerLine = frame.mcusPerLine;\n\t  var progressive = frame.progressive;\n\t  var startOffset = offset, bitsData = 0, bitsCount = 0;\n\t  function readBit() {\n\t   if (bitsCount > 0) {\n\t    bitsCount--;\n\t    return bitsData >> bitsCount & 1;\n\t   }\n\t   bitsData = data[offset++];\n\t   if (bitsData === 0xFF) {\n\t    var nextByte = data[offset++];\n\t    if (nextByte) {\n\t     error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n\t    }\n\t   }\n\t   bitsCount = 7;\n\t   return bitsData >>> 7;\n\t  }\n\t  function decodeHuffman(tree) {\n\t   var node = tree;\n\t   while (true) {\n\t    node = node[readBit()];\n\t    if (typeof node === 'number') {\n\t     return node;\n\t    }\n\t    if (typeof node !== 'object') {\n\t     error('JPEG error: invalid huffman sequence');\n\t    }\n\t   }\n\t  }\n\t  function receive(length) {\n\t   var n = 0;\n\t   while (length > 0) {\n\t    n = n << 1 | readBit();\n\t    length--;\n\t   }\n\t   return n;\n\t  }\n\t  function receiveAndExtend(length) {\n\t   if (length === 1) {\n\t    return readBit() === 1 ? 1 : -1;\n\t   }\n\t   var n = receive(length);\n\t   if (n >= 1 << length - 1) {\n\t    return n;\n\t   }\n\t   return n + (-1 << length) + 1;\n\t  }\n\t  function decodeBaseline(component, offset) {\n\t   var t = decodeHuffman(component.huffmanTableDC);\n\t   var diff = t === 0 ? 0 : receiveAndExtend(t);\n\t   component.blockData[offset] = component.pred += diff;\n\t   var k = 1;\n\t   while (k < 64) {\n\t    var rs = decodeHuffman(component.huffmanTableAC);\n\t    var s = rs & 15, r = rs >> 4;\n\t    if (s === 0) {\n\t     if (r < 15) {\n\t      break;\n\t     }\n\t     k += 16;\n\t     continue;\n\t    }\n\t    k += r;\n\t    var z = dctZigZag[k];\n\t    component.blockData[offset + z] = receiveAndExtend(s);\n\t    k++;\n\t   }\n\t  }\n\t  function decodeDCFirst(component, offset) {\n\t   var t = decodeHuffman(component.huffmanTableDC);\n\t   var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n\t   component.blockData[offset] = component.pred += diff;\n\t  }\n\t  function decodeDCSuccessive(component, offset) {\n\t   component.blockData[offset] |= readBit() << successive;\n\t  }\n\t  var eobrun = 0;\n\t  function decodeACFirst(component, offset) {\n\t   if (eobrun > 0) {\n\t    eobrun--;\n\t    return;\n\t   }\n\t   var k = spectralStart, e = spectralEnd;\n\t   while (k <= e) {\n\t    var rs = decodeHuffman(component.huffmanTableAC);\n\t    var s = rs & 15, r = rs >> 4;\n\t    if (s === 0) {\n\t     if (r < 15) {\n\t      eobrun = receive(r) + (1 << r) - 1;\n\t      break;\n\t     }\n\t     k += 16;\n\t     continue;\n\t    }\n\t    k += r;\n\t    var z = dctZigZag[k];\n\t    component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n\t    k++;\n\t   }\n\t  }\n\t  var successiveACState = 0, successiveACNextValue;\n\t  function decodeACSuccessive(component, offset) {\n\t   var k = spectralStart;\n\t   var e = spectralEnd;\n\t   var r = 0;\n\t   var s;\n\t   var rs;\n\t   while (k <= e) {\n\t    var z = dctZigZag[k];\n\t    switch (successiveACState) {\n\t    case 0:\n\t     rs = decodeHuffman(component.huffmanTableAC);\n\t     s = rs & 15;\n\t     r = rs >> 4;\n\t     if (s === 0) {\n\t      if (r < 15) {\n\t       eobrun = receive(r) + (1 << r);\n\t       successiveACState = 4;\n\t      } else {\n\t       r = 16;\n\t       successiveACState = 1;\n\t      }\n\t     } else {\n\t      if (s !== 1) {\n\t       error('JPEG error: invalid ACn encoding');\n\t      }\n\t      successiveACNextValue = receiveAndExtend(s);\n\t      successiveACState = r ? 2 : 3;\n\t     }\n\t     continue;\n\t    case 1:\n\t    case 2:\n\t     if (component.blockData[offset + z]) {\n\t      component.blockData[offset + z] += readBit() << successive;\n\t     } else {\n\t      r--;\n\t      if (r === 0) {\n\t       successiveACState = successiveACState === 2 ? 3 : 0;\n\t      }\n\t     }\n\t     break;\n\t    case 3:\n\t     if (component.blockData[offset + z]) {\n\t      component.blockData[offset + z] += readBit() << successive;\n\t     } else {\n\t      component.blockData[offset + z] = successiveACNextValue << successive;\n\t      successiveACState = 0;\n\t     }\n\t     break;\n\t    case 4:\n\t     if (component.blockData[offset + z]) {\n\t      component.blockData[offset + z] += readBit() << successive;\n\t     }\n\t     break;\n\t    }\n\t    k++;\n\t   }\n\t   if (successiveACState === 4) {\n\t    eobrun--;\n\t    if (eobrun === 0) {\n\t     successiveACState = 0;\n\t    }\n\t   }\n\t  }\n\t  function decodeMcu(component, decode, mcu, row, col) {\n\t   var mcuRow = mcu / mcusPerLine | 0;\n\t   var mcuCol = mcu % mcusPerLine;\n\t   var blockRow = mcuRow * component.v + row;\n\t   var blockCol = mcuCol * component.h + col;\n\t   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t   decode(component, offset);\n\t  }\n\t  function decodeBlock(component, decode, mcu) {\n\t   var blockRow = mcu / component.blocksPerLine | 0;\n\t   var blockCol = mcu % component.blocksPerLine;\n\t   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t   decode(component, offset);\n\t  }\n\t  var componentsLength = components.length;\n\t  var component, i, j, k, n;\n\t  var decodeFn;\n\t  if (progressive) {\n\t   if (spectralStart === 0) {\n\t    decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n\t   } else {\n\t    decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n\t   }\n\t  } else {\n\t   decodeFn = decodeBaseline;\n\t  }\n\t  var mcu = 0, marker;\n\t  var mcuExpected;\n\t  if (componentsLength === 1) {\n\t   mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n\t  } else {\n\t   mcuExpected = mcusPerLine * frame.mcusPerColumn;\n\t  }\n\t  if (!resetInterval) {\n\t   resetInterval = mcuExpected;\n\t  }\n\t  var h, v;\n\t  while (mcu < mcuExpected) {\n\t   for (i = 0; i < componentsLength; i++) {\n\t    components[i].pred = 0;\n\t   }\n\t   eobrun = 0;\n\t   if (componentsLength === 1) {\n\t    component = components[0];\n\t    for (n = 0; n < resetInterval; n++) {\n\t     decodeBlock(component, decodeFn, mcu);\n\t     mcu++;\n\t    }\n\t   } else {\n\t    for (n = 0; n < resetInterval; n++) {\n\t     for (i = 0; i < componentsLength; i++) {\n\t      component = components[i];\n\t      h = component.h;\n\t      v = component.v;\n\t      for (j = 0; j < v; j++) {\n\t       for (k = 0; k < h; k++) {\n\t        decodeMcu(component, decodeFn, mcu, j, k);\n\t       }\n\t      }\n\t     }\n\t     mcu++;\n\t    }\n\t   }\n\t   bitsCount = 0;\n\t   marker = data[offset] << 8 | data[offset + 1];\n\t   while (data[offset] === 0x00 && offset < data.length - 1) {\n\t    offset++;\n\t    marker = data[offset] << 8 | data[offset + 1];\n\t   }\n\t   if (marker <= 0xFF00) {\n\t    error('JPEG error: marker was not found');\n\t   }\n\t   if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n\t    offset += 2;\n\t   } else {\n\t    break;\n\t   }\n\t  }\n\t  return offset - startOffset;\n\t }\n\t function quantizeAndInverse(component, blockBufferOffset, p) {\n\t  var qt = component.quantizationTable, blockData = component.blockData;\n\t  var v0, v1, v2, v3, v4, v5, v6, v7;\n\t  var p0, p1, p2, p3, p4, p5, p6, p7;\n\t  var t;\n\t  if (!qt) {\n\t   error('JPEG error: missing required Quantization Table.');\n\t  }\n\t  for (var row = 0; row < 64; row += 8) {\n\t   p0 = blockData[blockBufferOffset + row];\n\t   p1 = blockData[blockBufferOffset + row + 1];\n\t   p2 = blockData[blockBufferOffset + row + 2];\n\t   p3 = blockData[blockBufferOffset + row + 3];\n\t   p4 = blockData[blockBufferOffset + row + 4];\n\t   p5 = blockData[blockBufferOffset + row + 5];\n\t   p6 = blockData[blockBufferOffset + row + 6];\n\t   p7 = blockData[blockBufferOffset + row + 7];\n\t   p0 *= qt[row];\n\t   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t    t = dctSqrt2 * p0 + 512 >> 10;\n\t    p[row] = t;\n\t    p[row + 1] = t;\n\t    p[row + 2] = t;\n\t    p[row + 3] = t;\n\t    p[row + 4] = t;\n\t    p[row + 5] = t;\n\t    p[row + 6] = t;\n\t    p[row + 7] = t;\n\t    continue;\n\t   }\n\t   p1 *= qt[row + 1];\n\t   p2 *= qt[row + 2];\n\t   p3 *= qt[row + 3];\n\t   p4 *= qt[row + 4];\n\t   p5 *= qt[row + 5];\n\t   p6 *= qt[row + 6];\n\t   p7 *= qt[row + 7];\n\t   v0 = dctSqrt2 * p0 + 128 >> 8;\n\t   v1 = dctSqrt2 * p4 + 128 >> 8;\n\t   v2 = p2;\n\t   v3 = p6;\n\t   v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n\t   v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n\t   v5 = p3 << 4;\n\t   v6 = p5 << 4;\n\t   v0 = v0 + v1 + 1 >> 1;\n\t   v1 = v0 - v1;\n\t   t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n\t   v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n\t   v3 = t;\n\t   v4 = v4 + v6 + 1 >> 1;\n\t   v6 = v4 - v6;\n\t   v7 = v7 + v5 + 1 >> 1;\n\t   v5 = v7 - v5;\n\t   v0 = v0 + v3 + 1 >> 1;\n\t   v3 = v0 - v3;\n\t   v1 = v1 + v2 + 1 >> 1;\n\t   v2 = v1 - v2;\n\t   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t   v7 = t;\n\t   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t   v6 = t;\n\t   p[row] = v0 + v7;\n\t   p[row + 7] = v0 - v7;\n\t   p[row + 1] = v1 + v6;\n\t   p[row + 6] = v1 - v6;\n\t   p[row + 2] = v2 + v5;\n\t   p[row + 5] = v2 - v5;\n\t   p[row + 3] = v3 + v4;\n\t   p[row + 4] = v3 - v4;\n\t  }\n\t  for (var col = 0; col < 8; ++col) {\n\t   p0 = p[col];\n\t   p1 = p[col + 8];\n\t   p2 = p[col + 16];\n\t   p3 = p[col + 24];\n\t   p4 = p[col + 32];\n\t   p5 = p[col + 40];\n\t   p6 = p[col + 48];\n\t   p7 = p[col + 56];\n\t   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t    t = dctSqrt2 * p0 + 8192 >> 14;\n\t    t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n\t    blockData[blockBufferOffset + col] = t;\n\t    blockData[blockBufferOffset + col + 8] = t;\n\t    blockData[blockBufferOffset + col + 16] = t;\n\t    blockData[blockBufferOffset + col + 24] = t;\n\t    blockData[blockBufferOffset + col + 32] = t;\n\t    blockData[blockBufferOffset + col + 40] = t;\n\t    blockData[blockBufferOffset + col + 48] = t;\n\t    blockData[blockBufferOffset + col + 56] = t;\n\t    continue;\n\t   }\n\t   v0 = dctSqrt2 * p0 + 2048 >> 12;\n\t   v1 = dctSqrt2 * p4 + 2048 >> 12;\n\t   v2 = p2;\n\t   v3 = p6;\n\t   v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n\t   v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n\t   v5 = p3;\n\t   v6 = p5;\n\t   v0 = (v0 + v1 + 1 >> 1) + 4112;\n\t   v1 = v0 - v1;\n\t   t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n\t   v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n\t   v3 = t;\n\t   v4 = v4 + v6 + 1 >> 1;\n\t   v6 = v4 - v6;\n\t   v7 = v7 + v5 + 1 >> 1;\n\t   v5 = v7 - v5;\n\t   v0 = v0 + v3 + 1 >> 1;\n\t   v3 = v0 - v3;\n\t   v1 = v1 + v2 + 1 >> 1;\n\t   v2 = v1 - v2;\n\t   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t   v7 = t;\n\t   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t   v6 = t;\n\t   p0 = v0 + v7;\n\t   p7 = v0 - v7;\n\t   p1 = v1 + v6;\n\t   p6 = v1 - v6;\n\t   p2 = v2 + v5;\n\t   p5 = v2 - v5;\n\t   p3 = v3 + v4;\n\t   p4 = v3 - v4;\n\t   p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n\t   p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n\t   p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n\t   p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n\t   p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n\t   p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n\t   p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n\t   p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n\t   blockData[blockBufferOffset + col] = p0;\n\t   blockData[blockBufferOffset + col + 8] = p1;\n\t   blockData[blockBufferOffset + col + 16] = p2;\n\t   blockData[blockBufferOffset + col + 24] = p3;\n\t   blockData[blockBufferOffset + col + 32] = p4;\n\t   blockData[blockBufferOffset + col + 40] = p5;\n\t   blockData[blockBufferOffset + col + 48] = p6;\n\t   blockData[blockBufferOffset + col + 56] = p7;\n\t  }\n\t }\n\t function buildComponentData(frame, component) {\n\t  var blocksPerLine = component.blocksPerLine;\n\t  var blocksPerColumn = component.blocksPerColumn;\n\t  var computationBuffer = new Int16Array(64);\n\t  for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n\t   for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n\t    var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t    quantizeAndInverse(component, offset, computationBuffer);\n\t   }\n\t  }\n\t  return component.blockData;\n\t }\n\t function clamp0to255(a) {\n\t  return a <= 0 ? 0 : a >= 255 ? 255 : a;\n\t }\n\t JpegImage.prototype = {\n\t  parse: function parse(data) {\n\t   function readUint16() {\n\t    var value = data[offset] << 8 | data[offset + 1];\n\t    offset += 2;\n\t    return value;\n\t   }\n\t   function readDataBlock() {\n\t    var length = readUint16();\n\t    var array = data.subarray(offset, offset + length - 2);\n\t    offset += array.length;\n\t    return array;\n\t   }\n\t   function prepareComponents(frame) {\n\t    var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n\t    var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\t    for (var i = 0; i < frame.components.length; i++) {\n\t     component = frame.components[i];\n\t     var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n\t     var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n\t     var blocksPerLineForMcu = mcusPerLine * component.h;\n\t     var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\t     var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n\t     component.blockData = new Int16Array(blocksBufferSize);\n\t     component.blocksPerLine = blocksPerLine;\n\t     component.blocksPerColumn = blocksPerColumn;\n\t    }\n\t    frame.mcusPerLine = mcusPerLine;\n\t    frame.mcusPerColumn = mcusPerColumn;\n\t   }\n\t   var offset = 0;\n\t   var jfif = null;\n\t   var adobe = null;\n\t   var frame, resetInterval;\n\t   var quantizationTables = [];\n\t   var huffmanTablesAC = [], huffmanTablesDC = [];\n\t   var fileMarker = readUint16();\n\t   if (fileMarker !== 0xFFD8) {\n\t    error('JPEG error: SOI not found');\n\t   }\n\t   fileMarker = readUint16();\n\t   while (fileMarker !== 0xFFD9) {\n\t    var i, j, l;\n\t    switch (fileMarker) {\n\t    case 0xFFE0:\n\t    case 0xFFE1:\n\t    case 0xFFE2:\n\t    case 0xFFE3:\n\t    case 0xFFE4:\n\t    case 0xFFE5:\n\t    case 0xFFE6:\n\t    case 0xFFE7:\n\t    case 0xFFE8:\n\t    case 0xFFE9:\n\t    case 0xFFEA:\n\t    case 0xFFEB:\n\t    case 0xFFEC:\n\t    case 0xFFED:\n\t    case 0xFFEE:\n\t    case 0xFFEF:\n\t    case 0xFFFE:\n\t     var appData = readDataBlock();\n\t     if (fileMarker === 0xFFE0) {\n\t      if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n\t       jfif = {\n\t        version: {\n\t         major: appData[5],\n\t         minor: appData[6]\n\t        },\n\t        densityUnits: appData[7],\n\t        xDensity: appData[8] << 8 | appData[9],\n\t        yDensity: appData[10] << 8 | appData[11],\n\t        thumbWidth: appData[12],\n\t        thumbHeight: appData[13],\n\t        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n\t       };\n\t      }\n\t     }\n\t     if (fileMarker === 0xFFEE) {\n\t      if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n\t       adobe = {\n\t        version: appData[5] << 8 | appData[6],\n\t        flags0: appData[7] << 8 | appData[8],\n\t        flags1: appData[9] << 8 | appData[10],\n\t        transformCode: appData[11]\n\t       };\n\t      }\n\t     }\n\t     break;\n\t    case 0xFFDB:\n\t     var quantizationTablesLength = readUint16();\n\t     var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\t     var z;\n\t     while (offset < quantizationTablesEnd) {\n\t      var quantizationTableSpec = data[offset++];\n\t      var tableData = new Uint16Array(64);\n\t      if (quantizationTableSpec >> 4 === 0) {\n\t       for (j = 0; j < 64; j++) {\n\t        z = dctZigZag[j];\n\t        tableData[z] = data[offset++];\n\t       }\n\t      } else if (quantizationTableSpec >> 4 === 1) {\n\t       for (j = 0; j < 64; j++) {\n\t        z = dctZigZag[j];\n\t        tableData[z] = readUint16();\n\t       }\n\t      } else {\n\t       error('JPEG error: DQT - invalid table spec');\n\t      }\n\t      quantizationTables[quantizationTableSpec & 15] = tableData;\n\t     }\n\t     break;\n\t    case 0xFFC0:\n\t    case 0xFFC1:\n\t    case 0xFFC2:\n\t     if (frame) {\n\t      error('JPEG error: Only single frame JPEGs supported');\n\t     }\n\t     readUint16();\n\t     frame = {};\n\t     frame.extended = fileMarker === 0xFFC1;\n\t     frame.progressive = fileMarker === 0xFFC2;\n\t     frame.precision = data[offset++];\n\t     frame.scanLines = readUint16();\n\t     frame.samplesPerLine = readUint16();\n\t     frame.components = [];\n\t     frame.componentIds = {};\n\t     var componentsCount = data[offset++], componentId;\n\t     var maxH = 0, maxV = 0;\n\t     for (i = 0; i < componentsCount; i++) {\n\t      componentId = data[offset];\n\t      var h = data[offset + 1] >> 4;\n\t      var v = data[offset + 1] & 15;\n\t      if (maxH < h) {\n\t       maxH = h;\n\t      }\n\t      if (maxV < v) {\n\t       maxV = v;\n\t      }\n\t      var qId = data[offset + 2];\n\t      l = frame.components.push({\n\t       h: h,\n\t       v: v,\n\t       quantizationId: qId,\n\t       quantizationTable: null\n\t      });\n\t      frame.componentIds[componentId] = l - 1;\n\t      offset += 3;\n\t     }\n\t     frame.maxH = maxH;\n\t     frame.maxV = maxV;\n\t     prepareComponents(frame);\n\t     break;\n\t    case 0xFFC4:\n\t     var huffmanLength = readUint16();\n\t     for (i = 2; i < huffmanLength;) {\n\t      var huffmanTableSpec = data[offset++];\n\t      var codeLengths = new Uint8Array(16);\n\t      var codeLengthSum = 0;\n\t      for (j = 0; j < 16; j++, offset++) {\n\t       codeLengthSum += codeLengths[j] = data[offset];\n\t      }\n\t      var huffmanValues = new Uint8Array(codeLengthSum);\n\t      for (j = 0; j < codeLengthSum; j++, offset++) {\n\t       huffmanValues[j] = data[offset];\n\t      }\n\t      i += 17 + codeLengthSum;\n\t      (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n\t     }\n\t     break;\n\t    case 0xFFDD:\n\t     readUint16();\n\t     resetInterval = readUint16();\n\t     break;\n\t    case 0xFFDA:\n\t     readUint16();\n\t     var selectorsCount = data[offset++];\n\t     var components = [], component;\n\t     for (i = 0; i < selectorsCount; i++) {\n\t      var componentIndex = frame.componentIds[data[offset++]];\n\t      component = frame.components[componentIndex];\n\t      var tableSpec = data[offset++];\n\t      component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n\t      component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n\t      components.push(component);\n\t     }\n\t     var spectralStart = data[offset++];\n\t     var spectralEnd = data[offset++];\n\t     var successiveApproximation = data[offset++];\n\t     var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n\t     offset += processed;\n\t     break;\n\t    case 0xFFFF:\n\t     if (data[offset] !== 0xFF) {\n\t      offset--;\n\t     }\n\t     break;\n\t    default:\n\t     if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n\t      offset -= 3;\n\t      break;\n\t     }\n\t     error('JPEG error: unknown marker ' + fileMarker.toString(16));\n\t    }\n\t    fileMarker = readUint16();\n\t   }\n\t   this.width = frame.samplesPerLine;\n\t   this.height = frame.scanLines;\n\t   this.jfif = jfif;\n\t   this.adobe = adobe;\n\t   this.components = [];\n\t   for (i = 0; i < frame.components.length; i++) {\n\t    component = frame.components[i];\n\t    var quantizationTable = quantizationTables[component.quantizationId];\n\t    if (quantizationTable) {\n\t     component.quantizationTable = quantizationTable;\n\t    }\n\t    this.components.push({\n\t     output: buildComponentData(frame, component),\n\t     scaleX: component.h / frame.maxH,\n\t     scaleY: component.v / frame.maxV,\n\t     blocksPerLine: component.blocksPerLine,\n\t     blocksPerColumn: component.blocksPerColumn\n\t    });\n\t   }\n\t   this.numComponents = this.components.length;\n\t  },\n\t  _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n\t   var scaleX = this.width / width, scaleY = this.height / height;\n\t   var component, componentScaleX, componentScaleY, blocksPerScanline;\n\t   var x, y, i, j, k;\n\t   var index;\n\t   var offset = 0;\n\t   var output;\n\t   var numComponents = this.components.length;\n\t   var dataLength = width * height * numComponents;\n\t   var data = new Uint8Array(dataLength);\n\t   var xScaleBlockOffset = new Uint32Array(width);\n\t   var mask3LSB = 0xfffffff8;\n\t   for (i = 0; i < numComponents; i++) {\n\t    component = this.components[i];\n\t    componentScaleX = component.scaleX * scaleX;\n\t    componentScaleY = component.scaleY * scaleY;\n\t    offset = i;\n\t    output = component.output;\n\t    blocksPerScanline = component.blocksPerLine + 1 << 3;\n\t    for (x = 0; x < width; x++) {\n\t     j = 0 | x * componentScaleX;\n\t     xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n\t    }\n\t    for (y = 0; y < height; y++) {\n\t     j = 0 | y * componentScaleY;\n\t     index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\t     for (x = 0; x < width; x++) {\n\t      data[offset] = output[index + xScaleBlockOffset[x]];\n\t      offset += numComponents;\n\t     }\n\t    }\n\t   }\n\t   var transform = this.decodeTransform;\n\t   if (transform) {\n\t    for (i = 0; i < dataLength;) {\n\t     for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n\t      data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n\t     }\n\t    }\n\t   }\n\t   return data;\n\t  },\n\t  _isColorConversionNeeded: function isColorConversionNeeded() {\n\t   if (this.adobe && this.adobe.transformCode) {\n\t    return true;\n\t   } else if (this.numComponents === 3) {\n\t    if (!this.adobe && this.colorTransform === 0) {\n\t     return false;\n\t    }\n\t    return true;\n\t   }\n\t   if (!this.adobe && this.colorTransform === 1) {\n\t    return true;\n\t   }\n\t   return false;\n\t  },\n\t  _convertYccToRgb: function convertYccToRgb(data) {\n\t   var Y, Cb, Cr;\n\t   for (var i = 0, length = data.length; i < length; i += 3) {\n\t    Y = data[i];\n\t    Cb = data[i + 1];\n\t    Cr = data[i + 2];\n\t    data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n\t    data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n\t    data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n\t   }\n\t   return data;\n\t  },\n\t  _convertYcckToRgb: function convertYcckToRgb(data) {\n\t   var Y, Cb, Cr, k;\n\t   var offset = 0;\n\t   for (var i = 0, length = data.length; i < length; i += 4) {\n\t    Y = data[i];\n\t    Cb = data[i + 1];\n\t    Cr = data[i + 2];\n\t    k = data[i + 3];\n\t    var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n\t    var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n\t    var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n\t    data[offset++] = clamp0to255(r);\n\t    data[offset++] = clamp0to255(g);\n\t    data[offset++] = clamp0to255(b);\n\t   }\n\t   return data;\n\t  },\n\t  _convertYcckToCmyk: function convertYcckToCmyk(data) {\n\t   var Y, Cb, Cr;\n\t   for (var i = 0, length = data.length; i < length; i += 4) {\n\t    Y = data[i];\n\t    Cb = data[i + 1];\n\t    Cr = data[i + 2];\n\t    data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n\t    data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n\t    data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n\t   }\n\t   return data;\n\t  },\n\t  _convertCmykToRgb: function convertCmykToRgb(data) {\n\t   var c, m, y, k;\n\t   var offset = 0;\n\t   var min = -255 * 255 * 255;\n\t   var scale = 1 / 255 / 255;\n\t   for (var i = 0, length = data.length; i < length; i += 4) {\n\t    c = data[i];\n\t    m = data[i + 1];\n\t    y = data[i + 2];\n\t    k = data[i + 3];\n\t    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n\t    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n\t    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n\t    data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n\t    data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n\t    data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n\t   }\n\t   return data;\n\t  },\n\t  getData: function getData(width, height, forceRGBoutput) {\n\t   if (this.numComponents > 4) {\n\t    error('JPEG error: Unsupported color mode');\n\t   }\n\t   var data = this._getLinearizedBlockData(width, height);\n\t   if (this.numComponents === 1 && forceRGBoutput) {\n\t    var dataLength = data.length;\n\t    var rgbData = new Uint8Array(dataLength * 3);\n\t    var offset = 0;\n\t    for (var i = 0; i < dataLength; i++) {\n\t     var grayColor = data[i];\n\t     rgbData[offset++] = grayColor;\n\t     rgbData[offset++] = grayColor;\n\t     rgbData[offset++] = grayColor;\n\t    }\n\t    return rgbData;\n\t   } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n\t    return this._convertYccToRgb(data);\n\t   } else if (this.numComponents === 4) {\n\t    if (this._isColorConversionNeeded()) {\n\t     if (forceRGBoutput) {\n\t      return this._convertYcckToRgb(data);\n\t     }\n\t     return this._convertYcckToCmyk(data);\n\t    } else if (forceRGBoutput) {\n\t     return this._convertCmykToRgb(data);\n\t    }\n\t   }\n\t   return data;\n\t  }\n\t };\n\t return JpegImage;\n\t}();\n\texports.JpegImage = JpegImage;\n\t\n\t/***/ }),\n\t/* 30 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\n\tvar getMetrics = getLookupTableFactory(function (t) {\n\t t['Courier'] = 600;\n\t t['Courier-Bold'] = 600;\n\t t['Courier-BoldOblique'] = 600;\n\t t['Courier-Oblique'] = 600;\n\t t['Helvetica'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 278;\n\t  t['exclam'] = 278;\n\t  t['quotedbl'] = 355;\n\t  t['numbersign'] = 556;\n\t  t['dollar'] = 556;\n\t  t['percent'] = 889;\n\t  t['ampersand'] = 667;\n\t  t['quoteright'] = 222;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 389;\n\t  t['plus'] = 584;\n\t  t['comma'] = 278;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 278;\n\t  t['slash'] = 278;\n\t  t['zero'] = 556;\n\t  t['one'] = 556;\n\t  t['two'] = 556;\n\t  t['three'] = 556;\n\t  t['four'] = 556;\n\t  t['five'] = 556;\n\t  t['six'] = 556;\n\t  t['seven'] = 556;\n\t  t['eight'] = 556;\n\t  t['nine'] = 556;\n\t  t['colon'] = 278;\n\t  t['semicolon'] = 278;\n\t  t['less'] = 584;\n\t  t['equal'] = 584;\n\t  t['greater'] = 584;\n\t  t['question'] = 556;\n\t  t['at'] = 1015;\n\t  t['A'] = 667;\n\t  t['B'] = 667;\n\t  t['C'] = 722;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 611;\n\t  t['G'] = 778;\n\t  t['H'] = 722;\n\t  t['I'] = 278;\n\t  t['J'] = 500;\n\t  t['K'] = 667;\n\t  t['L'] = 556;\n\t  t['M'] = 833;\n\t  t['N'] = 722;\n\t  t['O'] = 778;\n\t  t['P'] = 667;\n\t  t['Q'] = 778;\n\t  t['R'] = 722;\n\t  t['S'] = 667;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 667;\n\t  t['W'] = 944;\n\t  t['X'] = 667;\n\t  t['Y'] = 667;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 278;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 278;\n\t  t['asciicircum'] = 469;\n\t  t['underscore'] = 556;\n\t  t['quoteleft'] = 222;\n\t  t['a'] = 556;\n\t  t['b'] = 556;\n\t  t['c'] = 500;\n\t  t['d'] = 556;\n\t  t['e'] = 556;\n\t  t['f'] = 278;\n\t  t['g'] = 556;\n\t  t['h'] = 556;\n\t  t['i'] = 222;\n\t  t['j'] = 222;\n\t  t['k'] = 500;\n\t  t['l'] = 222;\n\t  t['m'] = 833;\n\t  t['n'] = 556;\n\t  t['o'] = 556;\n\t  t['p'] = 556;\n\t  t['q'] = 556;\n\t  t['r'] = 333;\n\t  t['s'] = 500;\n\t  t['t'] = 278;\n\t  t['u'] = 556;\n\t  t['v'] = 500;\n\t  t['w'] = 722;\n\t  t['x'] = 500;\n\t  t['y'] = 500;\n\t  t['z'] = 500;\n\t  t['braceleft'] = 334;\n\t  t['bar'] = 260;\n\t  t['braceright'] = 334;\n\t  t['asciitilde'] = 584;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 556;\n\t  t['sterling'] = 556;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 556;\n\t  t['florin'] = 556;\n\t  t['section'] = 556;\n\t  t['currency'] = 556;\n\t  t['quotesingle'] = 191;\n\t  t['quotedblleft'] = 333;\n\t  t['guillemotleft'] = 556;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 500;\n\t  t['fl'] = 500;\n\t  t['endash'] = 556;\n\t  t['dagger'] = 556;\n\t  t['daggerdbl'] = 556;\n\t  t['periodcentered'] = 278;\n\t  t['paragraph'] = 537;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 222;\n\t  t['quotedblbase'] = 333;\n\t  t['quotedblright'] = 333;\n\t  t['guillemotright'] = 556;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 611;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 1000;\n\t  t['ordfeminine'] = 370;\n\t  t['Lslash'] = 556;\n\t  t['Oslash'] = 778;\n\t  t['OE'] = 1000;\n\t  t['ordmasculine'] = 365;\n\t  t['ae'] = 889;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 222;\n\t  t['oslash'] = 611;\n\t  t['oe'] = 944;\n\t  t['germandbls'] = 611;\n\t  t['Idieresis'] = 278;\n\t  t['eacute'] = 556;\n\t  t['abreve'] = 556;\n\t  t['uhungarumlaut'] = 556;\n\t  t['ecaron'] = 556;\n\t  t['Ydieresis'] = 667;\n\t  t['divide'] = 584;\n\t  t['Yacute'] = 667;\n\t  t['Acircumflex'] = 667;\n\t  t['aacute'] = 556;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 500;\n\t  t['scommaaccent'] = 500;\n\t  t['ecircumflex'] = 556;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 556;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 556;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 737;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 500;\n\t  t['aring'] = 556;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 222;\n\t  t['agrave'] = 556;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 722;\n\t  t['atilde'] = 556;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 500;\n\t  t['scedilla'] = 500;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 471;\n\t  t['Rcaron'] = 722;\n\t  t['Gcommaaccent'] = 778;\n\t  t['ucircumflex'] = 556;\n\t  t['acircumflex'] = 556;\n\t  t['Amacron'] = 667;\n\t  t['rcaron'] = 333;\n\t  t['ccedilla'] = 500;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 667;\n\t  t['Omacron'] = 778;\n\t  t['Racute'] = 722;\n\t  t['Sacute'] = 667;\n\t  t['dcaron'] = 643;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 556;\n\t  t['threesuperior'] = 333;\n\t  t['Ograve'] = 778;\n\t  t['Agrave'] = 667;\n\t  t['Abreve'] = 667;\n\t  t['multiply'] = 584;\n\t  t['uacute'] = 556;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 476;\n\t  t['ydieresis'] = 500;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 556;\n\t  t['edieresis'] = 556;\n\t  t['cacute'] = 500;\n\t  t['nacute'] = 556;\n\t  t['umacron'] = 556;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 278;\n\t  t['plusminus'] = 584;\n\t  t['brokenbar'] = 260;\n\t  t['registered'] = 737;\n\t  t['Gbreve'] = 778;\n\t  t['Idotaccent'] = 278;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 333;\n\t  t['omacron'] = 556;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 722;\n\t  t['lcommaaccent'] = 222;\n\t  t['tcaron'] = 317;\n\t  t['eogonek'] = 556;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 667;\n\t  t['Adieresis'] = 667;\n\t  t['egrave'] = 556;\n\t  t['zacute'] = 500;\n\t  t['iogonek'] = 222;\n\t  t['Oacute'] = 778;\n\t  t['oacute'] = 556;\n\t  t['amacron'] = 556;\n\t  t['sacute'] = 500;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 778;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 556;\n\t  t['twosuperior'] = 333;\n\t  t['Odieresis'] = 778;\n\t  t['mu'] = 556;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 556;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 556;\n\t  t['threequarters'] = 834;\n\t  t['Scedilla'] = 667;\n\t  t['lcaron'] = 299;\n\t  t['Kcommaaccent'] = 667;\n\t  t['Lacute'] = 556;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 556;\n\t  t['Igrave'] = 278;\n\t  t['Imacron'] = 278;\n\t  t['Lcaron'] = 556;\n\t  t['onehalf'] = 834;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 556;\n\t  t['ntilde'] = 556;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 556;\n\t  t['gbreve'] = 556;\n\t  t['onequarter'] = 834;\n\t  t['Scaron'] = 667;\n\t  t['Scommaaccent'] = 667;\n\t  t['Ohungarumlaut'] = 778;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 556;\n\t  t['Ccaron'] = 722;\n\t  t['ugrave'] = 556;\n\t  t['radical'] = 453;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 333;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 556;\n\t  t['Rcommaaccent'] = 722;\n\t  t['Lcommaaccent'] = 556;\n\t  t['Atilde'] = 667;\n\t  t['Aogonek'] = 667;\n\t  t['Aring'] = 667;\n\t  t['Otilde'] = 778;\n\t  t['zdotaccent'] = 500;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 278;\n\t  t['kcommaaccent'] = 500;\n\t  t['minus'] = 584;\n\t  t['Icircumflex'] = 278;\n\t  t['ncaron'] = 556;\n\t  t['tcommaaccent'] = 278;\n\t  t['logicalnot'] = 584;\n\t  t['odieresis'] = 556;\n\t  t['udieresis'] = 556;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 556;\n\t  t['eth'] = 556;\n\t  t['zcaron'] = 500;\n\t  t['ncommaaccent'] = 556;\n\t  t['onesuperior'] = 333;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 556;\n\t });\n\t t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 278;\n\t  t['exclam'] = 333;\n\t  t['quotedbl'] = 474;\n\t  t['numbersign'] = 556;\n\t  t['dollar'] = 556;\n\t  t['percent'] = 889;\n\t  t['ampersand'] = 722;\n\t  t['quoteright'] = 278;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 389;\n\t  t['plus'] = 584;\n\t  t['comma'] = 278;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 278;\n\t  t['slash'] = 278;\n\t  t['zero'] = 556;\n\t  t['one'] = 556;\n\t  t['two'] = 556;\n\t  t['three'] = 556;\n\t  t['four'] = 556;\n\t  t['five'] = 556;\n\t  t['six'] = 556;\n\t  t['seven'] = 556;\n\t  t['eight'] = 556;\n\t  t['nine'] = 556;\n\t  t['colon'] = 333;\n\t  t['semicolon'] = 333;\n\t  t['less'] = 584;\n\t  t['equal'] = 584;\n\t  t['greater'] = 584;\n\t  t['question'] = 611;\n\t  t['at'] = 975;\n\t  t['A'] = 722;\n\t  t['B'] = 722;\n\t  t['C'] = 722;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 611;\n\t  t['G'] = 778;\n\t  t['H'] = 722;\n\t  t['I'] = 278;\n\t  t['J'] = 556;\n\t  t['K'] = 722;\n\t  t['L'] = 611;\n\t  t['M'] = 833;\n\t  t['N'] = 722;\n\t  t['O'] = 778;\n\t  t['P'] = 667;\n\t  t['Q'] = 778;\n\t  t['R'] = 722;\n\t  t['S'] = 667;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 667;\n\t  t['W'] = 944;\n\t  t['X'] = 667;\n\t  t['Y'] = 667;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 333;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 333;\n\t  t['asciicircum'] = 584;\n\t  t['underscore'] = 556;\n\t  t['quoteleft'] = 278;\n\t  t['a'] = 556;\n\t  t['b'] = 611;\n\t  t['c'] = 556;\n\t  t['d'] = 611;\n\t  t['e'] = 556;\n\t  t['f'] = 333;\n\t  t['g'] = 611;\n\t  t['h'] = 611;\n\t  t['i'] = 278;\n\t  t['j'] = 278;\n\t  t['k'] = 556;\n\t  t['l'] = 278;\n\t  t['m'] = 889;\n\t  t['n'] = 611;\n\t  t['o'] = 611;\n\t  t['p'] = 611;\n\t  t['q'] = 611;\n\t  t['r'] = 389;\n\t  t['s'] = 556;\n\t  t['t'] = 333;\n\t  t['u'] = 611;\n\t  t['v'] = 556;\n\t  t['w'] = 778;\n\t  t['x'] = 556;\n\t  t['y'] = 556;\n\t  t['z'] = 500;\n\t  t['braceleft'] = 389;\n\t  t['bar'] = 280;\n\t  t['braceright'] = 389;\n\t  t['asciitilde'] = 584;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 556;\n\t  t['sterling'] = 556;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 556;\n\t  t['florin'] = 556;\n\t  t['section'] = 556;\n\t  t['currency'] = 556;\n\t  t['quotesingle'] = 238;\n\t  t['quotedblleft'] = 500;\n\t  t['guillemotleft'] = 556;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 611;\n\t  t['fl'] = 611;\n\t  t['endash'] = 556;\n\t  t['dagger'] = 556;\n\t  t['daggerdbl'] = 556;\n\t  t['periodcentered'] = 278;\n\t  t['paragraph'] = 556;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 278;\n\t  t['quotedblbase'] = 500;\n\t  t['quotedblright'] = 500;\n\t  t['guillemotright'] = 556;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 611;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 1000;\n\t  t['ordfeminine'] = 370;\n\t  t['Lslash'] = 611;\n\t  t['Oslash'] = 778;\n\t  t['OE'] = 1000;\n\t  t['ordmasculine'] = 365;\n\t  t['ae'] = 889;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 611;\n\t  t['oe'] = 944;\n\t  t['germandbls'] = 611;\n\t  t['Idieresis'] = 278;\n\t  t['eacute'] = 556;\n\t  t['abreve'] = 556;\n\t  t['uhungarumlaut'] = 611;\n\t  t['ecaron'] = 556;\n\t  t['Ydieresis'] = 667;\n\t  t['divide'] = 584;\n\t  t['Yacute'] = 667;\n\t  t['Acircumflex'] = 722;\n\t  t['aacute'] = 556;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 556;\n\t  t['scommaaccent'] = 556;\n\t  t['ecircumflex'] = 556;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 556;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 611;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 737;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 556;\n\t  t['aring'] = 556;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 556;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 722;\n\t  t['atilde'] = 556;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 556;\n\t  t['scedilla'] = 556;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 494;\n\t  t['Rcaron'] = 722;\n\t  t['Gcommaaccent'] = 778;\n\t  t['ucircumflex'] = 611;\n\t  t['acircumflex'] = 556;\n\t  t['Amacron'] = 722;\n\t  t['rcaron'] = 389;\n\t  t['ccedilla'] = 556;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 667;\n\t  t['Omacron'] = 778;\n\t  t['Racute'] = 722;\n\t  t['Sacute'] = 667;\n\t  t['dcaron'] = 743;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 611;\n\t  t['threesuperior'] = 333;\n\t  t['Ograve'] = 778;\n\t  t['Agrave'] = 722;\n\t  t['Abreve'] = 722;\n\t  t['multiply'] = 584;\n\t  t['uacute'] = 611;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 494;\n\t  t['ydieresis'] = 556;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 556;\n\t  t['edieresis'] = 556;\n\t  t['cacute'] = 556;\n\t  t['nacute'] = 611;\n\t  t['umacron'] = 611;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 278;\n\t  t['plusminus'] = 584;\n\t  t['brokenbar'] = 280;\n\t  t['registered'] = 737;\n\t  t['Gbreve'] = 778;\n\t  t['Idotaccent'] = 278;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 389;\n\t  t['omacron'] = 611;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 722;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 389;\n\t  t['eogonek'] = 556;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 722;\n\t  t['Adieresis'] = 722;\n\t  t['egrave'] = 556;\n\t  t['zacute'] = 500;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 778;\n\t  t['oacute'] = 611;\n\t  t['amacron'] = 556;\n\t  t['sacute'] = 556;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 778;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 611;\n\t  t['twosuperior'] = 333;\n\t  t['Odieresis'] = 778;\n\t  t['mu'] = 611;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 611;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 611;\n\t  t['threequarters'] = 834;\n\t  t['Scedilla'] = 667;\n\t  t['lcaron'] = 400;\n\t  t['Kcommaaccent'] = 722;\n\t  t['Lacute'] = 611;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 556;\n\t  t['Igrave'] = 278;\n\t  t['Imacron'] = 278;\n\t  t['Lcaron'] = 611;\n\t  t['onehalf'] = 834;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 611;\n\t  t['ntilde'] = 611;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 556;\n\t  t['gbreve'] = 611;\n\t  t['onequarter'] = 834;\n\t  t['Scaron'] = 667;\n\t  t['Scommaaccent'] = 667;\n\t  t['Ohungarumlaut'] = 778;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 611;\n\t  t['Ccaron'] = 722;\n\t  t['ugrave'] = 611;\n\t  t['radical'] = 549;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 389;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 611;\n\t  t['Rcommaaccent'] = 722;\n\t  t['Lcommaaccent'] = 611;\n\t  t['Atilde'] = 722;\n\t  t['Aogonek'] = 722;\n\t  t['Aring'] = 722;\n\t  t['Otilde'] = 778;\n\t  t['zdotaccent'] = 500;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 278;\n\t  t['kcommaaccent'] = 556;\n\t  t['minus'] = 584;\n\t  t['Icircumflex'] = 278;\n\t  t['ncaron'] = 611;\n\t  t['tcommaaccent'] = 333;\n\t  t['logicalnot'] = 584;\n\t  t['odieresis'] = 611;\n\t  t['udieresis'] = 611;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 611;\n\t  t['eth'] = 611;\n\t  t['zcaron'] = 500;\n\t  t['ncommaaccent'] = 611;\n\t  t['onesuperior'] = 333;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 556;\n\t });\n\t t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 278;\n\t  t['exclam'] = 333;\n\t  t['quotedbl'] = 474;\n\t  t['numbersign'] = 556;\n\t  t['dollar'] = 556;\n\t  t['percent'] = 889;\n\t  t['ampersand'] = 722;\n\t  t['quoteright'] = 278;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 389;\n\t  t['plus'] = 584;\n\t  t['comma'] = 278;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 278;\n\t  t['slash'] = 278;\n\t  t['zero'] = 556;\n\t  t['one'] = 556;\n\t  t['two'] = 556;\n\t  t['three'] = 556;\n\t  t['four'] = 556;\n\t  t['five'] = 556;\n\t  t['six'] = 556;\n\t  t['seven'] = 556;\n\t  t['eight'] = 556;\n\t  t['nine'] = 556;\n\t  t['colon'] = 333;\n\t  t['semicolon'] = 333;\n\t  t['less'] = 584;\n\t  t['equal'] = 584;\n\t  t['greater'] = 584;\n\t  t['question'] = 611;\n\t  t['at'] = 975;\n\t  t['A'] = 722;\n\t  t['B'] = 722;\n\t  t['C'] = 722;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 611;\n\t  t['G'] = 778;\n\t  t['H'] = 722;\n\t  t['I'] = 278;\n\t  t['J'] = 556;\n\t  t['K'] = 722;\n\t  t['L'] = 611;\n\t  t['M'] = 833;\n\t  t['N'] = 722;\n\t  t['O'] = 778;\n\t  t['P'] = 667;\n\t  t['Q'] = 778;\n\t  t['R'] = 722;\n\t  t['S'] = 667;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 667;\n\t  t['W'] = 944;\n\t  t['X'] = 667;\n\t  t['Y'] = 667;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 333;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 333;\n\t  t['asciicircum'] = 584;\n\t  t['underscore'] = 556;\n\t  t['quoteleft'] = 278;\n\t  t['a'] = 556;\n\t  t['b'] = 611;\n\t  t['c'] = 556;\n\t  t['d'] = 611;\n\t  t['e'] = 556;\n\t  t['f'] = 333;\n\t  t['g'] = 611;\n\t  t['h'] = 611;\n\t  t['i'] = 278;\n\t  t['j'] = 278;\n\t  t['k'] = 556;\n\t  t['l'] = 278;\n\t  t['m'] = 889;\n\t  t['n'] = 611;\n\t  t['o'] = 611;\n\t  t['p'] = 611;\n\t  t['q'] = 611;\n\t  t['r'] = 389;\n\t  t['s'] = 556;\n\t  t['t'] = 333;\n\t  t['u'] = 611;\n\t  t['v'] = 556;\n\t  t['w'] = 778;\n\t  t['x'] = 556;\n\t  t['y'] = 556;\n\t  t['z'] = 500;\n\t  t['braceleft'] = 389;\n\t  t['bar'] = 280;\n\t  t['braceright'] = 389;\n\t  t['asciitilde'] = 584;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 556;\n\t  t['sterling'] = 556;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 556;\n\t  t['florin'] = 556;\n\t  t['section'] = 556;\n\t  t['currency'] = 556;\n\t  t['quotesingle'] = 238;\n\t  t['quotedblleft'] = 500;\n\t  t['guillemotleft'] = 556;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 611;\n\t  t['fl'] = 611;\n\t  t['endash'] = 556;\n\t  t['dagger'] = 556;\n\t  t['daggerdbl'] = 556;\n\t  t['periodcentered'] = 278;\n\t  t['paragraph'] = 556;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 278;\n\t  t['quotedblbase'] = 500;\n\t  t['quotedblright'] = 500;\n\t  t['guillemotright'] = 556;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 611;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 1000;\n\t  t['ordfeminine'] = 370;\n\t  t['Lslash'] = 611;\n\t  t['Oslash'] = 778;\n\t  t['OE'] = 1000;\n\t  t['ordmasculine'] = 365;\n\t  t['ae'] = 889;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 611;\n\t  t['oe'] = 944;\n\t  t['germandbls'] = 611;\n\t  t['Idieresis'] = 278;\n\t  t['eacute'] = 556;\n\t  t['abreve'] = 556;\n\t  t['uhungarumlaut'] = 611;\n\t  t['ecaron'] = 556;\n\t  t['Ydieresis'] = 667;\n\t  t['divide'] = 584;\n\t  t['Yacute'] = 667;\n\t  t['Acircumflex'] = 722;\n\t  t['aacute'] = 556;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 556;\n\t  t['scommaaccent'] = 556;\n\t  t['ecircumflex'] = 556;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 556;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 611;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 737;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 556;\n\t  t['aring'] = 556;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 556;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 722;\n\t  t['atilde'] = 556;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 556;\n\t  t['scedilla'] = 556;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 494;\n\t  t['Rcaron'] = 722;\n\t  t['Gcommaaccent'] = 778;\n\t  t['ucircumflex'] = 611;\n\t  t['acircumflex'] = 556;\n\t  t['Amacron'] = 722;\n\t  t['rcaron'] = 389;\n\t  t['ccedilla'] = 556;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 667;\n\t  t['Omacron'] = 778;\n\t  t['Racute'] = 722;\n\t  t['Sacute'] = 667;\n\t  t['dcaron'] = 743;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 611;\n\t  t['threesuperior'] = 333;\n\t  t['Ograve'] = 778;\n\t  t['Agrave'] = 722;\n\t  t['Abreve'] = 722;\n\t  t['multiply'] = 584;\n\t  t['uacute'] = 611;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 494;\n\t  t['ydieresis'] = 556;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 556;\n\t  t['edieresis'] = 556;\n\t  t['cacute'] = 556;\n\t  t['nacute'] = 611;\n\t  t['umacron'] = 611;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 278;\n\t  t['plusminus'] = 584;\n\t  t['brokenbar'] = 280;\n\t  t['registered'] = 737;\n\t  t['Gbreve'] = 778;\n\t  t['Idotaccent'] = 278;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 389;\n\t  t['omacron'] = 611;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 722;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 389;\n\t  t['eogonek'] = 556;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 722;\n\t  t['Adieresis'] = 722;\n\t  t['egrave'] = 556;\n\t  t['zacute'] = 500;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 778;\n\t  t['oacute'] = 611;\n\t  t['amacron'] = 556;\n\t  t['sacute'] = 556;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 778;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 611;\n\t  t['twosuperior'] = 333;\n\t  t['Odieresis'] = 778;\n\t  t['mu'] = 611;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 611;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 611;\n\t  t['threequarters'] = 834;\n\t  t['Scedilla'] = 667;\n\t  t['lcaron'] = 400;\n\t  t['Kcommaaccent'] = 722;\n\t  t['Lacute'] = 611;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 556;\n\t  t['Igrave'] = 278;\n\t  t['Imacron'] = 278;\n\t  t['Lcaron'] = 611;\n\t  t['onehalf'] = 834;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 611;\n\t  t['ntilde'] = 611;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 556;\n\t  t['gbreve'] = 611;\n\t  t['onequarter'] = 834;\n\t  t['Scaron'] = 667;\n\t  t['Scommaaccent'] = 667;\n\t  t['Ohungarumlaut'] = 778;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 611;\n\t  t['Ccaron'] = 722;\n\t  t['ugrave'] = 611;\n\t  t['radical'] = 549;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 389;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 611;\n\t  t['Rcommaaccent'] = 722;\n\t  t['Lcommaaccent'] = 611;\n\t  t['Atilde'] = 722;\n\t  t['Aogonek'] = 722;\n\t  t['Aring'] = 722;\n\t  t['Otilde'] = 778;\n\t  t['zdotaccent'] = 500;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 278;\n\t  t['kcommaaccent'] = 556;\n\t  t['minus'] = 584;\n\t  t['Icircumflex'] = 278;\n\t  t['ncaron'] = 611;\n\t  t['tcommaaccent'] = 333;\n\t  t['logicalnot'] = 584;\n\t  t['odieresis'] = 611;\n\t  t['udieresis'] = 611;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 611;\n\t  t['eth'] = 611;\n\t  t['zcaron'] = 500;\n\t  t['ncommaaccent'] = 611;\n\t  t['onesuperior'] = 333;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 556;\n\t });\n\t t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 278;\n\t  t['exclam'] = 278;\n\t  t['quotedbl'] = 355;\n\t  t['numbersign'] = 556;\n\t  t['dollar'] = 556;\n\t  t['percent'] = 889;\n\t  t['ampersand'] = 667;\n\t  t['quoteright'] = 222;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 389;\n\t  t['plus'] = 584;\n\t  t['comma'] = 278;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 278;\n\t  t['slash'] = 278;\n\t  t['zero'] = 556;\n\t  t['one'] = 556;\n\t  t['two'] = 556;\n\t  t['three'] = 556;\n\t  t['four'] = 556;\n\t  t['five'] = 556;\n\t  t['six'] = 556;\n\t  t['seven'] = 556;\n\t  t['eight'] = 556;\n\t  t['nine'] = 556;\n\t  t['colon'] = 278;\n\t  t['semicolon'] = 278;\n\t  t['less'] = 584;\n\t  t['equal'] = 584;\n\t  t['greater'] = 584;\n\t  t['question'] = 556;\n\t  t['at'] = 1015;\n\t  t['A'] = 667;\n\t  t['B'] = 667;\n\t  t['C'] = 722;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 611;\n\t  t['G'] = 778;\n\t  t['H'] = 722;\n\t  t['I'] = 278;\n\t  t['J'] = 500;\n\t  t['K'] = 667;\n\t  t['L'] = 556;\n\t  t['M'] = 833;\n\t  t['N'] = 722;\n\t  t['O'] = 778;\n\t  t['P'] = 667;\n\t  t['Q'] = 778;\n\t  t['R'] = 722;\n\t  t['S'] = 667;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 667;\n\t  t['W'] = 944;\n\t  t['X'] = 667;\n\t  t['Y'] = 667;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 278;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 278;\n\t  t['asciicircum'] = 469;\n\t  t['underscore'] = 556;\n\t  t['quoteleft'] = 222;\n\t  t['a'] = 556;\n\t  t['b'] = 556;\n\t  t['c'] = 500;\n\t  t['d'] = 556;\n\t  t['e'] = 556;\n\t  t['f'] = 278;\n\t  t['g'] = 556;\n\t  t['h'] = 556;\n\t  t['i'] = 222;\n\t  t['j'] = 222;\n\t  t['k'] = 500;\n\t  t['l'] = 222;\n\t  t['m'] = 833;\n\t  t['n'] = 556;\n\t  t['o'] = 556;\n\t  t['p'] = 556;\n\t  t['q'] = 556;\n\t  t['r'] = 333;\n\t  t['s'] = 500;\n\t  t['t'] = 278;\n\t  t['u'] = 556;\n\t  t['v'] = 500;\n\t  t['w'] = 722;\n\t  t['x'] = 500;\n\t  t['y'] = 500;\n\t  t['z'] = 500;\n\t  t['braceleft'] = 334;\n\t  t['bar'] = 260;\n\t  t['braceright'] = 334;\n\t  t['asciitilde'] = 584;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 556;\n\t  t['sterling'] = 556;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 556;\n\t  t['florin'] = 556;\n\t  t['section'] = 556;\n\t  t['currency'] = 556;\n\t  t['quotesingle'] = 191;\n\t  t['quotedblleft'] = 333;\n\t  t['guillemotleft'] = 556;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 500;\n\t  t['fl'] = 500;\n\t  t['endash'] = 556;\n\t  t['dagger'] = 556;\n\t  t['daggerdbl'] = 556;\n\t  t['periodcentered'] = 278;\n\t  t['paragraph'] = 537;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 222;\n\t  t['quotedblbase'] = 333;\n\t  t['quotedblright'] = 333;\n\t  t['guillemotright'] = 556;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 611;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 1000;\n\t  t['ordfeminine'] = 370;\n\t  t['Lslash'] = 556;\n\t  t['Oslash'] = 778;\n\t  t['OE'] = 1000;\n\t  t['ordmasculine'] = 365;\n\t  t['ae'] = 889;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 222;\n\t  t['oslash'] = 611;\n\t  t['oe'] = 944;\n\t  t['germandbls'] = 611;\n\t  t['Idieresis'] = 278;\n\t  t['eacute'] = 556;\n\t  t['abreve'] = 556;\n\t  t['uhungarumlaut'] = 556;\n\t  t['ecaron'] = 556;\n\t  t['Ydieresis'] = 667;\n\t  t['divide'] = 584;\n\t  t['Yacute'] = 667;\n\t  t['Acircumflex'] = 667;\n\t  t['aacute'] = 556;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 500;\n\t  t['scommaaccent'] = 500;\n\t  t['ecircumflex'] = 556;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 556;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 556;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 737;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 500;\n\t  t['aring'] = 556;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 222;\n\t  t['agrave'] = 556;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 722;\n\t  t['atilde'] = 556;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 500;\n\t  t['scedilla'] = 500;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 471;\n\t  t['Rcaron'] = 722;\n\t  t['Gcommaaccent'] = 778;\n\t  t['ucircumflex'] = 556;\n\t  t['acircumflex'] = 556;\n\t  t['Amacron'] = 667;\n\t  t['rcaron'] = 333;\n\t  t['ccedilla'] = 500;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 667;\n\t  t['Omacron'] = 778;\n\t  t['Racute'] = 722;\n\t  t['Sacute'] = 667;\n\t  t['dcaron'] = 643;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 556;\n\t  t['threesuperior'] = 333;\n\t  t['Ograve'] = 778;\n\t  t['Agrave'] = 667;\n\t  t['Abreve'] = 667;\n\t  t['multiply'] = 584;\n\t  t['uacute'] = 556;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 476;\n\t  t['ydieresis'] = 500;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 556;\n\t  t['edieresis'] = 556;\n\t  t['cacute'] = 500;\n\t  t['nacute'] = 556;\n\t  t['umacron'] = 556;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 278;\n\t  t['plusminus'] = 584;\n\t  t['brokenbar'] = 260;\n\t  t['registered'] = 737;\n\t  t['Gbreve'] = 778;\n\t  t['Idotaccent'] = 278;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 333;\n\t  t['omacron'] = 556;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 722;\n\t  t['lcommaaccent'] = 222;\n\t  t['tcaron'] = 317;\n\t  t['eogonek'] = 556;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 667;\n\t  t['Adieresis'] = 667;\n\t  t['egrave'] = 556;\n\t  t['zacute'] = 500;\n\t  t['iogonek'] = 222;\n\t  t['Oacute'] = 778;\n\t  t['oacute'] = 556;\n\t  t['amacron'] = 556;\n\t  t['sacute'] = 500;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 778;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 556;\n\t  t['twosuperior'] = 333;\n\t  t['Odieresis'] = 778;\n\t  t['mu'] = 556;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 556;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 556;\n\t  t['threequarters'] = 834;\n\t  t['Scedilla'] = 667;\n\t  t['lcaron'] = 299;\n\t  t['Kcommaaccent'] = 667;\n\t  t['Lacute'] = 556;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 556;\n\t  t['Igrave'] = 278;\n\t  t['Imacron'] = 278;\n\t  t['Lcaron'] = 556;\n\t  t['onehalf'] = 834;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 556;\n\t  t['ntilde'] = 556;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 556;\n\t  t['gbreve'] = 556;\n\t  t['onequarter'] = 834;\n\t  t['Scaron'] = 667;\n\t  t['Scommaaccent'] = 667;\n\t  t['Ohungarumlaut'] = 778;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 556;\n\t  t['Ccaron'] = 722;\n\t  t['ugrave'] = 556;\n\t  t['radical'] = 453;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 333;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 556;\n\t  t['Rcommaaccent'] = 722;\n\t  t['Lcommaaccent'] = 556;\n\t  t['Atilde'] = 667;\n\t  t['Aogonek'] = 667;\n\t  t['Aring'] = 667;\n\t  t['Otilde'] = 778;\n\t  t['zdotaccent'] = 500;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 278;\n\t  t['kcommaaccent'] = 500;\n\t  t['minus'] = 584;\n\t  t['Icircumflex'] = 278;\n\t  t['ncaron'] = 556;\n\t  t['tcommaaccent'] = 278;\n\t  t['logicalnot'] = 584;\n\t  t['odieresis'] = 556;\n\t  t['udieresis'] = 556;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 556;\n\t  t['eth'] = 556;\n\t  t['zcaron'] = 500;\n\t  t['ncommaaccent'] = 556;\n\t  t['onesuperior'] = 333;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 556;\n\t });\n\t t['Symbol'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 250;\n\t  t['exclam'] = 333;\n\t  t['universal'] = 713;\n\t  t['numbersign'] = 500;\n\t  t['existential'] = 549;\n\t  t['percent'] = 833;\n\t  t['ampersand'] = 778;\n\t  t['suchthat'] = 439;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asteriskmath'] = 500;\n\t  t['plus'] = 549;\n\t  t['comma'] = 250;\n\t  t['minus'] = 549;\n\t  t['period'] = 250;\n\t  t['slash'] = 278;\n\t  t['zero'] = 500;\n\t  t['one'] = 500;\n\t  t['two'] = 500;\n\t  t['three'] = 500;\n\t  t['four'] = 500;\n\t  t['five'] = 500;\n\t  t['six'] = 500;\n\t  t['seven'] = 500;\n\t  t['eight'] = 500;\n\t  t['nine'] = 500;\n\t  t['colon'] = 278;\n\t  t['semicolon'] = 278;\n\t  t['less'] = 549;\n\t  t['equal'] = 549;\n\t  t['greater'] = 549;\n\t  t['question'] = 444;\n\t  t['congruent'] = 549;\n\t  t['Alpha'] = 722;\n\t  t['Beta'] = 667;\n\t  t['Chi'] = 722;\n\t  t['Delta'] = 612;\n\t  t['Epsilon'] = 611;\n\t  t['Phi'] = 763;\n\t  t['Gamma'] = 603;\n\t  t['Eta'] = 722;\n\t  t['Iota'] = 333;\n\t  t['theta1'] = 631;\n\t  t['Kappa'] = 722;\n\t  t['Lambda'] = 686;\n\t  t['Mu'] = 889;\n\t  t['Nu'] = 722;\n\t  t['Omicron'] = 722;\n\t  t['Pi'] = 768;\n\t  t['Theta'] = 741;\n\t  t['Rho'] = 556;\n\t  t['Sigma'] = 592;\n\t  t['Tau'] = 611;\n\t  t['Upsilon'] = 690;\n\t  t['sigma1'] = 439;\n\t  t['Omega'] = 768;\n\t  t['Xi'] = 645;\n\t  t['Psi'] = 795;\n\t  t['Zeta'] = 611;\n\t  t['bracketleft'] = 333;\n\t  t['therefore'] = 863;\n\t  t['bracketright'] = 333;\n\t  t['perpendicular'] = 658;\n\t  t['underscore'] = 500;\n\t  t['radicalex'] = 500;\n\t  t['alpha'] = 631;\n\t  t['beta'] = 549;\n\t  t['chi'] = 549;\n\t  t['delta'] = 494;\n\t  t['epsilon'] = 439;\n\t  t['phi'] = 521;\n\t  t['gamma'] = 411;\n\t  t['eta'] = 603;\n\t  t['iota'] = 329;\n\t  t['phi1'] = 603;\n\t  t['kappa'] = 549;\n\t  t['lambda'] = 549;\n\t  t['mu'] = 576;\n\t  t['nu'] = 521;\n\t  t['omicron'] = 549;\n\t  t['pi'] = 549;\n\t  t['theta'] = 521;\n\t  t['rho'] = 549;\n\t  t['sigma'] = 603;\n\t  t['tau'] = 439;\n\t  t['upsilon'] = 576;\n\t  t['omega1'] = 713;\n\t  t['omega'] = 686;\n\t  t['xi'] = 493;\n\t  t['psi'] = 686;\n\t  t['zeta'] = 494;\n\t  t['braceleft'] = 480;\n\t  t['bar'] = 200;\n\t  t['braceright'] = 480;\n\t  t['similar'] = 549;\n\t  t['Euro'] = 750;\n\t  t['Upsilon1'] = 620;\n\t  t['minute'] = 247;\n\t  t['lessequal'] = 549;\n\t  t['fraction'] = 167;\n\t  t['infinity'] = 713;\n\t  t['florin'] = 500;\n\t  t['club'] = 753;\n\t  t['diamond'] = 753;\n\t  t['heart'] = 753;\n\t  t['spade'] = 753;\n\t  t['arrowboth'] = 1042;\n\t  t['arrowleft'] = 987;\n\t  t['arrowup'] = 603;\n\t  t['arrowright'] = 987;\n\t  t['arrowdown'] = 603;\n\t  t['degree'] = 400;\n\t  t['plusminus'] = 549;\n\t  t['second'] = 411;\n\t  t['greaterequal'] = 549;\n\t  t['multiply'] = 549;\n\t  t['proportional'] = 713;\n\t  t['partialdiff'] = 494;\n\t  t['bullet'] = 460;\n\t  t['divide'] = 549;\n\t  t['notequal'] = 549;\n\t  t['equivalence'] = 549;\n\t  t['approxequal'] = 549;\n\t  t['ellipsis'] = 1000;\n\t  t['arrowvertex'] = 603;\n\t  t['arrowhorizex'] = 1000;\n\t  t['carriagereturn'] = 658;\n\t  t['aleph'] = 823;\n\t  t['Ifraktur'] = 686;\n\t  t['Rfraktur'] = 795;\n\t  t['weierstrass'] = 987;\n\t  t['circlemultiply'] = 768;\n\t  t['circleplus'] = 768;\n\t  t['emptyset'] = 823;\n\t  t['intersection'] = 768;\n\t  t['union'] = 768;\n\t  t['propersuperset'] = 713;\n\t  t['reflexsuperset'] = 713;\n\t  t['notsubset'] = 713;\n\t  t['propersubset'] = 713;\n\t  t['reflexsubset'] = 713;\n\t  t['element'] = 713;\n\t  t['notelement'] = 713;\n\t  t['angle'] = 768;\n\t  t['gradient'] = 713;\n\t  t['registerserif'] = 790;\n\t  t['copyrightserif'] = 790;\n\t  t['trademarkserif'] = 890;\n\t  t['product'] = 823;\n\t  t['radical'] = 549;\n\t  t['dotmath'] = 250;\n\t  t['logicalnot'] = 713;\n\t  t['logicaland'] = 603;\n\t  t['logicalor'] = 603;\n\t  t['arrowdblboth'] = 1042;\n\t  t['arrowdblleft'] = 987;\n\t  t['arrowdblup'] = 603;\n\t  t['arrowdblright'] = 987;\n\t  t['arrowdbldown'] = 603;\n\t  t['lozenge'] = 494;\n\t  t['angleleft'] = 329;\n\t  t['registersans'] = 790;\n\t  t['copyrightsans'] = 790;\n\t  t['trademarksans'] = 786;\n\t  t['summation'] = 713;\n\t  t['parenlefttp'] = 384;\n\t  t['parenleftex'] = 384;\n\t  t['parenleftbt'] = 384;\n\t  t['bracketlefttp'] = 384;\n\t  t['bracketleftex'] = 384;\n\t  t['bracketleftbt'] = 384;\n\t  t['bracelefttp'] = 494;\n\t  t['braceleftmid'] = 494;\n\t  t['braceleftbt'] = 494;\n\t  t['braceex'] = 494;\n\t  t['angleright'] = 329;\n\t  t['integral'] = 274;\n\t  t['integraltp'] = 686;\n\t  t['integralex'] = 686;\n\t  t['integralbt'] = 686;\n\t  t['parenrighttp'] = 384;\n\t  t['parenrightex'] = 384;\n\t  t['parenrightbt'] = 384;\n\t  t['bracketrighttp'] = 384;\n\t  t['bracketrightex'] = 384;\n\t  t['bracketrightbt'] = 384;\n\t  t['bracerighttp'] = 494;\n\t  t['bracerightmid'] = 494;\n\t  t['bracerightbt'] = 494;\n\t  t['apple'] = 790;\n\t });\n\t t['Times-Roman'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 250;\n\t  t['exclam'] = 333;\n\t  t['quotedbl'] = 408;\n\t  t['numbersign'] = 500;\n\t  t['dollar'] = 500;\n\t  t['percent'] = 833;\n\t  t['ampersand'] = 778;\n\t  t['quoteright'] = 333;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 500;\n\t  t['plus'] = 564;\n\t  t['comma'] = 250;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 250;\n\t  t['slash'] = 278;\n\t  t['zero'] = 500;\n\t  t['one'] = 500;\n\t  t['two'] = 500;\n\t  t['three'] = 500;\n\t  t['four'] = 500;\n\t  t['five'] = 500;\n\t  t['six'] = 500;\n\t  t['seven'] = 500;\n\t  t['eight'] = 500;\n\t  t['nine'] = 500;\n\t  t['colon'] = 278;\n\t  t['semicolon'] = 278;\n\t  t['less'] = 564;\n\t  t['equal'] = 564;\n\t  t['greater'] = 564;\n\t  t['question'] = 444;\n\t  t['at'] = 921;\n\t  t['A'] = 722;\n\t  t['B'] = 667;\n\t  t['C'] = 667;\n\t  t['D'] = 722;\n\t  t['E'] = 611;\n\t  t['F'] = 556;\n\t  t['G'] = 722;\n\t  t['H'] = 722;\n\t  t['I'] = 333;\n\t  t['J'] = 389;\n\t  t['K'] = 722;\n\t  t['L'] = 611;\n\t  t['M'] = 889;\n\t  t['N'] = 722;\n\t  t['O'] = 722;\n\t  t['P'] = 556;\n\t  t['Q'] = 722;\n\t  t['R'] = 667;\n\t  t['S'] = 556;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 722;\n\t  t['W'] = 944;\n\t  t['X'] = 722;\n\t  t['Y'] = 722;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 333;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 333;\n\t  t['asciicircum'] = 469;\n\t  t['underscore'] = 500;\n\t  t['quoteleft'] = 333;\n\t  t['a'] = 444;\n\t  t['b'] = 500;\n\t  t['c'] = 444;\n\t  t['d'] = 500;\n\t  t['e'] = 444;\n\t  t['f'] = 333;\n\t  t['g'] = 500;\n\t  t['h'] = 500;\n\t  t['i'] = 278;\n\t  t['j'] = 278;\n\t  t['k'] = 500;\n\t  t['l'] = 278;\n\t  t['m'] = 778;\n\t  t['n'] = 500;\n\t  t['o'] = 500;\n\t  t['p'] = 500;\n\t  t['q'] = 500;\n\t  t['r'] = 333;\n\t  t['s'] = 389;\n\t  t['t'] = 278;\n\t  t['u'] = 500;\n\t  t['v'] = 500;\n\t  t['w'] = 722;\n\t  t['x'] = 500;\n\t  t['y'] = 500;\n\t  t['z'] = 444;\n\t  t['braceleft'] = 480;\n\t  t['bar'] = 200;\n\t  t['braceright'] = 480;\n\t  t['asciitilde'] = 541;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 500;\n\t  t['sterling'] = 500;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 500;\n\t  t['florin'] = 500;\n\t  t['section'] = 500;\n\t  t['currency'] = 500;\n\t  t['quotesingle'] = 180;\n\t  t['quotedblleft'] = 444;\n\t  t['guillemotleft'] = 500;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 556;\n\t  t['fl'] = 556;\n\t  t['endash'] = 500;\n\t  t['dagger'] = 500;\n\t  t['daggerdbl'] = 500;\n\t  t['periodcentered'] = 250;\n\t  t['paragraph'] = 453;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 333;\n\t  t['quotedblbase'] = 444;\n\t  t['quotedblright'] = 444;\n\t  t['guillemotright'] = 500;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 444;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 889;\n\t  t['ordfeminine'] = 276;\n\t  t['Lslash'] = 611;\n\t  t['Oslash'] = 722;\n\t  t['OE'] = 889;\n\t  t['ordmasculine'] = 310;\n\t  t['ae'] = 667;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 500;\n\t  t['oe'] = 722;\n\t  t['germandbls'] = 500;\n\t  t['Idieresis'] = 333;\n\t  t['eacute'] = 444;\n\t  t['abreve'] = 444;\n\t  t['uhungarumlaut'] = 500;\n\t  t['ecaron'] = 444;\n\t  t['Ydieresis'] = 722;\n\t  t['divide'] = 564;\n\t  t['Yacute'] = 722;\n\t  t['Acircumflex'] = 722;\n\t  t['aacute'] = 444;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 500;\n\t  t['scommaaccent'] = 389;\n\t  t['ecircumflex'] = 444;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 444;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 500;\n\t  t['Edieresis'] = 611;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 760;\n\t  t['Emacron'] = 611;\n\t  t['ccaron'] = 444;\n\t  t['aring'] = 444;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 444;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 667;\n\t  t['atilde'] = 444;\n\t  t['Edotaccent'] = 611;\n\t  t['scaron'] = 389;\n\t  t['scedilla'] = 389;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 471;\n\t  t['Rcaron'] = 667;\n\t  t['Gcommaaccent'] = 722;\n\t  t['ucircumflex'] = 500;\n\t  t['acircumflex'] = 444;\n\t  t['Amacron'] = 722;\n\t  t['rcaron'] = 333;\n\t  t['ccedilla'] = 444;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 556;\n\t  t['Omacron'] = 722;\n\t  t['Racute'] = 667;\n\t  t['Sacute'] = 556;\n\t  t['dcaron'] = 588;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 500;\n\t  t['threesuperior'] = 300;\n\t  t['Ograve'] = 722;\n\t  t['Agrave'] = 722;\n\t  t['Abreve'] = 722;\n\t  t['multiply'] = 564;\n\t  t['uacute'] = 500;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 476;\n\t  t['ydieresis'] = 500;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 611;\n\t  t['adieresis'] = 444;\n\t  t['edieresis'] = 444;\n\t  t['cacute'] = 444;\n\t  t['nacute'] = 500;\n\t  t['umacron'] = 500;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 333;\n\t  t['plusminus'] = 564;\n\t  t['brokenbar'] = 200;\n\t  t['registered'] = 760;\n\t  t['Gbreve'] = 722;\n\t  t['Idotaccent'] = 333;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 611;\n\t  t['racute'] = 333;\n\t  t['omacron'] = 500;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 667;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 326;\n\t  t['eogonek'] = 444;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 722;\n\t  t['Adieresis'] = 722;\n\t  t['egrave'] = 444;\n\t  t['zacute'] = 444;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 722;\n\t  t['oacute'] = 500;\n\t  t['amacron'] = 444;\n\t  t['sacute'] = 389;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 722;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 500;\n\t  t['twosuperior'] = 300;\n\t  t['Odieresis'] = 722;\n\t  t['mu'] = 500;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 500;\n\t  t['Eogonek'] = 611;\n\t  t['dcroat'] = 500;\n\t  t['threequarters'] = 750;\n\t  t['Scedilla'] = 556;\n\t  t['lcaron'] = 344;\n\t  t['Kcommaaccent'] = 722;\n\t  t['Lacute'] = 611;\n\t  t['trademark'] = 980;\n\t  t['edotaccent'] = 444;\n\t  t['Igrave'] = 333;\n\t  t['Imacron'] = 333;\n\t  t['Lcaron'] = 611;\n\t  t['onehalf'] = 750;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 500;\n\t  t['ntilde'] = 500;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 611;\n\t  t['emacron'] = 444;\n\t  t['gbreve'] = 500;\n\t  t['onequarter'] = 750;\n\t  t['Scaron'] = 556;\n\t  t['Scommaaccent'] = 556;\n\t  t['Ohungarumlaut'] = 722;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 500;\n\t  t['Ccaron'] = 667;\n\t  t['ugrave'] = 500;\n\t  t['radical'] = 453;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 333;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 500;\n\t  t['Rcommaaccent'] = 667;\n\t  t['Lcommaaccent'] = 611;\n\t  t['Atilde'] = 722;\n\t  t['Aogonek'] = 722;\n\t  t['Aring'] = 722;\n\t  t['Otilde'] = 722;\n\t  t['zdotaccent'] = 444;\n\t  t['Ecaron'] = 611;\n\t  t['Iogonek'] = 333;\n\t  t['kcommaaccent'] = 500;\n\t  t['minus'] = 564;\n\t  t['Icircumflex'] = 333;\n\t  t['ncaron'] = 500;\n\t  t['tcommaaccent'] = 278;\n\t  t['logicalnot'] = 564;\n\t  t['odieresis'] = 500;\n\t  t['udieresis'] = 500;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 500;\n\t  t['eth'] = 500;\n\t  t['zcaron'] = 444;\n\t  t['ncommaaccent'] = 500;\n\t  t['onesuperior'] = 300;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 500;\n\t });\n\t t['Times-Bold'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 250;\n\t  t['exclam'] = 333;\n\t  t['quotedbl'] = 555;\n\t  t['numbersign'] = 500;\n\t  t['dollar'] = 500;\n\t  t['percent'] = 1000;\n\t  t['ampersand'] = 833;\n\t  t['quoteright'] = 333;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 500;\n\t  t['plus'] = 570;\n\t  t['comma'] = 250;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 250;\n\t  t['slash'] = 278;\n\t  t['zero'] = 500;\n\t  t['one'] = 500;\n\t  t['two'] = 500;\n\t  t['three'] = 500;\n\t  t['four'] = 500;\n\t  t['five'] = 500;\n\t  t['six'] = 500;\n\t  t['seven'] = 500;\n\t  t['eight'] = 500;\n\t  t['nine'] = 500;\n\t  t['colon'] = 333;\n\t  t['semicolon'] = 333;\n\t  t['less'] = 570;\n\t  t['equal'] = 570;\n\t  t['greater'] = 570;\n\t  t['question'] = 500;\n\t  t['at'] = 930;\n\t  t['A'] = 722;\n\t  t['B'] = 667;\n\t  t['C'] = 722;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 611;\n\t  t['G'] = 778;\n\t  t['H'] = 778;\n\t  t['I'] = 389;\n\t  t['J'] = 500;\n\t  t['K'] = 778;\n\t  t['L'] = 667;\n\t  t['M'] = 944;\n\t  t['N'] = 722;\n\t  t['O'] = 778;\n\t  t['P'] = 611;\n\t  t['Q'] = 778;\n\t  t['R'] = 722;\n\t  t['S'] = 556;\n\t  t['T'] = 667;\n\t  t['U'] = 722;\n\t  t['V'] = 722;\n\t  t['W'] = 1000;\n\t  t['X'] = 722;\n\t  t['Y'] = 722;\n\t  t['Z'] = 667;\n\t  t['bracketleft'] = 333;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 333;\n\t  t['asciicircum'] = 581;\n\t  t['underscore'] = 500;\n\t  t['quoteleft'] = 333;\n\t  t['a'] = 500;\n\t  t['b'] = 556;\n\t  t['c'] = 444;\n\t  t['d'] = 556;\n\t  t['e'] = 444;\n\t  t['f'] = 333;\n\t  t['g'] = 500;\n\t  t['h'] = 556;\n\t  t['i'] = 278;\n\t  t['j'] = 333;\n\t  t['k'] = 556;\n\t  t['l'] = 278;\n\t  t['m'] = 833;\n\t  t['n'] = 556;\n\t  t['o'] = 500;\n\t  t['p'] = 556;\n\t  t['q'] = 556;\n\t  t['r'] = 444;\n\t  t['s'] = 389;\n\t  t['t'] = 333;\n\t  t['u'] = 556;\n\t  t['v'] = 500;\n\t  t['w'] = 722;\n\t  t['x'] = 500;\n\t  t['y'] = 500;\n\t  t['z'] = 444;\n\t  t['braceleft'] = 394;\n\t  t['bar'] = 220;\n\t  t['braceright'] = 394;\n\t  t['asciitilde'] = 520;\n\t  t['exclamdown'] = 333;\n\t  t['cent'] = 500;\n\t  t['sterling'] = 500;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 500;\n\t  t['florin'] = 500;\n\t  t['section'] = 500;\n\t  t['currency'] = 500;\n\t  t['quotesingle'] = 278;\n\t  t['quotedblleft'] = 500;\n\t  t['guillemotleft'] = 500;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 556;\n\t  t['fl'] = 556;\n\t  t['endash'] = 500;\n\t  t['dagger'] = 500;\n\t  t['daggerdbl'] = 500;\n\t  t['periodcentered'] = 250;\n\t  t['paragraph'] = 540;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 333;\n\t  t['quotedblbase'] = 500;\n\t  t['quotedblright'] = 500;\n\t  t['guillemotright'] = 500;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 500;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 1000;\n\t  t['ordfeminine'] = 300;\n\t  t['Lslash'] = 667;\n\t  t['Oslash'] = 778;\n\t  t['OE'] = 1000;\n\t  t['ordmasculine'] = 330;\n\t  t['ae'] = 722;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 500;\n\t  t['oe'] = 722;\n\t  t['germandbls'] = 556;\n\t  t['Idieresis'] = 389;\n\t  t['eacute'] = 444;\n\t  t['abreve'] = 500;\n\t  t['uhungarumlaut'] = 556;\n\t  t['ecaron'] = 444;\n\t  t['Ydieresis'] = 722;\n\t  t['divide'] = 570;\n\t  t['Yacute'] = 722;\n\t  t['Acircumflex'] = 722;\n\t  t['aacute'] = 500;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 500;\n\t  t['scommaaccent'] = 389;\n\t  t['ecircumflex'] = 444;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 500;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 556;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 747;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 444;\n\t  t['aring'] = 500;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 500;\n\t  t['Tcommaaccent'] = 667;\n\t  t['Cacute'] = 722;\n\t  t['atilde'] = 500;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 389;\n\t  t['scedilla'] = 389;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 494;\n\t  t['Rcaron'] = 722;\n\t  t['Gcommaaccent'] = 778;\n\t  t['ucircumflex'] = 556;\n\t  t['acircumflex'] = 500;\n\t  t['Amacron'] = 722;\n\t  t['rcaron'] = 444;\n\t  t['ccedilla'] = 444;\n\t  t['Zdotaccent'] = 667;\n\t  t['Thorn'] = 611;\n\t  t['Omacron'] = 778;\n\t  t['Racute'] = 722;\n\t  t['Sacute'] = 556;\n\t  t['dcaron'] = 672;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 556;\n\t  t['threesuperior'] = 300;\n\t  t['Ograve'] = 778;\n\t  t['Agrave'] = 722;\n\t  t['Abreve'] = 722;\n\t  t['multiply'] = 570;\n\t  t['uacute'] = 556;\n\t  t['Tcaron'] = 667;\n\t  t['partialdiff'] = 494;\n\t  t['ydieresis'] = 500;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 500;\n\t  t['edieresis'] = 444;\n\t  t['cacute'] = 444;\n\t  t['nacute'] = 556;\n\t  t['umacron'] = 556;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 389;\n\t  t['plusminus'] = 570;\n\t  t['brokenbar'] = 220;\n\t  t['registered'] = 747;\n\t  t['Gbreve'] = 778;\n\t  t['Idotaccent'] = 389;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 444;\n\t  t['omacron'] = 500;\n\t  t['Zacute'] = 667;\n\t  t['Zcaron'] = 667;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 722;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 416;\n\t  t['eogonek'] = 444;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 722;\n\t  t['Adieresis'] = 722;\n\t  t['egrave'] = 444;\n\t  t['zacute'] = 444;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 778;\n\t  t['oacute'] = 500;\n\t  t['amacron'] = 500;\n\t  t['sacute'] = 389;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 778;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 556;\n\t  t['twosuperior'] = 300;\n\t  t['Odieresis'] = 778;\n\t  t['mu'] = 556;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 500;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 556;\n\t  t['threequarters'] = 750;\n\t  t['Scedilla'] = 556;\n\t  t['lcaron'] = 394;\n\t  t['Kcommaaccent'] = 778;\n\t  t['Lacute'] = 667;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 444;\n\t  t['Igrave'] = 389;\n\t  t['Imacron'] = 389;\n\t  t['Lcaron'] = 667;\n\t  t['onehalf'] = 750;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 500;\n\t  t['ntilde'] = 556;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 444;\n\t  t['gbreve'] = 500;\n\t  t['onequarter'] = 750;\n\t  t['Scaron'] = 556;\n\t  t['Scommaaccent'] = 556;\n\t  t['Ohungarumlaut'] = 778;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 500;\n\t  t['Ccaron'] = 722;\n\t  t['ugrave'] = 556;\n\t  t['radical'] = 549;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 444;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 500;\n\t  t['Rcommaaccent'] = 722;\n\t  t['Lcommaaccent'] = 667;\n\t  t['Atilde'] = 722;\n\t  t['Aogonek'] = 722;\n\t  t['Aring'] = 722;\n\t  t['Otilde'] = 778;\n\t  t['zdotaccent'] = 444;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 389;\n\t  t['kcommaaccent'] = 556;\n\t  t['minus'] = 570;\n\t  t['Icircumflex'] = 389;\n\t  t['ncaron'] = 556;\n\t  t['tcommaaccent'] = 333;\n\t  t['logicalnot'] = 570;\n\t  t['odieresis'] = 500;\n\t  t['udieresis'] = 556;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 500;\n\t  t['eth'] = 500;\n\t  t['zcaron'] = 444;\n\t  t['ncommaaccent'] = 556;\n\t  t['onesuperior'] = 300;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 500;\n\t });\n\t t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 250;\n\t  t['exclam'] = 389;\n\t  t['quotedbl'] = 555;\n\t  t['numbersign'] = 500;\n\t  t['dollar'] = 500;\n\t  t['percent'] = 833;\n\t  t['ampersand'] = 778;\n\t  t['quoteright'] = 333;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 500;\n\t  t['plus'] = 570;\n\t  t['comma'] = 250;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 250;\n\t  t['slash'] = 278;\n\t  t['zero'] = 500;\n\t  t['one'] = 500;\n\t  t['two'] = 500;\n\t  t['three'] = 500;\n\t  t['four'] = 500;\n\t  t['five'] = 500;\n\t  t['six'] = 500;\n\t  t['seven'] = 500;\n\t  t['eight'] = 500;\n\t  t['nine'] = 500;\n\t  t['colon'] = 333;\n\t  t['semicolon'] = 333;\n\t  t['less'] = 570;\n\t  t['equal'] = 570;\n\t  t['greater'] = 570;\n\t  t['question'] = 500;\n\t  t['at'] = 832;\n\t  t['A'] = 667;\n\t  t['B'] = 667;\n\t  t['C'] = 667;\n\t  t['D'] = 722;\n\t  t['E'] = 667;\n\t  t['F'] = 667;\n\t  t['G'] = 722;\n\t  t['H'] = 778;\n\t  t['I'] = 389;\n\t  t['J'] = 500;\n\t  t['K'] = 667;\n\t  t['L'] = 611;\n\t  t['M'] = 889;\n\t  t['N'] = 722;\n\t  t['O'] = 722;\n\t  t['P'] = 611;\n\t  t['Q'] = 722;\n\t  t['R'] = 667;\n\t  t['S'] = 556;\n\t  t['T'] = 611;\n\t  t['U'] = 722;\n\t  t['V'] = 667;\n\t  t['W'] = 889;\n\t  t['X'] = 667;\n\t  t['Y'] = 611;\n\t  t['Z'] = 611;\n\t  t['bracketleft'] = 333;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 333;\n\t  t['asciicircum'] = 570;\n\t  t['underscore'] = 500;\n\t  t['quoteleft'] = 333;\n\t  t['a'] = 500;\n\t  t['b'] = 500;\n\t  t['c'] = 444;\n\t  t['d'] = 500;\n\t  t['e'] = 444;\n\t  t['f'] = 333;\n\t  t['g'] = 500;\n\t  t['h'] = 556;\n\t  t['i'] = 278;\n\t  t['j'] = 278;\n\t  t['k'] = 500;\n\t  t['l'] = 278;\n\t  t['m'] = 778;\n\t  t['n'] = 556;\n\t  t['o'] = 500;\n\t  t['p'] = 500;\n\t  t['q'] = 500;\n\t  t['r'] = 389;\n\t  t['s'] = 389;\n\t  t['t'] = 278;\n\t  t['u'] = 556;\n\t  t['v'] = 444;\n\t  t['w'] = 667;\n\t  t['x'] = 500;\n\t  t['y'] = 444;\n\t  t['z'] = 389;\n\t  t['braceleft'] = 348;\n\t  t['bar'] = 220;\n\t  t['braceright'] = 348;\n\t  t['asciitilde'] = 570;\n\t  t['exclamdown'] = 389;\n\t  t['cent'] = 500;\n\t  t['sterling'] = 500;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 500;\n\t  t['florin'] = 500;\n\t  t['section'] = 500;\n\t  t['currency'] = 500;\n\t  t['quotesingle'] = 278;\n\t  t['quotedblleft'] = 500;\n\t  t['guillemotleft'] = 500;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 556;\n\t  t['fl'] = 556;\n\t  t['endash'] = 500;\n\t  t['dagger'] = 500;\n\t  t['daggerdbl'] = 500;\n\t  t['periodcentered'] = 250;\n\t  t['paragraph'] = 500;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 333;\n\t  t['quotedblbase'] = 500;\n\t  t['quotedblright'] = 500;\n\t  t['guillemotright'] = 500;\n\t  t['ellipsis'] = 1000;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 500;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 1000;\n\t  t['AE'] = 944;\n\t  t['ordfeminine'] = 266;\n\t  t['Lslash'] = 611;\n\t  t['Oslash'] = 722;\n\t  t['OE'] = 944;\n\t  t['ordmasculine'] = 300;\n\t  t['ae'] = 722;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 500;\n\t  t['oe'] = 722;\n\t  t['germandbls'] = 500;\n\t  t['Idieresis'] = 389;\n\t  t['eacute'] = 444;\n\t  t['abreve'] = 500;\n\t  t['uhungarumlaut'] = 556;\n\t  t['ecaron'] = 444;\n\t  t['Ydieresis'] = 611;\n\t  t['divide'] = 570;\n\t  t['Yacute'] = 611;\n\t  t['Acircumflex'] = 667;\n\t  t['aacute'] = 500;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 444;\n\t  t['scommaaccent'] = 389;\n\t  t['ecircumflex'] = 444;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 500;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 556;\n\t  t['Edieresis'] = 667;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 747;\n\t  t['Emacron'] = 667;\n\t  t['ccaron'] = 444;\n\t  t['aring'] = 500;\n\t  t['Ncommaaccent'] = 722;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 500;\n\t  t['Tcommaaccent'] = 611;\n\t  t['Cacute'] = 667;\n\t  t['atilde'] = 500;\n\t  t['Edotaccent'] = 667;\n\t  t['scaron'] = 389;\n\t  t['scedilla'] = 389;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 494;\n\t  t['Rcaron'] = 667;\n\t  t['Gcommaaccent'] = 722;\n\t  t['ucircumflex'] = 556;\n\t  t['acircumflex'] = 500;\n\t  t['Amacron'] = 667;\n\t  t['rcaron'] = 389;\n\t  t['ccedilla'] = 444;\n\t  t['Zdotaccent'] = 611;\n\t  t['Thorn'] = 611;\n\t  t['Omacron'] = 722;\n\t  t['Racute'] = 667;\n\t  t['Sacute'] = 556;\n\t  t['dcaron'] = 608;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 556;\n\t  t['threesuperior'] = 300;\n\t  t['Ograve'] = 722;\n\t  t['Agrave'] = 667;\n\t  t['Abreve'] = 667;\n\t  t['multiply'] = 570;\n\t  t['uacute'] = 556;\n\t  t['Tcaron'] = 611;\n\t  t['partialdiff'] = 494;\n\t  t['ydieresis'] = 444;\n\t  t['Nacute'] = 722;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 667;\n\t  t['adieresis'] = 500;\n\t  t['edieresis'] = 444;\n\t  t['cacute'] = 444;\n\t  t['nacute'] = 556;\n\t  t['umacron'] = 556;\n\t  t['Ncaron'] = 722;\n\t  t['Iacute'] = 389;\n\t  t['plusminus'] = 570;\n\t  t['brokenbar'] = 220;\n\t  t['registered'] = 747;\n\t  t['Gbreve'] = 722;\n\t  t['Idotaccent'] = 389;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 667;\n\t  t['racute'] = 389;\n\t  t['omacron'] = 500;\n\t  t['Zacute'] = 611;\n\t  t['Zcaron'] = 611;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 667;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 366;\n\t  t['eogonek'] = 444;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 667;\n\t  t['Adieresis'] = 667;\n\t  t['egrave'] = 444;\n\t  t['zacute'] = 389;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 722;\n\t  t['oacute'] = 500;\n\t  t['amacron'] = 500;\n\t  t['sacute'] = 389;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 722;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 500;\n\t  t['twosuperior'] = 300;\n\t  t['Odieresis'] = 722;\n\t  t['mu'] = 576;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 500;\n\t  t['Eogonek'] = 667;\n\t  t['dcroat'] = 500;\n\t  t['threequarters'] = 750;\n\t  t['Scedilla'] = 556;\n\t  t['lcaron'] = 382;\n\t  t['Kcommaaccent'] = 667;\n\t  t['Lacute'] = 611;\n\t  t['trademark'] = 1000;\n\t  t['edotaccent'] = 444;\n\t  t['Igrave'] = 389;\n\t  t['Imacron'] = 389;\n\t  t['Lcaron'] = 611;\n\t  t['onehalf'] = 750;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 500;\n\t  t['ntilde'] = 556;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 667;\n\t  t['emacron'] = 444;\n\t  t['gbreve'] = 500;\n\t  t['onequarter'] = 750;\n\t  t['Scaron'] = 556;\n\t  t['Scommaaccent'] = 556;\n\t  t['Ohungarumlaut'] = 722;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 500;\n\t  t['Ccaron'] = 667;\n\t  t['ugrave'] = 556;\n\t  t['radical'] = 549;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 389;\n\t  t['Ntilde'] = 722;\n\t  t['otilde'] = 500;\n\t  t['Rcommaaccent'] = 667;\n\t  t['Lcommaaccent'] = 611;\n\t  t['Atilde'] = 667;\n\t  t['Aogonek'] = 667;\n\t  t['Aring'] = 667;\n\t  t['Otilde'] = 722;\n\t  t['zdotaccent'] = 389;\n\t  t['Ecaron'] = 667;\n\t  t['Iogonek'] = 389;\n\t  t['kcommaaccent'] = 500;\n\t  t['minus'] = 606;\n\t  t['Icircumflex'] = 389;\n\t  t['ncaron'] = 556;\n\t  t['tcommaaccent'] = 278;\n\t  t['logicalnot'] = 606;\n\t  t['odieresis'] = 500;\n\t  t['udieresis'] = 556;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 500;\n\t  t['eth'] = 500;\n\t  t['zcaron'] = 389;\n\t  t['ncommaaccent'] = 556;\n\t  t['onesuperior'] = 300;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 500;\n\t });\n\t t['Times-Italic'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 250;\n\t  t['exclam'] = 333;\n\t  t['quotedbl'] = 420;\n\t  t['numbersign'] = 500;\n\t  t['dollar'] = 500;\n\t  t['percent'] = 833;\n\t  t['ampersand'] = 778;\n\t  t['quoteright'] = 333;\n\t  t['parenleft'] = 333;\n\t  t['parenright'] = 333;\n\t  t['asterisk'] = 500;\n\t  t['plus'] = 675;\n\t  t['comma'] = 250;\n\t  t['hyphen'] = 333;\n\t  t['period'] = 250;\n\t  t['slash'] = 278;\n\t  t['zero'] = 500;\n\t  t['one'] = 500;\n\t  t['two'] = 500;\n\t  t['three'] = 500;\n\t  t['four'] = 500;\n\t  t['five'] = 500;\n\t  t['six'] = 500;\n\t  t['seven'] = 500;\n\t  t['eight'] = 500;\n\t  t['nine'] = 500;\n\t  t['colon'] = 333;\n\t  t['semicolon'] = 333;\n\t  t['less'] = 675;\n\t  t['equal'] = 675;\n\t  t['greater'] = 675;\n\t  t['question'] = 500;\n\t  t['at'] = 920;\n\t  t['A'] = 611;\n\t  t['B'] = 611;\n\t  t['C'] = 667;\n\t  t['D'] = 722;\n\t  t['E'] = 611;\n\t  t['F'] = 611;\n\t  t['G'] = 722;\n\t  t['H'] = 722;\n\t  t['I'] = 333;\n\t  t['J'] = 444;\n\t  t['K'] = 667;\n\t  t['L'] = 556;\n\t  t['M'] = 833;\n\t  t['N'] = 667;\n\t  t['O'] = 722;\n\t  t['P'] = 611;\n\t  t['Q'] = 722;\n\t  t['R'] = 611;\n\t  t['S'] = 500;\n\t  t['T'] = 556;\n\t  t['U'] = 722;\n\t  t['V'] = 611;\n\t  t['W'] = 833;\n\t  t['X'] = 611;\n\t  t['Y'] = 556;\n\t  t['Z'] = 556;\n\t  t['bracketleft'] = 389;\n\t  t['backslash'] = 278;\n\t  t['bracketright'] = 389;\n\t  t['asciicircum'] = 422;\n\t  t['underscore'] = 500;\n\t  t['quoteleft'] = 333;\n\t  t['a'] = 500;\n\t  t['b'] = 500;\n\t  t['c'] = 444;\n\t  t['d'] = 500;\n\t  t['e'] = 444;\n\t  t['f'] = 278;\n\t  t['g'] = 500;\n\t  t['h'] = 500;\n\t  t['i'] = 278;\n\t  t['j'] = 278;\n\t  t['k'] = 444;\n\t  t['l'] = 278;\n\t  t['m'] = 722;\n\t  t['n'] = 500;\n\t  t['o'] = 500;\n\t  t['p'] = 500;\n\t  t['q'] = 500;\n\t  t['r'] = 389;\n\t  t['s'] = 389;\n\t  t['t'] = 278;\n\t  t['u'] = 500;\n\t  t['v'] = 444;\n\t  t['w'] = 667;\n\t  t['x'] = 444;\n\t  t['y'] = 444;\n\t  t['z'] = 389;\n\t  t['braceleft'] = 400;\n\t  t['bar'] = 275;\n\t  t['braceright'] = 400;\n\t  t['asciitilde'] = 541;\n\t  t['exclamdown'] = 389;\n\t  t['cent'] = 500;\n\t  t['sterling'] = 500;\n\t  t['fraction'] = 167;\n\t  t['yen'] = 500;\n\t  t['florin'] = 500;\n\t  t['section'] = 500;\n\t  t['currency'] = 500;\n\t  t['quotesingle'] = 214;\n\t  t['quotedblleft'] = 556;\n\t  t['guillemotleft'] = 500;\n\t  t['guilsinglleft'] = 333;\n\t  t['guilsinglright'] = 333;\n\t  t['fi'] = 500;\n\t  t['fl'] = 500;\n\t  t['endash'] = 500;\n\t  t['dagger'] = 500;\n\t  t['daggerdbl'] = 500;\n\t  t['periodcentered'] = 250;\n\t  t['paragraph'] = 523;\n\t  t['bullet'] = 350;\n\t  t['quotesinglbase'] = 333;\n\t  t['quotedblbase'] = 556;\n\t  t['quotedblright'] = 556;\n\t  t['guillemotright'] = 500;\n\t  t['ellipsis'] = 889;\n\t  t['perthousand'] = 1000;\n\t  t['questiondown'] = 500;\n\t  t['grave'] = 333;\n\t  t['acute'] = 333;\n\t  t['circumflex'] = 333;\n\t  t['tilde'] = 333;\n\t  t['macron'] = 333;\n\t  t['breve'] = 333;\n\t  t['dotaccent'] = 333;\n\t  t['dieresis'] = 333;\n\t  t['ring'] = 333;\n\t  t['cedilla'] = 333;\n\t  t['hungarumlaut'] = 333;\n\t  t['ogonek'] = 333;\n\t  t['caron'] = 333;\n\t  t['emdash'] = 889;\n\t  t['AE'] = 889;\n\t  t['ordfeminine'] = 276;\n\t  t['Lslash'] = 556;\n\t  t['Oslash'] = 722;\n\t  t['OE'] = 944;\n\t  t['ordmasculine'] = 310;\n\t  t['ae'] = 667;\n\t  t['dotlessi'] = 278;\n\t  t['lslash'] = 278;\n\t  t['oslash'] = 500;\n\t  t['oe'] = 667;\n\t  t['germandbls'] = 500;\n\t  t['Idieresis'] = 333;\n\t  t['eacute'] = 444;\n\t  t['abreve'] = 500;\n\t  t['uhungarumlaut'] = 500;\n\t  t['ecaron'] = 444;\n\t  t['Ydieresis'] = 556;\n\t  t['divide'] = 675;\n\t  t['Yacute'] = 556;\n\t  t['Acircumflex'] = 611;\n\t  t['aacute'] = 500;\n\t  t['Ucircumflex'] = 722;\n\t  t['yacute'] = 444;\n\t  t['scommaaccent'] = 389;\n\t  t['ecircumflex'] = 444;\n\t  t['Uring'] = 722;\n\t  t['Udieresis'] = 722;\n\t  t['aogonek'] = 500;\n\t  t['Uacute'] = 722;\n\t  t['uogonek'] = 500;\n\t  t['Edieresis'] = 611;\n\t  t['Dcroat'] = 722;\n\t  t['commaaccent'] = 250;\n\t  t['copyright'] = 760;\n\t  t['Emacron'] = 611;\n\t  t['ccaron'] = 444;\n\t  t['aring'] = 500;\n\t  t['Ncommaaccent'] = 667;\n\t  t['lacute'] = 278;\n\t  t['agrave'] = 500;\n\t  t['Tcommaaccent'] = 556;\n\t  t['Cacute'] = 667;\n\t  t['atilde'] = 500;\n\t  t['Edotaccent'] = 611;\n\t  t['scaron'] = 389;\n\t  t['scedilla'] = 389;\n\t  t['iacute'] = 278;\n\t  t['lozenge'] = 471;\n\t  t['Rcaron'] = 611;\n\t  t['Gcommaaccent'] = 722;\n\t  t['ucircumflex'] = 500;\n\t  t['acircumflex'] = 500;\n\t  t['Amacron'] = 611;\n\t  t['rcaron'] = 389;\n\t  t['ccedilla'] = 444;\n\t  t['Zdotaccent'] = 556;\n\t  t['Thorn'] = 611;\n\t  t['Omacron'] = 722;\n\t  t['Racute'] = 611;\n\t  t['Sacute'] = 500;\n\t  t['dcaron'] = 544;\n\t  t['Umacron'] = 722;\n\t  t['uring'] = 500;\n\t  t['threesuperior'] = 300;\n\t  t['Ograve'] = 722;\n\t  t['Agrave'] = 611;\n\t  t['Abreve'] = 611;\n\t  t['multiply'] = 675;\n\t  t['uacute'] = 500;\n\t  t['Tcaron'] = 556;\n\t  t['partialdiff'] = 476;\n\t  t['ydieresis'] = 444;\n\t  t['Nacute'] = 667;\n\t  t['icircumflex'] = 278;\n\t  t['Ecircumflex'] = 611;\n\t  t['adieresis'] = 500;\n\t  t['edieresis'] = 444;\n\t  t['cacute'] = 444;\n\t  t['nacute'] = 500;\n\t  t['umacron'] = 500;\n\t  t['Ncaron'] = 667;\n\t  t['Iacute'] = 333;\n\t  t['plusminus'] = 675;\n\t  t['brokenbar'] = 275;\n\t  t['registered'] = 760;\n\t  t['Gbreve'] = 722;\n\t  t['Idotaccent'] = 333;\n\t  t['summation'] = 600;\n\t  t['Egrave'] = 611;\n\t  t['racute'] = 389;\n\t  t['omacron'] = 500;\n\t  t['Zacute'] = 556;\n\t  t['Zcaron'] = 556;\n\t  t['greaterequal'] = 549;\n\t  t['Eth'] = 722;\n\t  t['Ccedilla'] = 667;\n\t  t['lcommaaccent'] = 278;\n\t  t['tcaron'] = 300;\n\t  t['eogonek'] = 444;\n\t  t['Uogonek'] = 722;\n\t  t['Aacute'] = 611;\n\t  t['Adieresis'] = 611;\n\t  t['egrave'] = 444;\n\t  t['zacute'] = 389;\n\t  t['iogonek'] = 278;\n\t  t['Oacute'] = 722;\n\t  t['oacute'] = 500;\n\t  t['amacron'] = 500;\n\t  t['sacute'] = 389;\n\t  t['idieresis'] = 278;\n\t  t['Ocircumflex'] = 722;\n\t  t['Ugrave'] = 722;\n\t  t['Delta'] = 612;\n\t  t['thorn'] = 500;\n\t  t['twosuperior'] = 300;\n\t  t['Odieresis'] = 722;\n\t  t['mu'] = 500;\n\t  t['igrave'] = 278;\n\t  t['ohungarumlaut'] = 500;\n\t  t['Eogonek'] = 611;\n\t  t['dcroat'] = 500;\n\t  t['threequarters'] = 750;\n\t  t['Scedilla'] = 500;\n\t  t['lcaron'] = 300;\n\t  t['Kcommaaccent'] = 667;\n\t  t['Lacute'] = 556;\n\t  t['trademark'] = 980;\n\t  t['edotaccent'] = 444;\n\t  t['Igrave'] = 333;\n\t  t['Imacron'] = 333;\n\t  t['Lcaron'] = 611;\n\t  t['onehalf'] = 750;\n\t  t['lessequal'] = 549;\n\t  t['ocircumflex'] = 500;\n\t  t['ntilde'] = 500;\n\t  t['Uhungarumlaut'] = 722;\n\t  t['Eacute'] = 611;\n\t  t['emacron'] = 444;\n\t  t['gbreve'] = 500;\n\t  t['onequarter'] = 750;\n\t  t['Scaron'] = 500;\n\t  t['Scommaaccent'] = 500;\n\t  t['Ohungarumlaut'] = 722;\n\t  t['degree'] = 400;\n\t  t['ograve'] = 500;\n\t  t['Ccaron'] = 667;\n\t  t['ugrave'] = 500;\n\t  t['radical'] = 453;\n\t  t['Dcaron'] = 722;\n\t  t['rcommaaccent'] = 389;\n\t  t['Ntilde'] = 667;\n\t  t['otilde'] = 500;\n\t  t['Rcommaaccent'] = 611;\n\t  t['Lcommaaccent'] = 556;\n\t  t['Atilde'] = 611;\n\t  t['Aogonek'] = 611;\n\t  t['Aring'] = 611;\n\t  t['Otilde'] = 722;\n\t  t['zdotaccent'] = 389;\n\t  t['Ecaron'] = 611;\n\t  t['Iogonek'] = 333;\n\t  t['kcommaaccent'] = 444;\n\t  t['minus'] = 675;\n\t  t['Icircumflex'] = 333;\n\t  t['ncaron'] = 500;\n\t  t['tcommaaccent'] = 278;\n\t  t['logicalnot'] = 675;\n\t  t['odieresis'] = 500;\n\t  t['udieresis'] = 500;\n\t  t['notequal'] = 549;\n\t  t['gcommaaccent'] = 500;\n\t  t['eth'] = 500;\n\t  t['zcaron'] = 389;\n\t  t['ncommaaccent'] = 500;\n\t  t['onesuperior'] = 300;\n\t  t['imacron'] = 278;\n\t  t['Euro'] = 500;\n\t });\n\t t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n\t  t['space'] = 278;\n\t  t['a1'] = 974;\n\t  t['a2'] = 961;\n\t  t['a202'] = 974;\n\t  t['a3'] = 980;\n\t  t['a4'] = 719;\n\t  t['a5'] = 789;\n\t  t['a119'] = 790;\n\t  t['a118'] = 791;\n\t  t['a117'] = 690;\n\t  t['a11'] = 960;\n\t  t['a12'] = 939;\n\t  t['a13'] = 549;\n\t  t['a14'] = 855;\n\t  t['a15'] = 911;\n\t  t['a16'] = 933;\n\t  t['a105'] = 911;\n\t  t['a17'] = 945;\n\t  t['a18'] = 974;\n\t  t['a19'] = 755;\n\t  t['a20'] = 846;\n\t  t['a21'] = 762;\n\t  t['a22'] = 761;\n\t  t['a23'] = 571;\n\t  t['a24'] = 677;\n\t  t['a25'] = 763;\n\t  t['a26'] = 760;\n\t  t['a27'] = 759;\n\t  t['a28'] = 754;\n\t  t['a6'] = 494;\n\t  t['a7'] = 552;\n\t  t['a8'] = 537;\n\t  t['a9'] = 577;\n\t  t['a10'] = 692;\n\t  t['a29'] = 786;\n\t  t['a30'] = 788;\n\t  t['a31'] = 788;\n\t  t['a32'] = 790;\n\t  t['a33'] = 793;\n\t  t['a34'] = 794;\n\t  t['a35'] = 816;\n\t  t['a36'] = 823;\n\t  t['a37'] = 789;\n\t  t['a38'] = 841;\n\t  t['a39'] = 823;\n\t  t['a40'] = 833;\n\t  t['a41'] = 816;\n\t  t['a42'] = 831;\n\t  t['a43'] = 923;\n\t  t['a44'] = 744;\n\t  t['a45'] = 723;\n\t  t['a46'] = 749;\n\t  t['a47'] = 790;\n\t  t['a48'] = 792;\n\t  t['a49'] = 695;\n\t  t['a50'] = 776;\n\t  t['a51'] = 768;\n\t  t['a52'] = 792;\n\t  t['a53'] = 759;\n\t  t['a54'] = 707;\n\t  t['a55'] = 708;\n\t  t['a56'] = 682;\n\t  t['a57'] = 701;\n\t  t['a58'] = 826;\n\t  t['a59'] = 815;\n\t  t['a60'] = 789;\n\t  t['a61'] = 789;\n\t  t['a62'] = 707;\n\t  t['a63'] = 687;\n\t  t['a64'] = 696;\n\t  t['a65'] = 689;\n\t  t['a66'] = 786;\n\t  t['a67'] = 787;\n\t  t['a68'] = 713;\n\t  t['a69'] = 791;\n\t  t['a70'] = 785;\n\t  t['a71'] = 791;\n\t  t['a72'] = 873;\n\t  t['a73'] = 761;\n\t  t['a74'] = 762;\n\t  t['a203'] = 762;\n\t  t['a75'] = 759;\n\t  t['a204'] = 759;\n\t  t['a76'] = 892;\n\t  t['a77'] = 892;\n\t  t['a78'] = 788;\n\t  t['a79'] = 784;\n\t  t['a81'] = 438;\n\t  t['a82'] = 138;\n\t  t['a83'] = 277;\n\t  t['a84'] = 415;\n\t  t['a97'] = 392;\n\t  t['a98'] = 392;\n\t  t['a99'] = 668;\n\t  t['a100'] = 668;\n\t  t['a89'] = 390;\n\t  t['a90'] = 390;\n\t  t['a93'] = 317;\n\t  t['a94'] = 317;\n\t  t['a91'] = 276;\n\t  t['a92'] = 276;\n\t  t['a205'] = 509;\n\t  t['a85'] = 509;\n\t  t['a206'] = 410;\n\t  t['a86'] = 410;\n\t  t['a87'] = 234;\n\t  t['a88'] = 234;\n\t  t['a95'] = 334;\n\t  t['a96'] = 334;\n\t  t['a101'] = 732;\n\t  t['a102'] = 544;\n\t  t['a103'] = 544;\n\t  t['a104'] = 910;\n\t  t['a106'] = 667;\n\t  t['a107'] = 760;\n\t  t['a108'] = 760;\n\t  t['a112'] = 776;\n\t  t['a111'] = 595;\n\t  t['a110'] = 694;\n\t  t['a109'] = 626;\n\t  t['a120'] = 788;\n\t  t['a121'] = 788;\n\t  t['a122'] = 788;\n\t  t['a123'] = 788;\n\t  t['a124'] = 788;\n\t  t['a125'] = 788;\n\t  t['a126'] = 788;\n\t  t['a127'] = 788;\n\t  t['a128'] = 788;\n\t  t['a129'] = 788;\n\t  t['a130'] = 788;\n\t  t['a131'] = 788;\n\t  t['a132'] = 788;\n\t  t['a133'] = 788;\n\t  t['a134'] = 788;\n\t  t['a135'] = 788;\n\t  t['a136'] = 788;\n\t  t['a137'] = 788;\n\t  t['a138'] = 788;\n\t  t['a139'] = 788;\n\t  t['a140'] = 788;\n\t  t['a141'] = 788;\n\t  t['a142'] = 788;\n\t  t['a143'] = 788;\n\t  t['a144'] = 788;\n\t  t['a145'] = 788;\n\t  t['a146'] = 788;\n\t  t['a147'] = 788;\n\t  t['a148'] = 788;\n\t  t['a149'] = 788;\n\t  t['a150'] = 788;\n\t  t['a151'] = 788;\n\t  t['a152'] = 788;\n\t  t['a153'] = 788;\n\t  t['a154'] = 788;\n\t  t['a155'] = 788;\n\t  t['a156'] = 788;\n\t  t['a157'] = 788;\n\t  t['a158'] = 788;\n\t  t['a159'] = 788;\n\t  t['a160'] = 894;\n\t  t['a161'] = 838;\n\t  t['a163'] = 1016;\n\t  t['a164'] = 458;\n\t  t['a196'] = 748;\n\t  t['a165'] = 924;\n\t  t['a192'] = 748;\n\t  t['a166'] = 918;\n\t  t['a167'] = 927;\n\t  t['a168'] = 928;\n\t  t['a169'] = 928;\n\t  t['a170'] = 834;\n\t  t['a171'] = 873;\n\t  t['a172'] = 828;\n\t  t['a173'] = 924;\n\t  t['a162'] = 924;\n\t  t['a174'] = 917;\n\t  t['a175'] = 930;\n\t  t['a176'] = 931;\n\t  t['a177'] = 463;\n\t  t['a178'] = 883;\n\t  t['a179'] = 836;\n\t  t['a193'] = 836;\n\t  t['a180'] = 867;\n\t  t['a199'] = 867;\n\t  t['a181'] = 696;\n\t  t['a200'] = 696;\n\t  t['a182'] = 874;\n\t  t['a201'] = 874;\n\t  t['a183'] = 760;\n\t  t['a184'] = 946;\n\t  t['a197'] = 771;\n\t  t['a185'] = 865;\n\t  t['a194'] = 771;\n\t  t['a198'] = 888;\n\t  t['a186'] = 967;\n\t  t['a195'] = 888;\n\t  t['a187'] = 831;\n\t  t['a188'] = 873;\n\t  t['a189'] = 927;\n\t  t['a190'] = 970;\n\t  t['a191'] = 918;\n\t });\n\t});\n\texports.getMetrics = getMetrics;\n\t\n\t/***/ }),\n\t/* 31 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar Uint32ArrayView = sharedUtil.Uint32ArrayView;\n\tvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n\t var MASK_HIGH = 0xffff0000;\n\t var MASK_LOW = 0xffff;\n\t function MurmurHash3_64(seed) {\n\t  var SEED = 0xc3d2e1f0;\n\t  this.h1 = seed ? seed & 0xffffffff : SEED;\n\t  this.h2 = seed ? seed & 0xffffffff : SEED;\n\t }\n\t var alwaysUseUint32ArrayView = false;\n\t try {\n\t  new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n\t } catch (e) {\n\t  alwaysUseUint32ArrayView = true;\n\t }\n\t MurmurHash3_64.prototype = {\n\t  update: function MurmurHash3_64_update(input) {\n\t   var useUint32ArrayView = alwaysUseUint32ArrayView;\n\t   var i;\n\t   if (typeof input === 'string') {\n\t    var data = new Uint8Array(input.length * 2);\n\t    var length = 0;\n\t    for (i = 0; i < input.length; i++) {\n\t     var code = input.charCodeAt(i);\n\t     if (code <= 0xff) {\n\t      data[length++] = code;\n\t     } else {\n\t      data[length++] = code >>> 8;\n\t      data[length++] = code & 0xff;\n\t     }\n\t    }\n\t   } else if (input instanceof Uint8Array) {\n\t    data = input;\n\t    length = data.length;\n\t   } else if (typeof input === 'object' && 'length' in input) {\n\t    data = input;\n\t    length = data.length;\n\t    useUint32ArrayView = true;\n\t   } else {\n\t    throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n\t   }\n\t   var blockCounts = length >> 2;\n\t   var tailLength = length - blockCounts * 4;\n\t   var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n\t   var k1 = 0;\n\t   var k2 = 0;\n\t   var h1 = this.h1;\n\t   var h2 = this.h2;\n\t   var C1 = 0xcc9e2d51;\n\t   var C2 = 0x1b873593;\n\t   var C1_LOW = C1 & MASK_LOW;\n\t   var C2_LOW = C2 & MASK_LOW;\n\t   for (i = 0; i < blockCounts; i++) {\n\t    if (i & 1) {\n\t     k1 = dataUint32[i];\n\t     k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t     k1 = k1 << 15 | k1 >>> 17;\n\t     k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t     h1 ^= k1;\n\t     h1 = h1 << 13 | h1 >>> 19;\n\t     h1 = h1 * 5 + 0xe6546b64;\n\t    } else {\n\t     k2 = dataUint32[i];\n\t     k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n\t     k2 = k2 << 15 | k2 >>> 17;\n\t     k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n\t     h2 ^= k2;\n\t     h2 = h2 << 13 | h2 >>> 19;\n\t     h2 = h2 * 5 + 0xe6546b64;\n\t    }\n\t   }\n\t   k1 = 0;\n\t   switch (tailLength) {\n\t   case 3:\n\t    k1 ^= data[blockCounts * 4 + 2] << 16;\n\t   case 2:\n\t    k1 ^= data[blockCounts * 4 + 1] << 8;\n\t   case 1:\n\t    k1 ^= data[blockCounts * 4];\n\t    k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t    k1 = k1 << 15 | k1 >>> 17;\n\t    k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t    if (blockCounts & 1) {\n\t     h1 ^= k1;\n\t    } else {\n\t     h2 ^= k1;\n\t    }\n\t   }\n\t   this.h1 = h1;\n\t   this.h2 = h2;\n\t   return this;\n\t  },\n\t  hexdigest: function MurmurHash3_64_hexdigest() {\n\t   var h1 = this.h1;\n\t   var h2 = this.h2;\n\t   h1 ^= h2 >>> 1;\n\t   h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n\t   h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n\t   h1 ^= h2 >>> 1;\n\t   h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n\t   h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n\t   h1 ^= h2 >>> 1;\n\t   for (var i = 0, arr = [\n\t      h1,\n\t      h2\n\t     ], str = ''; i < arr.length; i++) {\n\t    var hex = (arr[i] >>> 0).toString(16);\n\t    while (hex.length < 8) {\n\t     hex = '0' + hex;\n\t    }\n\t    str += hex;\n\t   }\n\t   return str;\n\t  }\n\t };\n\t return MurmurHash3_64;\n\t}();\n\texports.MurmurHash3_64 = MurmurHash3_64;\n\t\n\t/***/ }),\n\t/* 32 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar coreFunction = __w_pdfjs_require__(6);\n\tvar coreColorSpace = __w_pdfjs_require__(3);\n\tvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar Util = sharedUtil.Util;\n\tvar assert = sharedUtil.assert;\n\tvar error = sharedUtil.error;\n\tvar info = sharedUtil.info;\n\tvar warn = sharedUtil.warn;\n\tvar isStream = corePrimitives.isStream;\n\tvar PDFFunction = coreFunction.PDFFunction;\n\tvar ColorSpace = coreColorSpace.ColorSpace;\n\tvar ShadingType = {\n\t FUNCTION_BASED: 1,\n\t AXIAL: 2,\n\t RADIAL: 3,\n\t FREE_FORM_MESH: 4,\n\t LATTICE_FORM_MESH: 5,\n\t COONS_PATCH_MESH: 6,\n\t TENSOR_PATCH_MESH: 7\n\t};\n\tvar Pattern = function PatternClosure() {\n\t function Pattern() {\n\t  error('should not call Pattern constructor');\n\t }\n\t Pattern.prototype = {\n\t  getPattern: function Pattern_getPattern(ctx) {\n\t   error('Should not call Pattern.getStyle: ' + ctx);\n\t  }\n\t };\n\t Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n\t  var dict = isStream(shading) ? shading.dict : shading;\n\t  var type = dict.get('ShadingType');\n\t  try {\n\t   switch (type) {\n\t   case ShadingType.AXIAL:\n\t   case ShadingType.RADIAL:\n\t    return new Shadings.RadialAxial(dict, matrix, xref, res);\n\t   case ShadingType.FREE_FORM_MESH:\n\t   case ShadingType.LATTICE_FORM_MESH:\n\t   case ShadingType.COONS_PATCH_MESH:\n\t   case ShadingType.TENSOR_PATCH_MESH:\n\t    return new Shadings.Mesh(shading, matrix, xref, res);\n\t   default:\n\t    throw new Error('Unsupported ShadingType: ' + type);\n\t   }\n\t  } catch (ex) {\n\t   if (ex instanceof MissingDataException) {\n\t    throw ex;\n\t   }\n\t   handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n\t   warn(ex);\n\t   return new Shadings.Dummy();\n\t  }\n\t };\n\t return Pattern;\n\t}();\n\tvar Shadings = {};\n\tShadings.SMALL_NUMBER = 1e-6;\n\tShadings.RadialAxial = function RadialAxialClosure() {\n\t function RadialAxial(dict, matrix, xref, res) {\n\t  this.matrix = matrix;\n\t  this.coordsArr = dict.getArray('Coords');\n\t  this.shadingType = dict.get('ShadingType');\n\t  this.type = 'Pattern';\n\t  var cs = dict.get('ColorSpace', 'CS');\n\t  cs = ColorSpace.parse(cs, xref, res);\n\t  this.cs = cs;\n\t  var t0 = 0.0, t1 = 1.0;\n\t  if (dict.has('Domain')) {\n\t   var domainArr = dict.getArray('Domain');\n\t   t0 = domainArr[0];\n\t   t1 = domainArr[1];\n\t  }\n\t  var extendStart = false, extendEnd = false;\n\t  if (dict.has('Extend')) {\n\t   var extendArr = dict.getArray('Extend');\n\t   extendStart = extendArr[0];\n\t   extendEnd = extendArr[1];\n\t  }\n\t  if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n\t   var x1 = this.coordsArr[0];\n\t   var y1 = this.coordsArr[1];\n\t   var r1 = this.coordsArr[2];\n\t   var x2 = this.coordsArr[3];\n\t   var y2 = this.coordsArr[4];\n\t   var r2 = this.coordsArr[5];\n\t   var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\t   if (r1 <= r2 + distance && r2 <= r1 + distance) {\n\t    warn('Unsupported radial gradient.');\n\t   }\n\t  }\n\t  this.extendStart = extendStart;\n\t  this.extendEnd = extendEnd;\n\t  var fnObj = dict.get('Function');\n\t  var fn = PDFFunction.parseArray(xref, fnObj);\n\t  var diff = t1 - t0;\n\t  var step = diff / 10;\n\t  var colorStops = this.colorStops = [];\n\t  if (t0 >= t1 || step <= 0) {\n\t   info('Bad shading domain.');\n\t   return;\n\t  }\n\t  var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n\t  var rgbColor;\n\t  for (var i = t0; i <= t1; i += step) {\n\t   ratio[0] = i;\n\t   fn(ratio, 0, color, 0);\n\t   rgbColor = cs.getRgb(color, 0);\n\t   var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t   colorStops.push([\n\t    (i - t0) / diff,\n\t    cssColor\n\t   ]);\n\t  }\n\t  var background = 'transparent';\n\t  if (dict.has('Background')) {\n\t   rgbColor = cs.getRgb(dict.get('Background'), 0);\n\t   background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t  }\n\t  if (!extendStart) {\n\t   colorStops.unshift([\n\t    0,\n\t    background\n\t   ]);\n\t   colorStops[1][0] += Shadings.SMALL_NUMBER;\n\t  }\n\t  if (!extendEnd) {\n\t   colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n\t   colorStops.push([\n\t    1,\n\t    background\n\t   ]);\n\t  }\n\t  this.colorStops = colorStops;\n\t }\n\t RadialAxial.prototype = {\n\t  getIR: function RadialAxial_getIR() {\n\t   var coordsArr = this.coordsArr;\n\t   var shadingType = this.shadingType;\n\t   var type, p0, p1, r0, r1;\n\t   if (shadingType === ShadingType.AXIAL) {\n\t    p0 = [\n\t     coordsArr[0],\n\t     coordsArr[1]\n\t    ];\n\t    p1 = [\n\t     coordsArr[2],\n\t     coordsArr[3]\n\t    ];\n\t    r0 = null;\n\t    r1 = null;\n\t    type = 'axial';\n\t   } else if (shadingType === ShadingType.RADIAL) {\n\t    p0 = [\n\t     coordsArr[0],\n\t     coordsArr[1]\n\t    ];\n\t    p1 = [\n\t     coordsArr[3],\n\t     coordsArr[4]\n\t    ];\n\t    r0 = coordsArr[2];\n\t    r1 = coordsArr[5];\n\t    type = 'radial';\n\t   } else {\n\t    error('getPattern type unknown: ' + shadingType);\n\t   }\n\t   var matrix = this.matrix;\n\t   if (matrix) {\n\t    p0 = Util.applyTransform(p0, matrix);\n\t    p1 = Util.applyTransform(p1, matrix);\n\t    if (shadingType === ShadingType.RADIAL) {\n\t     var scale = Util.singularValueDecompose2dScale(matrix);\n\t     r0 *= scale[0];\n\t     r1 *= scale[1];\n\t    }\n\t   }\n\t   return [\n\t    'RadialAxial',\n\t    type,\n\t    this.colorStops,\n\t    p0,\n\t    p1,\n\t    r0,\n\t    r1\n\t   ];\n\t  }\n\t };\n\t return RadialAxial;\n\t}();\n\tShadings.Mesh = function MeshClosure() {\n\t function MeshStreamReader(stream, context) {\n\t  this.stream = stream;\n\t  this.context = context;\n\t  this.buffer = 0;\n\t  this.bufferLength = 0;\n\t  var numComps = context.numComps;\n\t  this.tmpCompsBuf = new Float32Array(numComps);\n\t  var csNumComps = context.colorSpace.numComps;\n\t  this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n\t }\n\t MeshStreamReader.prototype = {\n\t  get hasData() {\n\t   if (this.stream.end) {\n\t    return this.stream.pos < this.stream.end;\n\t   }\n\t   if (this.bufferLength > 0) {\n\t    return true;\n\t   }\n\t   var nextByte = this.stream.getByte();\n\t   if (nextByte < 0) {\n\t    return false;\n\t   }\n\t   this.buffer = nextByte;\n\t   this.bufferLength = 8;\n\t   return true;\n\t  },\n\t  readBits: function MeshStreamReader_readBits(n) {\n\t   var buffer = this.buffer;\n\t   var bufferLength = this.bufferLength;\n\t   if (n === 32) {\n\t    if (bufferLength === 0) {\n\t     return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n\t    }\n\t    buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n\t    var nextByte = this.stream.getByte();\n\t    this.buffer = nextByte & (1 << bufferLength) - 1;\n\t    return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n\t   }\n\t   if (n === 8 && bufferLength === 0) {\n\t    return this.stream.getByte();\n\t   }\n\t   while (bufferLength < n) {\n\t    buffer = buffer << 8 | this.stream.getByte();\n\t    bufferLength += 8;\n\t   }\n\t   bufferLength -= n;\n\t   this.bufferLength = bufferLength;\n\t   this.buffer = buffer & (1 << bufferLength) - 1;\n\t   return buffer >> bufferLength;\n\t  },\n\t  align: function MeshStreamReader_align() {\n\t   this.buffer = 0;\n\t   this.bufferLength = 0;\n\t  },\n\t  readFlag: function MeshStreamReader_readFlag() {\n\t   return this.readBits(this.context.bitsPerFlag);\n\t  },\n\t  readCoordinate: function MeshStreamReader_readCoordinate() {\n\t   var bitsPerCoordinate = this.context.bitsPerCoordinate;\n\t   var xi = this.readBits(bitsPerCoordinate);\n\t   var yi = this.readBits(bitsPerCoordinate);\n\t   var decode = this.context.decode;\n\t   var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n\t   return [\n\t    xi * scale * (decode[1] - decode[0]) + decode[0],\n\t    yi * scale * (decode[3] - decode[2]) + decode[2]\n\t   ];\n\t  },\n\t  readComponents: function MeshStreamReader_readComponents() {\n\t   var numComps = this.context.numComps;\n\t   var bitsPerComponent = this.context.bitsPerComponent;\n\t   var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n\t   var decode = this.context.decode;\n\t   var components = this.tmpCompsBuf;\n\t   for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n\t    var ci = this.readBits(bitsPerComponent);\n\t    components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n\t   }\n\t   var color = this.tmpCsCompsBuf;\n\t   if (this.context.colorFn) {\n\t    this.context.colorFn(components, 0, color, 0);\n\t   }\n\t   return this.context.colorSpace.getRgb(color, 0);\n\t  }\n\t };\n\t function decodeType4Shading(mesh, reader) {\n\t  var coords = mesh.coords;\n\t  var colors = mesh.colors;\n\t  var operators = [];\n\t  var ps = [];\n\t  var verticesLeft = 0;\n\t  while (reader.hasData) {\n\t   var f = reader.readFlag();\n\t   var coord = reader.readCoordinate();\n\t   var color = reader.readComponents();\n\t   if (verticesLeft === 0) {\n\t    assert(0 <= f && f <= 2, 'Unknown type4 flag');\n\t    switch (f) {\n\t    case 0:\n\t     verticesLeft = 3;\n\t     break;\n\t    case 1:\n\t     ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n\t     verticesLeft = 1;\n\t     break;\n\t    case 2:\n\t     ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n\t     verticesLeft = 1;\n\t     break;\n\t    }\n\t    operators.push(f);\n\t   }\n\t   ps.push(coords.length);\n\t   coords.push(coord);\n\t   colors.push(color);\n\t   verticesLeft--;\n\t   reader.align();\n\t  }\n\t  mesh.figures.push({\n\t   type: 'triangles',\n\t   coords: new Int32Array(ps),\n\t   colors: new Int32Array(ps)\n\t  });\n\t }\n\t function decodeType5Shading(mesh, reader, verticesPerRow) {\n\t  var coords = mesh.coords;\n\t  var colors = mesh.colors;\n\t  var ps = [];\n\t  while (reader.hasData) {\n\t   var coord = reader.readCoordinate();\n\t   var color = reader.readComponents();\n\t   ps.push(coords.length);\n\t   coords.push(coord);\n\t   colors.push(color);\n\t  }\n\t  mesh.figures.push({\n\t   type: 'lattice',\n\t   coords: new Int32Array(ps),\n\t   colors: new Int32Array(ps),\n\t   verticesPerRow: verticesPerRow\n\t  });\n\t }\n\t var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n\t var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\t var TRIANGLE_DENSITY = 20;\n\t var getB = function getBClosure() {\n\t  function buildB(count) {\n\t   var lut = [];\n\t   for (var i = 0; i <= count; i++) {\n\t    var t = i / count, t_ = 1 - t;\n\t    lut.push(new Float32Array([\n\t     t_ * t_ * t_,\n\t     3 * t * t_ * t_,\n\t     3 * t * t * t_,\n\t     t * t * t\n\t    ]));\n\t   }\n\t   return lut;\n\t  }\n\t  var cache = [];\n\t  return function getB(count) {\n\t   if (!cache[count]) {\n\t    cache[count] = buildB(count);\n\t   }\n\t   return cache[count];\n\t  };\n\t }();\n\t function buildFigureFromPatch(mesh, index) {\n\t  var figure = mesh.figures[index];\n\t  assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n\t  var coords = mesh.coords, colors = mesh.colors;\n\t  var pi = figure.coords;\n\t  var ci = figure.colors;\n\t  var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t  var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t  var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t  var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t  var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n\t  splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n\t  var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n\t  splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\t  var verticesPerRow = splitXBy + 1;\n\t  var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t  var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t  var k = 0;\n\t  var cl = new Uint8Array(3), cr = new Uint8Array(3);\n\t  var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n\t  var bRow = getB(splitYBy), bCol = getB(splitXBy);\n\t  for (var row = 0; row <= splitYBy; row++) {\n\t   cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n\t   cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n\t   cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n\t   cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n\t   cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n\t   cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\t   for (var col = 0; col <= splitXBy; col++, k++) {\n\t    if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n\t     continue;\n\t    }\n\t    var x = 0, y = 0;\n\t    var q = 0;\n\t    for (var i = 0; i <= 3; i++) {\n\t     for (var j = 0; j <= 3; j++, q++) {\n\t      var m = bRow[row][i] * bCol[col][j];\n\t      x += coords[pi[q]][0] * m;\n\t      y += coords[pi[q]][1] * m;\n\t     }\n\t    }\n\t    figureCoords[k] = coords.length;\n\t    coords.push([\n\t     x,\n\t     y\n\t    ]);\n\t    figureColors[k] = colors.length;\n\t    var newColor = new Uint8Array(3);\n\t    newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n\t    newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n\t    newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n\t    colors.push(newColor);\n\t   }\n\t  }\n\t  figureCoords[0] = pi[0];\n\t  figureColors[0] = ci[0];\n\t  figureCoords[splitXBy] = pi[3];\n\t  figureColors[splitXBy] = ci[1];\n\t  figureCoords[verticesPerRow * splitYBy] = pi[12];\n\t  figureColors[verticesPerRow * splitYBy] = ci[2];\n\t  figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n\t  figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\t  mesh.figures[index] = {\n\t   type: 'lattice',\n\t   coords: figureCoords,\n\t   colors: figureColors,\n\t   verticesPerRow: verticesPerRow\n\t  };\n\t }\n\t function decodeType6Shading(mesh, reader) {\n\t  var coords = mesh.coords;\n\t  var colors = mesh.colors;\n\t  var ps = new Int32Array(16);\n\t  var cs = new Int32Array(4);\n\t  while (reader.hasData) {\n\t   var f = reader.readFlag();\n\t   assert(0 <= f && f <= 3, 'Unknown type6 flag');\n\t   var i, ii;\n\t   var pi = coords.length;\n\t   for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n\t    coords.push(reader.readCoordinate());\n\t   }\n\t   var ci = colors.length;\n\t   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t    colors.push(reader.readComponents());\n\t   }\n\t   var tmp1, tmp2, tmp3, tmp4;\n\t   switch (f) {\n\t   case 0:\n\t    ps[12] = pi + 3;\n\t    ps[13] = pi + 4;\n\t    ps[14] = pi + 5;\n\t    ps[15] = pi + 6;\n\t    ps[8] = pi + 2;\n\t    ps[11] = pi + 7;\n\t    ps[4] = pi + 1;\n\t    ps[7] = pi + 8;\n\t    ps[0] = pi;\n\t    ps[1] = pi + 11;\n\t    ps[2] = pi + 10;\n\t    ps[3] = pi + 9;\n\t    cs[2] = ci + 1;\n\t    cs[3] = ci + 2;\n\t    cs[0] = ci;\n\t    cs[1] = ci + 3;\n\t    break;\n\t   case 1:\n\t    tmp1 = ps[12];\n\t    tmp2 = ps[13];\n\t    tmp3 = ps[14];\n\t    tmp4 = ps[15];\n\t    ps[12] = tmp4;\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = tmp3;\n\t    ps[11] = pi + 3;\n\t    ps[4] = tmp2;\n\t    ps[7] = pi + 4;\n\t    ps[0] = tmp1;\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    tmp1 = cs[2];\n\t    tmp2 = cs[3];\n\t    cs[2] = tmp2;\n\t    cs[3] = ci;\n\t    cs[0] = tmp1;\n\t    cs[1] = ci + 1;\n\t    break;\n\t   case 2:\n\t    tmp1 = ps[15];\n\t    tmp2 = ps[11];\n\t    ps[12] = ps[3];\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = ps[7];\n\t    ps[11] = pi + 3;\n\t    ps[4] = tmp2;\n\t    ps[7] = pi + 4;\n\t    ps[0] = tmp1;\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    tmp1 = cs[3];\n\t    cs[2] = cs[1];\n\t    cs[3] = ci;\n\t    cs[0] = tmp1;\n\t    cs[1] = ci + 1;\n\t    break;\n\t   case 3:\n\t    ps[12] = ps[0];\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = ps[1];\n\t    ps[11] = pi + 3;\n\t    ps[4] = ps[2];\n\t    ps[7] = pi + 4;\n\t    ps[0] = ps[3];\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    cs[2] = cs[0];\n\t    cs[3] = ci;\n\t    cs[0] = cs[1];\n\t    cs[1] = ci + 1;\n\t    break;\n\t   }\n\t   ps[5] = coords.length;\n\t   coords.push([\n\t    (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n\t    (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n\t   ]);\n\t   ps[6] = coords.length;\n\t   coords.push([\n\t    (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n\t    (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n\t   ]);\n\t   ps[9] = coords.length;\n\t   coords.push([\n\t    (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n\t    (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n\t   ]);\n\t   ps[10] = coords.length;\n\t   coords.push([\n\t    (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n\t    (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n\t   ]);\n\t   mesh.figures.push({\n\t    type: 'patch',\n\t    coords: new Int32Array(ps),\n\t    colors: new Int32Array(cs)\n\t   });\n\t  }\n\t }\n\t function decodeType7Shading(mesh, reader) {\n\t  var coords = mesh.coords;\n\t  var colors = mesh.colors;\n\t  var ps = new Int32Array(16);\n\t  var cs = new Int32Array(4);\n\t  while (reader.hasData) {\n\t   var f = reader.readFlag();\n\t   assert(0 <= f && f <= 3, 'Unknown type7 flag');\n\t   var i, ii;\n\t   var pi = coords.length;\n\t   for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n\t    coords.push(reader.readCoordinate());\n\t   }\n\t   var ci = colors.length;\n\t   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t    colors.push(reader.readComponents());\n\t   }\n\t   var tmp1, tmp2, tmp3, tmp4;\n\t   switch (f) {\n\t   case 0:\n\t    ps[12] = pi + 3;\n\t    ps[13] = pi + 4;\n\t    ps[14] = pi + 5;\n\t    ps[15] = pi + 6;\n\t    ps[8] = pi + 2;\n\t    ps[9] = pi + 13;\n\t    ps[10] = pi + 14;\n\t    ps[11] = pi + 7;\n\t    ps[4] = pi + 1;\n\t    ps[5] = pi + 12;\n\t    ps[6] = pi + 15;\n\t    ps[7] = pi + 8;\n\t    ps[0] = pi;\n\t    ps[1] = pi + 11;\n\t    ps[2] = pi + 10;\n\t    ps[3] = pi + 9;\n\t    cs[2] = ci + 1;\n\t    cs[3] = ci + 2;\n\t    cs[0] = ci;\n\t    cs[1] = ci + 3;\n\t    break;\n\t   case 1:\n\t    tmp1 = ps[12];\n\t    tmp2 = ps[13];\n\t    tmp3 = ps[14];\n\t    tmp4 = ps[15];\n\t    ps[12] = tmp4;\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = tmp3;\n\t    ps[9] = pi + 9;\n\t    ps[10] = pi + 10;\n\t    ps[11] = pi + 3;\n\t    ps[4] = tmp2;\n\t    ps[5] = pi + 8;\n\t    ps[6] = pi + 11;\n\t    ps[7] = pi + 4;\n\t    ps[0] = tmp1;\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    tmp1 = cs[2];\n\t    tmp2 = cs[3];\n\t    cs[2] = tmp2;\n\t    cs[3] = ci;\n\t    cs[0] = tmp1;\n\t    cs[1] = ci + 1;\n\t    break;\n\t   case 2:\n\t    tmp1 = ps[15];\n\t    tmp2 = ps[11];\n\t    ps[12] = ps[3];\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = ps[7];\n\t    ps[9] = pi + 9;\n\t    ps[10] = pi + 10;\n\t    ps[11] = pi + 3;\n\t    ps[4] = tmp2;\n\t    ps[5] = pi + 8;\n\t    ps[6] = pi + 11;\n\t    ps[7] = pi + 4;\n\t    ps[0] = tmp1;\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    tmp1 = cs[3];\n\t    cs[2] = cs[1];\n\t    cs[3] = ci;\n\t    cs[0] = tmp1;\n\t    cs[1] = ci + 1;\n\t    break;\n\t   case 3:\n\t    ps[12] = ps[0];\n\t    ps[13] = pi + 0;\n\t    ps[14] = pi + 1;\n\t    ps[15] = pi + 2;\n\t    ps[8] = ps[1];\n\t    ps[9] = pi + 9;\n\t    ps[10] = pi + 10;\n\t    ps[11] = pi + 3;\n\t    ps[4] = ps[2];\n\t    ps[5] = pi + 8;\n\t    ps[6] = pi + 11;\n\t    ps[7] = pi + 4;\n\t    ps[0] = ps[3];\n\t    ps[1] = pi + 7;\n\t    ps[2] = pi + 6;\n\t    ps[3] = pi + 5;\n\t    cs[2] = cs[0];\n\t    cs[3] = ci;\n\t    cs[0] = cs[1];\n\t    cs[1] = ci + 1;\n\t    break;\n\t   }\n\t   mesh.figures.push({\n\t    type: 'patch',\n\t    coords: new Int32Array(ps),\n\t    colors: new Int32Array(cs)\n\t   });\n\t  }\n\t }\n\t function updateBounds(mesh) {\n\t  var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n\t  for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n\t   var x = mesh.coords[i][0], y = mesh.coords[i][1];\n\t   minX = minX > x ? x : minX;\n\t   minY = minY > y ? y : minY;\n\t   maxX = maxX < x ? x : maxX;\n\t   maxY = maxY < y ? y : maxY;\n\t  }\n\t  mesh.bounds = [\n\t   minX,\n\t   minY,\n\t   maxX,\n\t   maxY\n\t  ];\n\t }\n\t function packData(mesh) {\n\t  var i, ii, j, jj;\n\t  var coords = mesh.coords;\n\t  var coordsPacked = new Float32Array(coords.length * 2);\n\t  for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n\t   var xy = coords[i];\n\t   coordsPacked[j++] = xy[0];\n\t   coordsPacked[j++] = xy[1];\n\t  }\n\t  mesh.coords = coordsPacked;\n\t  var colors = mesh.colors;\n\t  var colorsPacked = new Uint8Array(colors.length * 3);\n\t  for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n\t   var c = colors[i];\n\t   colorsPacked[j++] = c[0];\n\t   colorsPacked[j++] = c[1];\n\t   colorsPacked[j++] = c[2];\n\t  }\n\t  mesh.colors = colorsPacked;\n\t  var figures = mesh.figures;\n\t  for (i = 0, ii = figures.length; i < ii; i++) {\n\t   var figure = figures[i], ps = figure.coords, cs = figure.colors;\n\t   for (j = 0, jj = ps.length; j < jj; j++) {\n\t    ps[j] *= 2;\n\t    cs[j] *= 3;\n\t   }\n\t  }\n\t }\n\t function Mesh(stream, matrix, xref, res) {\n\t  assert(isStream(stream), 'Mesh data is not a stream');\n\t  var dict = stream.dict;\n\t  this.matrix = matrix;\n\t  this.shadingType = dict.get('ShadingType');\n\t  this.type = 'Pattern';\n\t  this.bbox = dict.getArray('BBox');\n\t  var cs = dict.get('ColorSpace', 'CS');\n\t  cs = ColorSpace.parse(cs, xref, res);\n\t  this.cs = cs;\n\t  this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n\t  var fnObj = dict.get('Function');\n\t  var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n\t  this.coords = [];\n\t  this.colors = [];\n\t  this.figures = [];\n\t  var decodeContext = {\n\t   bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n\t   bitsPerComponent: dict.get('BitsPerComponent'),\n\t   bitsPerFlag: dict.get('BitsPerFlag'),\n\t   decode: dict.getArray('Decode'),\n\t   colorFn: fn,\n\t   colorSpace: cs,\n\t   numComps: fn ? 1 : cs.numComps\n\t  };\n\t  var reader = new MeshStreamReader(stream, decodeContext);\n\t  var patchMesh = false;\n\t  switch (this.shadingType) {\n\t  case ShadingType.FREE_FORM_MESH:\n\t   decodeType4Shading(this, reader);\n\t   break;\n\t  case ShadingType.LATTICE_FORM_MESH:\n\t   var verticesPerRow = dict.get('VerticesPerRow') | 0;\n\t   assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n\t   decodeType5Shading(this, reader, verticesPerRow);\n\t   break;\n\t  case ShadingType.COONS_PATCH_MESH:\n\t   decodeType6Shading(this, reader);\n\t   patchMesh = true;\n\t   break;\n\t  case ShadingType.TENSOR_PATCH_MESH:\n\t   decodeType7Shading(this, reader);\n\t   patchMesh = true;\n\t   break;\n\t  default:\n\t   error('Unsupported mesh type.');\n\t   break;\n\t  }\n\t  if (patchMesh) {\n\t   updateBounds(this);\n\t   for (var i = 0, ii = this.figures.length; i < ii; i++) {\n\t    buildFigureFromPatch(this, i);\n\t   }\n\t  }\n\t  updateBounds(this);\n\t  packData(this);\n\t }\n\t Mesh.prototype = {\n\t  getIR: function Mesh_getIR() {\n\t   return [\n\t    'Mesh',\n\t    this.shadingType,\n\t    this.coords,\n\t    this.colors,\n\t    this.figures,\n\t    this.bounds,\n\t    this.matrix,\n\t    this.bbox,\n\t    this.background\n\t   ];\n\t  }\n\t };\n\t return Mesh;\n\t}();\n\tShadings.Dummy = function DummyClosure() {\n\t function Dummy() {\n\t  this.type = 'Pattern';\n\t }\n\t Dummy.prototype = {\n\t  getIR: function Dummy_getIR() {\n\t   return ['Dummy'];\n\t  }\n\t };\n\t return Dummy;\n\t}();\n\tfunction getTilingPatternIR(operatorList, dict, args) {\n\t var matrix = dict.getArray('Matrix');\n\t var bbox = dict.getArray('BBox');\n\t var xstep = dict.get('XStep');\n\t var ystep = dict.get('YStep');\n\t var paintType = dict.get('PaintType');\n\t var tilingType = dict.get('TilingType');\n\t return [\n\t  'TilingPattern',\n\t  args,\n\t  operatorList,\n\t  matrix,\n\t  bbox,\n\t  xstep,\n\t  ystep,\n\t  paintType,\n\t  tilingType\n\t ];\n\t}\n\texports.Pattern = Pattern;\n\texports.getTilingPatternIR = getTilingPatternIR;\n\t\n\t/***/ }),\n\t/* 33 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreChunkedStream = __w_pdfjs_require__(11);\n\tvar coreDocument = __w_pdfjs_require__(24);\n\tvar warn = sharedUtil.warn;\n\tvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\n\tvar shadow = sharedUtil.shadow;\n\tvar NotImplementedException = sharedUtil.NotImplementedException;\n\tvar MissingDataException = sharedUtil.MissingDataException;\n\tvar createPromiseCapability = sharedUtil.createPromiseCapability;\n\tvar Util = sharedUtil.Util;\n\tvar Stream = coreStream.Stream;\n\tvar ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\n\tvar PDFDocument = coreDocument.PDFDocument;\n\tvar BasePdfManager = function BasePdfManagerClosure() {\n\t function BasePdfManager() {\n\t  throw new Error('Cannot initialize BaseManagerManager');\n\t }\n\t BasePdfManager.prototype = {\n\t  get docId() {\n\t   return this._docId;\n\t  },\n\t  get password() {\n\t   return this._password;\n\t  },\n\t  get docBaseUrl() {\n\t   var docBaseUrl = null;\n\t   if (this._docBaseUrl) {\n\t    var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n\t    if (absoluteUrl) {\n\t     docBaseUrl = absoluteUrl.href;\n\t    } else {\n\t     warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n\t    }\n\t   }\n\t   return shadow(this, 'docBaseUrl', docBaseUrl);\n\t  },\n\t  onLoadedStream: function BasePdfManager_onLoadedStream() {\n\t   throw new NotImplementedException();\n\t  },\n\t  ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n\t   return this.ensure(this.pdfDocument, prop, args);\n\t  },\n\t  ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n\t   return this.ensure(this.pdfDocument.xref, prop, args);\n\t  },\n\t  ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n\t   return this.ensure(this.pdfDocument.catalog, prop, args);\n\t  },\n\t  getPage: function BasePdfManager_getPage(pageIndex) {\n\t   return this.pdfDocument.getPage(pageIndex);\n\t  },\n\t  cleanup: function BasePdfManager_cleanup() {\n\t   return this.pdfDocument.cleanup();\n\t  },\n\t  ensure: function BasePdfManager_ensure(obj, prop, args) {\n\t   return new NotImplementedException();\n\t  },\n\t  requestRange: function BasePdfManager_requestRange(begin, end) {\n\t   return new NotImplementedException();\n\t  },\n\t  requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n\t   return new NotImplementedException();\n\t  },\n\t  sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n\t   return new NotImplementedException();\n\t  },\n\t  updatePassword: function BasePdfManager_updatePassword(password) {\n\t   this._password = password;\n\t  },\n\t  terminate: function BasePdfManager_terminate() {\n\t   return new NotImplementedException();\n\t  }\n\t };\n\t return BasePdfManager;\n\t}();\n\tvar LocalPdfManager = function LocalPdfManagerClosure() {\n\t function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n\t  this._docId = docId;\n\t  this._password = password;\n\t  this._docBaseUrl = docBaseUrl;\n\t  this.evaluatorOptions = evaluatorOptions;\n\t  var stream = new Stream(data);\n\t  this.pdfDocument = new PDFDocument(this, stream);\n\t  this._loadedStreamCapability = createPromiseCapability();\n\t  this._loadedStreamCapability.resolve(stream);\n\t }\n\t Util.inherit(LocalPdfManager, BasePdfManager, {\n\t  ensure: function LocalPdfManager_ensure(obj, prop, args) {\n\t   return new Promise(function (resolve, reject) {\n\t    try {\n\t     var value = obj[prop];\n\t     var result;\n\t     if (typeof value === 'function') {\n\t      result = value.apply(obj, args);\n\t     } else {\n\t      result = value;\n\t     }\n\t     resolve(result);\n\t    } catch (e) {\n\t     reject(e);\n\t    }\n\t   });\n\t  },\n\t  requestRange: function LocalPdfManager_requestRange(begin, end) {\n\t   return Promise.resolve();\n\t  },\n\t  requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n\t  },\n\t  onLoadedStream: function LocalPdfManager_onLoadedStream() {\n\t   return this._loadedStreamCapability.promise;\n\t  },\n\t  terminate: function LocalPdfManager_terminate() {\n\t  }\n\t });\n\t return LocalPdfManager;\n\t}();\n\tvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n\t function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n\t  this._docId = docId;\n\t  this._password = args.password;\n\t  this._docBaseUrl = docBaseUrl;\n\t  this.msgHandler = args.msgHandler;\n\t  this.evaluatorOptions = evaluatorOptions;\n\t  var params = {\n\t   msgHandler: args.msgHandler,\n\t   url: args.url,\n\t   length: args.length,\n\t   disableAutoFetch: args.disableAutoFetch,\n\t   rangeChunkSize: args.rangeChunkSize\n\t  };\n\t  this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n\t  this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n\t }\n\t Util.inherit(NetworkPdfManager, BasePdfManager, {\n\t  ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n\t   var pdfManager = this;\n\t   return new Promise(function (resolve, reject) {\n\t    function ensureHelper() {\n\t     try {\n\t      var result;\n\t      var value = obj[prop];\n\t      if (typeof value === 'function') {\n\t       result = value.apply(obj, args);\n\t      } else {\n\t       result = value;\n\t      }\n\t      resolve(result);\n\t     } catch (e) {\n\t      if (!(e instanceof MissingDataException)) {\n\t       reject(e);\n\t       return;\n\t      }\n\t      pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n\t     }\n\t    }\n\t    ensureHelper();\n\t   });\n\t  },\n\t  requestRange: function NetworkPdfManager_requestRange(begin, end) {\n\t   return this.streamManager.requestRange(begin, end);\n\t  },\n\t  requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n\t   this.streamManager.requestAllChunks();\n\t  },\n\t  sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n\t   this.streamManager.onReceiveData({ chunk: chunk });\n\t  },\n\t  onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n\t   return this.streamManager.onLoadedStream();\n\t  },\n\t  terminate: function NetworkPdfManager_terminate() {\n\t   this.streamManager.abort();\n\t  }\n\t });\n\t return NetworkPdfManager;\n\t}();\n\texports.LocalPdfManager = LocalPdfManager;\n\texports.NetworkPdfManager = NetworkPdfManager;\n\t\n\t/***/ }),\n\t/* 34 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar corePrimitives = __w_pdfjs_require__(1);\n\tvar error = sharedUtil.error;\n\tvar isSpace = sharedUtil.isSpace;\n\tvar EOF = corePrimitives.EOF;\n\tvar PostScriptParser = function PostScriptParserClosure() {\n\t function PostScriptParser(lexer) {\n\t  this.lexer = lexer;\n\t  this.operators = [];\n\t  this.token = null;\n\t  this.prev = null;\n\t }\n\t PostScriptParser.prototype = {\n\t  nextToken: function PostScriptParser_nextToken() {\n\t   this.prev = this.token;\n\t   this.token = this.lexer.getToken();\n\t  },\n\t  accept: function PostScriptParser_accept(type) {\n\t   if (this.token.type === type) {\n\t    this.nextToken();\n\t    return true;\n\t   }\n\t   return false;\n\t  },\n\t  expect: function PostScriptParser_expect(type) {\n\t   if (this.accept(type)) {\n\t    return true;\n\t   }\n\t   error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n\t  },\n\t  parse: function PostScriptParser_parse() {\n\t   this.nextToken();\n\t   this.expect(PostScriptTokenTypes.LBRACE);\n\t   this.parseBlock();\n\t   this.expect(PostScriptTokenTypes.RBRACE);\n\t   return this.operators;\n\t  },\n\t  parseBlock: function PostScriptParser_parseBlock() {\n\t   while (true) {\n\t    if (this.accept(PostScriptTokenTypes.NUMBER)) {\n\t     this.operators.push(this.prev.value);\n\t    } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n\t     this.operators.push(this.prev.value);\n\t    } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t     this.parseCondition();\n\t    } else {\n\t     return;\n\t    }\n\t   }\n\t  },\n\t  parseCondition: function PostScriptParser_parseCondition() {\n\t   var conditionLocation = this.operators.length;\n\t   this.operators.push(null, null);\n\t   this.parseBlock();\n\t   this.expect(PostScriptTokenTypes.RBRACE);\n\t   if (this.accept(PostScriptTokenTypes.IF)) {\n\t    this.operators[conditionLocation] = this.operators.length;\n\t    this.operators[conditionLocation + 1] = 'jz';\n\t   } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t    var jumpLocation = this.operators.length;\n\t    this.operators.push(null, null);\n\t    var endOfTrue = this.operators.length;\n\t    this.parseBlock();\n\t    this.expect(PostScriptTokenTypes.RBRACE);\n\t    this.expect(PostScriptTokenTypes.IFELSE);\n\t    this.operators[jumpLocation] = this.operators.length;\n\t    this.operators[jumpLocation + 1] = 'j';\n\t    this.operators[conditionLocation] = endOfTrue;\n\t    this.operators[conditionLocation + 1] = 'jz';\n\t   } else {\n\t    error('PS Function: error parsing conditional.');\n\t   }\n\t  }\n\t };\n\t return PostScriptParser;\n\t}();\n\tvar PostScriptTokenTypes = {\n\t LBRACE: 0,\n\t RBRACE: 1,\n\t NUMBER: 2,\n\t OPERATOR: 3,\n\t IF: 4,\n\t IFELSE: 5\n\t};\n\tvar PostScriptToken = function PostScriptTokenClosure() {\n\t function PostScriptToken(type, value) {\n\t  this.type = type;\n\t  this.value = value;\n\t }\n\t var opCache = Object.create(null);\n\t PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n\t  var opValue = opCache[op];\n\t  if (opValue) {\n\t   return opValue;\n\t  }\n\t  return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n\t };\n\t PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n\t PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n\t PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n\t PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n\t return PostScriptToken;\n\t}();\n\tvar PostScriptLexer = function PostScriptLexerClosure() {\n\t function PostScriptLexer(stream) {\n\t  this.stream = stream;\n\t  this.nextChar();\n\t  this.strBuf = [];\n\t }\n\t PostScriptLexer.prototype = {\n\t  nextChar: function PostScriptLexer_nextChar() {\n\t   return this.currentChar = this.stream.getByte();\n\t  },\n\t  getToken: function PostScriptLexer_getToken() {\n\t   var comment = false;\n\t   var ch = this.currentChar;\n\t   while (true) {\n\t    if (ch < 0) {\n\t     return EOF;\n\t    }\n\t    if (comment) {\n\t     if (ch === 0x0A || ch === 0x0D) {\n\t      comment = false;\n\t     }\n\t    } else if (ch === 0x25) {\n\t     comment = true;\n\t    } else if (!isSpace(ch)) {\n\t     break;\n\t    }\n\t    ch = this.nextChar();\n\t   }\n\t   switch (ch | 0) {\n\t   case 0x30:\n\t   case 0x31:\n\t   case 0x32:\n\t   case 0x33:\n\t   case 0x34:\n\t   case 0x35:\n\t   case 0x36:\n\t   case 0x37:\n\t   case 0x38:\n\t   case 0x39:\n\t   case 0x2B:\n\t   case 0x2D:\n\t   case 0x2E:\n\t    return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\t   case 0x7B:\n\t    this.nextChar();\n\t    return PostScriptToken.LBRACE;\n\t   case 0x7D:\n\t    this.nextChar();\n\t    return PostScriptToken.RBRACE;\n\t   }\n\t   var strBuf = this.strBuf;\n\t   strBuf.length = 0;\n\t   strBuf[0] = String.fromCharCode(ch);\n\t   while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n\t    strBuf.push(String.fromCharCode(ch));\n\t   }\n\t   var str = strBuf.join('');\n\t   switch (str.toLowerCase()) {\n\t   case 'if':\n\t    return PostScriptToken.IF;\n\t   case 'ifelse':\n\t    return PostScriptToken.IFELSE;\n\t   default:\n\t    return PostScriptToken.getOperator(str);\n\t   }\n\t  },\n\t  getNumber: function PostScriptLexer_getNumber() {\n\t   var ch = this.currentChar;\n\t   var strBuf = this.strBuf;\n\t   strBuf.length = 0;\n\t   strBuf[0] = String.fromCharCode(ch);\n\t   while ((ch = this.nextChar()) >= 0) {\n\t    if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n\t     strBuf.push(String.fromCharCode(ch));\n\t    } else {\n\t     break;\n\t    }\n\t   }\n\t   var value = parseFloat(strBuf.join(''));\n\t   if (isNaN(value)) {\n\t    error('Invalid floating point number: ' + value);\n\t   }\n\t   return value;\n\t  }\n\t };\n\t return PostScriptLexer;\n\t}();\n\texports.PostScriptLexer = PostScriptLexer;\n\texports.PostScriptParser = PostScriptParser;\n\t\n\t/***/ }),\n\t/* 35 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar sharedUtil = __w_pdfjs_require__(0);\n\tvar coreStream = __w_pdfjs_require__(2);\n\tvar coreEncodings = __w_pdfjs_require__(4);\n\tvar warn = sharedUtil.warn;\n\tvar isSpace = sharedUtil.isSpace;\n\tvar Stream = coreStream.Stream;\n\tvar getEncoding = coreEncodings.getEncoding;\n\tvar HINTING_ENABLED = false;\n\tvar Type1CharString = function Type1CharStringClosure() {\n\t var COMMAND_MAP = {\n\t  'hstem': [1],\n\t  'vstem': [3],\n\t  'vmoveto': [4],\n\t  'rlineto': [5],\n\t  'hlineto': [6],\n\t  'vlineto': [7],\n\t  'rrcurveto': [8],\n\t  'callsubr': [10],\n\t  'flex': [\n\t   12,\n\t   35\n\t  ],\n\t  'drop': [\n\t   12,\n\t   18\n\t  ],\n\t  'endchar': [14],\n\t  'rmoveto': [21],\n\t  'hmoveto': [22],\n\t  'vhcurveto': [30],\n\t  'hvcurveto': [31]\n\t };\n\t function Type1CharString() {\n\t  this.width = 0;\n\t  this.lsb = 0;\n\t  this.flexing = false;\n\t  this.output = [];\n\t  this.stack = [];\n\t }\n\t Type1CharString.prototype = {\n\t  convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n\t   var count = encoded.length;\n\t   var error = false;\n\t   var wx, sbx, subrNumber;\n\t   for (var i = 0; i < count; i++) {\n\t    var value = encoded[i];\n\t    if (value < 32) {\n\t     if (value === 12) {\n\t      value = (value << 8) + encoded[++i];\n\t     }\n\t     switch (value) {\n\t     case 1:\n\t      if (!HINTING_ENABLED) {\n\t       this.stack = [];\n\t       break;\n\t      }\n\t      error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t      break;\n\t     case 3:\n\t      if (!HINTING_ENABLED) {\n\t       this.stack = [];\n\t       break;\n\t      }\n\t      error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t      break;\n\t     case 4:\n\t      if (this.flexing) {\n\t       if (this.stack.length < 1) {\n\t        error = true;\n\t        break;\n\t       }\n\t       var dy = this.stack.pop();\n\t       this.stack.push(0, dy);\n\t       break;\n\t      }\n\t      error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n\t      break;\n\t     case 5:\n\t      error = this.executeCommand(2, COMMAND_MAP.rlineto);\n\t      break;\n\t     case 6:\n\t      error = this.executeCommand(1, COMMAND_MAP.hlineto);\n\t      break;\n\t     case 7:\n\t      error = this.executeCommand(1, COMMAND_MAP.vlineto);\n\t      break;\n\t     case 8:\n\t      error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n\t      break;\n\t     case 9:\n\t      this.stack = [];\n\t      break;\n\t     case 10:\n\t      if (this.stack.length < 1) {\n\t       error = true;\n\t       break;\n\t      }\n\t      subrNumber = this.stack.pop();\n\t      error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n\t      break;\n\t     case 11:\n\t      return error;\n\t     case 13:\n\t      if (this.stack.length < 2) {\n\t       error = true;\n\t       break;\n\t      }\n\t      wx = this.stack.pop();\n\t      sbx = this.stack.pop();\n\t      this.lsb = sbx;\n\t      this.width = wx;\n\t      this.stack.push(wx, sbx);\n\t      error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n\t      break;\n\t     case 14:\n\t      this.output.push(COMMAND_MAP.endchar[0]);\n\t      break;\n\t     case 21:\n\t      if (this.flexing) {\n\t       break;\n\t      }\n\t      error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n\t      break;\n\t     case 22:\n\t      if (this.flexing) {\n\t       this.stack.push(0);\n\t       break;\n\t      }\n\t      error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n\t      break;\n\t     case 30:\n\t      error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n\t      break;\n\t     case 31:\n\t      error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n\t      break;\n\t     case (12 << 8) + 0:\n\t      this.stack = [];\n\t      break;\n\t     case (12 << 8) + 1:\n\t      if (!HINTING_ENABLED) {\n\t       this.stack = [];\n\t       break;\n\t      }\n\t      error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t      break;\n\t     case (12 << 8) + 2:\n\t      if (!HINTING_ENABLED) {\n\t       this.stack = [];\n\t       break;\n\t      }\n\t      error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t      break;\n\t     case (12 << 8) + 6:\n\t      if (seacAnalysisEnabled) {\n\t       this.seac = this.stack.splice(-4, 4);\n\t       error = this.executeCommand(0, COMMAND_MAP.endchar);\n\t      } else {\n\t       error = this.executeCommand(4, COMMAND_MAP.endchar);\n\t      }\n\t      break;\n\t     case (12 << 8) + 7:\n\t      if (this.stack.length < 4) {\n\t       error = true;\n\t       break;\n\t      }\n\t      this.stack.pop();\n\t      wx = this.stack.pop();\n\t      var sby = this.stack.pop();\n\t      sbx = this.stack.pop();\n\t      this.lsb = sbx;\n\t      this.width = wx;\n\t      this.stack.push(wx, sbx, sby);\n\t      error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n\t      break;\n\t     case (12 << 8) + 12:\n\t      if (this.stack.length < 2) {\n\t       error = true;\n\t       break;\n\t      }\n\t      var num2 = this.stack.pop();\n\t      var num1 = this.stack.pop();\n\t      this.stack.push(num1 / num2);\n\t      break;\n\t     case (12 << 8) + 16:\n\t      if (this.stack.length < 2) {\n\t       error = true;\n\t       break;\n\t      }\n\t      subrNumber = this.stack.pop();\n\t      var numArgs = this.stack.pop();\n\t      if (subrNumber === 0 && numArgs === 3) {\n\t       var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n\t       this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n\t       error = this.executeCommand(13, COMMAND_MAP.flex, true);\n\t       this.flexing = false;\n\t       this.stack.push(flexArgs[15], flexArgs[16]);\n\t      } else if (subrNumber === 1 && numArgs === 0) {\n\t       this.flexing = true;\n\t      }\n\t      break;\n\t     case (12 << 8) + 17:\n\t      break;\n\t     case (12 << 8) + 33:\n\t      this.stack = [];\n\t      break;\n\t     default:\n\t      warn('Unknown type 1 charstring command of \"' + value + '\"');\n\t      break;\n\t     }\n\t     if (error) {\n\t      break;\n\t     }\n\t     continue;\n\t    } else if (value <= 246) {\n\t     value = value - 139;\n\t    } else if (value <= 250) {\n\t     value = (value - 247) * 256 + encoded[++i] + 108;\n\t    } else if (value <= 254) {\n\t     value = -((value - 251) * 256) - encoded[++i] - 108;\n\t    } else {\n\t     value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n\t    }\n\t    this.stack.push(value);\n\t   }\n\t   return error;\n\t  },\n\t  executeCommand: function (howManyArgs, command, keepStack) {\n\t   var stackLength = this.stack.length;\n\t   if (howManyArgs > stackLength) {\n\t    return true;\n\t   }\n\t   var start = stackLength - howManyArgs;\n\t   for (var i = start; i < stackLength; i++) {\n\t    var value = this.stack[i];\n\t    if (value === (value | 0)) {\n\t     this.output.push(28, value >> 8 & 0xff, value & 0xff);\n\t    } else {\n\t     value = 65536 * value | 0;\n\t     this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n\t    }\n\t   }\n\t   this.output.push.apply(this.output, command);\n\t   if (keepStack) {\n\t    this.stack.splice(start, howManyArgs);\n\t   } else {\n\t    this.stack.length = 0;\n\t   }\n\t   return false;\n\t  }\n\t };\n\t return Type1CharString;\n\t}();\n\tvar Type1Parser = function Type1ParserClosure() {\n\t var EEXEC_ENCRYPT_KEY = 55665;\n\t var CHAR_STRS_ENCRYPT_KEY = 4330;\n\t function isHexDigit(code) {\n\t  return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n\t }\n\t function decrypt(data, key, discardNumber) {\n\t  if (discardNumber >= data.length) {\n\t   return new Uint8Array(0);\n\t  }\n\t  var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n\t  for (i = 0; i < discardNumber; i++) {\n\t   r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n\t  }\n\t  var count = data.length - discardNumber;\n\t  var decrypted = new Uint8Array(count);\n\t  for (i = discardNumber, j = 0; j < count; i++, j++) {\n\t   var value = data[i];\n\t   decrypted[j] = value ^ r >> 8;\n\t   r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t  }\n\t  return decrypted;\n\t }\n\t function decryptAscii(data, key, discardNumber) {\n\t  var r = key | 0, c1 = 52845, c2 = 22719;\n\t  var count = data.length, maybeLength = count >>> 1;\n\t  var decrypted = new Uint8Array(maybeLength);\n\t  var i, j;\n\t  for (i = 0, j = 0; i < count; i++) {\n\t   var digit1 = data[i];\n\t   if (!isHexDigit(digit1)) {\n\t    continue;\n\t   }\n\t   i++;\n\t   var digit2;\n\t   while (i < count && !isHexDigit(digit2 = data[i])) {\n\t    i++;\n\t   }\n\t   if (i < count) {\n\t    var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n\t    decrypted[j++] = value ^ r >> 8;\n\t    r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t   }\n\t  }\n\t  return Array.prototype.slice.call(decrypted, discardNumber, j);\n\t }\n\t function isSpecial(c) {\n\t  return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n\t }\n\t function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n\t  if (encrypted) {\n\t   var data = stream.getBytes();\n\t   var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n\t   stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n\t  }\n\t  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t  this.stream = stream;\n\t  this.nextChar();\n\t }\n\t Type1Parser.prototype = {\n\t  readNumberArray: function Type1Parser_readNumberArray() {\n\t   this.getToken();\n\t   var array = [];\n\t   while (true) {\n\t    var token = this.getToken();\n\t    if (token === null || token === ']' || token === '}') {\n\t     break;\n\t    }\n\t    array.push(parseFloat(token || 0));\n\t   }\n\t   return array;\n\t  },\n\t  readNumber: function Type1Parser_readNumber() {\n\t   var token = this.getToken();\n\t   return parseFloat(token || 0);\n\t  },\n\t  readInt: function Type1Parser_readInt() {\n\t   var token = this.getToken();\n\t   return parseInt(token || 0, 10) | 0;\n\t  },\n\t  readBoolean: function Type1Parser_readBoolean() {\n\t   var token = this.getToken();\n\t   return token === 'true' ? 1 : 0;\n\t  },\n\t  nextChar: function Type1_nextChar() {\n\t   return this.currentChar = this.stream.getByte();\n\t  },\n\t  getToken: function Type1Parser_getToken() {\n\t   var comment = false;\n\t   var ch = this.currentChar;\n\t   while (true) {\n\t    if (ch === -1) {\n\t     return null;\n\t    }\n\t    if (comment) {\n\t     if (ch === 0x0A || ch === 0x0D) {\n\t      comment = false;\n\t     }\n\t    } else if (ch === 0x25) {\n\t     comment = true;\n\t    } else if (!isSpace(ch)) {\n\t     break;\n\t    }\n\t    ch = this.nextChar();\n\t   }\n\t   if (isSpecial(ch)) {\n\t    this.nextChar();\n\t    return String.fromCharCode(ch);\n\t   }\n\t   var token = '';\n\t   do {\n\t    token += String.fromCharCode(ch);\n\t    ch = this.nextChar();\n\t   } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n\t   return token;\n\t  },\n\t  extractFontProgram: function Type1Parser_extractFontProgram() {\n\t   var stream = this.stream;\n\t   var subrs = [], charstrings = [];\n\t   var privateData = Object.create(null);\n\t   privateData['lenIV'] = 4;\n\t   var program = {\n\t    subrs: [],\n\t    charstrings: [],\n\t    properties: { 'privateData': privateData }\n\t   };\n\t   var token, length, data, lenIV, encoded;\n\t   while ((token = this.getToken()) !== null) {\n\t    if (token !== '/') {\n\t     continue;\n\t    }\n\t    token = this.getToken();\n\t    switch (token) {\n\t    case 'CharStrings':\n\t     this.getToken();\n\t     this.getToken();\n\t     this.getToken();\n\t     this.getToken();\n\t     while (true) {\n\t      token = this.getToken();\n\t      if (token === null || token === 'end') {\n\t       break;\n\t      }\n\t      if (token !== '/') {\n\t       continue;\n\t      }\n\t      var glyph = this.getToken();\n\t      length = this.readInt();\n\t      this.getToken();\n\t      data = stream.makeSubStream(stream.pos, length);\n\t      lenIV = program.properties.privateData['lenIV'];\n\t      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t      stream.skip(length);\n\t      this.nextChar();\n\t      token = this.getToken();\n\t      if (token === 'noaccess') {\n\t       this.getToken();\n\t      }\n\t      charstrings.push({\n\t       glyph: glyph,\n\t       encoded: encoded\n\t      });\n\t     }\n\t     break;\n\t    case 'Subrs':\n\t     this.readInt();\n\t     this.getToken();\n\t     while ((token = this.getToken()) === 'dup') {\n\t      var index = this.readInt();\n\t      length = this.readInt();\n\t      this.getToken();\n\t      data = stream.makeSubStream(stream.pos, length);\n\t      lenIV = program.properties.privateData['lenIV'];\n\t      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t      stream.skip(length);\n\t      this.nextChar();\n\t      token = this.getToken();\n\t      if (token === 'noaccess') {\n\t       this.getToken();\n\t      }\n\t      subrs[index] = encoded;\n\t     }\n\t     break;\n\t    case 'BlueValues':\n\t    case 'OtherBlues':\n\t    case 'FamilyBlues':\n\t    case 'FamilyOtherBlues':\n\t     var blueArray = this.readNumberArray();\n\t     if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n\t      program.properties.privateData[token] = blueArray;\n\t     }\n\t     break;\n\t    case 'StemSnapH':\n\t    case 'StemSnapV':\n\t     program.properties.privateData[token] = this.readNumberArray();\n\t     break;\n\t    case 'StdHW':\n\t    case 'StdVW':\n\t     program.properties.privateData[token] = this.readNumberArray()[0];\n\t     break;\n\t    case 'BlueShift':\n\t    case 'lenIV':\n\t    case 'BlueFuzz':\n\t    case 'BlueScale':\n\t    case 'LanguageGroup':\n\t    case 'ExpansionFactor':\n\t     program.properties.privateData[token] = this.readNumber();\n\t     break;\n\t    case 'ForceBold':\n\t     program.properties.privateData[token] = this.readBoolean();\n\t     break;\n\t    }\n\t   }\n\t   for (var i = 0; i < charstrings.length; i++) {\n\t    glyph = charstrings[i].glyph;\n\t    encoded = charstrings[i].encoded;\n\t    var charString = new Type1CharString();\n\t    var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n\t    var output = charString.output;\n\t    if (error) {\n\t     output = [14];\n\t    }\n\t    program.charstrings.push({\n\t     glyphName: glyph,\n\t     charstring: output,\n\t     width: charString.width,\n\t     lsb: charString.lsb,\n\t     seac: charString.seac\n\t    });\n\t   }\n\t   return program;\n\t  },\n\t  extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n\t   var token;\n\t   while ((token = this.getToken()) !== null) {\n\t    if (token !== '/') {\n\t     continue;\n\t    }\n\t    token = this.getToken();\n\t    switch (token) {\n\t    case 'FontMatrix':\n\t     var matrix = this.readNumberArray();\n\t     properties.fontMatrix = matrix;\n\t     break;\n\t    case 'Encoding':\n\t     var encodingArg = this.getToken();\n\t     var encoding;\n\t     if (!/^\\d+$/.test(encodingArg)) {\n\t      encoding = getEncoding(encodingArg);\n\t     } else {\n\t      encoding = [];\n\t      var size = parseInt(encodingArg, 10) | 0;\n\t      this.getToken();\n\t      for (var j = 0; j < size; j++) {\n\t       token = this.getToken();\n\t       while (token !== 'dup' && token !== 'def') {\n\t        token = this.getToken();\n\t        if (token === null) {\n\t         return;\n\t        }\n\t       }\n\t       if (token === 'def') {\n\t        break;\n\t       }\n\t       var index = this.readInt();\n\t       this.getToken();\n\t       var glyph = this.getToken();\n\t       encoding[index] = glyph;\n\t       this.getToken();\n\t      }\n\t     }\n\t     properties.builtInEncoding = encoding;\n\t     break;\n\t    case 'FontBBox':\n\t     var fontBBox = this.readNumberArray();\n\t     properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t     properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t     properties.ascentScaled = true;\n\t     break;\n\t    }\n\t   }\n\t  }\n\t };\n\t return Type1Parser;\n\t}();\n\texports.Type1Parser = Type1Parser;\n\t\n\t/***/ }),\n\t/* 36 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\tvar pdfjsVersion = '1.7.312';\n\tvar pdfjsBuild = 'cada411a';\n\tvar pdfjsCoreWorker = __w_pdfjs_require__(8);\n\t{\n\t __w_pdfjs_require__(18);\n\t}\n\texports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../process/browser.js */ 78)))\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.0.bundle.js","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__w_pdfjs_require__.i = function(value) { return value; };\n\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 36);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\nvar FONT_IDENTITY_MATRIX = [\n 0.001,\n 0,\n 0,\n 0.001,\n 0,\n 0\n];\nvar TextRenderingMode = {\n FILL: 0,\n STROKE: 1,\n FILL_STROKE: 2,\n INVISIBLE: 3,\n FILL_ADD_TO_PATH: 4,\n STROKE_ADD_TO_PATH: 5,\n FILL_STROKE_ADD_TO_PATH: 6,\n ADD_TO_PATH: 7,\n FILL_STROKE_MASK: 3,\n ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n GRAYSCALE_1BPP: 1,\n RGB_24BPP: 2,\n RGBA_32BPP: 3\n};\nvar AnnotationType = {\n TEXT: 1,\n LINK: 2,\n FREETEXT: 3,\n LINE: 4,\n SQUARE: 5,\n CIRCLE: 6,\n POLYGON: 7,\n POLYLINE: 8,\n HIGHLIGHT: 9,\n UNDERLINE: 10,\n SQUIGGLY: 11,\n STRIKEOUT: 12,\n STAMP: 13,\n CARET: 14,\n INK: 15,\n POPUP: 16,\n FILEATTACHMENT: 17,\n SOUND: 18,\n MOVIE: 19,\n WIDGET: 20,\n SCREEN: 21,\n PRINTERMARK: 22,\n TRAPNET: 23,\n WATERMARK: 24,\n THREED: 25,\n REDACT: 26\n};\nvar AnnotationFlag = {\n INVISIBLE: 0x01,\n HIDDEN: 0x02,\n PRINT: 0x04,\n NOZOOM: 0x08,\n NOROTATE: 0x10,\n NOVIEW: 0x20,\n READONLY: 0x40,\n LOCKED: 0x80,\n TOGGLENOVIEW: 0x100,\n LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n READONLY: 0x0000001,\n REQUIRED: 0x0000002,\n NOEXPORT: 0x0000004,\n MULTILINE: 0x0001000,\n PASSWORD: 0x0002000,\n NOTOGGLETOOFF: 0x0004000,\n RADIO: 0x0008000,\n PUSHBUTTON: 0x0010000,\n COMBO: 0x0020000,\n EDIT: 0x0040000,\n SORT: 0x0080000,\n FILESELECT: 0x0100000,\n MULTISELECT: 0x0200000,\n DONOTSPELLCHECK: 0x0400000,\n DONOTSCROLL: 0x0800000,\n COMB: 0x1000000,\n RICHTEXT: 0x2000000,\n RADIOSINUNISON: 0x2000000,\n COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n SOLID: 1,\n DASHED: 2,\n BEVELED: 3,\n INSET: 4,\n UNDERLINE: 5\n};\nvar StreamType = {\n UNKNOWN: 0,\n FLATE: 1,\n LZW: 2,\n DCT: 3,\n JPX: 4,\n JBIG: 5,\n A85: 6,\n AHX: 7,\n CCF: 8,\n RL: 9\n};\nvar FontType = {\n UNKNOWN: 0,\n TYPE1: 1,\n TYPE1C: 2,\n CIDFONTTYPE0: 3,\n CIDFONTTYPE0C: 4,\n TRUETYPE: 5,\n CIDFONTTYPE2: 6,\n TYPE3: 7,\n OPENTYPE: 8,\n TYPE0: 9,\n MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n errors: 0,\n warnings: 1,\n infos: 5\n};\nvar CMapCompressionType = {\n NONE: 0,\n BINARY: 1,\n STREAM: 2\n};\nvar OPS = {\n dependency: 1,\n setLineWidth: 2,\n setLineCap: 3,\n setLineJoin: 4,\n setMiterLimit: 5,\n setDash: 6,\n setRenderingIntent: 7,\n setFlatness: 8,\n setGState: 9,\n save: 10,\n restore: 11,\n transform: 12,\n moveTo: 13,\n lineTo: 14,\n curveTo: 15,\n curveTo2: 16,\n curveTo3: 17,\n closePath: 18,\n rectangle: 19,\n stroke: 20,\n closeStroke: 21,\n fill: 22,\n eoFill: 23,\n fillStroke: 24,\n eoFillStroke: 25,\n closeFillStroke: 26,\n closeEOFillStroke: 27,\n endPath: 28,\n clip: 29,\n eoClip: 30,\n beginText: 31,\n endText: 32,\n setCharSpacing: 33,\n setWordSpacing: 34,\n setHScale: 35,\n setLeading: 36,\n setFont: 37,\n setTextRenderingMode: 38,\n setTextRise: 39,\n moveText: 40,\n setLeadingMoveText: 41,\n setTextMatrix: 42,\n nextLine: 43,\n showText: 44,\n showSpacedText: 45,\n nextLineShowText: 46,\n nextLineSetSpacingShowText: 47,\n setCharWidth: 48,\n setCharWidthAndBounds: 49,\n setStrokeColorSpace: 50,\n setFillColorSpace: 51,\n setStrokeColor: 52,\n setStrokeColorN: 53,\n setFillColor: 54,\n setFillColorN: 55,\n setStrokeGray: 56,\n setFillGray: 57,\n setStrokeRGBColor: 58,\n setFillRGBColor: 59,\n setStrokeCMYKColor: 60,\n setFillCMYKColor: 61,\n shadingFill: 62,\n beginInlineImage: 63,\n beginImageData: 64,\n endInlineImage: 65,\n paintXObject: 66,\n markPoint: 67,\n markPointProps: 68,\n beginMarkedContent: 69,\n beginMarkedContentProps: 70,\n endMarkedContent: 71,\n beginCompat: 72,\n endCompat: 73,\n paintFormXObjectBegin: 74,\n paintFormXObjectEnd: 75,\n beginGroup: 76,\n endGroup: 77,\n beginAnnotations: 78,\n endAnnotations: 79,\n beginAnnotation: 80,\n endAnnotation: 81,\n paintJpegXObject: 82,\n paintImageMaskXObject: 83,\n paintImageMaskXObjectGroup: 84,\n paintImageXObject: 85,\n paintInlineImageXObject: 86,\n paintInlineImageXObjectGroup: 87,\n paintImageXObjectRepeat: 88,\n paintImageMaskXObjectRepeat: 89,\n paintSolidColorImageMask: 90,\n constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n verbosity = level;\n}\nfunction getVerbosityLevel() {\n return verbosity;\n}\nfunction info(msg) {\n if (verbosity >= VERBOSITY_LEVELS.infos) {\n  console.log('Info: ' + msg);\n }\n}\nfunction warn(msg) {\n if (verbosity >= VERBOSITY_LEVELS.warnings) {\n  console.log('Warning: ' + msg);\n }\n}\nfunction deprecated(details) {\n console.log('Deprecated API usage: ' + details);\n}\nfunction error(msg) {\n if (verbosity >= VERBOSITY_LEVELS.errors) {\n  console.log('Error: ' + msg);\n  console.log(backtrace());\n }\n throw new Error(msg);\n}\nfunction backtrace() {\n try {\n  throw new Error();\n } catch (e) {\n  return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n }\n}\nfunction assert(cond, msg) {\n if (!cond) {\n  error(msg);\n }\n}\nvar UNSUPPORTED_FEATURES = {\n unknown: 'unknown',\n forms: 'forms',\n javaScript: 'javaScript',\n smask: 'smask',\n shadingPattern: 'shadingPattern',\n font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n try {\n  var base = new URL(baseUrl);\n  if (!base.origin || base.origin === 'null') {\n   return false;\n  }\n } catch (e) {\n  return false;\n }\n var other = new URL(otherUrl, base);\n return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n if (!url) {\n  return false;\n }\n switch (url.protocol) {\n case 'http:':\n case 'https:':\n case 'ftp:':\n case 'mailto:':\n case 'tel:':\n  return true;\n default:\n  return false;\n }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n if (!url) {\n  return null;\n }\n try {\n  var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n  if (isValidProtocol(absoluteUrl)) {\n   return absoluteUrl;\n  }\n } catch (ex) {\n }\n return null;\n}\nfunction shadow(obj, prop, value) {\n Object.defineProperty(obj, prop, {\n  value: value,\n  enumerable: true,\n  configurable: true,\n  writable: false\n });\n return value;\n}\nfunction getLookupTableFactory(initializer) {\n var lookup;\n return function () {\n  if (initializer) {\n   lookup = Object.create(null);\n   initializer(lookup);\n   initializer = null;\n  }\n  return lookup;\n };\n}\nvar PasswordResponses = {\n NEED_PASSWORD: 1,\n INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n function PasswordException(msg, code) {\n  this.name = 'PasswordException';\n  this.message = msg;\n  this.code = code;\n }\n PasswordException.prototype = new Error();\n PasswordException.constructor = PasswordException;\n return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n function UnknownErrorException(msg, details) {\n  this.name = 'UnknownErrorException';\n  this.message = msg;\n  this.details = details;\n }\n UnknownErrorException.prototype = new Error();\n UnknownErrorException.constructor = UnknownErrorException;\n return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n function InvalidPDFException(msg) {\n  this.name = 'InvalidPDFException';\n  this.message = msg;\n }\n InvalidPDFException.prototype = new Error();\n InvalidPDFException.constructor = InvalidPDFException;\n return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n function MissingPDFException(msg) {\n  this.name = 'MissingPDFException';\n  this.message = msg;\n }\n MissingPDFException.prototype = new Error();\n MissingPDFException.constructor = MissingPDFException;\n return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n function UnexpectedResponseException(msg, status) {\n  this.name = 'UnexpectedResponseException';\n  this.message = msg;\n  this.status = status;\n }\n UnexpectedResponseException.prototype = new Error();\n UnexpectedResponseException.constructor = UnexpectedResponseException;\n return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n function NotImplementedException(msg) {\n  this.message = msg;\n }\n NotImplementedException.prototype = new Error();\n NotImplementedException.prototype.name = 'NotImplementedException';\n NotImplementedException.constructor = NotImplementedException;\n return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n function MissingDataException(begin, end) {\n  this.begin = begin;\n  this.end = end;\n  this.message = 'Missing data [' + begin + ', ' + end + ')';\n }\n MissingDataException.prototype = new Error();\n MissingDataException.prototype.name = 'MissingDataException';\n MissingDataException.constructor = MissingDataException;\n return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n function XRefParseException(msg) {\n  this.message = msg;\n }\n XRefParseException.prototype = new Error();\n XRefParseException.prototype.name = 'XRefParseException';\n XRefParseException.constructor = XRefParseException;\n return XRefParseException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n if (typeof str !== 'string') {\n  warn('The argument for removeNullCharacters must be a string.');\n  return str;\n }\n return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n var length = bytes.length;\n var MAX_ARGUMENT_COUNT = 8192;\n if (length < MAX_ARGUMENT_COUNT) {\n  return String.fromCharCode.apply(null, bytes);\n }\n var strBuf = [];\n for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n  var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n  var chunk = bytes.subarray(i, chunkEnd);\n  strBuf.push(String.fromCharCode.apply(null, chunk));\n }\n return strBuf.join('');\n}\nfunction stringToBytes(str) {\n assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n var length = str.length;\n var bytes = new Uint8Array(length);\n for (var i = 0; i < length; ++i) {\n  bytes[i] = str.charCodeAt(i) & 0xFF;\n }\n return bytes;\n}\nfunction arrayByteLength(arr) {\n if (arr.length !== undefined) {\n  return arr.length;\n }\n assert(arr.byteLength !== undefined);\n return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n  return arr[0];\n }\n var resultLength = 0;\n var i, ii = arr.length;\n var item, itemLength;\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  itemLength = arrayByteLength(item);\n  resultLength += itemLength;\n }\n var pos = 0;\n var data = new Uint8Array(resultLength);\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  if (!(item instanceof Uint8Array)) {\n   if (typeof item === 'string') {\n    item = stringToBytes(item);\n   } else {\n    item = new Uint8Array(item);\n   }\n  }\n  itemLength = item.byteLength;\n  data.set(item, pos);\n  pos += itemLength;\n }\n return data;\n}\nfunction string32(value) {\n return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n var n = 1, i = 0;\n while (x > n) {\n  n <<= 1;\n  i++;\n }\n return i;\n}\nfunction readInt8(data, start) {\n return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n var buffer8 = new Uint8Array(2);\n buffer8[0] = 1;\n var buffer16 = new Uint16Array(buffer8.buffer);\n return buffer16[0] === 1;\n}\nfunction isEvalSupported() {\n try {\n  new Function('');\n  return true;\n } catch (e) {\n  return false;\n }\n}\nvar Uint32ArrayView = function Uint32ArrayViewClosure() {\n function Uint32ArrayView(buffer, length) {\n  this.buffer = buffer;\n  this.byteLength = buffer.length;\n  this.length = length === undefined ? this.byteLength >> 2 : length;\n  ensureUint32ArrayViewProps(this.length);\n }\n Uint32ArrayView.prototype = Object.create(null);\n var uint32ArrayViewSetters = 0;\n function createUint32ArrayProp(index) {\n  return {\n   get: function () {\n    var buffer = this.buffer, offset = index << 2;\n    return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n   },\n   set: function (value) {\n    var buffer = this.buffer, offset = index << 2;\n    buffer[offset] = value & 255;\n    buffer[offset + 1] = value >> 8 & 255;\n    buffer[offset + 2] = value >> 16 & 255;\n    buffer[offset + 3] = value >>> 24 & 255;\n   }\n  };\n }\n function ensureUint32ArrayViewProps(length) {\n  while (uint32ArrayViewSetters < length) {\n   Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n   uint32ArrayViewSetters++;\n  }\n }\n return Uint32ArrayView;\n}();\nexports.Uint32ArrayView = Uint32ArrayView;\nvar IDENTITY_MATRIX = [\n 1,\n 0,\n 0,\n 1,\n 0,\n 0\n];\nvar Util = function UtilClosure() {\n function Util() {\n }\n var rgbBuf = [\n  'rgb(',\n  0,\n  ',',\n  0,\n  ',',\n  0,\n  ')'\n ];\n Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n  rgbBuf[1] = r;\n  rgbBuf[3] = g;\n  rgbBuf[5] = b;\n  return rgbBuf.join('');\n };\n Util.transform = function Util_transform(m1, m2) {\n  return [\n   m1[0] * m2[0] + m1[2] * m2[1],\n   m1[1] * m2[0] + m1[3] * m2[1],\n   m1[0] * m2[2] + m1[2] * m2[3],\n   m1[1] * m2[2] + m1[3] * m2[3],\n   m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n   m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n };\n Util.applyTransform = function Util_applyTransform(p, m) {\n  var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n  var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n  return [\n   xt,\n   yt\n  ];\n };\n Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n  var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n  return [\n   xt,\n   yt\n  ];\n };\n Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n  var p1 = Util.applyTransform(r, m);\n  var p2 = Util.applyTransform(r.slice(2, 4), m);\n  var p3 = Util.applyTransform([\n   r[0],\n   r[3]\n  ], m);\n  var p4 = Util.applyTransform([\n   r[2],\n   r[1]\n  ], m);\n  return [\n   Math.min(p1[0], p2[0], p3[0], p4[0]),\n   Math.min(p1[1], p2[1], p3[1], p4[1]),\n   Math.max(p1[0], p2[0], p3[0], p4[0]),\n   Math.max(p1[1], p2[1], p3[1], p4[1])\n  ];\n };\n Util.inverseTransform = function Util_inverseTransform(m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  return [\n   m[3] / d,\n   -m[1] / d,\n   -m[2] / d,\n   m[0] / d,\n   (m[2] * m[5] - m[4] * m[3]) / d,\n   (m[4] * m[1] - m[5] * m[0]) / d\n  ];\n };\n Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n  return [\n   m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n   m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n   m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n  ];\n };\n Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n  var transpose = [\n   m[0],\n   m[2],\n   m[1],\n   m[3]\n  ];\n  var a = m[0] * transpose[0] + m[1] * transpose[2];\n  var b = m[0] * transpose[1] + m[1] * transpose[3];\n  var c = m[2] * transpose[0] + m[3] * transpose[2];\n  var d = m[2] * transpose[1] + m[3] * transpose[3];\n  var first = (a + d) / 2;\n  var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n  var sx = first + second || 1;\n  var sy = first - second || 1;\n  return [\n   Math.sqrt(sx),\n   Math.sqrt(sy)\n  ];\n };\n Util.normalizeRect = function Util_normalizeRect(rect) {\n  var r = rect.slice(0);\n  if (rect[0] > rect[2]) {\n   r[0] = rect[2];\n   r[2] = rect[0];\n  }\n  if (rect[1] > rect[3]) {\n   r[1] = rect[3];\n   r[3] = rect[1];\n  }\n  return r;\n };\n Util.intersect = function Util_intersect(rect1, rect2) {\n  function compare(a, b) {\n   return a - b;\n  }\n  var orderedX = [\n    rect1[0],\n    rect1[2],\n    rect2[0],\n    rect2[2]\n   ].sort(compare), orderedY = [\n    rect1[1],\n    rect1[3],\n    rect2[1],\n    rect2[3]\n   ].sort(compare), result = [];\n  rect1 = Util.normalizeRect(rect1);\n  rect2 = Util.normalizeRect(rect2);\n  if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n   result[0] = orderedX[1];\n   result[2] = orderedX[2];\n  } else {\n   return false;\n  }\n  if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n   result[1] = orderedY[1];\n   result[3] = orderedY[2];\n  } else {\n   return false;\n  }\n  return result;\n };\n Util.sign = function Util_sign(num) {\n  return num < 0 ? -1 : 1;\n };\n var ROMAN_NUMBER_MAP = [\n  '',\n  'C',\n  'CC',\n  'CCC',\n  'CD',\n  'D',\n  'DC',\n  'DCC',\n  'DCCC',\n  'CM',\n  '',\n  'X',\n  'XX',\n  'XXX',\n  'XL',\n  'L',\n  'LX',\n  'LXX',\n  'LXXX',\n  'XC',\n  '',\n  'I',\n  'II',\n  'III',\n  'IV',\n  'V',\n  'VI',\n  'VII',\n  'VIII',\n  'IX'\n ];\n Util.toRoman = function Util_toRoman(number, lowerCase) {\n  assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n  var pos, romanBuf = [];\n  while (number >= 1000) {\n   number -= 1000;\n   romanBuf.push('M');\n  }\n  pos = number / 100 | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  pos = number / 10 | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n  var romanStr = romanBuf.join('');\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n };\n Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n  Array.prototype.push.apply(arr1, arr2);\n };\n Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n  Array.prototype.unshift.apply(arr1, arr2);\n };\n Util.extendObj = function extendObj(obj1, obj2) {\n  for (var key in obj2) {\n   obj1[key] = obj2[key];\n  }\n };\n Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n  while (dict && !dict.has(name)) {\n   dict = dict.get('Parent');\n  }\n  if (!dict) {\n   return null;\n  }\n  return getArray ? dict.getArray(name) : dict.get(name);\n };\n Util.inherit = function Util_inherit(sub, base, prototype) {\n  sub.prototype = Object.create(base.prototype);\n  sub.prototype.constructor = sub;\n  for (var prop in prototype) {\n   sub.prototype[prop] = prototype[prop];\n  }\n };\n Util.loadScript = function Util_loadScript(src, callback) {\n  var script = document.createElement('script');\n  var loaded = false;\n  script.setAttribute('src', src);\n  if (callback) {\n   script.onload = function () {\n    if (!loaded) {\n     callback();\n    }\n    loaded = true;\n   };\n  }\n  document.getElementsByTagName('head')[0].appendChild(script);\n };\n return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n  this.viewBox = viewBox;\n  this.scale = scale;\n  this.rotation = rotation;\n  this.offsetX = offsetX;\n  this.offsetY = offsetY;\n  var centerX = (viewBox[2] + viewBox[0]) / 2;\n  var centerY = (viewBox[3] + viewBox[1]) / 2;\n  var rotateA, rotateB, rotateC, rotateD;\n  rotation = rotation % 360;\n  rotation = rotation < 0 ? rotation + 360 : rotation;\n  switch (rotation) {\n  case 180:\n   rotateA = -1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = 1;\n   break;\n  case 90:\n   rotateA = 0;\n   rotateB = 1;\n   rotateC = 1;\n   rotateD = 0;\n   break;\n  case 270:\n   rotateA = 0;\n   rotateB = -1;\n   rotateC = -1;\n   rotateD = 0;\n   break;\n  default:\n   rotateA = 1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = -1;\n   break;\n  }\n  if (dontFlip) {\n   rotateC = -rotateC;\n   rotateD = -rotateD;\n  }\n  var offsetCanvasX, offsetCanvasY;\n  var width, height;\n  if (rotateA === 0) {\n   offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n   width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n   height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n  } else {\n   offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n   width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n   height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n  }\n  this.transform = [\n   rotateA * scale,\n   rotateB * scale,\n   rotateC * scale,\n   rotateD * scale,\n   offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n   offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n  ];\n  this.width = width;\n  this.height = height;\n  this.fontScale = scale;\n }\n PageViewport.prototype = {\n  clone: function PageViewPort_clone(args) {\n   args = args || {};\n   var scale = 'scale' in args ? args.scale : this.scale;\n   var rotation = 'rotation' in args ? args.rotation : this.rotation;\n   return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n  },\n  convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n   return Util.applyTransform([\n    x,\n    y\n   ], this.transform);\n  },\n  convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n   var tl = Util.applyTransform([\n    rect[0],\n    rect[1]\n   ], this.transform);\n   var br = Util.applyTransform([\n    rect[2],\n    rect[3]\n   ], this.transform);\n   return [\n    tl[0],\n    tl[1],\n    br[0],\n    br[1]\n   ];\n  },\n  convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n   return Util.applyInverseTransform([\n    x,\n    y\n   ], this.transform);\n  }\n };\n return PageViewport;\n}();\nvar PDFStringTranslateTable = [\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2D8,\n 0x2C7,\n 0x2C6,\n 0x2D9,\n 0x2DD,\n 0x2DB,\n 0x2DA,\n 0x2DC,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2022,\n 0x2020,\n 0x2021,\n 0x2026,\n 0x2014,\n 0x2013,\n 0x192,\n 0x2044,\n 0x2039,\n 0x203A,\n 0x2212,\n 0x2030,\n 0x201E,\n 0x201C,\n 0x201D,\n 0x2018,\n 0x2019,\n 0x201A,\n 0x2122,\n 0xFB01,\n 0xFB02,\n 0x141,\n 0x152,\n 0x160,\n 0x178,\n 0x17D,\n 0x131,\n 0x142,\n 0x153,\n 0x161,\n 0x17E,\n 0,\n 0x20AC\n];\nfunction stringToPDFString(str) {\n var i, n = str.length, strBuf = [];\n if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n  for (i = 2; i < n; i += 2) {\n   strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n  }\n } else {\n  for (i = 0; i < n; ++i) {\n   var code = PDFStringTranslateTable[str.charCodeAt(i)];\n   strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n }\n return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n for (var key in obj) {\n  return false;\n }\n return true;\n}\nfunction isBool(v) {\n return typeof v === 'boolean';\n}\nfunction isInt(v) {\n return typeof v === 'number' && (v | 0) === v;\n}\nfunction isNum(v) {\n return typeof v === 'number';\n}\nfunction isString(v) {\n return typeof v === 'string';\n}\nfunction isArray(v) {\n return v instanceof Array;\n}\nfunction isArrayBuffer(v) {\n return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n if (typeof __pdfjsdev_webpack__ === 'undefined') {\n  return typeof process === 'object' && process + '' === '[object process]';\n }\n return false;\n}\nfunction createPromiseCapability() {\n var capability = {};\n capability.promise = new Promise(function (resolve, reject) {\n  capability.resolve = resolve;\n  capability.reject = reject;\n });\n return capability;\n}\n(function PromiseClosure() {\n if (globalScope.Promise) {\n  if (typeof globalScope.Promise.all !== 'function') {\n   globalScope.Promise.all = function (iterable) {\n    var count = 0, results = [], resolve, reject;\n    var promise = new globalScope.Promise(function (resolve_, reject_) {\n     resolve = resolve_;\n     reject = reject_;\n    });\n    iterable.forEach(function (p, i) {\n     count++;\n     p.then(function (result) {\n      results[i] = result;\n      count--;\n      if (count === 0) {\n       resolve(results);\n      }\n     }, reject);\n    });\n    if (count === 0) {\n     resolve(results);\n    }\n    return promise;\n   };\n  }\n  if (typeof globalScope.Promise.resolve !== 'function') {\n   globalScope.Promise.resolve = function (value) {\n    return new globalScope.Promise(function (resolve) {\n     resolve(value);\n    });\n   };\n  }\n  if (typeof globalScope.Promise.reject !== 'function') {\n   globalScope.Promise.reject = function (reason) {\n    return new globalScope.Promise(function (resolve, reject) {\n     reject(reason);\n    });\n   };\n  }\n  if (typeof globalScope.Promise.prototype.catch !== 'function') {\n   globalScope.Promise.prototype.catch = function (onReject) {\n    return globalScope.Promise.prototype.then(undefined, onReject);\n   };\n  }\n  return;\n }\n var STATUS_PENDING = 0;\n var STATUS_RESOLVED = 1;\n var STATUS_REJECTED = 2;\n var REJECTION_TIMEOUT = 500;\n var HandlerManager = {\n  handlers: [],\n  running: false,\n  unhandledRejections: [],\n  pendingRejectionCheck: false,\n  scheduleHandlers: function scheduleHandlers(promise) {\n   if (promise._status === STATUS_PENDING) {\n    return;\n   }\n   this.handlers = this.handlers.concat(promise._handlers);\n   promise._handlers = [];\n   if (this.running) {\n    return;\n   }\n   this.running = true;\n   setTimeout(this.runHandlers.bind(this), 0);\n  },\n  runHandlers: function runHandlers() {\n   var RUN_TIMEOUT = 1;\n   var timeoutAt = Date.now() + RUN_TIMEOUT;\n   while (this.handlers.length > 0) {\n    var handler = this.handlers.shift();\n    var nextStatus = handler.thisPromise._status;\n    var nextValue = handler.thisPromise._value;\n    try {\n     if (nextStatus === STATUS_RESOLVED) {\n      if (typeof handler.onResolve === 'function') {\n       nextValue = handler.onResolve(nextValue);\n      }\n     } else if (typeof handler.onReject === 'function') {\n      nextValue = handler.onReject(nextValue);\n      nextStatus = STATUS_RESOLVED;\n      if (handler.thisPromise._unhandledRejection) {\n       this.removeUnhandeledRejection(handler.thisPromise);\n      }\n     }\n    } catch (ex) {\n     nextStatus = STATUS_REJECTED;\n     nextValue = ex;\n    }\n    handler.nextPromise._updateStatus(nextStatus, nextValue);\n    if (Date.now() >= timeoutAt) {\n     break;\n    }\n   }\n   if (this.handlers.length > 0) {\n    setTimeout(this.runHandlers.bind(this), 0);\n    return;\n   }\n   this.running = false;\n  },\n  addUnhandledRejection: function addUnhandledRejection(promise) {\n   this.unhandledRejections.push({\n    promise: promise,\n    time: Date.now()\n   });\n   this.scheduleRejectionCheck();\n  },\n  removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n   promise._unhandledRejection = false;\n   for (var i = 0; i < this.unhandledRejections.length; i++) {\n    if (this.unhandledRejections[i].promise === promise) {\n     this.unhandledRejections.splice(i);\n     i--;\n    }\n   }\n  },\n  scheduleRejectionCheck: function scheduleRejectionCheck() {\n   if (this.pendingRejectionCheck) {\n    return;\n   }\n   this.pendingRejectionCheck = true;\n   setTimeout(function rejectionCheck() {\n    this.pendingRejectionCheck = false;\n    var now = Date.now();\n    for (var i = 0; i < this.unhandledRejections.length; i++) {\n     if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n      var unhandled = this.unhandledRejections[i].promise._value;\n      var msg = 'Unhandled rejection: ' + unhandled;\n      if (unhandled.stack) {\n       msg += '\\n' + unhandled.stack;\n      }\n      warn(msg);\n      this.unhandledRejections.splice(i);\n      i--;\n     }\n    }\n    if (this.unhandledRejections.length) {\n     this.scheduleRejectionCheck();\n    }\n   }.bind(this), REJECTION_TIMEOUT);\n  }\n };\n var Promise = function Promise(resolver) {\n  this._status = STATUS_PENDING;\n  this._handlers = [];\n  try {\n   resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n  } catch (e) {\n   this._reject(e);\n  }\n };\n Promise.all = function Promise_all(promises) {\n  var resolveAll, rejectAll;\n  var deferred = new Promise(function (resolve, reject) {\n   resolveAll = resolve;\n   rejectAll = reject;\n  });\n  var unresolved = promises.length;\n  var results = [];\n  if (unresolved === 0) {\n   resolveAll(results);\n   return deferred;\n  }\n  function reject(reason) {\n   if (deferred._status === STATUS_REJECTED) {\n    return;\n   }\n   results = [];\n   rejectAll(reason);\n  }\n  for (var i = 0, ii = promises.length; i < ii; ++i) {\n   var promise = promises[i];\n   var resolve = function (i) {\n    return function (value) {\n     if (deferred._status === STATUS_REJECTED) {\n      return;\n     }\n     results[i] = value;\n     unresolved--;\n     if (unresolved === 0) {\n      resolveAll(results);\n     }\n    };\n   }(i);\n   if (Promise.isPromise(promise)) {\n    promise.then(resolve, reject);\n   } else {\n    resolve(promise);\n   }\n  }\n  return deferred;\n };\n Promise.isPromise = function Promise_isPromise(value) {\n  return value && typeof value.then === 'function';\n };\n Promise.resolve = function Promise_resolve(value) {\n  return new Promise(function (resolve) {\n   resolve(value);\n  });\n };\n Promise.reject = function Promise_reject(reason) {\n  return new Promise(function (resolve, reject) {\n   reject(reason);\n  });\n };\n Promise.prototype = {\n  _status: null,\n  _value: null,\n  _handlers: null,\n  _unhandledRejection: null,\n  _updateStatus: function Promise__updateStatus(status, value) {\n   if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n    return;\n   }\n   if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n    value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n    return;\n   }\n   this._status = status;\n   this._value = value;\n   if (status === STATUS_REJECTED && this._handlers.length === 0) {\n    this._unhandledRejection = true;\n    HandlerManager.addUnhandledRejection(this);\n   }\n   HandlerManager.scheduleHandlers(this);\n  },\n  _resolve: function Promise_resolve(value) {\n   this._updateStatus(STATUS_RESOLVED, value);\n  },\n  _reject: function Promise_reject(reason) {\n   this._updateStatus(STATUS_REJECTED, reason);\n  },\n  then: function Promise_then(onResolve, onReject) {\n   var nextPromise = new Promise(function (resolve, reject) {\n    this.resolve = resolve;\n    this.reject = reject;\n   });\n   this._handlers.push({\n    thisPromise: this,\n    onResolve: onResolve,\n    onReject: onReject,\n    nextPromise: nextPromise\n   });\n   HandlerManager.scheduleHandlers(this);\n   return nextPromise;\n  },\n  catch: function Promise_catch(onReject) {\n   return this.then(undefined, onReject);\n  }\n };\n globalScope.Promise = Promise;\n}());\n(function WeakMapClosure() {\n if (globalScope.WeakMap) {\n  return;\n }\n var id = 0;\n function WeakMap() {\n  this.id = '$weakmap' + id++;\n }\n WeakMap.prototype = {\n  has: function (obj) {\n   return !!Object.getOwnPropertyDescriptor(obj, this.id);\n  },\n  get: function (obj, defaultValue) {\n   return this.has(obj) ? obj[this.id] : defaultValue;\n  },\n  set: function (obj, value) {\n   Object.defineProperty(obj, this.id, {\n    value: value,\n    enumerable: false,\n    configurable: true\n   });\n  },\n  delete: function (obj) {\n   delete obj[this.id];\n  }\n };\n globalScope.WeakMap = WeakMap;\n}());\nvar StatTimer = function StatTimerClosure() {\n function rpad(str, pad, length) {\n  while (str.length < length) {\n   str += pad;\n  }\n  return str;\n }\n function StatTimer() {\n  this.started = Object.create(null);\n  this.times = [];\n  this.enabled = true;\n }\n StatTimer.prototype = {\n  time: function StatTimer_time(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (name in this.started) {\n    warn('Timer is already running for ' + name);\n   }\n   this.started[name] = Date.now();\n  },\n  timeEnd: function StatTimer_timeEnd(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (!(name in this.started)) {\n    warn('Timer has not been started for ' + name);\n   }\n   this.times.push({\n    'name': name,\n    'start': this.started[name],\n    'end': Date.now()\n   });\n   delete this.started[name];\n  },\n  toString: function StatTimer_toString() {\n   var i, ii;\n   var times = this.times;\n   var out = '';\n   var longest = 0;\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var name = times[i]['name'];\n    if (name.length > longest) {\n     longest = name.length;\n    }\n   }\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var span = times[i];\n    var duration = span.end - span.start;\n    out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n   }\n   return out;\n  }\n };\n return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n if (typeof Blob !== 'undefined') {\n  return new Blob([data], { type: contentType });\n }\n warn('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n return function createObjectURL(data, contentType, forceDataSchema) {\n  if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n   var blob = createBlob(data, contentType);\n   return URL.createObjectURL(blob);\n  }\n  var buffer = 'data:' + contentType + ';base64,';\n  for (var i = 0, ii = data.length; i < ii; i += 3) {\n   var b1 = data[i] & 0xFF;\n   var b2 = data[i + 1] & 0xFF;\n   var b3 = data[i + 2] & 0xFF;\n   var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n   var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n   var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n   buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n };\n}();\nfunction MessageHandler(sourceName, targetName, comObj) {\n this.sourceName = sourceName;\n this.targetName = targetName;\n this.comObj = comObj;\n this.callbackIndex = 1;\n this.postMessageTransfers = true;\n var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n var ah = this.actionHandler = Object.create(null);\n this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n  var data = event.data;\n  if (data.targetName !== this.sourceName) {\n   return;\n  }\n  if (data.isReply) {\n   var callbackId = data.callbackId;\n   if (data.callbackId in callbacksCapabilities) {\n    var callback = callbacksCapabilities[callbackId];\n    delete callbacksCapabilities[callbackId];\n    if ('error' in data) {\n     callback.reject(data.error);\n    } else {\n     callback.resolve(data.data);\n    }\n   } else {\n    error('Cannot resolve callback ' + callbackId);\n   }\n  } else if (data.action in ah) {\n   var action = ah[data.action];\n   if (data.callbackId) {\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    Promise.resolve().then(function () {\n     return action[0].call(action[1], data.data);\n    }).then(function (result) {\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      data: result\n     });\n    }, function (reason) {\n     if (reason instanceof Error) {\n      reason = reason + '';\n     }\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      error: reason\n     });\n    });\n   } else {\n    action[0].call(action[1], data.data);\n   }\n  } else {\n   error('Unknown action from worker: ' + data.action);\n  }\n }.bind(this);\n comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n on: function messageHandlerOn(actionName, handler, scope) {\n  var ah = this.actionHandler;\n  if (ah[actionName]) {\n   error('There is already an actionName called \"' + actionName + '\"');\n  }\n  ah[actionName] = [\n   handler,\n   scope\n  ];\n },\n send: function messageHandlerSend(actionName, data, transfers) {\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data\n  };\n  this.postMessage(message, transfers);\n },\n sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n  var callbackId = this.callbackIndex++;\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data,\n   callbackId: callbackId\n  };\n  var capability = createPromiseCapability();\n  this.callbacksCapabilities[callbackId] = capability;\n  try {\n   this.postMessage(message, transfers);\n  } catch (e) {\n   capability.reject(e);\n  }\n  return capability.promise;\n },\n postMessage: function (message, transfers) {\n  if (transfers && this.postMessageTransfers) {\n   this.comObj.postMessage(message, transfers);\n  } else {\n   this.comObj.postMessage(message);\n  }\n },\n destroy: function () {\n  this.comObj.removeEventListener('message', this._onComObjOnMessage);\n }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n var img = new Image();\n img.onload = function loadJpegStream_onloadClosure() {\n  objs.resolve(id, img);\n };\n img.onerror = function loadJpegStream_onerrorClosure() {\n  objs.resolve(id, null);\n  warn('Error during JPEG image loading');\n };\n img.src = imageUrl;\n}\n(function checkURLConstructor(scope) {\n var hasWorkingUrl = false;\n try {\n  if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n   var u = new URL('b', 'http://a');\n   u.pathname = 'c%20d';\n   hasWorkingUrl = u.href === 'http://a/c%20d';\n  }\n } catch (e) {\n }\n if (hasWorkingUrl) {\n  return;\n }\n var relative = Object.create(null);\n relative['ftp'] = 21;\n relative['file'] = 0;\n relative['gopher'] = 70;\n relative['http'] = 80;\n relative['https'] = 443;\n relative['ws'] = 80;\n relative['wss'] = 443;\n var relativePathDotMapping = Object.create(null);\n relativePathDotMapping['%2e'] = '.';\n relativePathDotMapping['.%2e'] = '..';\n relativePathDotMapping['%2e.'] = '..';\n relativePathDotMapping['%2e%2e'] = '..';\n function isRelativeScheme(scheme) {\n  return relative[scheme] !== undefined;\n }\n function invalid() {\n  clear.call(this);\n  this._isInvalid = true;\n }\n function IDNAToASCII(h) {\n  if (h === '') {\n   invalid.call(this);\n  }\n  return h.toLowerCase();\n }\n function percentEscape(c) {\n  var unicode = c.charCodeAt(0);\n  if (unicode > 0x20 && unicode < 0x7F && [\n    0x22,\n    0x23,\n    0x3C,\n    0x3E,\n    0x3F,\n    0x60\n   ].indexOf(unicode) === -1) {\n   return c;\n  }\n  return encodeURIComponent(c);\n }\n function percentEscapeQuery(c) {\n  var unicode = c.charCodeAt(0);\n  if (unicode > 0x20 && unicode < 0x7F && [\n    0x22,\n    0x23,\n    0x3C,\n    0x3E,\n    0x60\n   ].indexOf(unicode) === -1) {\n   return c;\n  }\n  return encodeURIComponent(c);\n }\n var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n function parse(input, stateOverride, base) {\n  function err(message) {\n   errors.push(message);\n  }\n  var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n  loop:\n   while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n    var c = input[cursor];\n    switch (state) {\n    case 'scheme start':\n     if (c && ALPHA.test(c)) {\n      buffer += c.toLowerCase();\n      state = 'scheme';\n     } else if (!stateOverride) {\n      buffer = '';\n      state = 'no scheme';\n      continue;\n     } else {\n      err('Invalid scheme.');\n      break loop;\n     }\n     break;\n    case 'scheme':\n     if (c && ALPHANUMERIC.test(c)) {\n      buffer += c.toLowerCase();\n     } else if (c === ':') {\n      this._scheme = buffer;\n      buffer = '';\n      if (stateOverride) {\n       break loop;\n      }\n      if (isRelativeScheme(this._scheme)) {\n       this._isRelative = true;\n      }\n      if (this._scheme === 'file') {\n       state = 'relative';\n      } else if (this._isRelative && base && base._scheme === this._scheme) {\n       state = 'relative or authority';\n      } else if (this._isRelative) {\n       state = 'authority first slash';\n      } else {\n       state = 'scheme data';\n      }\n     } else if (!stateOverride) {\n      buffer = '';\n      cursor = 0;\n      state = 'no scheme';\n      continue;\n     } else if (EOF === c) {\n      break loop;\n     } else {\n      err('Code point not allowed in scheme: ' + c);\n      break loop;\n     }\n     break;\n    case 'scheme data':\n     if (c === '?') {\n      this._query = '?';\n      state = 'query';\n     } else if (c === '#') {\n      this._fragment = '#';\n      state = 'fragment';\n     } else {\n      if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       this._schemeData += percentEscape(c);\n      }\n     }\n     break;\n    case 'no scheme':\n     if (!base || !isRelativeScheme(base._scheme)) {\n      err('Missing scheme.');\n      invalid.call(this);\n     } else {\n      state = 'relative';\n      continue;\n     }\n     break;\n    case 'relative or authority':\n     if (c === '/' && input[cursor + 1] === '/') {\n      state = 'authority ignore slashes';\n     } else {\n      err('Expected /, got: ' + c);\n      state = 'relative';\n      continue;\n     }\n     break;\n    case 'relative':\n     this._isRelative = true;\n     if ('file' !== this._scheme) {\n      this._scheme = base._scheme;\n     }\n     if (EOF === c) {\n      this._host = base._host;\n      this._port = base._port;\n      this._path = base._path.slice();\n      this._query = base._query;\n      this._username = base._username;\n      this._password = base._password;\n      break loop;\n     } else if (c === '/' || c === '\\\\') {\n      if (c === '\\\\') {\n       err('\\\\ is an invalid code point.');\n      }\n      state = 'relative slash';\n     } else if (c === '?') {\n      this._host = base._host;\n      this._port = base._port;\n      this._path = base._path.slice();\n      this._query = '?';\n      this._username = base._username;\n      this._password = base._password;\n      state = 'query';\n     } else if (c === '#') {\n      this._host = base._host;\n      this._port = base._port;\n      this._path = base._path.slice();\n      this._query = base._query;\n      this._fragment = '#';\n      this._username = base._username;\n      this._password = base._password;\n      state = 'fragment';\n     } else {\n      var nextC = input[cursor + 1];\n      var nextNextC = input[cursor + 2];\n      if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n       this._host = base._host;\n       this._port = base._port;\n       this._username = base._username;\n       this._password = base._password;\n       this._path = base._path.slice();\n       this._path.pop();\n      }\n      state = 'relative path';\n      continue;\n     }\n     break;\n    case 'relative slash':\n     if (c === '/' || c === '\\\\') {\n      if (c === '\\\\') {\n       err('\\\\ is an invalid code point.');\n      }\n      if (this._scheme === 'file') {\n       state = 'file host';\n      } else {\n       state = 'authority ignore slashes';\n      }\n     } else {\n      if ('file' !== this._scheme) {\n       this._host = base._host;\n       this._port = base._port;\n       this._username = base._username;\n       this._password = base._password;\n      }\n      state = 'relative path';\n      continue;\n     }\n     break;\n    case 'authority first slash':\n     if (c === '/') {\n      state = 'authority second slash';\n     } else {\n      err('Expected \\'/\\', got: ' + c);\n      state = 'authority ignore slashes';\n      continue;\n     }\n     break;\n    case 'authority second slash':\n     state = 'authority ignore slashes';\n     if ('/' !== c) {\n      err('Expected \\'/\\', got: ' + c);\n      continue;\n     }\n     break;\n    case 'authority ignore slashes':\n     if ('/' !== c && '\\\\' !== c) {\n      state = 'authority';\n      continue;\n     } else {\n      err('Expected authority, got: ' + c);\n     }\n     break;\n    case 'authority':\n     if (c === '@') {\n      if (seenAt) {\n       err('@ already seen.');\n       buffer += '%40';\n      }\n      seenAt = true;\n      for (var i = 0; i < buffer.length; i++) {\n       var cp = buffer[i];\n       if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n        err('Invalid whitespace in authority.');\n        continue;\n       }\n       if (cp === ':' && this._password === null) {\n        this._password = '';\n        continue;\n       }\n       var tempC = percentEscape(cp);\n       if (null !== this._password) {\n        this._password += tempC;\n       } else {\n        this._username += tempC;\n       }\n      }\n      buffer = '';\n     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n      cursor -= buffer.length;\n      buffer = '';\n      state = 'host';\n      continue;\n     } else {\n      buffer += c;\n     }\n     break;\n    case 'file host':\n     if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n      if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n       state = 'relative path';\n      } else if (buffer.length === 0) {\n       state = 'relative path start';\n      } else {\n       this._host = IDNAToASCII.call(this, buffer);\n       buffer = '';\n       state = 'relative path start';\n      }\n      continue;\n     } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n      err('Invalid whitespace in file host.');\n     } else {\n      buffer += c;\n     }\n     break;\n    case 'host':\n    case 'hostname':\n     if (c === ':' && !seenBracket) {\n      this._host = IDNAToASCII.call(this, buffer);\n      buffer = '';\n      state = 'port';\n      if (stateOverride === 'hostname') {\n       break loop;\n      }\n     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n      this._host = IDNAToASCII.call(this, buffer);\n      buffer = '';\n      state = 'relative path start';\n      if (stateOverride) {\n       break loop;\n      }\n      continue;\n     } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n      if (c === '[') {\n       seenBracket = true;\n      } else if (c === ']') {\n       seenBracket = false;\n      }\n      buffer += c;\n     } else {\n      err('Invalid code point in host/hostname: ' + c);\n     }\n     break;\n    case 'port':\n     if (/[0-9]/.test(c)) {\n      buffer += c;\n     } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n      if ('' !== buffer) {\n       var temp = parseInt(buffer, 10);\n       if (temp !== relative[this._scheme]) {\n        this._port = temp + '';\n       }\n       buffer = '';\n      }\n      if (stateOverride) {\n       break loop;\n      }\n      state = 'relative path start';\n      continue;\n     } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n      err('Invalid code point in port: ' + c);\n     } else {\n      invalid.call(this);\n     }\n     break;\n    case 'relative path start':\n     if (c === '\\\\') {\n      err('\\'\\\\\\' not allowed in path.');\n     }\n     state = 'relative path';\n     if ('/' !== c && '\\\\' !== c) {\n      continue;\n     }\n     break;\n    case 'relative path':\n     if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n      if (c === '\\\\') {\n       err('\\\\ not allowed in relative path.');\n      }\n      var tmp;\n      if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n       buffer = tmp;\n      }\n      if (buffer === '..') {\n       this._path.pop();\n       if ('/' !== c && '\\\\' !== c) {\n        this._path.push('');\n       }\n      } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n       this._path.push('');\n      } else if ('.' !== buffer) {\n       if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n        buffer = buffer[0] + ':';\n       }\n       this._path.push(buffer);\n      }\n      buffer = '';\n      if (c === '?') {\n       this._query = '?';\n       state = 'query';\n      } else if (c === '#') {\n       this._fragment = '#';\n       state = 'fragment';\n      }\n     } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n      buffer += percentEscape(c);\n     }\n     break;\n    case 'query':\n     if (!stateOverride && c === '#') {\n      this._fragment = '#';\n      state = 'fragment';\n     } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n      this._query += percentEscapeQuery(c);\n     }\n     break;\n    case 'fragment':\n     if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n      this._fragment += c;\n     }\n     break;\n    }\n    cursor++;\n   }\n }\n function clear() {\n  this._scheme = '';\n  this._schemeData = '';\n  this._username = '';\n  this._password = null;\n  this._host = '';\n  this._port = '';\n  this._path = [];\n  this._query = '';\n  this._fragment = '';\n  this._isInvalid = false;\n  this._isRelative = false;\n }\n function JURL(url, base) {\n  if (base !== undefined && !(base instanceof JURL)) {\n   base = new JURL(String(base));\n  }\n  this._url = url;\n  clear.call(this);\n  var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n  parse.call(this, input, null, base);\n }\n JURL.prototype = {\n  toString: function () {\n   return this.href;\n  },\n  get href() {\n   if (this._isInvalid) {\n    return this._url;\n   }\n   var authority = '';\n   if ('' !== this._username || null !== this._password) {\n    authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n   }\n   return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n  },\n  set href(href) {\n   clear.call(this);\n   parse.call(this, href);\n  },\n  get protocol() {\n   return this._scheme + ':';\n  },\n  set protocol(protocol) {\n   if (this._isInvalid) {\n    return;\n   }\n   parse.call(this, protocol + ':', 'scheme start');\n  },\n  get host() {\n   return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n  },\n  set host(host) {\n   if (this._isInvalid || !this._isRelative) {\n    return;\n   }\n   parse.call(this, host, 'host');\n  },\n  get hostname() {\n   return this._host;\n  },\n  set hostname(hostname) {\n   if (this._isInvalid || !this._isRelative) {\n    return;\n   }\n   parse.call(this, hostname, 'hostname');\n  },\n  get port() {\n   return this._port;\n  },\n  set port(port) {\n   if (this._isInvalid || !this._isRelative) {\n    return;\n   }\n   parse.call(this, port, 'port');\n  },\n  get pathname() {\n   return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n  },\n  set pathname(pathname) {\n   if (this._isInvalid || !this._isRelative) {\n    return;\n   }\n   this._path = [];\n   parse.call(this, pathname, 'relative path start');\n  },\n  get search() {\n   return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n  },\n  set search(search) {\n   if (this._isInvalid || !this._isRelative) {\n    return;\n   }\n   this._query = '?';\n   if (search[0] === '?') {\n    search = search.slice(1);\n   }\n   parse.call(this, search, 'query');\n  },\n  get hash() {\n   return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n  },\n  set hash(hash) {\n   if (this._isInvalid) {\n    return;\n   }\n   this._fragment = '#';\n   if (hash[0] === '#') {\n    hash = hash.slice(1);\n   }\n   parse.call(this, hash, 'fragment');\n  },\n  get origin() {\n   var host;\n   if (this._isInvalid || !this._scheme) {\n    return '';\n   }\n   switch (this._scheme) {\n   case 'data':\n   case 'file':\n   case 'javascript':\n   case 'mailto':\n    return 'null';\n   }\n   host = this.host;\n   if (!host) {\n    return '';\n   }\n   return this._scheme + '://' + host;\n  }\n };\n var OriginalURL = scope.URL;\n if (OriginalURL) {\n  JURL.createObjectURL = function (blob) {\n   return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n  };\n  JURL.revokeObjectURL = function (url) {\n   OriginalURL.revokeObjectURL(url);\n  };\n }\n scope.URL = JURL;\n}(globalScope));\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.error = error;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.globalScope = globalScope;\nexports.info = info;\nexports.isArray = isArray;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isInt = isInt;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\n/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(19)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar isArray = sharedUtil.isArray;\nvar EOF = {};\nvar Name = function NameClosure() {\n function Name(name) {\n  this.name = name;\n }\n Name.prototype = {};\n var nameCache = Object.create(null);\n Name.get = function Name_get(name) {\n  var nameValue = nameCache[name];\n  return nameValue ? nameValue : nameCache[name] = new Name(name);\n };\n return Name;\n}();\nvar Cmd = function CmdClosure() {\n function Cmd(cmd) {\n  this.cmd = cmd;\n }\n Cmd.prototype = {};\n var cmdCache = Object.create(null);\n Cmd.get = function Cmd_get(cmd) {\n  var cmdValue = cmdCache[cmd];\n  return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n };\n return Cmd;\n}();\nvar Dict = function DictClosure() {\n var nonSerializable = function nonSerializableClosure() {\n  return nonSerializable;\n };\n function Dict(xref) {\n  this.map = Object.create(null);\n  this.xref = xref;\n  this.objId = null;\n  this.suppressEncryption = false;\n  this.__nonSerializable__ = nonSerializable;\n }\n Dict.prototype = {\n  assignXref: function Dict_assignXref(newXref) {\n   this.xref = newXref;\n  },\n  get: function Dict_get(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   value = this.map[key3] || null;\n   return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n  },\n  getAsync: function Dict_getAsync(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   value = this.map[key3] || null;\n   if (xref) {\n    return xref.fetchIfRefAsync(value, suppressEncryption);\n   }\n   return Promise.resolve(value);\n  },\n  getArray: function Dict_getArray(key1, key2, key3) {\n   var value = this.get(key1, key2, key3);\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (!isArray(value) || !xref) {\n    return value;\n   }\n   value = value.slice();\n   for (var i = 0, ii = value.length; i < ii; i++) {\n    if (!isRef(value[i])) {\n     continue;\n    }\n    value[i] = xref.fetch(value[i], suppressEncryption);\n   }\n   return value;\n  },\n  getRaw: function Dict_getRaw(key) {\n   return this.map[key];\n  },\n  getKeys: function Dict_getKeys() {\n   return Object.keys(this.map);\n  },\n  set: function Dict_set(key, value) {\n   this.map[key] = value;\n  },\n  has: function Dict_has(key) {\n   return key in this.map;\n  },\n  forEach: function Dict_forEach(callback) {\n   for (var key in this.map) {\n    callback(key, this.get(key));\n   }\n  }\n };\n Dict.empty = new Dict(null);\n Dict.merge = function Dict_merge(xref, dictArray) {\n  var mergedDict = new Dict(xref);\n  for (var i = 0, ii = dictArray.length; i < ii; i++) {\n   var dict = dictArray[i];\n   if (!isDict(dict)) {\n    continue;\n   }\n   for (var keyName in dict.map) {\n    if (mergedDict.map[keyName]) {\n     continue;\n    }\n    mergedDict.map[keyName] = dict.map[keyName];\n   }\n  }\n  return mergedDict;\n };\n return Dict;\n}();\nvar Ref = function RefClosure() {\n function Ref(num, gen) {\n  this.num = num;\n  this.gen = gen;\n }\n Ref.prototype = {\n  toString: function Ref_toString() {\n   var str = this.num + 'R';\n   if (this.gen !== 0) {\n    str += this.gen;\n   }\n   return str;\n  }\n };\n return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n function RefSet() {\n  this.dict = Object.create(null);\n }\n RefSet.prototype = {\n  has: function RefSet_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSet_put(ref) {\n   this.dict[ref.toString()] = true;\n  },\n  remove: function RefSet_remove(ref) {\n   delete this.dict[ref.toString()];\n  }\n };\n return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n function RefSetCache() {\n  this.dict = Object.create(null);\n }\n RefSetCache.prototype = {\n  get: function RefSetCache_get(ref) {\n   return this.dict[ref.toString()];\n  },\n  has: function RefSetCache_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSetCache_put(ref, obj) {\n   this.dict[ref.toString()] = obj;\n  },\n  putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n   this.dict[ref.toString()] = this.get(aliasRef);\n  },\n  forEach: function RefSetCache_forEach(fn, thisArg) {\n   for (var i in this.dict) {\n    fn.call(thisArg, this.dict[i]);\n   }\n  },\n  clear: function RefSetCache_clear() {\n   this.dict = Object.create(null);\n  }\n };\n return RefSetCache;\n}();\nfunction isEOF(v) {\n return v === EOF;\n}\nfunction isName(v, name) {\n return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreJbig2 = __w_pdfjs_require__(28);\nvar coreJpg = __w_pdfjs_require__(29);\nvar coreJpx = __w_pdfjs_require__(14);\nvar Util = sharedUtil.Util;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isInt = sharedUtil.isInt;\nvar isArray = sharedUtil.isArray;\nvar createObjectURL = sharedUtil.createObjectURL;\nvar shadow = sharedUtil.shadow;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar Jbig2Image = coreJbig2.Jbig2Image;\nvar JpegImage = coreJpg.JpegImage;\nvar JpxImage = coreJpx.JpxImage;\nvar Stream = function StreamClosure() {\n function Stream(arrayBuffer, start, length, dict) {\n  this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n  this.start = start || 0;\n  this.pos = this.start;\n  this.end = start + length || this.bytes.length;\n  this.dict = dict;\n }\n Stream.prototype = {\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function Stream_getByte() {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.bytes[this.pos++];\n  },\n  getUint16: function Stream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function Stream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function Stream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function Stream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function Stream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  skip: function Stream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function Stream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function Stream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function Stream_makeSubStream(start, length, dict) {\n   return new Stream(this.bytes.buffer, start, length, dict);\n  }\n };\n return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n function StringStream(str) {\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var n = 0; n < length; ++n) {\n   bytes[n] = str.charCodeAt(n);\n  }\n  Stream.call(this, bytes);\n }\n StringStream.prototype = Stream.prototype;\n return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n var emptyBuffer = new Uint8Array(0);\n function DecodeStream(maybeMinBufferLength) {\n  this.pos = 0;\n  this.bufferLength = 0;\n  this.eof = false;\n  this.buffer = emptyBuffer;\n  this.minBufferLength = 512;\n  if (maybeMinBufferLength) {\n   while (this.minBufferLength < maybeMinBufferLength) {\n    this.minBufferLength *= 2;\n   }\n  }\n }\n DecodeStream.prototype = {\n  get isEmpty() {\n   while (!this.eof && this.bufferLength === 0) {\n    this.readBlock();\n   }\n   return this.bufferLength === 0;\n  },\n  ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n   var buffer = this.buffer;\n   if (requested <= buffer.byteLength) {\n    return buffer;\n   }\n   var size = this.minBufferLength;\n   while (size < requested) {\n    size *= 2;\n   }\n   var buffer2 = new Uint8Array(size);\n   buffer2.set(buffer);\n   return this.buffer = buffer2;\n  },\n  getByte: function DecodeStream_getByte() {\n   var pos = this.pos;\n   while (this.bufferLength <= pos) {\n    if (this.eof) {\n     return -1;\n    }\n    this.readBlock();\n   }\n   return this.buffer[this.pos++];\n  },\n  getUint16: function DecodeStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function DecodeStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function DecodeStream_getBytes(length) {\n   var end, pos = this.pos;\n   if (length) {\n    this.ensureBuffer(pos + length);\n    end = pos + length;\n    while (!this.eof && this.bufferLength < end) {\n     this.readBlock();\n    }\n    var bufEnd = this.bufferLength;\n    if (end > bufEnd) {\n     end = bufEnd;\n    }\n   } else {\n    while (!this.eof) {\n     this.readBlock();\n    }\n    end = this.bufferLength;\n   }\n   this.pos = end;\n   return this.buffer.subarray(pos, end);\n  },\n  peekByte: function DecodeStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function DecodeStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n   var end = start + length;\n   while (this.bufferLength <= end && !this.eof) {\n    this.readBlock();\n   }\n   return new Stream(this.buffer, start, length, dict);\n  },\n  skip: function DecodeStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function DecodeStream_reset() {\n   this.pos = 0;\n  },\n  getBaseStreams: function DecodeStream_getBaseStreams() {\n   if (this.str && this.str.getBaseStreams) {\n    return this.str.getBaseStreams();\n   }\n   return [];\n  }\n };\n return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n function StreamsSequenceStream(streams) {\n  this.streams = streams;\n  DecodeStream.call(this, null);\n }\n StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n  var streams = this.streams;\n  if (streams.length === 0) {\n   this.eof = true;\n   return;\n  }\n  var stream = streams.shift();\n  var chunk = stream.getBytes();\n  var bufferLength = this.bufferLength;\n  var newLength = bufferLength + chunk.length;\n  var buffer = this.ensureBuffer(newLength);\n  buffer.set(chunk, bufferLength);\n  this.bufferLength = newLength;\n };\n StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n  var baseStreams = [];\n  for (var i = 0, ii = this.streams.length; i < ii; i++) {\n   var stream = this.streams[i];\n   if (stream.getBaseStreams) {\n    Util.appendToArray(baseStreams, stream.getBaseStreams());\n   }\n  }\n  return baseStreams;\n };\n return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n var codeLenCodeMap = new Int32Array([\n  16,\n  17,\n  18,\n  0,\n  8,\n  7,\n  9,\n  6,\n  10,\n  5,\n  11,\n  4,\n  12,\n  3,\n  13,\n  2,\n  14,\n  1,\n  15\n ]);\n var lengthDecode = new Int32Array([\n  0x00003,\n  0x00004,\n  0x00005,\n  0x00006,\n  0x00007,\n  0x00008,\n  0x00009,\n  0x0000a,\n  0x1000b,\n  0x1000d,\n  0x1000f,\n  0x10011,\n  0x20013,\n  0x20017,\n  0x2001b,\n  0x2001f,\n  0x30023,\n  0x3002b,\n  0x30033,\n  0x3003b,\n  0x40043,\n  0x40053,\n  0x40063,\n  0x40073,\n  0x50083,\n  0x500a3,\n  0x500c3,\n  0x500e3,\n  0x00102,\n  0x00102,\n  0x00102\n ]);\n var distDecode = new Int32Array([\n  0x00001,\n  0x00002,\n  0x00003,\n  0x00004,\n  0x10005,\n  0x10007,\n  0x20009,\n  0x2000d,\n  0x30011,\n  0x30019,\n  0x40021,\n  0x40031,\n  0x50041,\n  0x50061,\n  0x60081,\n  0x600c1,\n  0x70101,\n  0x70181,\n  0x80201,\n  0x80301,\n  0x90401,\n  0x90601,\n  0xa0801,\n  0xa0c01,\n  0xb1001,\n  0xb1801,\n  0xc2001,\n  0xc3001,\n  0xd4001,\n  0xd6001\n ]);\n var fixedLitCodeTab = [\n  new Int32Array([\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c0,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a0,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e0,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90090,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d0,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b0,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f0,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c8,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a8,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e8,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90098,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d8,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b8,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f8,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c4,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a4,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e4,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90094,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d4,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b4,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f4,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cc,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ac,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ec,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009c,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dc,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bc,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fc,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c2,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a2,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e2,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90092,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d2,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b2,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f2,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900ca,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900aa,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900ea,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009a,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900da,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900ba,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fa,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c6,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a6,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e6,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90096,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d6,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b6,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f6,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900ce,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900ae,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ee,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009e,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900de,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900be,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900fe,\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c1,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a1,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e1,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90091,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d1,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b1,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f1,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c9,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a9,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e9,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90099,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d9,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b9,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f9,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c5,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a5,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e5,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90095,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d5,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b5,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f5,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cd,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ad,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ed,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009d,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dd,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bd,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fd,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c3,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a3,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e3,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90093,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d3,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b3,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f3,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900cb,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900ab,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900eb,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009b,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900db,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900bb,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fb,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c7,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a7,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e7,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90097,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d7,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b7,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f7,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900cf,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900af,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ef,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009f,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900df,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900bf,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900ff\n  ]),\n  9\n ];\n var fixedDistCodeTab = [\n  new Int32Array([\n   0x50000,\n   0x50010,\n   0x50008,\n   0x50018,\n   0x50004,\n   0x50014,\n   0x5000c,\n   0x5001c,\n   0x50002,\n   0x50012,\n   0x5000a,\n   0x5001a,\n   0x50006,\n   0x50016,\n   0x5000e,\n   0x00000,\n   0x50001,\n   0x50011,\n   0x50009,\n   0x50019,\n   0x50005,\n   0x50015,\n   0x5000d,\n   0x5001d,\n   0x50003,\n   0x50013,\n   0x5000b,\n   0x5001b,\n   0x50007,\n   0x50017,\n   0x5000f,\n   0x00000\n  ]),\n  5\n ];\n function FlateStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  var cmf = str.getByte();\n  var flg = str.getByte();\n  if (cmf === -1 || flg === -1) {\n   error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n  }\n  if ((cmf & 0x0f) !== 0x08) {\n   error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (((cmf << 8) + flg) % 31 !== 0) {\n   error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (flg & 0x20) {\n   error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n  }\n  this.codeSize = 0;\n  this.codeBuf = 0;\n  DecodeStream.call(this, maybeLength);\n }\n FlateStream.prototype = Object.create(DecodeStream.prototype);\n FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n  var str = this.str;\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < bits) {\n   if ((b = str.getByte()) === -1) {\n    error('Bad encoding in flate stream');\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  b = codeBuf & (1 << bits) - 1;\n  this.codeBuf = codeBuf >> bits;\n  this.codeSize = codeSize -= bits;\n  return b;\n };\n FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n  var str = this.str;\n  var codes = table[0];\n  var maxLen = table[1];\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < maxLen) {\n   if ((b = str.getByte()) === -1) {\n    break;\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  var code = codes[codeBuf & (1 << maxLen) - 1];\n  var codeLen = code >> 16;\n  var codeVal = code & 0xffff;\n  if (codeLen < 1 || codeSize < codeLen) {\n   error('Bad encoding in flate stream');\n  }\n  this.codeBuf = codeBuf >> codeLen;\n  this.codeSize = codeSize - codeLen;\n  return codeVal;\n };\n FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n  var n = lengths.length;\n  var maxLen = 0;\n  var i;\n  for (i = 0; i < n; ++i) {\n   if (lengths[i] > maxLen) {\n    maxLen = lengths[i];\n   }\n  }\n  var size = 1 << maxLen;\n  var codes = new Int32Array(size);\n  for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n   for (var val = 0; val < n; ++val) {\n    if (lengths[val] === len) {\n     var code2 = 0;\n     var t = code;\n     for (i = 0; i < len; ++i) {\n      code2 = code2 << 1 | t & 1;\n      t >>= 1;\n     }\n     for (i = code2; i < size; i += skip) {\n      codes[i] = len << 16 | val;\n     }\n     ++code;\n    }\n   }\n  }\n  return [\n   codes,\n   maxLen\n  ];\n };\n FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n  var buffer, len;\n  var str = this.str;\n  var hdr = this.getBits(3);\n  if (hdr & 1) {\n   this.eof = true;\n  }\n  hdr >>= 1;\n  if (hdr === 0) {\n   var b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var blockLen = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   blockLen |= b << 8;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var check = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   check |= b << 8;\n   if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n    error('Bad uncompressed block length in flate stream');\n   }\n   this.codeBuf = 0;\n   this.codeSize = 0;\n   var bufferLength = this.bufferLength;\n   buffer = this.ensureBuffer(bufferLength + blockLen);\n   var end = bufferLength + blockLen;\n   this.bufferLength = end;\n   if (blockLen === 0) {\n    if (str.peekByte() === -1) {\n     this.eof = true;\n    }\n   } else {\n    for (var n = bufferLength; n < end; ++n) {\n     if ((b = str.getByte()) === -1) {\n      this.eof = true;\n      break;\n     }\n     buffer[n] = b;\n    }\n   }\n   return;\n  }\n  var litCodeTable;\n  var distCodeTable;\n  if (hdr === 1) {\n   litCodeTable = fixedLitCodeTab;\n   distCodeTable = fixedDistCodeTab;\n  } else if (hdr === 2) {\n   var numLitCodes = this.getBits(5) + 257;\n   var numDistCodes = this.getBits(5) + 1;\n   var numCodeLenCodes = this.getBits(4) + 4;\n   var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n   var i;\n   for (i = 0; i < numCodeLenCodes; ++i) {\n    codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n   }\n   var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n   len = 0;\n   i = 0;\n   var codes = numLitCodes + numDistCodes;\n   var codeLengths = new Uint8Array(codes);\n   var bitsLength, bitsOffset, what;\n   while (i < codes) {\n    var code = this.getCode(codeLenCodeTab);\n    if (code === 16) {\n     bitsLength = 2;\n     bitsOffset = 3;\n     what = len;\n    } else if (code === 17) {\n     bitsLength = 3;\n     bitsOffset = 3;\n     what = len = 0;\n    } else if (code === 18) {\n     bitsLength = 7;\n     bitsOffset = 11;\n     what = len = 0;\n    } else {\n     codeLengths[i++] = len = code;\n     continue;\n    }\n    var repeatLength = this.getBits(bitsLength) + bitsOffset;\n    while (repeatLength-- > 0) {\n     codeLengths[i++] = what;\n    }\n   }\n   litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n   distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n  } else {\n   error('Unknown block type in flate stream');\n  }\n  buffer = this.buffer;\n  var limit = buffer ? buffer.length : 0;\n  var pos = this.bufferLength;\n  while (true) {\n   var code1 = this.getCode(litCodeTable);\n   if (code1 < 256) {\n    if (pos + 1 >= limit) {\n     buffer = this.ensureBuffer(pos + 1);\n     limit = buffer.length;\n    }\n    buffer[pos++] = code1;\n    continue;\n   }\n   if (code1 === 256) {\n    this.bufferLength = pos;\n    return;\n   }\n   code1 -= 257;\n   code1 = lengthDecode[code1];\n   var code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   len = (code1 & 0xffff) + code2;\n   code1 = this.getCode(distCodeTable);\n   code1 = distDecode[code1];\n   code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   var dist = (code1 & 0xffff) + code2;\n   if (pos + len >= limit) {\n    buffer = this.ensureBuffer(pos + len);\n    limit = buffer.length;\n   }\n   for (var k = 0; k < len; ++k, ++pos) {\n    buffer[pos] = buffer[pos - dist];\n   }\n  }\n };\n return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n function PredictorStream(str, maybeLength, params) {\n  if (!isDict(params)) {\n   return str;\n  }\n  var predictor = this.predictor = params.get('Predictor') || 1;\n  if (predictor <= 1) {\n   return str;\n  }\n  if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n   error('Unsupported predictor: ' + predictor);\n  }\n  if (predictor === 2) {\n   this.readBlock = this.readBlockTiff;\n  } else {\n   this.readBlock = this.readBlockPng;\n  }\n  this.str = str;\n  this.dict = str.dict;\n  var colors = this.colors = params.get('Colors') || 1;\n  var bits = this.bits = params.get('BitsPerComponent') || 8;\n  var columns = this.columns = params.get('Columns') || 1;\n  this.pixBytes = colors * bits + 7 >> 3;\n  this.rowBytes = columns * colors * bits + 7 >> 3;\n  DecodeStream.call(this, maybeLength);\n  return this;\n }\n PredictorStream.prototype = Object.create(DecodeStream.prototype);\n PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n  var rowBytes = this.rowBytes;\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var bits = this.bits;\n  var colors = this.colors;\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var inbuf = 0, outbuf = 0;\n  var inbits = 0, outbits = 0;\n  var pos = bufferLength;\n  var i;\n  if (bits === 1 && colors === 1) {\n   for (i = 0; i < rowBytes; ++i) {\n    var c = rawBytes[i] ^ inbuf;\n    c ^= c >> 1;\n    c ^= c >> 2;\n    c ^= c >> 4;\n    inbuf = (c & 1) << 7;\n    buffer[pos++] = c;\n   }\n  } else if (bits === 8) {\n   for (i = 0; i < colors; ++i) {\n    buffer[pos++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[pos] = buffer[pos - colors] + rawBytes[i];\n    pos++;\n   }\n  } else {\n   var compArray = new Uint8Array(colors + 1);\n   var bitMask = (1 << bits) - 1;\n   var j = 0, k = bufferLength;\n   var columns = this.columns;\n   for (i = 0; i < columns; ++i) {\n    for (var kk = 0; kk < colors; ++kk) {\n     if (inbits < bits) {\n      inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n      inbits += 8;\n     }\n     compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n     inbits -= bits;\n     outbuf = outbuf << bits | compArray[kk];\n     outbits += bits;\n     if (outbits >= 8) {\n      buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n      outbits -= 8;\n     }\n    }\n   }\n   if (outbits > 0) {\n    buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n   }\n  }\n  this.bufferLength += rowBytes;\n };\n PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n  var rowBytes = this.rowBytes;\n  var pixBytes = this.pixBytes;\n  var predictor = this.str.getByte();\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n  if (prevRow.length === 0) {\n   prevRow = new Uint8Array(rowBytes);\n  }\n  var i, j = bufferLength, up, c;\n  switch (predictor) {\n  case 0:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   break;\n  case 1:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 2:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n   }\n   break;\n  case 3:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 4:\n   for (i = 0; i < pixBytes; ++i) {\n    up = prevRow[i];\n    c = rawBytes[i];\n    buffer[j++] = up + c;\n   }\n   for (; i < rowBytes; ++i) {\n    up = prevRow[i];\n    var upLeft = prevRow[i - pixBytes];\n    var left = buffer[j - pixBytes];\n    var p = left + up - upLeft;\n    var pa = p - left;\n    if (pa < 0) {\n     pa = -pa;\n    }\n    var pb = p - up;\n    if (pb < 0) {\n     pb = -pb;\n    }\n    var pc = p - upLeft;\n    if (pc < 0) {\n     pc = -pc;\n    }\n    c = rawBytes[i];\n    if (pa <= pb && pa <= pc) {\n     buffer[j++] = left + c;\n    } else if (pb <= pc) {\n     buffer[j++] = up + c;\n    } else {\n     buffer[j++] = upLeft + c;\n    }\n   }\n   break;\n  default:\n   error('Unsupported predictor: ' + predictor);\n  }\n  this.bufferLength += rowBytes;\n };\n return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n function JpegStream(stream, maybeLength, dict, params) {\n  var ch;\n  while ((ch = stream.getByte()) !== -1) {\n   if (ch === 0xFF) {\n    stream.skip(-1);\n    break;\n   }\n  }\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpegStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpegStream.prototype, 'bytes', {\n  get: function JpegStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpegImage = new JpegImage();\n  var decodeArr = this.dict.getArray('Decode', 'D');\n  if (this.forceRGB && isArray(decodeArr)) {\n   var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n   var decodeArrLength = decodeArr.length;\n   var transform = new Int32Array(decodeArrLength);\n   var transformNeeded = false;\n   var maxValue = (1 << bitsPerComponent) - 1;\n   for (var i = 0; i < decodeArrLength; i += 2) {\n    transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n    transform[i + 1] = decodeArr[i] * maxValue | 0;\n    if (transform[i] !== 256 || transform[i + 1] !== 0) {\n     transformNeeded = true;\n    }\n   }\n   if (transformNeeded) {\n    jpegImage.decodeTransform = transform;\n   }\n  }\n  if (isDict(this.params)) {\n   var colorTransform = this.params.get('ColorTransform');\n   if (isInt(colorTransform)) {\n    jpegImage.colorTransform = colorTransform;\n   }\n  }\n  jpegImage.parse(this.bytes);\n  var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n  this.buffer = data;\n  this.bufferLength = data.length;\n  this.eof = true;\n };\n JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n  this.ensureBuffer();\n  return this.buffer;\n };\n JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n  return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n };\n return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n function JpxStream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpxStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpxStream.prototype, 'bytes', {\n  get: function JpxStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpxImage = new JpxImage();\n  jpxImage.parse(this.bytes);\n  var width = jpxImage.width;\n  var height = jpxImage.height;\n  var componentsCount = jpxImage.componentsCount;\n  var tileCount = jpxImage.tiles.length;\n  if (tileCount === 1) {\n   this.buffer = jpxImage.tiles[0].items;\n  } else {\n   var data = new Uint8Array(width * height * componentsCount);\n   for (var k = 0; k < tileCount; k++) {\n    var tileComponents = jpxImage.tiles[k];\n    var tileWidth = tileComponents.width;\n    var tileHeight = tileComponents.height;\n    var tileLeft = tileComponents.left;\n    var tileTop = tileComponents.top;\n    var src = tileComponents.items;\n    var srcPosition = 0;\n    var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n    var imgRowSize = width * componentsCount;\n    var tileRowSize = tileWidth * componentsCount;\n    for (var j = 0; j < tileHeight; j++) {\n     var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n     data.set(rowBytes, dataPosition);\n     srcPosition += tileRowSize;\n     dataPosition += imgRowSize;\n    }\n   }\n   this.buffer = data;\n  }\n  this.bufferLength = this.buffer.length;\n  this.eof = true;\n };\n return JpxStream;\n}();\nvar Jbig2Stream = function Jbig2StreamClosure() {\n function Jbig2Stream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n  get: function Jbig2Stream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jbig2Image = new Jbig2Image();\n  var chunks = [];\n  if (isDict(this.params)) {\n   var globalsStream = this.params.get('JBIG2Globals');\n   if (isStream(globalsStream)) {\n    var globals = globalsStream.getBytes();\n    chunks.push({\n     data: globals,\n     start: 0,\n     end: globals.length\n    });\n   }\n  }\n  chunks.push({\n   data: this.bytes,\n   start: 0,\n   end: this.bytes.length\n  });\n  var data = jbig2Image.parseChunks(chunks);\n  var dataLength = data.length;\n  for (var i = 0; i < dataLength; i++) {\n   data[i] ^= 0xFF;\n  }\n  this.buffer = data;\n  this.bufferLength = dataLength;\n  this.eof = true;\n };\n return Jbig2Stream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n function DecryptStream(str, maybeLength, decrypt) {\n  this.str = str;\n  this.dict = str.dict;\n  this.decrypt = decrypt;\n  this.nextChunk = null;\n  this.initialized = false;\n  DecodeStream.call(this, maybeLength);\n }\n var chunkSize = 512;\n DecryptStream.prototype = Object.create(DecodeStream.prototype);\n DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n  var chunk;\n  if (this.initialized) {\n   chunk = this.nextChunk;\n  } else {\n   chunk = this.str.getBytes(chunkSize);\n   this.initialized = true;\n  }\n  if (!chunk || chunk.length === 0) {\n   this.eof = true;\n   return;\n  }\n  this.nextChunk = this.str.getBytes(chunkSize);\n  var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n  var decrypt = this.decrypt;\n  chunk = decrypt(chunk, !hasMoreData);\n  var bufferLength = this.bufferLength;\n  var i, n = chunk.length;\n  var buffer = this.ensureBuffer(bufferLength + n);\n  for (i = 0; i < n; i++) {\n   buffer[bufferLength++] = chunk[i];\n  }\n  this.bufferLength = bufferLength;\n };\n return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n function Ascii85Stream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.input = new Uint8Array(5);\n  if (maybeLength) {\n   maybeLength = 0.8 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n  var TILDA_CHAR = 0x7E;\n  var Z_LOWER_CHAR = 0x7A;\n  var EOF = -1;\n  var str = this.str;\n  var c = str.getByte();\n  while (isSpace(c)) {\n   c = str.getByte();\n  }\n  if (c === EOF || c === TILDA_CHAR) {\n   this.eof = true;\n   return;\n  }\n  var bufferLength = this.bufferLength, buffer;\n  var i;\n  if (c === Z_LOWER_CHAR) {\n   buffer = this.ensureBuffer(bufferLength + 4);\n   for (i = 0; i < 4; ++i) {\n    buffer[bufferLength + i] = 0;\n   }\n   this.bufferLength += 4;\n  } else {\n   var input = this.input;\n   input[0] = c;\n   for (i = 1; i < 5; ++i) {\n    c = str.getByte();\n    while (isSpace(c)) {\n     c = str.getByte();\n    }\n    input[i] = c;\n    if (c === EOF || c === TILDA_CHAR) {\n     break;\n    }\n   }\n   buffer = this.ensureBuffer(bufferLength + i - 1);\n   this.bufferLength += i - 1;\n   if (i < 5) {\n    for (; i < 5; ++i) {\n     input[i] = 0x21 + 84;\n    }\n    this.eof = true;\n   }\n   var t = 0;\n   for (i = 0; i < 5; ++i) {\n    t = t * 85 + (input[i] - 0x21);\n   }\n   for (i = 3; i >= 0; --i) {\n    buffer[bufferLength + i] = t & 0xFF;\n    t >>= 8;\n   }\n  }\n };\n return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n function AsciiHexStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.firstDigit = -1;\n  if (maybeLength) {\n   maybeLength = 0.5 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n  var UPSTREAM_BLOCK_SIZE = 8000;\n  var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n  if (!bytes.length) {\n   this.eof = true;\n   return;\n  }\n  var maxDecodeLength = bytes.length + 1 >> 1;\n  var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n  var bufferLength = this.bufferLength;\n  var firstDigit = this.firstDigit;\n  for (var i = 0, ii = bytes.length; i < ii; i++) {\n   var ch = bytes[i], digit;\n   if (ch >= 0x30 && ch <= 0x39) {\n    digit = ch & 0x0F;\n   } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n    digit = (ch & 0x0F) + 9;\n   } else if (ch === 0x3E) {\n    this.eof = true;\n    break;\n   } else {\n    continue;\n   }\n   if (firstDigit < 0) {\n    firstDigit = digit;\n   } else {\n    buffer[bufferLength++] = firstDigit << 4 | digit;\n    firstDigit = -1;\n   }\n  }\n  if (firstDigit >= 0 && this.eof) {\n   buffer[bufferLength++] = firstDigit << 4;\n   firstDigit = -1;\n  }\n  this.firstDigit = firstDigit;\n  this.bufferLength = bufferLength;\n };\n return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n function RunLengthStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  DecodeStream.call(this, maybeLength);\n }\n RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n  var repeatHeader = this.str.getBytes(2);\n  if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n   this.eof = true;\n   return;\n  }\n  var buffer;\n  var bufferLength = this.bufferLength;\n  var n = repeatHeader[0];\n  if (n < 128) {\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   buffer[bufferLength++] = repeatHeader[1];\n   if (n > 0) {\n    var source = this.str.getBytes(n);\n    buffer.set(source, bufferLength);\n    bufferLength += n;\n   }\n  } else {\n   n = 257 - n;\n   var b = repeatHeader[1];\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   for (var i = 0; i < n; i++) {\n    buffer[bufferLength++] = b;\n   }\n  }\n  this.bufferLength = bufferLength;\n };\n return RunLengthStream;\n}();\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n var ccittEOL = -2;\n var ccittEOF = -1;\n var twoDimPass = 0;\n var twoDimHoriz = 1;\n var twoDimVert0 = 2;\n var twoDimVertR1 = 3;\n var twoDimVertL1 = 4;\n var twoDimVertR2 = 5;\n var twoDimVertL2 = 6;\n var twoDimVertR3 = 7;\n var twoDimVertL3 = 8;\n var twoDimTable = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   7,\n   twoDimVertL3\n  ],\n  [\n   7,\n   twoDimVertR3\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ]\n ];\n var whiteTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ]\n ];\n var whiteTable2 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   9,\n   1472\n  ],\n  [\n   9,\n   1536\n  ],\n  [\n   9,\n   1600\n  ],\n  [\n   9,\n   1728\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   9,\n   704\n  ],\n  [\n   9,\n   768\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   9,\n   832\n  ],\n  [\n   9,\n   896\n  ],\n  [\n   9,\n   960\n  ],\n  [\n   9,\n   1024\n  ],\n  [\n   9,\n   1088\n  ],\n  [\n   9,\n   1152\n  ],\n  [\n   9,\n   1216\n  ],\n  [\n   9,\n   1280\n  ],\n  [\n   9,\n   1344\n  ],\n  [\n   9,\n   1408\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ]\n ];\n var blackTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   13,\n   640\n  ],\n  [\n   13,\n   704\n  ],\n  [\n   13,\n   768\n  ],\n  [\n   13,\n   832\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   13,\n   1280\n  ],\n  [\n   13,\n   1344\n  ],\n  [\n   13,\n   1408\n  ],\n  [\n   13,\n   1472\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   13,\n   1536\n  ],\n  [\n   13,\n   1600\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   13,\n   1664\n  ],\n  [\n   13,\n   1728\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   13,\n   512\n  ],\n  [\n   13,\n   576\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   13,\n   896\n  ],\n  [\n   13,\n   960\n  ],\n  [\n   13,\n   1024\n  ],\n  [\n   13,\n   1088\n  ],\n  [\n   13,\n   1152\n  ],\n  [\n   13,\n   1216\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ]\n ];\n var blackTable2 = [\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   12,\n   50\n  ],\n  [\n   12,\n   51\n  ],\n  [\n   12,\n   44\n  ],\n  [\n   12,\n   45\n  ],\n  [\n   12,\n   46\n  ],\n  [\n   12,\n   47\n  ],\n  [\n   12,\n   57\n  ],\n  [\n   12,\n   58\n  ],\n  [\n   12,\n   61\n  ],\n  [\n   12,\n   256\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   12,\n   48\n  ],\n  [\n   12,\n   49\n  ],\n  [\n   12,\n   62\n  ],\n  [\n   12,\n   63\n  ],\n  [\n   12,\n   30\n  ],\n  [\n   12,\n   31\n  ],\n  [\n   12,\n   32\n  ],\n  [\n   12,\n   33\n  ],\n  [\n   12,\n   40\n  ],\n  [\n   12,\n   41\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   12,\n   128\n  ],\n  [\n   12,\n   192\n  ],\n  [\n   12,\n   26\n  ],\n  [\n   12,\n   27\n  ],\n  [\n   12,\n   28\n  ],\n  [\n   12,\n   29\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   12,\n   34\n  ],\n  [\n   12,\n   35\n  ],\n  [\n   12,\n   36\n  ],\n  [\n   12,\n   37\n  ],\n  [\n   12,\n   38\n  ],\n  [\n   12,\n   39\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   12,\n   42\n  ],\n  [\n   12,\n   43\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ]\n ];\n var blackTable3 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   6,\n   9\n  ],\n  [\n   6,\n   8\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ]\n ];\n function CCITTFaxStream(str, maybeLength, params) {\n  this.str = str;\n  this.dict = str.dict;\n  params = params || Dict.empty;\n  this.encoding = params.get('K') || 0;\n  this.eoline = params.get('EndOfLine') || false;\n  this.byteAlign = params.get('EncodedByteAlign') || false;\n  this.columns = params.get('Columns') || 1728;\n  this.rows = params.get('Rows') || 0;\n  var eoblock = params.get('EndOfBlock');\n  if (eoblock === null || eoblock === undefined) {\n   eoblock = true;\n  }\n  this.eoblock = eoblock;\n  this.black = params.get('BlackIs1') || false;\n  this.codingLine = new Uint32Array(this.columns + 1);\n  this.refLine = new Uint32Array(this.columns + 2);\n  this.codingLine[0] = this.columns;\n  this.codingPos = 0;\n  this.row = 0;\n  this.nextLine2D = this.encoding < 0;\n  this.inputBits = 0;\n  this.inputBuf = 0;\n  this.outputBits = 0;\n  var code1;\n  while ((code1 = this.lookBits(12)) === 0) {\n   this.eatBits(1);\n  }\n  if (code1 === 1) {\n   this.eatBits(12);\n  }\n  if (this.encoding > 0) {\n   this.nextLine2D = !this.lookBits(1);\n   this.eatBits(1);\n  }\n  DecodeStream.call(this, maybeLength);\n }\n CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n  while (!this.eof) {\n   var c = this.lookChar();\n   this.ensureBuffer(this.bufferLength + 1);\n   this.buffer[this.bufferLength++] = c;\n  }\n };\n CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  } else if (a1 < codingLine[codingPos]) {\n   if (a1 < 0) {\n    info('invalid code');\n    this.err = true;\n    a1 = 0;\n   }\n   while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n    --codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n  var refLine = this.refLine;\n  var codingLine = this.codingLine;\n  var columns = this.columns;\n  var refPos, blackPixels, bits, i;\n  if (this.outputBits === 0) {\n   if (this.eof) {\n    return null;\n   }\n   this.err = false;\n   var code1, code2, code3;\n   if (this.nextLine2D) {\n    for (i = 0; codingLine[i] < columns; ++i) {\n     refLine[i] = codingLine[i];\n    }\n    refLine[i++] = columns;\n    refLine[i] = columns;\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    refPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = this.getTwoDimCode();\n     switch (code1) {\n     case twoDimPass:\n      this.addPixels(refLine[refPos + 1], blackPixels);\n      if (refLine[refPos + 1] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimHoriz:\n      code1 = code2 = 0;\n      if (blackPixels) {\n       do {\n        code1 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n      } else {\n       do {\n        code1 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n      }\n      this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n      if (codingLine[this.codingPos] < columns) {\n       this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n      }\n      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimVertR3:\n      this.addPixels(refLine[refPos] + 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR2:\n      this.addPixels(refLine[refPos] + 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR1:\n      this.addPixels(refLine[refPos] + 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVert0:\n      this.addPixels(refLine[refPos], blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL3:\n      this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL2:\n      this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL1:\n      this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case ccittEOF:\n      this.addPixels(columns, 0);\n      this.eof = true;\n      break;\n     default:\n      info('bad 2d code');\n      this.addPixels(columns, 0);\n      this.err = true;\n     }\n    }\n   } else {\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = 0;\n     if (blackPixels) {\n      do {\n       code1 += code3 = this.getBlackCode();\n      } while (code3 >= 64);\n     } else {\n      do {\n       code1 += code3 = this.getWhiteCode();\n      } while (code3 >= 64);\n     }\n     this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n     blackPixels ^= 1;\n    }\n   }\n   var gotEOL = false;\n   if (this.byteAlign) {\n    this.inputBits &= ~7;\n   }\n   if (!this.eoblock && this.row === this.rows - 1) {\n    this.eof = true;\n   } else {\n    code1 = this.lookBits(12);\n    if (this.eoline) {\n     while (code1 !== ccittEOF && code1 !== 1) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    } else {\n     while (code1 === 0) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    }\n    if (code1 === 1) {\n     this.eatBits(12);\n     gotEOL = true;\n    } else if (code1 === ccittEOF) {\n     this.eof = true;\n    }\n   }\n   if (!this.eof && this.encoding > 0) {\n    this.nextLine2D = !this.lookBits(1);\n    this.eatBits(1);\n   }\n   if (this.eoblock && gotEOL && this.byteAlign) {\n    code1 = this.lookBits(12);\n    if (code1 === 1) {\n     this.eatBits(12);\n     if (this.encoding > 0) {\n      this.lookBits(1);\n      this.eatBits(1);\n     }\n     if (this.encoding >= 0) {\n      for (i = 0; i < 4; ++i) {\n       code1 = this.lookBits(12);\n       if (code1 !== 1) {\n        info('bad rtc code: ' + code1);\n       }\n       this.eatBits(12);\n       if (this.encoding > 0) {\n        this.lookBits(1);\n        this.eatBits(1);\n       }\n      }\n     }\n     this.eof = true;\n    }\n   } else if (this.err && this.eoline) {\n    while (true) {\n     code1 = this.lookBits(13);\n     if (code1 === ccittEOF) {\n      this.eof = true;\n      return null;\n     }\n     if (code1 >> 1 === 1) {\n      break;\n     }\n     this.eatBits(1);\n    }\n    this.eatBits(12);\n    if (this.encoding > 0) {\n     this.eatBits(1);\n     this.nextLine2D = !(code1 & 1);\n    }\n   }\n   if (codingLine[0] > 0) {\n    this.outputBits = codingLine[this.codingPos = 0];\n   } else {\n    this.outputBits = codingLine[this.codingPos = 1];\n   }\n   this.row++;\n  }\n  var c;\n  if (this.outputBits >= 8) {\n   c = this.codingPos & 1 ? 0 : 0xFF;\n   this.outputBits -= 8;\n   if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n    this.codingPos++;\n    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n   }\n  } else {\n   bits = 8;\n   c = 0;\n   do {\n    if (this.outputBits > bits) {\n     c <<= bits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - bits;\n     }\n     this.outputBits -= bits;\n     bits = 0;\n    } else {\n     c <<= this.outputBits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - this.outputBits;\n     }\n     bits -= this.outputBits;\n     this.outputBits = 0;\n     if (codingLine[this.codingPos] < columns) {\n      this.codingPos++;\n      this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n     } else if (bits > 0) {\n      c <<= bits;\n      bits = 0;\n     }\n    }\n   } while (bits);\n  }\n  if (this.black) {\n   c ^= 0xFF;\n  }\n  return c;\n };\n CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n  var limitValue = limit || 0;\n  for (var i = start; i <= end; ++i) {\n   var code = this.lookBits(i);\n   if (code === ccittEOF) {\n    return [\n     true,\n     1,\n     false\n    ];\n   }\n   if (i < end) {\n    code <<= end - i;\n   }\n   if (!limitValue || code >= limitValue) {\n    var p = table[code - limitValue];\n    if (p[0] === i) {\n     this.eatBits(i);\n     return [\n      true,\n      p[1],\n      true\n     ];\n    }\n   }\n  }\n  return [\n   false,\n   0,\n   false\n  ];\n };\n CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(7);\n   p = twoDimTable[code];\n   if (p && p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 7, twoDimTable);\n   if (result[0] && result[2]) {\n    return result[1];\n   }\n  }\n  info('Bad two dim code');\n  return ccittEOF;\n };\n CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(12);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 5 === 0) {\n    p = whiteTable1[code];\n   } else {\n    p = whiteTable2[code >> 3];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 9, whiteTable2);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(11, 12, whiteTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad white code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n  var code, p;\n  if (this.eoblock) {\n   code = this.lookBits(13);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 7 === 0) {\n    p = blackTable1[code];\n   } else if (code >> 9 === 0 && code >> 7 !== 0) {\n    p = blackTable2[(code >> 1) - 64];\n   } else {\n    p = blackTable3[code >> 7];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(2, 6, blackTable3);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(7, 12, blackTable2, 64);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(10, 13, blackTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad black code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n  var c;\n  while (this.inputBits < n) {\n   if ((c = this.str.getByte()) === -1) {\n    if (this.inputBits === 0) {\n     return ccittEOF;\n    }\n    return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n   }\n   this.inputBuf = this.inputBuf << 8 | c;\n   this.inputBits += 8;\n  }\n  return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n };\n CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n  if ((this.inputBits -= n) < 0) {\n   this.inputBits = 0;\n  }\n };\n return CCITTFaxStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n function LZWStream(str, maybeLength, earlyChange) {\n  this.str = str;\n  this.dict = str.dict;\n  this.cachedData = 0;\n  this.bitsCached = 0;\n  var maxLzwDictionarySize = 4096;\n  var lzwState = {\n   earlyChange: earlyChange,\n   codeLength: 9,\n   nextCode: 258,\n   dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n   dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n   dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n   currentSequence: new Uint8Array(maxLzwDictionarySize),\n   currentSequenceLength: 0\n  };\n  for (var i = 0; i < 256; ++i) {\n   lzwState.dictionaryValues[i] = i;\n   lzwState.dictionaryLengths[i] = 1;\n  }\n  this.lzwState = lzwState;\n  DecodeStream.call(this, maybeLength);\n }\n LZWStream.prototype = Object.create(DecodeStream.prototype);\n LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n  var bitsCached = this.bitsCached;\n  var cachedData = this.cachedData;\n  while (bitsCached < n) {\n   var c = this.str.getByte();\n   if (c === -1) {\n    this.eof = true;\n    return null;\n   }\n   cachedData = cachedData << 8 | c;\n   bitsCached += 8;\n  }\n  this.bitsCached = bitsCached -= n;\n  this.cachedData = cachedData;\n  this.lastCode = null;\n  return cachedData >>> bitsCached & (1 << n) - 1;\n };\n LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n  var blockSize = 512;\n  var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n  var i, j, q;\n  var lzwState = this.lzwState;\n  if (!lzwState) {\n   return;\n  }\n  var earlyChange = lzwState.earlyChange;\n  var nextCode = lzwState.nextCode;\n  var dictionaryValues = lzwState.dictionaryValues;\n  var dictionaryLengths = lzwState.dictionaryLengths;\n  var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n  var codeLength = lzwState.codeLength;\n  var prevCode = lzwState.prevCode;\n  var currentSequence = lzwState.currentSequence;\n  var currentSequenceLength = lzwState.currentSequenceLength;\n  var decodedLength = 0;\n  var currentBufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n  for (i = 0; i < blockSize; i++) {\n   var code = this.readBits(codeLength);\n   var hasPrev = currentSequenceLength > 0;\n   if (code < 256) {\n    currentSequence[0] = code;\n    currentSequenceLength = 1;\n   } else if (code >= 258) {\n    if (code < nextCode) {\n     currentSequenceLength = dictionaryLengths[code];\n     for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n      currentSequence[j] = dictionaryValues[q];\n      q = dictionaryPrevCodes[q];\n     }\n    } else {\n     currentSequence[currentSequenceLength++] = currentSequence[0];\n    }\n   } else if (code === 256) {\n    codeLength = 9;\n    nextCode = 258;\n    currentSequenceLength = 0;\n    continue;\n   } else {\n    this.eof = true;\n    delete this.lzwState;\n    break;\n   }\n   if (hasPrev) {\n    dictionaryPrevCodes[nextCode] = prevCode;\n    dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n    dictionaryValues[nextCode] = currentSequence[0];\n    nextCode++;\n    codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n   }\n   prevCode = code;\n   decodedLength += currentSequenceLength;\n   if (estimatedDecodedSize < decodedLength) {\n    do {\n     estimatedDecodedSize += decodedSizeDelta;\n    } while (estimatedDecodedSize < decodedLength);\n    buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n   }\n   for (j = 0; j < currentSequenceLength; j++) {\n    buffer[currentBufferLength++] = currentSequence[j];\n   }\n  }\n  lzwState.nextCode = nextCode;\n  lzwState.codeLength = codeLength;\n  lzwState.prevCode = prevCode;\n  lzwState.currentSequenceLength = currentSequenceLength;\n  this.bufferLength = currentBufferLength;\n };\n return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n function NullStream() {\n  Stream.call(this, new Uint8Array(0));\n }\n NullStream.prototype = Stream.prototype;\n return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.CCITTFaxStream = CCITTFaxStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.Jbig2Stream = Jbig2Stream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar warn = sharedUtil.warn;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = function ColorSpaceClosure() {\n function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n  var COMPONENTS = 3;\n  alpha01 = alpha01 !== 1 ? 0 : alpha01;\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1 * COMPONENTS;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    newIndex += alpha01;\n   }\n  }\n }\n function ColorSpace() {\n  error('should not call ColorSpace constructor');\n }\n ColorSpace.prototype = {\n  getRgb: function ColorSpace_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n   error('Should not call ColorSpace.getRgbItem');\n  },\n  getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   error('Should not call ColorSpace.getRgbBuffer');\n  },\n  getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n   error('Should not call ColorSpace.getOutputLength');\n  },\n  isPassthrough: function ColorSpace_isPassthrough(bits) {\n   return false;\n  },\n  fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n   var count = originalWidth * originalHeight;\n   var rgbBuf = null;\n   var numComponentColors = 1 << bpc;\n   var needsResizing = originalHeight !== height || originalWidth !== width;\n   var i, ii;\n   if (this.isPassthrough(bpc)) {\n    rgbBuf = comps;\n   } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n    var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n    var key;\n    for (i = 0; i < numComponentColors; i++) {\n     allColors[i] = i;\n    }\n    var colorMap = new Uint8Array(numComponentColors * 3);\n    this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n    var destPos, rgbPos;\n    if (!needsResizing) {\n     destPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      dest[destPos++] = colorMap[key];\n      dest[destPos++] = colorMap[key + 1];\n      dest[destPos++] = colorMap[key + 2];\n      destPos += alpha01;\n     }\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     rgbPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      rgbBuf[rgbPos++] = colorMap[key];\n      rgbBuf[rgbPos++] = colorMap[key + 1];\n      rgbBuf[rgbPos++] = colorMap[key + 2];\n     }\n    }\n   } else {\n    if (!needsResizing) {\n     this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n    }\n   }\n   if (rgbBuf) {\n    if (needsResizing) {\n     resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n    } else {\n     rgbPos = 0;\n     destPos = 0;\n     for (i = 0, ii = width * actualHeight; i < ii; i++) {\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      destPos += alpha01;\n     }\n    }\n   }\n  },\n  usesZeroToOneRange: true\n };\n ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n  var IR = ColorSpace.parseToIR(cs, xref, res);\n  if (IR instanceof AlternateCS) {\n   return IR;\n  }\n  return ColorSpace.fromIR(IR);\n };\n ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n  var name = isArray(IR) ? IR[0] : IR;\n  var whitePoint, blackPoint, gamma;\n  switch (name) {\n  case 'DeviceGrayCS':\n   return this.singletons.gray;\n  case 'DeviceRgbCS':\n   return this.singletons.rgb;\n  case 'DeviceCmykCS':\n   return this.singletons.cmyk;\n  case 'CalGrayCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   return new CalGrayCS(whitePoint, blackPoint, gamma);\n  case 'CalRGBCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   var matrix = IR[4];\n   return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n  case 'PatternCS':\n   var basePatternCS = IR[1];\n   if (basePatternCS) {\n    basePatternCS = ColorSpace.fromIR(basePatternCS);\n   }\n   return new PatternCS(basePatternCS);\n  case 'IndexedCS':\n   var baseIndexedCS = IR[1];\n   var hiVal = IR[2];\n   var lookup = IR[3];\n   return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n  case 'AlternateCS':\n   var numComps = IR[1];\n   var alt = IR[2];\n   var tintFnIR = IR[3];\n   return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n  case 'LabCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   var range = IR[3];\n   return new LabCS(whitePoint, blackPoint, range);\n  default:\n   error('Unknown name ' + name);\n  }\n  return null;\n };\n ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n  if (isName(cs)) {\n   var colorSpaces = res.get('ColorSpace');\n   if (isDict(colorSpaces)) {\n    var refcs = colorSpaces.get(cs.name);\n    if (refcs) {\n     cs = refcs;\n    }\n   }\n  }\n  cs = xref.fetchIfRef(cs);\n  if (isName(cs)) {\n   switch (cs.name) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'Pattern':\n    return [\n     'PatternCS',\n     null\n    ];\n   default:\n    error('unrecognized colorspace ' + cs.name);\n   }\n  } else if (isArray(cs)) {\n   var mode = xref.fetchIfRef(cs[0]).name;\n   var numComps, params, alt, whitePoint, blackPoint, gamma;\n   switch (mode) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'CalGray':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.get('Gamma');\n    return [\n     'CalGrayCS',\n     whitePoint,\n     blackPoint,\n     gamma\n    ];\n   case 'CalRGB':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.getArray('Gamma');\n    var matrix = params.getArray('Matrix');\n    return [\n     'CalRGBCS',\n     whitePoint,\n     blackPoint,\n     gamma,\n     matrix\n    ];\n   case 'ICCBased':\n    var stream = xref.fetchIfRef(cs[1]);\n    var dict = stream.dict;\n    numComps = dict.get('N');\n    alt = dict.get('Alternate');\n    if (alt) {\n     var altIR = ColorSpace.parseToIR(alt, xref, res);\n     var altCS = ColorSpace.fromIR(altIR);\n     if (altCS.numComps === numComps) {\n      return altIR;\n     }\n     warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n    }\n    if (numComps === 1) {\n     return 'DeviceGrayCS';\n    } else if (numComps === 3) {\n     return 'DeviceRgbCS';\n    } else if (numComps === 4) {\n     return 'DeviceCmykCS';\n    }\n    break;\n   case 'Pattern':\n    var basePatternCS = cs[1] || null;\n    if (basePatternCS) {\n     basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n    }\n    return [\n     'PatternCS',\n     basePatternCS\n    ];\n   case 'Indexed':\n   case 'I':\n    var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n    var hiVal = xref.fetchIfRef(cs[2]) + 1;\n    var lookup = xref.fetchIfRef(cs[3]);\n    if (isStream(lookup)) {\n     lookup = lookup.getBytes();\n    }\n    return [\n     'IndexedCS',\n     baseIndexedCS,\n     hiVal,\n     lookup\n    ];\n   case 'Separation':\n   case 'DeviceN':\n    var name = xref.fetchIfRef(cs[1]);\n    numComps = isArray(name) ? name.length : 1;\n    alt = ColorSpace.parseToIR(cs[2], xref, res);\n    var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n    return [\n     'AlternateCS',\n     numComps,\n     alt,\n     tintFnIR\n    ];\n   case 'Lab':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    var range = params.getArray('Range');\n    return [\n     'LabCS',\n     whitePoint,\n     blackPoint,\n     range\n    ];\n   default:\n    error('unimplemented color space object \"' + mode + '\"');\n   }\n  } else {\n   error('unrecognized color space object: \"' + cs + '\"');\n  }\n  return null;\n };\n ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n  if (!isArray(decode)) {\n   return true;\n  }\n  if (n * 2 !== decode.length) {\n   warn('The decode map is not the correct length');\n   return true;\n  }\n  for (var i = 0, ii = decode.length; i < ii; i += 2) {\n   if (decode[i] !== 0 || decode[i + 1] !== 1) {\n    return false;\n   }\n  }\n  return true;\n };\n ColorSpace.singletons = {\n  get gray() {\n   return shadow(this, 'gray', new DeviceGrayCS());\n  },\n  get rgb() {\n   return shadow(this, 'rgb', new DeviceRgbCS());\n  },\n  get cmyk() {\n   return shadow(this, 'cmyk', new DeviceCmykCS());\n  }\n };\n return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n function AlternateCS(numComps, base, tintFn) {\n  this.name = 'Alternate';\n  this.numComps = numComps;\n  this.defaultColor = new Float32Array(numComps);\n  for (var i = 0; i < numComps; ++i) {\n   this.defaultColor[i] = 1;\n  }\n  this.base = base;\n  this.tintFn = tintFn;\n  this.tmpBuf = new Float32Array(base.numComps);\n }\n AlternateCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var tmpBuf = this.tmpBuf;\n   this.tintFn(src, srcOffset, tmpBuf, 0);\n   this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n  },\n  getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var tintFn = this.tintFn;\n   var base = this.base;\n   var scale = 1 / ((1 << bits) - 1);\n   var baseNumComps = base.numComps;\n   var usesZeroToOneRange = base.usesZeroToOneRange;\n   var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n   var pos = isPassthrough ? destOffset : 0;\n   var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n   var numComps = this.numComps;\n   var scaled = new Float32Array(numComps);\n   var tinted = new Float32Array(baseNumComps);\n   var i, j;\n   for (i = 0; i < count; i++) {\n    for (j = 0; j < numComps; j++) {\n     scaled[j] = src[srcOffset++] * scale;\n    }\n    tintFn(scaled, 0, tinted, 0);\n    if (usesZeroToOneRange) {\n     for (j = 0; j < baseNumComps; j++) {\n      baseBuf[pos++] = tinted[j] * 255;\n     }\n    } else {\n     base.getRgbItem(tinted, 0, baseBuf, pos);\n     pos += baseNumComps;\n    }\n   }\n   if (!isPassthrough) {\n    base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n   }\n  },\n  getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n function PatternCS(baseCS) {\n  this.name = 'Pattern';\n  this.base = baseCS;\n }\n PatternCS.prototype = {};\n return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n function IndexedCS(base, highVal, lookup) {\n  this.name = 'Indexed';\n  this.numComps = 1;\n  this.defaultColor = new Uint8Array(this.numComps);\n  this.base = base;\n  this.highVal = highVal;\n  var baseNumComps = base.numComps;\n  var length = baseNumComps * highVal;\n  if (isStream(lookup)) {\n   this.lookup = new Uint8Array(length);\n   var bytes = lookup.getBytes(length);\n   this.lookup.set(bytes);\n  } else if (isString(lookup)) {\n   this.lookup = new Uint8Array(length);\n   for (var i = 0; i < length; ++i) {\n    this.lookup[i] = lookup.charCodeAt(i);\n   }\n  } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n   this.lookup = lookup;\n  } else {\n   error('Unrecognized lookup table: ' + lookup);\n  }\n }\n IndexedCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var numComps = this.base.numComps;\n   var start = src[srcOffset] * numComps;\n   this.base.getRgbItem(this.lookup, start, dest, destOffset);\n  },\n  getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var base = this.base;\n   var numComps = base.numComps;\n   var outputDelta = base.getOutputLength(numComps, alpha01);\n   var lookup = this.lookup;\n   for (var i = 0; i < count; ++i) {\n    var lookupPos = src[srcOffset++] * numComps;\n    base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n    destOffset += outputDelta;\n   }\n  },\n  getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: true\n };\n return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n function DeviceGrayCS() {\n  this.name = 'DeviceGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var c = src[srcOffset] * 255 | 0;\n   c = c < 0 ? 0 : c > 255 ? 255 : c;\n   dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n  },\n  getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    var c = scale * src[j++] | 0;\n    dest[q++] = c;\n    dest[q++] = c;\n    dest[q++] = c;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n function DeviceRgbCS() {\n  this.name = 'DeviceRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceRgbCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var r = src[srcOffset] * 255 | 0;\n   var g = src[srcOffset + 1] * 255 | 0;\n   var b = src[srcOffset + 2] * 255 | 0;\n   dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n   dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n   dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n  },\n  getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   if (bits === 8 && alpha01 === 0) {\n    dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n    return;\n   }\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n   return bits === 8;\n  },\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n  var c = src[srcOffset + 0] * srcScale;\n  var m = src[srcOffset + 1] * srcScale;\n  var y = src[srcOffset + 2] * srcScale;\n  var k = src[srcOffset + 3] * srcScale;\n  var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n  var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n  var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n  dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n  dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n  dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n }\n function DeviceCmykCS() {\n  this.name = 'DeviceCMYK';\n  this.numComps = 4;\n  this.defaultColor = new Float32Array(this.numComps);\n  this.defaultColor[3] = 1;\n }\n DeviceCmykCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(src, srcOffset, 1, dest, destOffset);\n  },\n  getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; i++) {\n    convertToRgb(src, srcOffset, scale, dest, destOffset);\n    srcOffset += 4;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n   return inputLength / 4 * (3 + alpha01) | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n function CalGrayCS(whitePoint, blackPoint, gamma) {\n  this.name = 'CalGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalGray');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  gamma = gamma || 1;\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  this.G = gamma;\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n   warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n  }\n  if (this.G < 1) {\n   info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n   this.G = 1;\n  }\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = src[srcOffset] * scale;\n  var AG = Math.pow(A, cs.G);\n  var L = cs.YW * AG;\n  var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n  dest[destOffset] = val;\n  dest[destOffset + 1] = val;\n  dest[destOffset + 2] = val;\n }\n CalGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 1;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n var BRADFORD_SCALE_MATRIX = new Float32Array([\n  0.8951,\n  0.2664,\n  -0.1614,\n  -0.7502,\n  1.7135,\n  0.0367,\n  0.0389,\n  -0.0685,\n  1.0296\n ]);\n var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n  0.9869929,\n  -0.1470543,\n  0.1599627,\n  0.4323053,\n  0.5183603,\n  0.0492912,\n  -0.0085287,\n  0.0400428,\n  0.9684867\n ]);\n var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n  3.2404542,\n  -1.5371385,\n  -0.4985314,\n  -0.9692660,\n  1.8760108,\n  0.0415560,\n  0.0556434,\n  -0.2040259,\n  1.0572252\n ]);\n var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n  1,\n  1,\n  1\n ]);\n var tempNormalizeMatrix = new Float32Array(3);\n var tempConvertMatrix1 = new Float32Array(3);\n var tempConvertMatrix2 = new Float32Array(3);\n var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n  this.name = 'CalRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalRGB');\n  }\n  blackPoint = blackPoint || new Float32Array(3);\n  gamma = gamma || new Float32Array([\n   1,\n   1,\n   1\n  ]);\n  matrix = matrix || new Float32Array([\n   1,\n   0,\n   0,\n   0,\n   1,\n   0,\n   0,\n   0,\n   1\n  ]);\n  var XW = whitePoint[0];\n  var YW = whitePoint[1];\n  var ZW = whitePoint[2];\n  this.whitePoint = whitePoint;\n  var XB = blackPoint[0];\n  var YB = blackPoint[1];\n  var ZB = blackPoint[2];\n  this.blackPoint = blackPoint;\n  this.GR = gamma[0];\n  this.GG = gamma[1];\n  this.GB = gamma[2];\n  this.MXA = matrix[0];\n  this.MYA = matrix[1];\n  this.MZA = matrix[2];\n  this.MXB = matrix[3];\n  this.MYB = matrix[4];\n  this.MZB = matrix[5];\n  this.MXC = matrix[6];\n  this.MYC = matrix[7];\n  this.MZC = matrix[8];\n  if (XW < 0 || ZW < 0 || YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (XB < 0 || YB < 0 || ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n   this.blackPoint = new Float32Array(3);\n  }\n  if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n   info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n   this.GR = this.GG = this.GB = 1;\n  }\n  if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n   info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n   this.MXA = this.MYB = this.MZC = 1;\n   this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n  }\n }\n function matrixProduct(a, b, result) {\n  result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n  result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n }\n function convertToFlat(sourceWhitePoint, LMS, result) {\n  result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n  result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n  result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n }\n function convertToD65(sourceWhitePoint, LMS, result) {\n  var D65X = 0.95047;\n  var D65Y = 1;\n  var D65Z = 1.08883;\n  result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n  result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n  result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n }\n function sRGBTransferFunction(color) {\n  if (color <= 0.0031308) {\n   return adjustToRange(0, 1, 12.92 * color);\n  }\n  return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n }\n function adjustToRange(min, max, value) {\n  return Math.max(min, Math.min(max, value));\n }\n function decodeL(L) {\n  if (L < 0) {\n   return -decodeL(-L);\n  }\n  if (L > 8.0) {\n   return Math.pow((L + 16) / 116, 3);\n  }\n  return L * DECODE_L_CONSTANT;\n }\n function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n  if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n   result[0] = XYZ_Flat[0];\n   result[1] = XYZ_Flat[1];\n   result[2] = XYZ_Flat[2];\n   return;\n  }\n  var zeroDecodeL = decodeL(0);\n  var X_DST = zeroDecodeL;\n  var X_SRC = decodeL(sourceBlackPoint[0]);\n  var Y_DST = zeroDecodeL;\n  var Y_SRC = decodeL(sourceBlackPoint[1]);\n  var Z_DST = zeroDecodeL;\n  var Z_SRC = decodeL(sourceBlackPoint[2]);\n  var X_Scale = (1 - X_DST) / (1 - X_SRC);\n  var X_Offset = 1 - X_Scale;\n  var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n  var Y_Offset = 1 - Y_Scale;\n  var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n  var Z_Offset = 1 - Z_Scale;\n  result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n  result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n  result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n }\n function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n  if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n   result[0] = XYZ_In[0];\n   result[1] = XYZ_In[1];\n   result[2] = XYZ_In[2];\n   return;\n  }\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_Flat = tempNormalizeMatrix;\n  convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n }\n function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_D65 = tempNormalizeMatrix;\n  convertToD65(sourceWhitePoint, LMS, LMS_D65);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = adjustToRange(0, 1, src[srcOffset] * scale);\n  var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n  var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n  var AGR = Math.pow(A, cs.GR);\n  var BGG = Math.pow(B, cs.GG);\n  var CGB = Math.pow(C, cs.GB);\n  var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n  var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n  var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n  var XYZ = tempConvertMatrix1;\n  XYZ[0] = X;\n  XYZ[1] = Y;\n  XYZ[2] = Z;\n  var XYZ_Flat = tempConvertMatrix2;\n  normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n  var XYZ_Black = tempConvertMatrix1;\n  compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n  var XYZ_D65 = tempConvertMatrix2;\n  normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n  var SRGB = tempConvertMatrix1;\n  matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n  var sR = sRGBTransferFunction(SRGB[0]);\n  var sG = sRGBTransferFunction(SRGB[1]);\n  var sB = sRGBTransferFunction(SRGB[2]);\n  dest[destOffset] = Math.round(sR * 255);\n  dest[destOffset + 1] = Math.round(sG * 255);\n  dest[destOffset + 2] = Math.round(sB * 255);\n }\n CalRGBCS.prototype = {\n  getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n function LabCS(whitePoint, blackPoint, range) {\n  this.name = 'Lab';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space Lab');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  range = range || [\n   -100,\n   100,\n   -100,\n   100\n  ];\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.amin = range[0];\n  this.amax = range[1];\n  this.bmin = range[2];\n  this.bmax = range[3];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components, no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint, falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.amin > this.amax || this.bmin > this.bmax) {\n   info('Invalid Range, falling back to defaults');\n   this.amin = -100;\n   this.amax = 100;\n   this.bmin = -100;\n   this.bmax = 100;\n  }\n }\n function fn_g(x) {\n  var result;\n  if (x >= 6 / 29) {\n   result = x * x * x;\n  } else {\n   result = 108 / 841 * (x - 4 / 29);\n  }\n  return result;\n }\n function decode(value, high1, low2, high2) {\n  return low2 + value * (high2 - low2) / high1;\n }\n function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n  var Ls = src[srcOffset];\n  var as = src[srcOffset + 1];\n  var bs = src[srcOffset + 2];\n  if (maxVal !== false) {\n   Ls = decode(Ls, maxVal, 0, 100);\n   as = decode(as, maxVal, cs.amin, cs.amax);\n   bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n  }\n  as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n  bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n  var M = (Ls + 16) / 116;\n  var L = M + as / 500;\n  var N = M - bs / 200;\n  var X = cs.XW * fn_g(L);\n  var Y = cs.YW * fn_g(M);\n  var Z = cs.ZW * fn_g(N);\n  var r, g, b;\n  if (cs.ZW < 1) {\n   r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n   g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n   b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n  } else {\n   r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n   g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n   b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n  }\n  dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n  dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n  dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n }\n LabCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, false, dest, destOffset);\n  },\n  getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var maxVal = (1 << bits) - 1;\n   for (var i = 0; i < count; i++) {\n    convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: false\n };\n return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n '',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n '',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n '',\n '',\n 'isuperior',\n '',\n '',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n '',\n '',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n '',\n '',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n '',\n 'Dotaccentsmall',\n '',\n '',\n 'Macronsmall',\n '',\n '',\n 'figuredash',\n 'hypheninferior',\n '',\n '',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n '',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar MacExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'centoldstyle',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n '',\n 'threequartersemdash',\n '',\n 'questionsmall',\n '',\n '',\n '',\n '',\n 'Ethsmall',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n '',\n '',\n '',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hypheninferior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n 'asuperior',\n 'centsuperior',\n '',\n '',\n '',\n '',\n 'Aacutesmall',\n 'Agravesmall',\n 'Acircumflexsmall',\n 'Adieresissmall',\n 'Atildesmall',\n 'Aringsmall',\n 'Ccedillasmall',\n 'Eacutesmall',\n 'Egravesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Iacutesmall',\n 'Igravesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ntildesmall',\n 'Oacutesmall',\n 'Ogravesmall',\n 'Ocircumflexsmall',\n 'Odieresissmall',\n 'Otildesmall',\n 'Uacutesmall',\n 'Ugravesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n '',\n 'eightsuperior',\n 'fourinferior',\n 'threeinferior',\n 'sixinferior',\n 'eightinferior',\n 'seveninferior',\n 'Scaronsmall',\n '',\n 'centinferior',\n 'twoinferior',\n '',\n 'Dieresissmall',\n '',\n 'Caronsmall',\n 'osuperior',\n 'fiveinferior',\n '',\n 'commainferior',\n 'periodinferior',\n 'Yacutesmall',\n '',\n 'dollarinferior',\n '',\n 'Thornsmall',\n '',\n 'nineinferior',\n 'zeroinferior',\n 'Zcaronsmall',\n 'AEsmall',\n 'Oslashsmall',\n 'questiondownsmall',\n 'oneinferior',\n 'Lslashsmall',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Cedillasmall',\n '',\n '',\n '',\n '',\n '',\n 'OEsmall',\n 'figuredash',\n 'hyphensuperior',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n '',\n 'Ydieresissmall',\n '',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'ninesuperior',\n 'zerosuperior',\n '',\n 'esuperior',\n 'rsuperior',\n 'tsuperior',\n '',\n '',\n 'isuperior',\n 'ssuperior',\n 'dsuperior',\n '',\n '',\n '',\n '',\n '',\n 'lsuperior',\n 'Ogoneksmall',\n 'Brevesmall',\n 'Macronsmall',\n 'bsuperior',\n 'nsuperior',\n 'msuperior',\n 'commasuperior',\n 'periodsuperior',\n 'Dotaccentsmall',\n 'Ringsmall'\n];\nvar MacRomanEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'space',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron'\n];\nvar StandardEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n '',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n '',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n '',\n 'questiondown',\n '',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n '',\n 'ring',\n 'cedilla',\n '',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'AE',\n '',\n 'ordfeminine',\n '',\n '',\n '',\n '',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n '',\n '',\n '',\n '',\n '',\n 'ae',\n '',\n '',\n '',\n 'dotlessi',\n '',\n '',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls'\n];\nvar WinAnsiEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'bullet',\n 'Euro',\n 'bullet',\n 'quotesinglbase',\n 'florin',\n 'quotedblbase',\n 'ellipsis',\n 'dagger',\n 'daggerdbl',\n 'circumflex',\n 'perthousand',\n 'Scaron',\n 'guilsinglleft',\n 'OE',\n 'bullet',\n 'Zcaron',\n 'bullet',\n 'bullet',\n 'quoteleft',\n 'quoteright',\n 'quotedblleft',\n 'quotedblright',\n 'bullet',\n 'endash',\n 'emdash',\n 'tilde',\n 'trademark',\n 'scaron',\n 'guilsinglright',\n 'oe',\n 'bullet',\n 'zcaron',\n 'Ydieresis',\n 'space',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'currency',\n 'yen',\n 'brokenbar',\n 'section',\n 'dieresis',\n 'copyright',\n 'ordfeminine',\n 'guillemotleft',\n 'logicalnot',\n 'hyphen',\n 'registered',\n 'macron',\n 'degree',\n 'plusminus',\n 'twosuperior',\n 'threesuperior',\n 'acute',\n 'mu',\n 'paragraph',\n 'periodcentered',\n 'cedilla',\n 'onesuperior',\n 'ordmasculine',\n 'guillemotright',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondown',\n 'Agrave',\n 'Aacute',\n 'Acircumflex',\n 'Atilde',\n 'Adieresis',\n 'Aring',\n 'AE',\n 'Ccedilla',\n 'Egrave',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Igrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Eth',\n 'Ntilde',\n 'Ograve',\n 'Oacute',\n 'Ocircumflex',\n 'Otilde',\n 'Odieresis',\n 'multiply',\n 'Oslash',\n 'Ugrave',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Yacute',\n 'Thorn',\n 'germandbls',\n 'agrave',\n 'aacute',\n 'acircumflex',\n 'atilde',\n 'adieresis',\n 'aring',\n 'ae',\n 'ccedilla',\n 'egrave',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'igrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'eth',\n 'ntilde',\n 'ograve',\n 'oacute',\n 'ocircumflex',\n 'otilde',\n 'odieresis',\n 'divide',\n 'oslash',\n 'ugrave',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'yacute',\n 'thorn',\n 'ydieresis'\n];\nvar SymbolSetEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'universal',\n 'numbersign',\n 'existential',\n 'percent',\n 'ampersand',\n 'suchthat',\n 'parenleft',\n 'parenright',\n 'asteriskmath',\n 'plus',\n 'comma',\n 'minus',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'congruent',\n 'Alpha',\n 'Beta',\n 'Chi',\n 'Delta',\n 'Epsilon',\n 'Phi',\n 'Gamma',\n 'Eta',\n 'Iota',\n 'theta1',\n 'Kappa',\n 'Lambda',\n 'Mu',\n 'Nu',\n 'Omicron',\n 'Pi',\n 'Theta',\n 'Rho',\n 'Sigma',\n 'Tau',\n 'Upsilon',\n 'sigma1',\n 'Omega',\n 'Xi',\n 'Psi',\n 'Zeta',\n 'bracketleft',\n 'therefore',\n 'bracketright',\n 'perpendicular',\n 'underscore',\n 'radicalex',\n 'alpha',\n 'beta',\n 'chi',\n 'delta',\n 'epsilon',\n 'phi',\n 'gamma',\n 'eta',\n 'iota',\n 'phi1',\n 'kappa',\n 'lambda',\n 'mu',\n 'nu',\n 'omicron',\n 'pi',\n 'theta',\n 'rho',\n 'sigma',\n 'tau',\n 'upsilon',\n 'omega1',\n 'omega',\n 'xi',\n 'psi',\n 'zeta',\n 'braceleft',\n 'bar',\n 'braceright',\n 'similar',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Euro',\n 'Upsilon1',\n 'minute',\n 'lessequal',\n 'fraction',\n 'infinity',\n 'florin',\n 'club',\n 'diamond',\n 'heart',\n 'spade',\n 'arrowboth',\n 'arrowleft',\n 'arrowup',\n 'arrowright',\n 'arrowdown',\n 'degree',\n 'plusminus',\n 'second',\n 'greaterequal',\n 'multiply',\n 'proportional',\n 'partialdiff',\n 'bullet',\n 'divide',\n 'notequal',\n 'equivalence',\n 'approxequal',\n 'ellipsis',\n 'arrowvertex',\n 'arrowhorizex',\n 'carriagereturn',\n 'aleph',\n 'Ifraktur',\n 'Rfraktur',\n 'weierstrass',\n 'circlemultiply',\n 'circleplus',\n 'emptyset',\n 'intersection',\n 'union',\n 'propersuperset',\n 'reflexsuperset',\n 'notsubset',\n 'propersubset',\n 'reflexsubset',\n 'element',\n 'notelement',\n 'angle',\n 'gradient',\n 'registerserif',\n 'copyrightserif',\n 'trademarkserif',\n 'product',\n 'radical',\n 'dotmath',\n 'logicalnot',\n 'logicaland',\n 'logicalor',\n 'arrowdblboth',\n 'arrowdblleft',\n 'arrowdblup',\n 'arrowdblright',\n 'arrowdbldown',\n 'lozenge',\n 'angleleft',\n 'registersans',\n 'copyrightsans',\n 'trademarksans',\n 'summation',\n 'parenlefttp',\n 'parenleftex',\n 'parenleftbt',\n 'bracketlefttp',\n 'bracketleftex',\n 'bracketleftbt',\n 'bracelefttp',\n 'braceleftmid',\n 'braceleftbt',\n 'braceex',\n '',\n 'angleright',\n 'integral',\n 'integraltp',\n 'integralex',\n 'integralbt',\n 'parenrighttp',\n 'parenrightex',\n 'parenrightbt',\n 'bracketrighttp',\n 'bracketrightex',\n 'bracketrightbt',\n 'bracerighttp',\n 'bracerightmid',\n 'bracerightbt'\n];\nvar ZapfDingbatsEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'a1',\n 'a2',\n 'a202',\n 'a3',\n 'a4',\n 'a5',\n 'a119',\n 'a118',\n 'a117',\n 'a11',\n 'a12',\n 'a13',\n 'a14',\n 'a15',\n 'a16',\n 'a105',\n 'a17',\n 'a18',\n 'a19',\n 'a20',\n 'a21',\n 'a22',\n 'a23',\n 'a24',\n 'a25',\n 'a26',\n 'a27',\n 'a28',\n 'a6',\n 'a7',\n 'a8',\n 'a9',\n 'a10',\n 'a29',\n 'a30',\n 'a31',\n 'a32',\n 'a33',\n 'a34',\n 'a35',\n 'a36',\n 'a37',\n 'a38',\n 'a39',\n 'a40',\n 'a41',\n 'a42',\n 'a43',\n 'a44',\n 'a45',\n 'a46',\n 'a47',\n 'a48',\n 'a49',\n 'a50',\n 'a51',\n 'a52',\n 'a53',\n 'a54',\n 'a55',\n 'a56',\n 'a57',\n 'a58',\n 'a59',\n 'a60',\n 'a61',\n 'a62',\n 'a63',\n 'a64',\n 'a65',\n 'a66',\n 'a67',\n 'a68',\n 'a69',\n 'a70',\n 'a71',\n 'a72',\n 'a73',\n 'a74',\n 'a203',\n 'a75',\n 'a204',\n 'a76',\n 'a77',\n 'a78',\n 'a79',\n 'a81',\n 'a82',\n 'a83',\n 'a84',\n 'a97',\n 'a98',\n 'a99',\n 'a100',\n '',\n 'a89',\n 'a90',\n 'a93',\n 'a94',\n 'a91',\n 'a92',\n 'a205',\n 'a85',\n 'a206',\n 'a86',\n 'a87',\n 'a88',\n 'a95',\n 'a96',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'a101',\n 'a102',\n 'a103',\n 'a104',\n 'a106',\n 'a107',\n 'a108',\n 'a112',\n 'a111',\n 'a110',\n 'a109',\n 'a120',\n 'a121',\n 'a122',\n 'a123',\n 'a124',\n 'a125',\n 'a126',\n 'a127',\n 'a128',\n 'a129',\n 'a130',\n 'a131',\n 'a132',\n 'a133',\n 'a134',\n 'a135',\n 'a136',\n 'a137',\n 'a138',\n 'a139',\n 'a140',\n 'a141',\n 'a142',\n 'a143',\n 'a144',\n 'a145',\n 'a146',\n 'a147',\n 'a148',\n 'a149',\n 'a150',\n 'a151',\n 'a152',\n 'a153',\n 'a154',\n 'a155',\n 'a156',\n 'a157',\n 'a158',\n 'a159',\n 'a160',\n 'a161',\n 'a163',\n 'a164',\n 'a196',\n 'a165',\n 'a192',\n 'a166',\n 'a167',\n 'a168',\n 'a169',\n 'a170',\n 'a171',\n 'a172',\n 'a173',\n 'a162',\n 'a174',\n 'a175',\n 'a176',\n 'a177',\n 'a178',\n 'a179',\n 'a193',\n 'a180',\n 'a199',\n 'a181',\n 'a200',\n 'a182',\n '',\n 'a201',\n 'a183',\n 'a184',\n 'a197',\n 'a185',\n 'a194',\n 'a198',\n 'a186',\n 'a195',\n 'a187',\n 'a188',\n 'a189',\n 'a190',\n 'a191'\n];\nfunction getEncoding(encodingName) {\n switch (encodingName) {\n case 'WinAnsiEncoding':\n  return WinAnsiEncoding;\n case 'StandardEncoding':\n  return StandardEncoding;\n case 'MacRomanEncoding':\n  return MacRomanEncoding;\n case 'SymbolSetEncoding':\n  return SymbolSetEncoding;\n case 'ZapfDingbatsEncoding':\n  return ZapfDingbatsEncoding;\n case 'ExpertEncoding':\n  return ExpertEncoding;\n case 'MacExpertEncoding':\n  return MacExpertEncoding;\n default:\n  return null;\n }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar StreamType = sharedUtil.StreamType;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar warn = sharedUtil.warn;\nvar EOF = corePrimitives.EOF;\nvar Cmd = corePrimitives.Cmd;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar Ref = corePrimitives.Ref;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar Ascii85Stream = coreStream.Ascii85Stream;\nvar AsciiHexStream = coreStream.AsciiHexStream;\nvar CCITTFaxStream = coreStream.CCITTFaxStream;\nvar FlateStream = coreStream.FlateStream;\nvar Jbig2Stream = coreStream.Jbig2Stream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxStream = coreStream.JpxStream;\nvar LZWStream = coreStream.LZWStream;\nvar NullStream = coreStream.NullStream;\nvar PredictorStream = coreStream.PredictorStream;\nvar RunLengthStream = coreStream.RunLengthStream;\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n function Parser(lexer, allowStreams, xref, recoveryMode) {\n  this.lexer = lexer;\n  this.allowStreams = allowStreams;\n  this.xref = xref;\n  this.recoveryMode = recoveryMode || false;\n  this.imageCache = Object.create(null);\n  this.refill();\n }\n Parser.prototype = {\n  refill: function Parser_refill() {\n   this.buf1 = this.lexer.getObj();\n   this.buf2 = this.lexer.getObj();\n  },\n  shift: function Parser_shift() {\n   if (isCmd(this.buf2, 'ID')) {\n    this.buf1 = this.buf2;\n    this.buf2 = null;\n   } else {\n    this.buf1 = this.buf2;\n    this.buf2 = this.lexer.getObj();\n   }\n  },\n  tryShift: function Parser_tryShift() {\n   try {\n    this.shift();\n    return true;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    return false;\n   }\n  },\n  getObj: function Parser_getObj(cipherTransform) {\n   var buf1 = this.buf1;\n   this.shift();\n   if (buf1 instanceof Cmd) {\n    switch (buf1.cmd) {\n    case 'BI':\n     return this.makeInlineImage(cipherTransform);\n    case '[':\n     var array = [];\n     while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n      array.push(this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside array');\n      }\n      return array;\n     }\n     this.shift();\n     return array;\n    case '<<':\n     var dict = new Dict(this.xref);\n     while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n      if (!isName(this.buf1)) {\n       info('Malformed dictionary: key must be a name object');\n       this.shift();\n       continue;\n      }\n      var key = this.buf1.name;\n      this.shift();\n      if (isEOF(this.buf1)) {\n       break;\n      }\n      dict.set(key, this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside dictionary');\n      }\n      return dict;\n     }\n     if (isCmd(this.buf2, 'stream')) {\n      return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n     }\n     this.shift();\n     return dict;\n    default:\n     return buf1;\n    }\n   }\n   if (isInt(buf1)) {\n    var num = buf1;\n    if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n     var ref = new Ref(num, this.buf1);\n     this.shift();\n     this.shift();\n     return ref;\n    }\n    return num;\n   }\n   if (isString(buf1)) {\n    var str = buf1;\n    if (cipherTransform) {\n     str = cipherTransform.decryptString(str);\n    }\n    return str;\n   }\n   return buf1;\n  },\n  findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n   var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n   var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else {\n     assert(state === 2);\n     if (ch === SPACE || ch === LF || ch === CR) {\n      n = 5;\n      followingBytes = stream.peekBytes(n);\n      for (i = 0; i < n; i++) {\n       ch = followingBytes[i];\n       if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n        state = 0;\n        break;\n       }\n      }\n      if (state === 2) {\n       break;\n      }\n     } else {\n      state = 0;\n     }\n    }\n   }\n   return stream.pos - 4 - startPos;\n  },\n  findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n   var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n   while ((b = stream.getByte()) !== -1) {\n    if (b !== 0xFF) {\n     continue;\n    }\n    switch (stream.getByte()) {\n    case 0x00:\n     break;\n    case 0xFF:\n     stream.skip(-1);\n     break;\n    case 0xD9:\n     foundEOI = true;\n     break;\n    case 0xC0:\n    case 0xC1:\n    case 0xC2:\n    case 0xC3:\n    case 0xC5:\n    case 0xC6:\n    case 0xC7:\n    case 0xC9:\n    case 0xCA:\n    case 0xCB:\n    case 0xCD:\n    case 0xCE:\n    case 0xCF:\n    case 0xC4:\n    case 0xCC:\n    case 0xDA:\n    case 0xDB:\n    case 0xDC:\n    case 0xDD:\n    case 0xDE:\n    case 0xDF:\n    case 0xE0:\n    case 0xE1:\n    case 0xE2:\n    case 0xE3:\n    case 0xE4:\n    case 0xE5:\n    case 0xE6:\n    case 0xE7:\n    case 0xE8:\n    case 0xE9:\n    case 0xEA:\n    case 0xEB:\n    case 0xEC:\n    case 0xED:\n    case 0xEE:\n    case 0xEF:\n    case 0xFE:\n     markerLength = stream.getUint16();\n     if (markerLength > 2) {\n      stream.skip(markerLength - 2);\n     } else {\n      stream.skip(-2);\n     }\n     break;\n    }\n    if (foundEOI) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (b === -1) {\n    warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n   var TILDE = 0x7E, GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === TILDE && stream.peekByte() === GT) {\n     stream.skip();\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n   var GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === GT) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n   var E = 0x45, I = 0x49;\n   var state = 0, ch;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else if (state === 2) {\n     break;\n    }\n   }\n  },\n  makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   var dict = new Dict(this.xref);\n   while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n    if (!isName(this.buf1)) {\n     error('Dictionary key must be a name object');\n    }\n    var key = this.buf1.name;\n    this.shift();\n    if (isEOF(this.buf1)) {\n     break;\n    }\n    dict.set(key, this.getObj(cipherTransform));\n   }\n   var filter = dict.get('Filter', 'F'), filterName;\n   if (isName(filter)) {\n    filterName = filter.name;\n   } else if (isArray(filter)) {\n    var filterZero = this.xref.fetchIfRef(filter[0]);\n    if (isName(filterZero)) {\n     filterName = filterZero.name;\n    }\n   }\n   var startPos = stream.pos, length, i, ii;\n   if (filterName === 'DCTDecode' || filterName === 'DCT') {\n    length = this.findDCTDecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n    length = this.findASCII85DecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n    length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n   } else {\n    length = this.findDefaultInlineStreamEnd(stream);\n   }\n   var imageStream = stream.makeSubStream(startPos, length, dict);\n   var adler32;\n   if (length < MAX_LENGTH_TO_CACHE) {\n    var imageBytes = imageStream.getBytes();\n    imageStream.reset();\n    var a = 1;\n    var b = 0;\n    for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n     a += imageBytes[i] & 0xff;\n     b += a;\n    }\n    adler32 = b % 65521 << 16 | a % 65521;\n    if (this.imageCache.adler32 === adler32) {\n     this.buf2 = Cmd.get('EI');\n     this.shift();\n     this.imageCache[adler32].reset();\n     return this.imageCache[adler32];\n    }\n   }\n   if (cipherTransform) {\n    imageStream = cipherTransform.createStream(imageStream, length);\n   }\n   imageStream = this.filter(imageStream, dict, length);\n   imageStream.dict = dict;\n   if (adler32 !== undefined) {\n    imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n    this.imageCache[adler32] = imageStream;\n   }\n   this.buf2 = Cmd.get('EI');\n   this.shift();\n   return imageStream;\n  },\n  makeStream: function Parser_makeStream(dict, cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   lexer.skipToNextLine();\n   var pos = stream.pos - 1;\n   var length = dict.get('Length');\n   if (!isInt(length)) {\n    info('Bad ' + length + ' attribute in stream');\n    length = 0;\n   }\n   stream.pos = pos + length;\n   lexer.nextChar();\n   if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n    this.shift();\n   } else {\n    stream.pos = pos;\n    var SCAN_BLOCK_SIZE = 2048;\n    var ENDSTREAM_SIGNATURE_LENGTH = 9;\n    var ENDSTREAM_SIGNATURE = [\n     0x65,\n     0x6E,\n     0x64,\n     0x73,\n     0x74,\n     0x72,\n     0x65,\n     0x61,\n     0x6D\n    ];\n    var skipped = 0, found = false, i, j;\n    while (stream.pos < stream.end) {\n     var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n     var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n     if (scanLength <= 0) {\n      break;\n     }\n     found = false;\n     i = 0;\n     while (i < scanLength) {\n      j = 0;\n      while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n       j++;\n      }\n      if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n       found = true;\n       break;\n      }\n      i++;\n     }\n     if (found) {\n      skipped += i;\n      stream.pos += i;\n      break;\n     }\n     skipped += scanLength;\n     stream.pos += scanLength;\n    }\n    if (!found) {\n     error('Missing endstream');\n    }\n    length = skipped;\n    lexer.nextChar();\n    this.shift();\n    this.shift();\n   }\n   this.shift();\n   stream = stream.makeSubStream(pos, length, dict);\n   if (cipherTransform) {\n    stream = cipherTransform.createStream(stream, length);\n   }\n   stream = this.filter(stream, dict, length);\n   stream.dict = dict;\n   return stream;\n  },\n  filter: function Parser_filter(stream, dict, length) {\n   var filter = dict.get('Filter', 'F');\n   var params = dict.get('DecodeParms', 'DP');\n   if (isName(filter)) {\n    if (isArray(params)) {\n     params = this.xref.fetchIfRef(params[0]);\n    }\n    return this.makeFilter(stream, filter.name, length, params);\n   }\n   var maybeLength = length;\n   if (isArray(filter)) {\n    var filterArray = filter;\n    var paramsArray = params;\n    for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n     filter = this.xref.fetchIfRef(filterArray[i]);\n     if (!isName(filter)) {\n      error('Bad filter name: ' + filter);\n     }\n     params = null;\n     if (isArray(paramsArray) && i in paramsArray) {\n      params = this.xref.fetchIfRef(paramsArray[i]);\n     }\n     stream = this.makeFilter(stream, filter.name, maybeLength, params);\n     maybeLength = null;\n    }\n   }\n   return stream;\n  },\n  makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n   if (maybeLength === 0) {\n    warn('Empty \"' + name + '\" stream.');\n    return new NullStream(stream);\n   }\n   try {\n    var xrefStreamStats = this.xref.stats.streamTypes;\n    if (name === 'FlateDecode' || name === 'Fl') {\n     xrefStreamStats[StreamType.FLATE] = true;\n     if (params) {\n      return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n     }\n     return new FlateStream(stream, maybeLength);\n    }\n    if (name === 'LZWDecode' || name === 'LZW') {\n     xrefStreamStats[StreamType.LZW] = true;\n     var earlyChange = 1;\n     if (params) {\n      if (params.has('EarlyChange')) {\n       earlyChange = params.get('EarlyChange');\n      }\n      return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n     }\n     return new LZWStream(stream, maybeLength, earlyChange);\n    }\n    if (name === 'DCTDecode' || name === 'DCT') {\n     xrefStreamStats[StreamType.DCT] = true;\n     return new JpegStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'JPXDecode' || name === 'JPX') {\n     xrefStreamStats[StreamType.JPX] = true;\n     return new JpxStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'ASCII85Decode' || name === 'A85') {\n     xrefStreamStats[StreamType.A85] = true;\n     return new Ascii85Stream(stream, maybeLength);\n    }\n    if (name === 'ASCIIHexDecode' || name === 'AHx') {\n     xrefStreamStats[StreamType.AHX] = true;\n     return new AsciiHexStream(stream, maybeLength);\n    }\n    if (name === 'CCITTFaxDecode' || name === 'CCF') {\n     xrefStreamStats[StreamType.CCF] = true;\n     return new CCITTFaxStream(stream, maybeLength, params);\n    }\n    if (name === 'RunLengthDecode' || name === 'RL') {\n     xrefStreamStats[StreamType.RL] = true;\n     return new RunLengthStream(stream, maybeLength);\n    }\n    if (name === 'JBIG2Decode') {\n     xrefStreamStats[StreamType.JBIG] = true;\n     return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n    }\n    warn('filter \"' + name + '\" not supported yet');\n    return stream;\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Invalid stream: \\\"' + ex + '\\\"');\n    return new NullStream(stream);\n   }\n  }\n };\n return Parser;\n}();\nvar Lexer = function LexerClosure() {\n function Lexer(stream, knownCommands) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n  this.knownCommands = knownCommands;\n }\n var specialChars = [\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n ];\n function toHexDigit(ch) {\n  if (ch >= 0x30 && ch <= 0x39) {\n   return ch & 0x0F;\n  }\n  if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n   return (ch & 0x0F) + 9;\n  }\n  return -1;\n }\n Lexer.prototype = {\n  nextChar: function Lexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  peekChar: function Lexer_peekChar() {\n   return this.stream.peekByte();\n  },\n  getNumber: function Lexer_getNumber() {\n   var ch = this.currentChar;\n   var eNotation = false;\n   var divideBy = 0;\n   var sign = 1;\n   if (ch === 0x2D) {\n    sign = -1;\n    ch = this.nextChar();\n    if (ch === 0x2D) {\n     ch = this.nextChar();\n    }\n   } else if (ch === 0x2B) {\n    ch = this.nextChar();\n   }\n   if (ch === 0x2E) {\n    divideBy = 10;\n    ch = this.nextChar();\n   }\n   if (ch < 0x30 || ch > 0x39) {\n    error('Invalid number: ' + String.fromCharCode(ch));\n    return 0;\n   }\n   var baseValue = ch - 0x30;\n   var powerValue = 0;\n   var powerValueSign = 1;\n   while ((ch = this.nextChar()) >= 0) {\n    if (0x30 <= ch && ch <= 0x39) {\n     var currentDigit = ch - 0x30;\n     if (eNotation) {\n      powerValue = powerValue * 10 + currentDigit;\n     } else {\n      if (divideBy !== 0) {\n       divideBy *= 10;\n      }\n      baseValue = baseValue * 10 + currentDigit;\n     }\n    } else if (ch === 0x2E) {\n     if (divideBy === 0) {\n      divideBy = 1;\n     } else {\n      break;\n     }\n    } else if (ch === 0x2D) {\n     warn('Badly formatted number');\n    } else if (ch === 0x45 || ch === 0x65) {\n     ch = this.peekChar();\n     if (ch === 0x2B || ch === 0x2D) {\n      powerValueSign = ch === 0x2D ? -1 : 1;\n      this.nextChar();\n     } else if (ch < 0x30 || ch > 0x39) {\n      break;\n     }\n     eNotation = true;\n    } else {\n     break;\n    }\n   }\n   if (divideBy !== 0) {\n    baseValue /= divideBy;\n   }\n   if (eNotation) {\n    baseValue *= Math.pow(10, powerValueSign * powerValue);\n   }\n   return sign * baseValue;\n  },\n  getString: function Lexer_getString() {\n   var numParen = 1;\n   var done = false;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.nextChar();\n   while (true) {\n    var charBuffered = false;\n    switch (ch | 0) {\n    case -1:\n     warn('Unterminated string');\n     done = true;\n     break;\n    case 0x28:\n     ++numParen;\n     strBuf.push('(');\n     break;\n    case 0x29:\n     if (--numParen === 0) {\n      this.nextChar();\n      done = true;\n     } else {\n      strBuf.push(')');\n     }\n     break;\n    case 0x5C:\n     ch = this.nextChar();\n     switch (ch) {\n     case -1:\n      warn('Unterminated string');\n      done = true;\n      break;\n     case 0x6E:\n      strBuf.push('\\n');\n      break;\n     case 0x72:\n      strBuf.push('\\r');\n      break;\n     case 0x74:\n      strBuf.push('\\t');\n      break;\n     case 0x62:\n      strBuf.push('\\b');\n      break;\n     case 0x66:\n      strBuf.push('\\f');\n      break;\n     case 0x5C:\n     case 0x28:\n     case 0x29:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     case 0x30:\n     case 0x31:\n     case 0x32:\n     case 0x33:\n     case 0x34:\n     case 0x35:\n     case 0x36:\n     case 0x37:\n      var x = ch & 0x0F;\n      ch = this.nextChar();\n      charBuffered = true;\n      if (ch >= 0x30 && ch <= 0x37) {\n       x = (x << 3) + (ch & 0x0F);\n       ch = this.nextChar();\n       if (ch >= 0x30 && ch <= 0x37) {\n        charBuffered = false;\n        x = (x << 3) + (ch & 0x0F);\n       }\n      }\n      strBuf.push(String.fromCharCode(x));\n      break;\n     case 0x0D:\n      if (this.peekChar() === 0x0A) {\n       this.nextChar();\n      }\n      break;\n     case 0x0A:\n      break;\n     default:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     }\n     break;\n    default:\n     strBuf.push(String.fromCharCode(ch));\n     break;\n    }\n    if (done) {\n     break;\n    }\n    if (!charBuffered) {\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getName: function Lexer_getName() {\n   var ch, previousCh;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    if (ch === 0x23) {\n     ch = this.nextChar();\n     if (specialChars[ch]) {\n      warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n      strBuf.push('#');\n      break;\n     }\n     var x = toHexDigit(ch);\n     if (x !== -1) {\n      previousCh = ch;\n      ch = this.nextChar();\n      var x2 = toHexDigit(ch);\n      if (x2 === -1) {\n       warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n       strBuf.push('#', String.fromCharCode(previousCh));\n       if (specialChars[ch]) {\n        break;\n       }\n       strBuf.push(String.fromCharCode(ch));\n       continue;\n      }\n      strBuf.push(String.fromCharCode(x << 4 | x2));\n     } else {\n      strBuf.push('#', String.fromCharCode(ch));\n     }\n    } else {\n     strBuf.push(String.fromCharCode(ch));\n    }\n   }\n   if (strBuf.length > 127) {\n    warn('name token is longer than allowed by the spec: ' + strBuf.length);\n   }\n   return Name.get(strBuf.join(''));\n  },\n  getHexString: function Lexer_getHexString() {\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.currentChar;\n   var isFirstHex = true;\n   var firstDigit;\n   var secondDigit;\n   while (true) {\n    if (ch < 0) {\n     warn('Unterminated hex string');\n     break;\n    } else if (ch === 0x3E) {\n     this.nextChar();\n     break;\n    } else if (specialChars[ch] === 1) {\n     ch = this.nextChar();\n     continue;\n    } else {\n     if (isFirstHex) {\n      firstDigit = toHexDigit(ch);\n      if (firstDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n     } else {\n      secondDigit = toHexDigit(ch);\n      if (secondDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n      strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n     }\n     isFirstHex = !isFirstHex;\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getObj: function Lexer_getObj() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (specialChars[ch] !== 1) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return this.getNumber();\n   case 0x28:\n    return this.getString();\n   case 0x2F:\n    return this.getName();\n   case 0x5B:\n    this.nextChar();\n    return Cmd.get('[');\n   case 0x5D:\n    this.nextChar();\n    return Cmd.get(']');\n   case 0x3C:\n    ch = this.nextChar();\n    if (ch === 0x3C) {\n     this.nextChar();\n     return Cmd.get('<<');\n    }\n    return this.getHexString();\n   case 0x3E:\n    ch = this.nextChar();\n    if (ch === 0x3E) {\n     this.nextChar();\n     return Cmd.get('>>');\n    }\n    return Cmd.get('>');\n   case 0x7B:\n    this.nextChar();\n    return Cmd.get('{');\n   case 0x7D:\n    this.nextChar();\n    return Cmd.get('}');\n   case 0x29:\n    this.nextChar();\n    error('Illegal character: ' + ch);\n    break;\n   }\n   var str = String.fromCharCode(ch);\n   var knownCommands = this.knownCommands;\n   var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    var possibleCommand = str + String.fromCharCode(ch);\n    if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n     break;\n    }\n    if (str.length === 128) {\n     error('Command token too long: ' + str.length);\n    }\n    str = possibleCommand;\n    knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   }\n   if (str === 'true') {\n    return true;\n   }\n   if (str === 'false') {\n    return false;\n   }\n   if (str === 'null') {\n    return null;\n   }\n   return Cmd.get(str);\n  },\n  skipToNextLine: function Lexer_skipToNextLine() {\n   var ch = this.currentChar;\n   while (ch >= 0) {\n    if (ch === 0x0D) {\n     ch = this.nextChar();\n     if (ch === 0x0A) {\n      this.nextChar();\n     }\n     break;\n    } else if (ch === 0x0A) {\n     this.nextChar();\n     break;\n    }\n    ch = this.nextChar();\n   }\n  }\n };\n return Lexer;\n}();\nvar Linearization = {\n create: function LinearizationCreate(stream) {\n  function getInt(name, allowZeroValue) {\n   var obj = linDict.get(name);\n   if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n    return obj;\n   }\n   throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n  }\n  function getHints() {\n   var hints = linDict.get('H'), hintsLength, item;\n   if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n    for (var index = 0; index < hintsLength; index++) {\n     if (!(isInt(item = hints[index]) && item > 0)) {\n      throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n     }\n    }\n    return hints;\n   }\n   throw new Error('Hint array in the linearization dictionary is invalid.');\n  }\n  var parser = new Parser(new Lexer(stream), false, null);\n  var obj1 = parser.getObj();\n  var obj2 = parser.getObj();\n  var obj3 = parser.getObj();\n  var linDict = parser.getObj();\n  var obj, length;\n  if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n   return null;\n  } else if ((length = getInt('L')) !== stream.length) {\n   throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n  }\n  return {\n   length: length,\n   hints: getHints(),\n   objectNumberFirst: getInt('O'),\n   endFirst: getInt('E'),\n   numPages: getInt('N'),\n   mainXRefEntriesOffset: getInt('T'),\n   pageFirst: linDict.has('P') ? getInt('P', true) : 0\n  };\n }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePsParser = __w_pdfjs_require__(34);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar PostScriptLexer = corePsParser.PostScriptLexer;\nvar PostScriptParser = corePsParser.PostScriptParser;\nvar PDFFunction = function PDFFunctionClosure() {\n var CONSTRUCT_SAMPLED = 0;\n var CONSTRUCT_INTERPOLATED = 2;\n var CONSTRUCT_STICHED = 3;\n var CONSTRUCT_POSTSCRIPT = 4;\n return {\n  getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n   var i, ii;\n   var length = 1;\n   for (i = 0, ii = size.length; i < ii; i++) {\n    length *= size[i];\n   }\n   length *= outputSize;\n   var array = new Array(length);\n   var codeSize = 0;\n   var codeBuf = 0;\n   var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n   var strBytes = str.getBytes((length * bps + 7) / 8);\n   var strIdx = 0;\n   for (i = 0; i < length; i++) {\n    while (codeSize < bps) {\n     codeBuf <<= 8;\n     codeBuf |= strBytes[strIdx++];\n     codeSize += 8;\n    }\n    codeSize -= bps;\n    array[i] = (codeBuf >> codeSize) * sampleMul;\n    codeBuf &= (1 << codeSize) - 1;\n   }\n   return array;\n  },\n  getIR: function PDFFunction_getIR(xref, fn) {\n   var dict = fn.dict;\n   if (!dict) {\n    dict = fn;\n   }\n   var types = [\n    this.constructSampled,\n    null,\n    this.constructInterpolated,\n    this.constructStiched,\n    this.constructPostScript\n   ];\n   var typeNum = dict.get('FunctionType');\n   var typeFn = types[typeNum];\n   if (!typeFn) {\n    error('Unknown type of function');\n   }\n   return typeFn.call(this, fn, dict, xref);\n  },\n  fromIR: function PDFFunction_fromIR(IR) {\n   var type = IR[0];\n   switch (type) {\n   case CONSTRUCT_SAMPLED:\n    return this.constructSampledFromIR(IR);\n   case CONSTRUCT_INTERPOLATED:\n    return this.constructInterpolatedFromIR(IR);\n   case CONSTRUCT_STICHED:\n    return this.constructStichedFromIR(IR);\n   default:\n    return this.constructPostScriptFromIR(IR);\n   }\n  },\n  parse: function PDFFunction_parse(xref, fn) {\n   var IR = this.getIR(xref, fn);\n   return this.fromIR(IR);\n  },\n  parseArray: function PDFFunction_parseArray(xref, fnObj) {\n   if (!isArray(fnObj)) {\n    return this.parse(xref, fnObj);\n   }\n   var fnArray = [];\n   for (var j = 0, jj = fnObj.length; j < jj; j++) {\n    var obj = xref.fetchIfRef(fnObj[j]);\n    fnArray.push(PDFFunction.parse(xref, obj));\n   }\n   return function (src, srcOffset, dest, destOffset) {\n    for (var i = 0, ii = fnArray.length; i < ii; i++) {\n     fnArray[i](src, srcOffset, dest, destOffset + i);\n    }\n   };\n  },\n  constructSampled: function PDFFunction_constructSampled(str, dict) {\n   function toMultiArray(arr) {\n    var inputLength = arr.length;\n    var out = [];\n    var index = 0;\n    for (var i = 0; i < inputLength; i += 2) {\n     out[index] = [\n      arr[i],\n      arr[i + 1]\n     ];\n     ++index;\n    }\n    return out;\n   }\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain || !range) {\n    error('No domain or range');\n   }\n   var inputSize = domain.length / 2;\n   var outputSize = range.length / 2;\n   domain = toMultiArray(domain);\n   range = toMultiArray(range);\n   var size = dict.get('Size');\n   var bps = dict.get('BitsPerSample');\n   var order = dict.get('Order') || 1;\n   if (order !== 1) {\n    info('No support for cubic spline interpolation: ' + order);\n   }\n   var encode = dict.getArray('Encode');\n   if (!encode) {\n    encode = [];\n    for (var i = 0; i < inputSize; ++i) {\n     encode.push(0);\n     encode.push(size[i] - 1);\n    }\n   }\n   encode = toMultiArray(encode);\n   var decode = dict.getArray('Decode');\n   if (!decode) {\n    decode = range;\n   } else {\n    decode = toMultiArray(decode);\n   }\n   var samples = this.getSampleArray(size, outputSize, bps, str);\n   return [\n    CONSTRUCT_SAMPLED,\n    inputSize,\n    domain,\n    encode,\n    decode,\n    samples,\n    size,\n    outputSize,\n    Math.pow(2, bps) - 1,\n    range\n   ];\n  },\n  constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n   function interpolate(x, xmin, xmax, ymin, ymax) {\n    return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n   }\n   return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n    var m = IR[1];\n    var domain = IR[2];\n    var encode = IR[3];\n    var decode = IR[4];\n    var samples = IR[5];\n    var size = IR[6];\n    var n = IR[7];\n    var range = IR[9];\n    var cubeVertices = 1 << m;\n    var cubeN = new Float64Array(cubeVertices);\n    var cubeVertex = new Uint32Array(cubeVertices);\n    var i, j;\n    for (j = 0; j < cubeVertices; j++) {\n     cubeN[j] = 1;\n    }\n    var k = n, pos = 1;\n    for (i = 0; i < m; ++i) {\n     var domain_2i = domain[i][0];\n     var domain_2i_1 = domain[i][1];\n     var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n     var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n     var size_i = size[i];\n     e = Math.min(Math.max(e, 0), size_i - 1);\n     var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n     var n0 = e0 + 1 - e;\n     var n1 = e - e0;\n     var offset0 = e0 * k;\n     var offset1 = offset0 + k;\n     for (j = 0; j < cubeVertices; j++) {\n      if (j & pos) {\n       cubeN[j] *= n1;\n       cubeVertex[j] += offset1;\n      } else {\n       cubeN[j] *= n0;\n       cubeVertex[j] += offset0;\n      }\n     }\n     k *= size_i;\n     pos <<= 1;\n    }\n    for (j = 0; j < n; ++j) {\n     var rj = 0;\n     for (i = 0; i < cubeVertices; i++) {\n      rj += samples[cubeVertex[i] + j] * cubeN[i];\n     }\n     rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n     dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n    }\n   };\n  },\n  constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n   var c0 = dict.getArray('C0') || [0];\n   var c1 = dict.getArray('C1') || [1];\n   var n = dict.get('N');\n   if (!isArray(c0) || !isArray(c1)) {\n    error('Illegal dictionary for interpolated function');\n   }\n   var length = c0.length;\n   var diff = [];\n   for (var i = 0; i < length; ++i) {\n    diff.push(c1[i] - c0[i]);\n   }\n   return [\n    CONSTRUCT_INTERPOLATED,\n    c0,\n    diff,\n    n\n   ];\n  },\n  constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n   var c0 = IR[1];\n   var diff = IR[2];\n   var n = IR[3];\n   var length = diff.length;\n   return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n    var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n    for (var j = 0; j < length; ++j) {\n     dest[destOffset + j] = c0[j] + x * diff[j];\n    }\n   };\n  },\n  constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   if (!domain) {\n    error('No domain');\n   }\n   var inputSize = domain.length / 2;\n   if (inputSize !== 1) {\n    error('Bad domain for stiched function');\n   }\n   var fnRefs = dict.get('Functions');\n   var fns = [];\n   for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n    fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n   }\n   var bounds = dict.getArray('Bounds');\n   var encode = dict.getArray('Encode');\n   return [\n    CONSTRUCT_STICHED,\n    domain,\n    bounds,\n    encode,\n    fns\n   ];\n  },\n  constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n   var domain = IR[1];\n   var bounds = IR[2];\n   var encode = IR[3];\n   var fnsIR = IR[4];\n   var fns = [];\n   var tmpBuf = new Float32Array(1);\n   for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n    fns.push(PDFFunction.fromIR(fnsIR[i]));\n   }\n   return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n    var clip = function constructStichedFromIRClip(v, min, max) {\n     if (v > max) {\n      v = max;\n     } else if (v < min) {\n      v = min;\n     }\n     return v;\n    };\n    var v = clip(src[srcOffset], domain[0], domain[1]);\n    for (var i = 0, ii = bounds.length; i < ii; ++i) {\n     if (v < bounds[i]) {\n      break;\n     }\n    }\n    var dmin = domain[0];\n    if (i > 0) {\n     dmin = bounds[i - 1];\n    }\n    var dmax = domain[1];\n    if (i < bounds.length) {\n     dmax = bounds[i];\n    }\n    var rmin = encode[2 * i];\n    var rmax = encode[2 * i + 1];\n    tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n    fns[i](tmpBuf, 0, dest, destOffset);\n   };\n  },\n  constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain) {\n    error('No domain.');\n   }\n   if (!range) {\n    error('No range.');\n   }\n   var lexer = new PostScriptLexer(fn);\n   var parser = new PostScriptParser(lexer);\n   var code = parser.parse();\n   return [\n    CONSTRUCT_POSTSCRIPT,\n    domain,\n    range,\n    code\n   ];\n  },\n  constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n   var domain = IR[1];\n   var range = IR[2];\n   var code = IR[3];\n   var compiled = new PostScriptCompiler().compile(code, domain, range);\n   if (compiled) {\n    return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n   }\n   info('Unable to compile PS function');\n   var numOutputs = range.length >> 1;\n   var numInputs = domain.length >> 1;\n   var evaluator = new PostScriptEvaluator(code);\n   var cache = Object.create(null);\n   var MAX_CACHE_SIZE = 2048 * 4;\n   var cache_available = MAX_CACHE_SIZE;\n   var tmpBuf = new Float32Array(numInputs);\n   return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n    var i, value;\n    var key = '';\n    var input = tmpBuf;\n    for (i = 0; i < numInputs; i++) {\n     value = src[srcOffset + i];\n     input[i] = value;\n     key += value + '_';\n    }\n    var cachedValue = cache[key];\n    if (cachedValue !== undefined) {\n     dest.set(cachedValue, destOffset);\n     return;\n    }\n    var output = new Float32Array(numOutputs);\n    var stack = evaluator.execute(input);\n    var stackIndex = stack.length - numOutputs;\n    for (i = 0; i < numOutputs; i++) {\n     value = stack[stackIndex + i];\n     var bound = range[i * 2];\n     if (value < bound) {\n      value = bound;\n     } else {\n      bound = range[i * 2 + 1];\n      if (value > bound) {\n       value = bound;\n      }\n     }\n     output[i] = value;\n    }\n    if (cache_available > 0) {\n     cache_available--;\n     cache[key] = output;\n    }\n    dest.set(output, destOffset);\n   };\n  }\n };\n}();\nfunction isPDFFunction(v) {\n var fnDict;\n if (typeof v !== 'object') {\n  return false;\n } else if (isDict(v)) {\n  fnDict = v;\n } else if (isStream(v)) {\n  fnDict = v.dict;\n } else {\n  return false;\n }\n return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n var MAX_STACK_SIZE = 100;\n function PostScriptStack(initialStack) {\n  this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n }\n PostScriptStack.prototype = {\n  push: function PostScriptStack_push(value) {\n   if (this.stack.length >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   this.stack.push(value);\n  },\n  pop: function PostScriptStack_pop() {\n   if (this.stack.length <= 0) {\n    error('PostScript function stack underflow.');\n   }\n   return this.stack.pop();\n  },\n  copy: function PostScriptStack_copy(n) {\n   if (this.stack.length + n >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   var stack = this.stack;\n   for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n    stack.push(stack[i]);\n   }\n  },\n  index: function PostScriptStack_index(n) {\n   this.push(this.stack[this.stack.length - n - 1]);\n  },\n  roll: function PostScriptStack_roll(n, p) {\n   var stack = this.stack;\n   var l = stack.length - n;\n   var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n   for (i = l, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = l, j = c - 1; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = c, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n  }\n };\n return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n function PostScriptEvaluator(operators) {\n  this.operators = operators;\n }\n PostScriptEvaluator.prototype = {\n  execute: function PostScriptEvaluator_execute(initialStack) {\n   var stack = new PostScriptStack(initialStack);\n   var counter = 0;\n   var operators = this.operators;\n   var length = operators.length;\n   var operator, a, b;\n   while (counter < length) {\n    operator = operators[counter++];\n    if (typeof operator === 'number') {\n     stack.push(operator);\n     continue;\n    }\n    switch (operator) {\n    case 'jz':\n     b = stack.pop();\n     a = stack.pop();\n     if (!a) {\n      counter = b;\n     }\n     break;\n    case 'j':\n     a = stack.pop();\n     counter = a;\n     break;\n    case 'abs':\n     a = stack.pop();\n     stack.push(Math.abs(a));\n     break;\n    case 'add':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a + b);\n     break;\n    case 'and':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a && b);\n     } else {\n      stack.push(a & b);\n     }\n     break;\n    case 'atan':\n     a = stack.pop();\n     stack.push(Math.atan(a));\n     break;\n    case 'bitshift':\n     b = stack.pop();\n     a = stack.pop();\n     if (a > 0) {\n      stack.push(a << b);\n     } else {\n      stack.push(a >> b);\n     }\n     break;\n    case 'ceiling':\n     a = stack.pop();\n     stack.push(Math.ceil(a));\n     break;\n    case 'copy':\n     a = stack.pop();\n     stack.copy(a);\n     break;\n    case 'cos':\n     a = stack.pop();\n     stack.push(Math.cos(a));\n     break;\n    case 'cvi':\n     a = stack.pop() | 0;\n     stack.push(a);\n     break;\n    case 'cvr':\n     break;\n    case 'div':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b);\n     break;\n    case 'dup':\n     stack.copy(1);\n     break;\n    case 'eq':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a === b);\n     break;\n    case 'exch':\n     stack.roll(2, 1);\n     break;\n    case 'exp':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(Math.pow(a, b));\n     break;\n    case 'false':\n     stack.push(false);\n     break;\n    case 'floor':\n     a = stack.pop();\n     stack.push(Math.floor(a));\n     break;\n    case 'ge':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a >= b);\n     break;\n    case 'gt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a > b);\n     break;\n    case 'idiv':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b | 0);\n     break;\n    case 'index':\n     a = stack.pop();\n     stack.index(a);\n     break;\n    case 'le':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a <= b);\n     break;\n    case 'ln':\n     a = stack.pop();\n     stack.push(Math.log(a));\n     break;\n    case 'log':\n     a = stack.pop();\n     stack.push(Math.log(a) / Math.LN10);\n     break;\n    case 'lt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a < b);\n     break;\n    case 'mod':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a % b);\n     break;\n    case 'mul':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a * b);\n     break;\n    case 'ne':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a !== b);\n     break;\n    case 'neg':\n     a = stack.pop();\n     stack.push(-a);\n     break;\n    case 'not':\n     a = stack.pop();\n     if (isBool(a)) {\n      stack.push(!a);\n     } else {\n      stack.push(~a);\n     }\n     break;\n    case 'or':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a || b);\n     } else {\n      stack.push(a | b);\n     }\n     break;\n    case 'pop':\n     stack.pop();\n     break;\n    case 'roll':\n     b = stack.pop();\n     a = stack.pop();\n     stack.roll(a, b);\n     break;\n    case 'round':\n     a = stack.pop();\n     stack.push(Math.round(a));\n     break;\n    case 'sin':\n     a = stack.pop();\n     stack.push(Math.sin(a));\n     break;\n    case 'sqrt':\n     a = stack.pop();\n     stack.push(Math.sqrt(a));\n     break;\n    case 'sub':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a - b);\n     break;\n    case 'true':\n     stack.push(true);\n     break;\n    case 'truncate':\n     a = stack.pop();\n     a = a < 0 ? Math.ceil(a) : Math.floor(a);\n     stack.push(a);\n     break;\n    case 'xor':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a !== b);\n     } else {\n      stack.push(a ^ b);\n     }\n     break;\n    default:\n     error('Unknown operator ' + operator);\n     break;\n    }\n   }\n   return stack.stack;\n  }\n };\n return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n function AstNode(type) {\n  this.type = type;\n }\n AstNode.prototype.visit = function (visitor) {\n  throw new Error('abstract method');\n };\n function AstArgument(index, min, max) {\n  AstNode.call(this, 'args');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstArgument.prototype = Object.create(AstNode.prototype);\n AstArgument.prototype.visit = function (visitor) {\n  visitor.visitArgument(this);\n };\n function AstLiteral(number) {\n  AstNode.call(this, 'literal');\n  this.number = number;\n  this.min = number;\n  this.max = number;\n }\n AstLiteral.prototype = Object.create(AstNode.prototype);\n AstLiteral.prototype.visit = function (visitor) {\n  visitor.visitLiteral(this);\n };\n function AstBinaryOperation(op, arg1, arg2, min, max) {\n  AstNode.call(this, 'binary');\n  this.op = op;\n  this.arg1 = arg1;\n  this.arg2 = arg2;\n  this.min = min;\n  this.max = max;\n }\n AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n AstBinaryOperation.prototype.visit = function (visitor) {\n  visitor.visitBinaryOperation(this);\n };\n function AstMin(arg, max) {\n  AstNode.call(this, 'max');\n  this.arg = arg;\n  this.min = arg.min;\n  this.max = max;\n }\n AstMin.prototype = Object.create(AstNode.prototype);\n AstMin.prototype.visit = function (visitor) {\n  visitor.visitMin(this);\n };\n function AstVariable(index, min, max) {\n  AstNode.call(this, 'var');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstVariable.prototype = Object.create(AstNode.prototype);\n AstVariable.prototype.visit = function (visitor) {\n  visitor.visitVariable(this);\n };\n function AstVariableDefinition(variable, arg) {\n  AstNode.call(this, 'definition');\n  this.variable = variable;\n  this.arg = arg;\n }\n AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n AstVariableDefinition.prototype.visit = function (visitor) {\n  visitor.visitVariableDefinition(this);\n };\n function ExpressionBuilderVisitor() {\n  this.parts = [];\n }\n ExpressionBuilderVisitor.prototype = {\n  visitArgument: function (arg) {\n   this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n  },\n  visitVariable: function (variable) {\n   this.parts.push('v', variable.index);\n  },\n  visitLiteral: function (literal) {\n   this.parts.push(literal.number);\n  },\n  visitBinaryOperation: function (operation) {\n   this.parts.push('(');\n   operation.arg1.visit(this);\n   this.parts.push(' ', operation.op, ' ');\n   operation.arg2.visit(this);\n   this.parts.push(')');\n  },\n  visitVariableDefinition: function (definition) {\n   this.parts.push('var ');\n   definition.variable.visit(this);\n   this.parts.push(' = ');\n   definition.arg.visit(this);\n   this.parts.push(';');\n  },\n  visitMin: function (max) {\n   this.parts.push('Math.min(');\n   max.arg.visit(this);\n   this.parts.push(', ', max.max, ')');\n  },\n  toString: function () {\n   return this.parts.join('');\n  }\n };\n function buildAddOperation(num1, num2) {\n  if (num2.type === 'literal' && num2.number === 0) {\n   return num1;\n  }\n  if (num1.type === 'literal' && num1.number === 0) {\n   return num2;\n  }\n  if (num2.type === 'literal' && num1.type === 'literal') {\n   return new AstLiteral(num1.number + num2.number);\n  }\n  return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n }\n function buildMulOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return new AstLiteral(0);\n   } else if (num2.number === 1) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number * num2.number);\n   }\n  }\n  if (num1.type === 'literal') {\n   if (num1.number === 0) {\n    return new AstLiteral(0);\n   } else if (num1.number === 1) {\n    return num2;\n   }\n  }\n  var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  return new AstBinaryOperation('*', num1, num2, min, max);\n }\n function buildSubOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number - num2.number);\n   }\n  }\n  if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n   return num2.arg2;\n  }\n  return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n }\n function buildMinOperation(num1, max) {\n  if (num1.min >= max) {\n   return new AstLiteral(max);\n  } else if (num1.max <= max) {\n   return num1;\n  }\n  return new AstMin(num1, max);\n }\n function PostScriptCompiler() {\n }\n PostScriptCompiler.prototype = {\n  compile: function PostScriptCompiler_compile(code, domain, range) {\n   var stack = [];\n   var i, ii;\n   var instructions = [];\n   var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n   var lastRegister = 0;\n   var n, j;\n   var num1, num2, ast1, ast2, tmpVar, item;\n   for (i = 0; i < inputSize; i++) {\n    stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n   }\n   for (i = 0, ii = code.length; i < ii; i++) {\n    item = code[i];\n    if (typeof item === 'number') {\n     stack.push(new AstLiteral(item));\n     continue;\n    }\n    switch (item) {\n    case 'add':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildAddOperation(num1, num2));\n     break;\n    case 'cvr':\n     if (stack.length < 1) {\n      return null;\n     }\n     break;\n    case 'mul':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildMulOperation(num1, num2));\n     break;\n    case 'sub':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildSubOperation(num1, num2));\n     break;\n    case 'exch':\n     if (stack.length < 2) {\n      return null;\n     }\n     ast1 = stack.pop();\n     ast2 = stack.pop();\n     stack.push(ast1, ast2);\n     break;\n    case 'pop':\n     if (stack.length < 1) {\n      return null;\n     }\n     stack.pop();\n     break;\n    case 'index':\n     if (stack.length < 1) {\n      return null;\n     }\n     num1 = stack.pop();\n     if (num1.type !== 'literal') {\n      return null;\n     }\n     n = num1.number;\n     if (n < 0 || (n | 0) !== n || stack.length < n) {\n      return null;\n     }\n     ast1 = stack[stack.length - n - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - n - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'dup':\n     if (stack.length < 1) {\n      return null;\n     }\n     if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n      num1 = stack.pop();\n      stack.push(buildMinOperation(num1, code[i + 1]));\n      i += 6;\n      break;\n     }\n     ast1 = stack[stack.length - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'roll':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     if (num2.type !== 'literal' || num1.type !== 'literal') {\n      return null;\n     }\n     j = num2.number;\n     n = num1.number;\n     if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n      return null;\n     }\n     j = (j % n + n) % n;\n     if (j === 0) {\n      break;\n     }\n     Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n     break;\n    default:\n     return null;\n    }\n   }\n   if (stack.length !== outputSize) {\n    return null;\n   }\n   var result = [];\n   instructions.forEach(function (instruction) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    instruction.visit(statementBuilder);\n    result.push(statementBuilder.toString());\n   });\n   stack.forEach(function (expr, i) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    expr.visit(statementBuilder);\n    var min = range[i * 2], max = range[i * 2 + 1];\n    var out = [statementBuilder.toString()];\n    if (min > expr.min) {\n     out.unshift('Math.max(', min, ', ');\n     out.push(')');\n    }\n    if (max < expr.max) {\n     out.unshift('Math.min(', max, ', ');\n     out.push(')');\n    }\n    out.unshift('dest[destOffset + ', i, '] = ');\n    out.push(';');\n    result.push(out.join(''));\n   });\n   return result.join('\\n');\n  }\n };\n return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunction = PDFFunction;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n t['A'] = 0x0041;\n t['AE'] = 0x00C6;\n t['AEacute'] = 0x01FC;\n t['AEmacron'] = 0x01E2;\n t['AEsmall'] = 0xF7E6;\n t['Aacute'] = 0x00C1;\n t['Aacutesmall'] = 0xF7E1;\n t['Abreve'] = 0x0102;\n t['Abreveacute'] = 0x1EAE;\n t['Abrevecyrillic'] = 0x04D0;\n t['Abrevedotbelow'] = 0x1EB6;\n t['Abrevegrave'] = 0x1EB0;\n t['Abrevehookabove'] = 0x1EB2;\n t['Abrevetilde'] = 0x1EB4;\n t['Acaron'] = 0x01CD;\n t['Acircle'] = 0x24B6;\n t['Acircumflex'] = 0x00C2;\n t['Acircumflexacute'] = 0x1EA4;\n t['Acircumflexdotbelow'] = 0x1EAC;\n t['Acircumflexgrave'] = 0x1EA6;\n t['Acircumflexhookabove'] = 0x1EA8;\n t['Acircumflexsmall'] = 0xF7E2;\n t['Acircumflextilde'] = 0x1EAA;\n t['Acute'] = 0xF6C9;\n t['Acutesmall'] = 0xF7B4;\n t['Acyrillic'] = 0x0410;\n t['Adblgrave'] = 0x0200;\n t['Adieresis'] = 0x00C4;\n t['Adieresiscyrillic'] = 0x04D2;\n t['Adieresismacron'] = 0x01DE;\n t['Adieresissmall'] = 0xF7E4;\n t['Adotbelow'] = 0x1EA0;\n t['Adotmacron'] = 0x01E0;\n t['Agrave'] = 0x00C0;\n t['Agravesmall'] = 0xF7E0;\n t['Ahookabove'] = 0x1EA2;\n t['Aiecyrillic'] = 0x04D4;\n t['Ainvertedbreve'] = 0x0202;\n t['Alpha'] = 0x0391;\n t['Alphatonos'] = 0x0386;\n t['Amacron'] = 0x0100;\n t['Amonospace'] = 0xFF21;\n t['Aogonek'] = 0x0104;\n t['Aring'] = 0x00C5;\n t['Aringacute'] = 0x01FA;\n t['Aringbelow'] = 0x1E00;\n t['Aringsmall'] = 0xF7E5;\n t['Asmall'] = 0xF761;\n t['Atilde'] = 0x00C3;\n t['Atildesmall'] = 0xF7E3;\n t['Aybarmenian'] = 0x0531;\n t['B'] = 0x0042;\n t['Bcircle'] = 0x24B7;\n t['Bdotaccent'] = 0x1E02;\n t['Bdotbelow'] = 0x1E04;\n t['Becyrillic'] = 0x0411;\n t['Benarmenian'] = 0x0532;\n t['Beta'] = 0x0392;\n t['Bhook'] = 0x0181;\n t['Blinebelow'] = 0x1E06;\n t['Bmonospace'] = 0xFF22;\n t['Brevesmall'] = 0xF6F4;\n t['Bsmall'] = 0xF762;\n t['Btopbar'] = 0x0182;\n t['C'] = 0x0043;\n t['Caarmenian'] = 0x053E;\n t['Cacute'] = 0x0106;\n t['Caron'] = 0xF6CA;\n t['Caronsmall'] = 0xF6F5;\n t['Ccaron'] = 0x010C;\n t['Ccedilla'] = 0x00C7;\n t['Ccedillaacute'] = 0x1E08;\n t['Ccedillasmall'] = 0xF7E7;\n t['Ccircle'] = 0x24B8;\n t['Ccircumflex'] = 0x0108;\n t['Cdot'] = 0x010A;\n t['Cdotaccent'] = 0x010A;\n t['Cedillasmall'] = 0xF7B8;\n t['Chaarmenian'] = 0x0549;\n t['Cheabkhasiancyrillic'] = 0x04BC;\n t['Checyrillic'] = 0x0427;\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n t['Chedescendercyrillic'] = 0x04B6;\n t['Chedieresiscyrillic'] = 0x04F4;\n t['Cheharmenian'] = 0x0543;\n t['Chekhakassiancyrillic'] = 0x04CB;\n t['Cheverticalstrokecyrillic'] = 0x04B8;\n t['Chi'] = 0x03A7;\n t['Chook'] = 0x0187;\n t['Circumflexsmall'] = 0xF6F6;\n t['Cmonospace'] = 0xFF23;\n t['Coarmenian'] = 0x0551;\n t['Csmall'] = 0xF763;\n t['D'] = 0x0044;\n t['DZ'] = 0x01F1;\n t['DZcaron'] = 0x01C4;\n t['Daarmenian'] = 0x0534;\n t['Dafrican'] = 0x0189;\n t['Dcaron'] = 0x010E;\n t['Dcedilla'] = 0x1E10;\n t['Dcircle'] = 0x24B9;\n t['Dcircumflexbelow'] = 0x1E12;\n t['Dcroat'] = 0x0110;\n t['Ddotaccent'] = 0x1E0A;\n t['Ddotbelow'] = 0x1E0C;\n t['Decyrillic'] = 0x0414;\n t['Deicoptic'] = 0x03EE;\n t['Delta'] = 0x2206;\n t['Deltagreek'] = 0x0394;\n t['Dhook'] = 0x018A;\n t['Dieresis'] = 0xF6CB;\n t['DieresisAcute'] = 0xF6CC;\n t['DieresisGrave'] = 0xF6CD;\n t['Dieresissmall'] = 0xF7A8;\n t['Digammagreek'] = 0x03DC;\n t['Djecyrillic'] = 0x0402;\n t['Dlinebelow'] = 0x1E0E;\n t['Dmonospace'] = 0xFF24;\n t['Dotaccentsmall'] = 0xF6F7;\n t['Dslash'] = 0x0110;\n t['Dsmall'] = 0xF764;\n t['Dtopbar'] = 0x018B;\n t['Dz'] = 0x01F2;\n t['Dzcaron'] = 0x01C5;\n t['Dzeabkhasiancyrillic'] = 0x04E0;\n t['Dzecyrillic'] = 0x0405;\n t['Dzhecyrillic'] = 0x040F;\n t['E'] = 0x0045;\n t['Eacute'] = 0x00C9;\n t['Eacutesmall'] = 0xF7E9;\n t['Ebreve'] = 0x0114;\n t['Ecaron'] = 0x011A;\n t['Ecedillabreve'] = 0x1E1C;\n t['Echarmenian'] = 0x0535;\n t['Ecircle'] = 0x24BA;\n t['Ecircumflex'] = 0x00CA;\n t['Ecircumflexacute'] = 0x1EBE;\n t['Ecircumflexbelow'] = 0x1E18;\n t['Ecircumflexdotbelow'] = 0x1EC6;\n t['Ecircumflexgrave'] = 0x1EC0;\n t['Ecircumflexhookabove'] = 0x1EC2;\n t['Ecircumflexsmall'] = 0xF7EA;\n t['Ecircumflextilde'] = 0x1EC4;\n t['Ecyrillic'] = 0x0404;\n t['Edblgrave'] = 0x0204;\n t['Edieresis'] = 0x00CB;\n t['Edieresissmall'] = 0xF7EB;\n t['Edot'] = 0x0116;\n t['Edotaccent'] = 0x0116;\n t['Edotbelow'] = 0x1EB8;\n t['Efcyrillic'] = 0x0424;\n t['Egrave'] = 0x00C8;\n t['Egravesmall'] = 0xF7E8;\n t['Eharmenian'] = 0x0537;\n t['Ehookabove'] = 0x1EBA;\n t['Eightroman'] = 0x2167;\n t['Einvertedbreve'] = 0x0206;\n t['Eiotifiedcyrillic'] = 0x0464;\n t['Elcyrillic'] = 0x041B;\n t['Elevenroman'] = 0x216A;\n t['Emacron'] = 0x0112;\n t['Emacronacute'] = 0x1E16;\n t['Emacrongrave'] = 0x1E14;\n t['Emcyrillic'] = 0x041C;\n t['Emonospace'] = 0xFF25;\n t['Encyrillic'] = 0x041D;\n t['Endescendercyrillic'] = 0x04A2;\n t['Eng'] = 0x014A;\n t['Enghecyrillic'] = 0x04A4;\n t['Enhookcyrillic'] = 0x04C7;\n t['Eogonek'] = 0x0118;\n t['Eopen'] = 0x0190;\n t['Epsilon'] = 0x0395;\n t['Epsilontonos'] = 0x0388;\n t['Ercyrillic'] = 0x0420;\n t['Ereversed'] = 0x018E;\n t['Ereversedcyrillic'] = 0x042D;\n t['Escyrillic'] = 0x0421;\n t['Esdescendercyrillic'] = 0x04AA;\n t['Esh'] = 0x01A9;\n t['Esmall'] = 0xF765;\n t['Eta'] = 0x0397;\n t['Etarmenian'] = 0x0538;\n t['Etatonos'] = 0x0389;\n t['Eth'] = 0x00D0;\n t['Ethsmall'] = 0xF7F0;\n t['Etilde'] = 0x1EBC;\n t['Etildebelow'] = 0x1E1A;\n t['Euro'] = 0x20AC;\n t['Ezh'] = 0x01B7;\n t['Ezhcaron'] = 0x01EE;\n t['Ezhreversed'] = 0x01B8;\n t['F'] = 0x0046;\n t['Fcircle'] = 0x24BB;\n t['Fdotaccent'] = 0x1E1E;\n t['Feharmenian'] = 0x0556;\n t['Feicoptic'] = 0x03E4;\n t['Fhook'] = 0x0191;\n t['Fitacyrillic'] = 0x0472;\n t['Fiveroman'] = 0x2164;\n t['Fmonospace'] = 0xFF26;\n t['Fourroman'] = 0x2163;\n t['Fsmall'] = 0xF766;\n t['G'] = 0x0047;\n t['GBsquare'] = 0x3387;\n t['Gacute'] = 0x01F4;\n t['Gamma'] = 0x0393;\n t['Gammaafrican'] = 0x0194;\n t['Gangiacoptic'] = 0x03EA;\n t['Gbreve'] = 0x011E;\n t['Gcaron'] = 0x01E6;\n t['Gcedilla'] = 0x0122;\n t['Gcircle'] = 0x24BC;\n t['Gcircumflex'] = 0x011C;\n t['Gcommaaccent'] = 0x0122;\n t['Gdot'] = 0x0120;\n t['Gdotaccent'] = 0x0120;\n t['Gecyrillic'] = 0x0413;\n t['Ghadarmenian'] = 0x0542;\n t['Ghemiddlehookcyrillic'] = 0x0494;\n t['Ghestrokecyrillic'] = 0x0492;\n t['Gheupturncyrillic'] = 0x0490;\n t['Ghook'] = 0x0193;\n t['Gimarmenian'] = 0x0533;\n t['Gjecyrillic'] = 0x0403;\n t['Gmacron'] = 0x1E20;\n t['Gmonospace'] = 0xFF27;\n t['Grave'] = 0xF6CE;\n t['Gravesmall'] = 0xF760;\n t['Gsmall'] = 0xF767;\n t['Gsmallhook'] = 0x029B;\n t['Gstroke'] = 0x01E4;\n t['H'] = 0x0048;\n t['H18533'] = 0x25CF;\n t['H18543'] = 0x25AA;\n t['H18551'] = 0x25AB;\n t['H22073'] = 0x25A1;\n t['HPsquare'] = 0x33CB;\n t['Haabkhasiancyrillic'] = 0x04A8;\n t['Hadescendercyrillic'] = 0x04B2;\n t['Hardsigncyrillic'] = 0x042A;\n t['Hbar'] = 0x0126;\n t['Hbrevebelow'] = 0x1E2A;\n t['Hcedilla'] = 0x1E28;\n t['Hcircle'] = 0x24BD;\n t['Hcircumflex'] = 0x0124;\n t['Hdieresis'] = 0x1E26;\n t['Hdotaccent'] = 0x1E22;\n t['Hdotbelow'] = 0x1E24;\n t['Hmonospace'] = 0xFF28;\n t['Hoarmenian'] = 0x0540;\n t['Horicoptic'] = 0x03E8;\n t['Hsmall'] = 0xF768;\n t['Hungarumlaut'] = 0xF6CF;\n t['Hungarumlautsmall'] = 0xF6F8;\n t['Hzsquare'] = 0x3390;\n t['I'] = 0x0049;\n t['IAcyrillic'] = 0x042F;\n t['IJ'] = 0x0132;\n t['IUcyrillic'] = 0x042E;\n t['Iacute'] = 0x00CD;\n t['Iacutesmall'] = 0xF7ED;\n t['Ibreve'] = 0x012C;\n t['Icaron'] = 0x01CF;\n t['Icircle'] = 0x24BE;\n t['Icircumflex'] = 0x00CE;\n t['Icircumflexsmall'] = 0xF7EE;\n t['Icyrillic'] = 0x0406;\n t['Idblgrave'] = 0x0208;\n t['Idieresis'] = 0x00CF;\n t['Idieresisacute'] = 0x1E2E;\n t['Idieresiscyrillic'] = 0x04E4;\n t['Idieresissmall'] = 0xF7EF;\n t['Idot'] = 0x0130;\n t['Idotaccent'] = 0x0130;\n t['Idotbelow'] = 0x1ECA;\n t['Iebrevecyrillic'] = 0x04D6;\n t['Iecyrillic'] = 0x0415;\n t['Ifraktur'] = 0x2111;\n t['Igrave'] = 0x00CC;\n t['Igravesmall'] = 0xF7EC;\n t['Ihookabove'] = 0x1EC8;\n t['Iicyrillic'] = 0x0418;\n t['Iinvertedbreve'] = 0x020A;\n t['Iishortcyrillic'] = 0x0419;\n t['Imacron'] = 0x012A;\n t['Imacroncyrillic'] = 0x04E2;\n t['Imonospace'] = 0xFF29;\n t['Iniarmenian'] = 0x053B;\n t['Iocyrillic'] = 0x0401;\n t['Iogonek'] = 0x012E;\n t['Iota'] = 0x0399;\n t['Iotaafrican'] = 0x0196;\n t['Iotadieresis'] = 0x03AA;\n t['Iotatonos'] = 0x038A;\n t['Ismall'] = 0xF769;\n t['Istroke'] = 0x0197;\n t['Itilde'] = 0x0128;\n t['Itildebelow'] = 0x1E2C;\n t['Izhitsacyrillic'] = 0x0474;\n t['Izhitsadblgravecyrillic'] = 0x0476;\n t['J'] = 0x004A;\n t['Jaarmenian'] = 0x0541;\n t['Jcircle'] = 0x24BF;\n t['Jcircumflex'] = 0x0134;\n t['Jecyrillic'] = 0x0408;\n t['Jheharmenian'] = 0x054B;\n t['Jmonospace'] = 0xFF2A;\n t['Jsmall'] = 0xF76A;\n t['K'] = 0x004B;\n t['KBsquare'] = 0x3385;\n t['KKsquare'] = 0x33CD;\n t['Kabashkircyrillic'] = 0x04A0;\n t['Kacute'] = 0x1E30;\n t['Kacyrillic'] = 0x041A;\n t['Kadescendercyrillic'] = 0x049A;\n t['Kahookcyrillic'] = 0x04C3;\n t['Kappa'] = 0x039A;\n t['Kastrokecyrillic'] = 0x049E;\n t['Kaverticalstrokecyrillic'] = 0x049C;\n t['Kcaron'] = 0x01E8;\n t['Kcedilla'] = 0x0136;\n t['Kcircle'] = 0x24C0;\n t['Kcommaaccent'] = 0x0136;\n t['Kdotbelow'] = 0x1E32;\n t['Keharmenian'] = 0x0554;\n t['Kenarmenian'] = 0x053F;\n t['Khacyrillic'] = 0x0425;\n t['Kheicoptic'] = 0x03E6;\n t['Khook'] = 0x0198;\n t['Kjecyrillic'] = 0x040C;\n t['Klinebelow'] = 0x1E34;\n t['Kmonospace'] = 0xFF2B;\n t['Koppacyrillic'] = 0x0480;\n t['Koppagreek'] = 0x03DE;\n t['Ksicyrillic'] = 0x046E;\n t['Ksmall'] = 0xF76B;\n t['L'] = 0x004C;\n t['LJ'] = 0x01C7;\n t['LL'] = 0xF6BF;\n t['Lacute'] = 0x0139;\n t['Lambda'] = 0x039B;\n t['Lcaron'] = 0x013D;\n t['Lcedilla'] = 0x013B;\n t['Lcircle'] = 0x24C1;\n t['Lcircumflexbelow'] = 0x1E3C;\n t['Lcommaaccent'] = 0x013B;\n t['Ldot'] = 0x013F;\n t['Ldotaccent'] = 0x013F;\n t['Ldotbelow'] = 0x1E36;\n t['Ldotbelowmacron'] = 0x1E38;\n t['Liwnarmenian'] = 0x053C;\n t['Lj'] = 0x01C8;\n t['Ljecyrillic'] = 0x0409;\n t['Llinebelow'] = 0x1E3A;\n t['Lmonospace'] = 0xFF2C;\n t['Lslash'] = 0x0141;\n t['Lslashsmall'] = 0xF6F9;\n t['Lsmall'] = 0xF76C;\n t['M'] = 0x004D;\n t['MBsquare'] = 0x3386;\n t['Macron'] = 0xF6D0;\n t['Macronsmall'] = 0xF7AF;\n t['Macute'] = 0x1E3E;\n t['Mcircle'] = 0x24C2;\n t['Mdotaccent'] = 0x1E40;\n t['Mdotbelow'] = 0x1E42;\n t['Menarmenian'] = 0x0544;\n t['Mmonospace'] = 0xFF2D;\n t['Msmall'] = 0xF76D;\n t['Mturned'] = 0x019C;\n t['Mu'] = 0x039C;\n t['N'] = 0x004E;\n t['NJ'] = 0x01CA;\n t['Nacute'] = 0x0143;\n t['Ncaron'] = 0x0147;\n t['Ncedilla'] = 0x0145;\n t['Ncircle'] = 0x24C3;\n t['Ncircumflexbelow'] = 0x1E4A;\n t['Ncommaaccent'] = 0x0145;\n t['Ndotaccent'] = 0x1E44;\n t['Ndotbelow'] = 0x1E46;\n t['Nhookleft'] = 0x019D;\n t['Nineroman'] = 0x2168;\n t['Nj'] = 0x01CB;\n t['Njecyrillic'] = 0x040A;\n t['Nlinebelow'] = 0x1E48;\n t['Nmonospace'] = 0xFF2E;\n t['Nowarmenian'] = 0x0546;\n t['Nsmall'] = 0xF76E;\n t['Ntilde'] = 0x00D1;\n t['Ntildesmall'] = 0xF7F1;\n t['Nu'] = 0x039D;\n t['O'] = 0x004F;\n t['OE'] = 0x0152;\n t['OEsmall'] = 0xF6FA;\n t['Oacute'] = 0x00D3;\n t['Oacutesmall'] = 0xF7F3;\n t['Obarredcyrillic'] = 0x04E8;\n t['Obarreddieresiscyrillic'] = 0x04EA;\n t['Obreve'] = 0x014E;\n t['Ocaron'] = 0x01D1;\n t['Ocenteredtilde'] = 0x019F;\n t['Ocircle'] = 0x24C4;\n t['Ocircumflex'] = 0x00D4;\n t['Ocircumflexacute'] = 0x1ED0;\n t['Ocircumflexdotbelow'] = 0x1ED8;\n t['Ocircumflexgrave'] = 0x1ED2;\n t['Ocircumflexhookabove'] = 0x1ED4;\n t['Ocircumflexsmall'] = 0xF7F4;\n t['Ocircumflextilde'] = 0x1ED6;\n t['Ocyrillic'] = 0x041E;\n t['Odblacute'] = 0x0150;\n t['Odblgrave'] = 0x020C;\n t['Odieresis'] = 0x00D6;\n t['Odieresiscyrillic'] = 0x04E6;\n t['Odieresissmall'] = 0xF7F6;\n t['Odotbelow'] = 0x1ECC;\n t['Ogoneksmall'] = 0xF6FB;\n t['Ograve'] = 0x00D2;\n t['Ogravesmall'] = 0xF7F2;\n t['Oharmenian'] = 0x0555;\n t['Ohm'] = 0x2126;\n t['Ohookabove'] = 0x1ECE;\n t['Ohorn'] = 0x01A0;\n t['Ohornacute'] = 0x1EDA;\n t['Ohorndotbelow'] = 0x1EE2;\n t['Ohorngrave'] = 0x1EDC;\n t['Ohornhookabove'] = 0x1EDE;\n t['Ohorntilde'] = 0x1EE0;\n t['Ohungarumlaut'] = 0x0150;\n t['Oi'] = 0x01A2;\n t['Oinvertedbreve'] = 0x020E;\n t['Omacron'] = 0x014C;\n t['Omacronacute'] = 0x1E52;\n t['Omacrongrave'] = 0x1E50;\n t['Omega'] = 0x2126;\n t['Omegacyrillic'] = 0x0460;\n t['Omegagreek'] = 0x03A9;\n t['Omegaroundcyrillic'] = 0x047A;\n t['Omegatitlocyrillic'] = 0x047C;\n t['Omegatonos'] = 0x038F;\n t['Omicron'] = 0x039F;\n t['Omicrontonos'] = 0x038C;\n t['Omonospace'] = 0xFF2F;\n t['Oneroman'] = 0x2160;\n t['Oogonek'] = 0x01EA;\n t['Oogonekmacron'] = 0x01EC;\n t['Oopen'] = 0x0186;\n t['Oslash'] = 0x00D8;\n t['Oslashacute'] = 0x01FE;\n t['Oslashsmall'] = 0xF7F8;\n t['Osmall'] = 0xF76F;\n t['Ostrokeacute'] = 0x01FE;\n t['Otcyrillic'] = 0x047E;\n t['Otilde'] = 0x00D5;\n t['Otildeacute'] = 0x1E4C;\n t['Otildedieresis'] = 0x1E4E;\n t['Otildesmall'] = 0xF7F5;\n t['P'] = 0x0050;\n t['Pacute'] = 0x1E54;\n t['Pcircle'] = 0x24C5;\n t['Pdotaccent'] = 0x1E56;\n t['Pecyrillic'] = 0x041F;\n t['Peharmenian'] = 0x054A;\n t['Pemiddlehookcyrillic'] = 0x04A6;\n t['Phi'] = 0x03A6;\n t['Phook'] = 0x01A4;\n t['Pi'] = 0x03A0;\n t['Piwrarmenian'] = 0x0553;\n t['Pmonospace'] = 0xFF30;\n t['Psi'] = 0x03A8;\n t['Psicyrillic'] = 0x0470;\n t['Psmall'] = 0xF770;\n t['Q'] = 0x0051;\n t['Qcircle'] = 0x24C6;\n t['Qmonospace'] = 0xFF31;\n t['Qsmall'] = 0xF771;\n t['R'] = 0x0052;\n t['Raarmenian'] = 0x054C;\n t['Racute'] = 0x0154;\n t['Rcaron'] = 0x0158;\n t['Rcedilla'] = 0x0156;\n t['Rcircle'] = 0x24C7;\n t['Rcommaaccent'] = 0x0156;\n t['Rdblgrave'] = 0x0210;\n t['Rdotaccent'] = 0x1E58;\n t['Rdotbelow'] = 0x1E5A;\n t['Rdotbelowmacron'] = 0x1E5C;\n t['Reharmenian'] = 0x0550;\n t['Rfraktur'] = 0x211C;\n t['Rho'] = 0x03A1;\n t['Ringsmall'] = 0xF6FC;\n t['Rinvertedbreve'] = 0x0212;\n t['Rlinebelow'] = 0x1E5E;\n t['Rmonospace'] = 0xFF32;\n t['Rsmall'] = 0xF772;\n t['Rsmallinverted'] = 0x0281;\n t['Rsmallinvertedsuperior'] = 0x02B6;\n t['S'] = 0x0053;\n t['SF010000'] = 0x250C;\n t['SF020000'] = 0x2514;\n t['SF030000'] = 0x2510;\n t['SF040000'] = 0x2518;\n t['SF050000'] = 0x253C;\n t['SF060000'] = 0x252C;\n t['SF070000'] = 0x2534;\n t['SF080000'] = 0x251C;\n t['SF090000'] = 0x2524;\n t['SF100000'] = 0x2500;\n t['SF110000'] = 0x2502;\n t['SF190000'] = 0x2561;\n t['SF200000'] = 0x2562;\n t['SF210000'] = 0x2556;\n t['SF220000'] = 0x2555;\n t['SF230000'] = 0x2563;\n t['SF240000'] = 0x2551;\n t['SF250000'] = 0x2557;\n t['SF260000'] = 0x255D;\n t['SF270000'] = 0x255C;\n t['SF280000'] = 0x255B;\n t['SF360000'] = 0x255E;\n t['SF370000'] = 0x255F;\n t['SF380000'] = 0x255A;\n t['SF390000'] = 0x2554;\n t['SF400000'] = 0x2569;\n t['SF410000'] = 0x2566;\n t['SF420000'] = 0x2560;\n t['SF430000'] = 0x2550;\n t['SF440000'] = 0x256C;\n t['SF450000'] = 0x2567;\n t['SF460000'] = 0x2568;\n t['SF470000'] = 0x2564;\n t['SF480000'] = 0x2565;\n t['SF490000'] = 0x2559;\n t['SF500000'] = 0x2558;\n t['SF510000'] = 0x2552;\n t['SF520000'] = 0x2553;\n t['SF530000'] = 0x256B;\n t['SF540000'] = 0x256A;\n t['Sacute'] = 0x015A;\n t['Sacutedotaccent'] = 0x1E64;\n t['Sampigreek'] = 0x03E0;\n t['Scaron'] = 0x0160;\n t['Scarondotaccent'] = 0x1E66;\n t['Scaronsmall'] = 0xF6FD;\n t['Scedilla'] = 0x015E;\n t['Schwa'] = 0x018F;\n t['Schwacyrillic'] = 0x04D8;\n t['Schwadieresiscyrillic'] = 0x04DA;\n t['Scircle'] = 0x24C8;\n t['Scircumflex'] = 0x015C;\n t['Scommaaccent'] = 0x0218;\n t['Sdotaccent'] = 0x1E60;\n t['Sdotbelow'] = 0x1E62;\n t['Sdotbelowdotaccent'] = 0x1E68;\n t['Seharmenian'] = 0x054D;\n t['Sevenroman'] = 0x2166;\n t['Shaarmenian'] = 0x0547;\n t['Shacyrillic'] = 0x0428;\n t['Shchacyrillic'] = 0x0429;\n t['Sheicoptic'] = 0x03E2;\n t['Shhacyrillic'] = 0x04BA;\n t['Shimacoptic'] = 0x03EC;\n t['Sigma'] = 0x03A3;\n t['Sixroman'] = 0x2165;\n t['Smonospace'] = 0xFF33;\n t['Softsigncyrillic'] = 0x042C;\n t['Ssmall'] = 0xF773;\n t['Stigmagreek'] = 0x03DA;\n t['T'] = 0x0054;\n t['Tau'] = 0x03A4;\n t['Tbar'] = 0x0166;\n t['Tcaron'] = 0x0164;\n t['Tcedilla'] = 0x0162;\n t['Tcircle'] = 0x24C9;\n t['Tcircumflexbelow'] = 0x1E70;\n t['Tcommaaccent'] = 0x0162;\n t['Tdotaccent'] = 0x1E6A;\n t['Tdotbelow'] = 0x1E6C;\n t['Tecyrillic'] = 0x0422;\n t['Tedescendercyrillic'] = 0x04AC;\n t['Tenroman'] = 0x2169;\n t['Tetsecyrillic'] = 0x04B4;\n t['Theta'] = 0x0398;\n t['Thook'] = 0x01AC;\n t['Thorn'] = 0x00DE;\n t['Thornsmall'] = 0xF7FE;\n t['Threeroman'] = 0x2162;\n t['Tildesmall'] = 0xF6FE;\n t['Tiwnarmenian'] = 0x054F;\n t['Tlinebelow'] = 0x1E6E;\n t['Tmonospace'] = 0xFF34;\n t['Toarmenian'] = 0x0539;\n t['Tonefive'] = 0x01BC;\n t['Tonesix'] = 0x0184;\n t['Tonetwo'] = 0x01A7;\n t['Tretroflexhook'] = 0x01AE;\n t['Tsecyrillic'] = 0x0426;\n t['Tshecyrillic'] = 0x040B;\n t['Tsmall'] = 0xF774;\n t['Twelveroman'] = 0x216B;\n t['Tworoman'] = 0x2161;\n t['U'] = 0x0055;\n t['Uacute'] = 0x00DA;\n t['Uacutesmall'] = 0xF7FA;\n t['Ubreve'] = 0x016C;\n t['Ucaron'] = 0x01D3;\n t['Ucircle'] = 0x24CA;\n t['Ucircumflex'] = 0x00DB;\n t['Ucircumflexbelow'] = 0x1E76;\n t['Ucircumflexsmall'] = 0xF7FB;\n t['Ucyrillic'] = 0x0423;\n t['Udblacute'] = 0x0170;\n t['Udblgrave'] = 0x0214;\n t['Udieresis'] = 0x00DC;\n t['Udieresisacute'] = 0x01D7;\n t['Udieresisbelow'] = 0x1E72;\n t['Udieresiscaron'] = 0x01D9;\n t['Udieresiscyrillic'] = 0x04F0;\n t['Udieresisgrave'] = 0x01DB;\n t['Udieresismacron'] = 0x01D5;\n t['Udieresissmall'] = 0xF7FC;\n t['Udotbelow'] = 0x1EE4;\n t['Ugrave'] = 0x00D9;\n t['Ugravesmall'] = 0xF7F9;\n t['Uhookabove'] = 0x1EE6;\n t['Uhorn'] = 0x01AF;\n t['Uhornacute'] = 0x1EE8;\n t['Uhorndotbelow'] = 0x1EF0;\n t['Uhorngrave'] = 0x1EEA;\n t['Uhornhookabove'] = 0x1EEC;\n t['Uhorntilde'] = 0x1EEE;\n t['Uhungarumlaut'] = 0x0170;\n t['Uhungarumlautcyrillic'] = 0x04F2;\n t['Uinvertedbreve'] = 0x0216;\n t['Ukcyrillic'] = 0x0478;\n t['Umacron'] = 0x016A;\n t['Umacroncyrillic'] = 0x04EE;\n t['Umacrondieresis'] = 0x1E7A;\n t['Umonospace'] = 0xFF35;\n t['Uogonek'] = 0x0172;\n t['Upsilon'] = 0x03A5;\n t['Upsilon1'] = 0x03D2;\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n t['Upsilonafrican'] = 0x01B1;\n t['Upsilondieresis'] = 0x03AB;\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n t['Upsilonhooksymbol'] = 0x03D2;\n t['Upsilontonos'] = 0x038E;\n t['Uring'] = 0x016E;\n t['Ushortcyrillic'] = 0x040E;\n t['Usmall'] = 0xF775;\n t['Ustraightcyrillic'] = 0x04AE;\n t['Ustraightstrokecyrillic'] = 0x04B0;\n t['Utilde'] = 0x0168;\n t['Utildeacute'] = 0x1E78;\n t['Utildebelow'] = 0x1E74;\n t['V'] = 0x0056;\n t['Vcircle'] = 0x24CB;\n t['Vdotbelow'] = 0x1E7E;\n t['Vecyrillic'] = 0x0412;\n t['Vewarmenian'] = 0x054E;\n t['Vhook'] = 0x01B2;\n t['Vmonospace'] = 0xFF36;\n t['Voarmenian'] = 0x0548;\n t['Vsmall'] = 0xF776;\n t['Vtilde'] = 0x1E7C;\n t['W'] = 0x0057;\n t['Wacute'] = 0x1E82;\n t['Wcircle'] = 0x24CC;\n t['Wcircumflex'] = 0x0174;\n t['Wdieresis'] = 0x1E84;\n t['Wdotaccent'] = 0x1E86;\n t['Wdotbelow'] = 0x1E88;\n t['Wgrave'] = 0x1E80;\n t['Wmonospace'] = 0xFF37;\n t['Wsmall'] = 0xF777;\n t['X'] = 0x0058;\n t['Xcircle'] = 0x24CD;\n t['Xdieresis'] = 0x1E8C;\n t['Xdotaccent'] = 0x1E8A;\n t['Xeharmenian'] = 0x053D;\n t['Xi'] = 0x039E;\n t['Xmonospace'] = 0xFF38;\n t['Xsmall'] = 0xF778;\n t['Y'] = 0x0059;\n t['Yacute'] = 0x00DD;\n t['Yacutesmall'] = 0xF7FD;\n t['Yatcyrillic'] = 0x0462;\n t['Ycircle'] = 0x24CE;\n t['Ycircumflex'] = 0x0176;\n t['Ydieresis'] = 0x0178;\n t['Ydieresissmall'] = 0xF7FF;\n t['Ydotaccent'] = 0x1E8E;\n t['Ydotbelow'] = 0x1EF4;\n t['Yericyrillic'] = 0x042B;\n t['Yerudieresiscyrillic'] = 0x04F8;\n t['Ygrave'] = 0x1EF2;\n t['Yhook'] = 0x01B3;\n t['Yhookabove'] = 0x1EF6;\n t['Yiarmenian'] = 0x0545;\n t['Yicyrillic'] = 0x0407;\n t['Yiwnarmenian'] = 0x0552;\n t['Ymonospace'] = 0xFF39;\n t['Ysmall'] = 0xF779;\n t['Ytilde'] = 0x1EF8;\n t['Yusbigcyrillic'] = 0x046A;\n t['Yusbigiotifiedcyrillic'] = 0x046C;\n t['Yuslittlecyrillic'] = 0x0466;\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\n t['Z'] = 0x005A;\n t['Zaarmenian'] = 0x0536;\n t['Zacute'] = 0x0179;\n t['Zcaron'] = 0x017D;\n t['Zcaronsmall'] = 0xF6FF;\n t['Zcircle'] = 0x24CF;\n t['Zcircumflex'] = 0x1E90;\n t['Zdot'] = 0x017B;\n t['Zdotaccent'] = 0x017B;\n t['Zdotbelow'] = 0x1E92;\n t['Zecyrillic'] = 0x0417;\n t['Zedescendercyrillic'] = 0x0498;\n t['Zedieresiscyrillic'] = 0x04DE;\n t['Zeta'] = 0x0396;\n t['Zhearmenian'] = 0x053A;\n t['Zhebrevecyrillic'] = 0x04C1;\n t['Zhecyrillic'] = 0x0416;\n t['Zhedescendercyrillic'] = 0x0496;\n t['Zhedieresiscyrillic'] = 0x04DC;\n t['Zlinebelow'] = 0x1E94;\n t['Zmonospace'] = 0xFF3A;\n t['Zsmall'] = 0xF77A;\n t['Zstroke'] = 0x01B5;\n t['a'] = 0x0061;\n t['aabengali'] = 0x0986;\n t['aacute'] = 0x00E1;\n t['aadeva'] = 0x0906;\n t['aagujarati'] = 0x0A86;\n t['aagurmukhi'] = 0x0A06;\n t['aamatragurmukhi'] = 0x0A3E;\n t['aarusquare'] = 0x3303;\n t['aavowelsignbengali'] = 0x09BE;\n t['aavowelsigndeva'] = 0x093E;\n t['aavowelsigngujarati'] = 0x0ABE;\n t['abbreviationmarkarmenian'] = 0x055F;\n t['abbreviationsigndeva'] = 0x0970;\n t['abengali'] = 0x0985;\n t['abopomofo'] = 0x311A;\n t['abreve'] = 0x0103;\n t['abreveacute'] = 0x1EAF;\n t['abrevecyrillic'] = 0x04D1;\n t['abrevedotbelow'] = 0x1EB7;\n t['abrevegrave'] = 0x1EB1;\n t['abrevehookabove'] = 0x1EB3;\n t['abrevetilde'] = 0x1EB5;\n t['acaron'] = 0x01CE;\n t['acircle'] = 0x24D0;\n t['acircumflex'] = 0x00E2;\n t['acircumflexacute'] = 0x1EA5;\n t['acircumflexdotbelow'] = 0x1EAD;\n t['acircumflexgrave'] = 0x1EA7;\n t['acircumflexhookabove'] = 0x1EA9;\n t['acircumflextilde'] = 0x1EAB;\n t['acute'] = 0x00B4;\n t['acutebelowcmb'] = 0x0317;\n t['acutecmb'] = 0x0301;\n t['acutecomb'] = 0x0301;\n t['acutedeva'] = 0x0954;\n t['acutelowmod'] = 0x02CF;\n t['acutetonecmb'] = 0x0341;\n t['acyrillic'] = 0x0430;\n t['adblgrave'] = 0x0201;\n t['addakgurmukhi'] = 0x0A71;\n t['adeva'] = 0x0905;\n t['adieresis'] = 0x00E4;\n t['adieresiscyrillic'] = 0x04D3;\n t['adieresismacron'] = 0x01DF;\n t['adotbelow'] = 0x1EA1;\n t['adotmacron'] = 0x01E1;\n t['ae'] = 0x00E6;\n t['aeacute'] = 0x01FD;\n t['aekorean'] = 0x3150;\n t['aemacron'] = 0x01E3;\n t['afii00208'] = 0x2015;\n t['afii08941'] = 0x20A4;\n t['afii10017'] = 0x0410;\n t['afii10018'] = 0x0411;\n t['afii10019'] = 0x0412;\n t['afii10020'] = 0x0413;\n t['afii10021'] = 0x0414;\n t['afii10022'] = 0x0415;\n t['afii10023'] = 0x0401;\n t['afii10024'] = 0x0416;\n t['afii10025'] = 0x0417;\n t['afii10026'] = 0x0418;\n t['afii10027'] = 0x0419;\n t['afii10028'] = 0x041A;\n t['afii10029'] = 0x041B;\n t['afii10030'] = 0x041C;\n t['afii10031'] = 0x041D;\n t['afii10032'] = 0x041E;\n t['afii10033'] = 0x041F;\n t['afii10034'] = 0x0420;\n t['afii10035'] = 0x0421;\n t['afii10036'] = 0x0422;\n t['afii10037'] = 0x0423;\n t['afii10038'] = 0x0424;\n t['afii10039'] = 0x0425;\n t['afii10040'] = 0x0426;\n t['afii10041'] = 0x0427;\n t['afii10042'] = 0x0428;\n t['afii10043'] = 0x0429;\n t['afii10044'] = 0x042A;\n t['afii10045'] = 0x042B;\n t['afii10046'] = 0x042C;\n t['afii10047'] = 0x042D;\n t['afii10048'] = 0x042E;\n t['afii10049'] = 0x042F;\n t['afii10050'] = 0x0490;\n t['afii10051'] = 0x0402;\n t['afii10052'] = 0x0403;\n t['afii10053'] = 0x0404;\n t['afii10054'] = 0x0405;\n t['afii10055'] = 0x0406;\n t['afii10056'] = 0x0407;\n t['afii10057'] = 0x0408;\n t['afii10058'] = 0x0409;\n t['afii10059'] = 0x040A;\n t['afii10060'] = 0x040B;\n t['afii10061'] = 0x040C;\n t['afii10062'] = 0x040E;\n t['afii10063'] = 0xF6C4;\n t['afii10064'] = 0xF6C5;\n t['afii10065'] = 0x0430;\n t['afii10066'] = 0x0431;\n t['afii10067'] = 0x0432;\n t['afii10068'] = 0x0433;\n t['afii10069'] = 0x0434;\n t['afii10070'] = 0x0435;\n t['afii10071'] = 0x0451;\n t['afii10072'] = 0x0436;\n t['afii10073'] = 0x0437;\n t['afii10074'] = 0x0438;\n t['afii10075'] = 0x0439;\n t['afii10076'] = 0x043A;\n t['afii10077'] = 0x043B;\n t['afii10078'] = 0x043C;\n t['afii10079'] = 0x043D;\n t['afii10080'] = 0x043E;\n t['afii10081'] = 0x043F;\n t['afii10082'] = 0x0440;\n t['afii10083'] = 0x0441;\n t['afii10084'] = 0x0442;\n t['afii10085'] = 0x0443;\n t['afii10086'] = 0x0444;\n t['afii10087'] = 0x0445;\n t['afii10088'] = 0x0446;\n t['afii10089'] = 0x0447;\n t['afii10090'] = 0x0448;\n t['afii10091'] = 0x0449;\n t['afii10092'] = 0x044A;\n t['afii10093'] = 0x044B;\n t['afii10094'] = 0x044C;\n t['afii10095'] = 0x044D;\n t['afii10096'] = 0x044E;\n t['afii10097'] = 0x044F;\n t['afii10098'] = 0x0491;\n t['afii10099'] = 0x0452;\n t['afii10100'] = 0x0453;\n t['afii10101'] = 0x0454;\n t['afii10102'] = 0x0455;\n t['afii10103'] = 0x0456;\n t['afii10104'] = 0x0457;\n t['afii10105'] = 0x0458;\n t['afii10106'] = 0x0459;\n t['afii10107'] = 0x045A;\n t['afii10108'] = 0x045B;\n t['afii10109'] = 0x045C;\n t['afii10110'] = 0x045E;\n t['afii10145'] = 0x040F;\n t['afii10146'] = 0x0462;\n t['afii10147'] = 0x0472;\n t['afii10148'] = 0x0474;\n t['afii10192'] = 0xF6C6;\n t['afii10193'] = 0x045F;\n t['afii10194'] = 0x0463;\n t['afii10195'] = 0x0473;\n t['afii10196'] = 0x0475;\n t['afii10831'] = 0xF6C7;\n t['afii10832'] = 0xF6C8;\n t['afii10846'] = 0x04D9;\n t['afii299'] = 0x200E;\n t['afii300'] = 0x200F;\n t['afii301'] = 0x200D;\n t['afii57381'] = 0x066A;\n t['afii57388'] = 0x060C;\n t['afii57392'] = 0x0660;\n t['afii57393'] = 0x0661;\n t['afii57394'] = 0x0662;\n t['afii57395'] = 0x0663;\n t['afii57396'] = 0x0664;\n t['afii57397'] = 0x0665;\n t['afii57398'] = 0x0666;\n t['afii57399'] = 0x0667;\n t['afii57400'] = 0x0668;\n t['afii57401'] = 0x0669;\n t['afii57403'] = 0x061B;\n t['afii57407'] = 0x061F;\n t['afii57409'] = 0x0621;\n t['afii57410'] = 0x0622;\n t['afii57411'] = 0x0623;\n t['afii57412'] = 0x0624;\n t['afii57413'] = 0x0625;\n t['afii57414'] = 0x0626;\n t['afii57415'] = 0x0627;\n t['afii57416'] = 0x0628;\n t['afii57417'] = 0x0629;\n t['afii57418'] = 0x062A;\n t['afii57419'] = 0x062B;\n t['afii57420'] = 0x062C;\n t['afii57421'] = 0x062D;\n t['afii57422'] = 0x062E;\n t['afii57423'] = 0x062F;\n t['afii57424'] = 0x0630;\n t['afii57425'] = 0x0631;\n t['afii57426'] = 0x0632;\n t['afii57427'] = 0x0633;\n t['afii57428'] = 0x0634;\n t['afii57429'] = 0x0635;\n t['afii57430'] = 0x0636;\n t['afii57431'] = 0x0637;\n t['afii57432'] = 0x0638;\n t['afii57433'] = 0x0639;\n t['afii57434'] = 0x063A;\n t['afii57440'] = 0x0640;\n t['afii57441'] = 0x0641;\n t['afii57442'] = 0x0642;\n t['afii57443'] = 0x0643;\n t['afii57444'] = 0x0644;\n t['afii57445'] = 0x0645;\n t['afii57446'] = 0x0646;\n t['afii57448'] = 0x0648;\n t['afii57449'] = 0x0649;\n t['afii57450'] = 0x064A;\n t['afii57451'] = 0x064B;\n t['afii57452'] = 0x064C;\n t['afii57453'] = 0x064D;\n t['afii57454'] = 0x064E;\n t['afii57455'] = 0x064F;\n t['afii57456'] = 0x0650;\n t['afii57457'] = 0x0651;\n t['afii57458'] = 0x0652;\n t['afii57470'] = 0x0647;\n t['afii57505'] = 0x06A4;\n t['afii57506'] = 0x067E;\n t['afii57507'] = 0x0686;\n t['afii57508'] = 0x0698;\n t['afii57509'] = 0x06AF;\n t['afii57511'] = 0x0679;\n t['afii57512'] = 0x0688;\n t['afii57513'] = 0x0691;\n t['afii57514'] = 0x06BA;\n t['afii57519'] = 0x06D2;\n t['afii57534'] = 0x06D5;\n t['afii57636'] = 0x20AA;\n t['afii57645'] = 0x05BE;\n t['afii57658'] = 0x05C3;\n t['afii57664'] = 0x05D0;\n t['afii57665'] = 0x05D1;\n t['afii57666'] = 0x05D2;\n t['afii57667'] = 0x05D3;\n t['afii57668'] = 0x05D4;\n t['afii57669'] = 0x05D5;\n t['afii57670'] = 0x05D6;\n t['afii57671'] = 0x05D7;\n t['afii57672'] = 0x05D8;\n t['afii57673'] = 0x05D9;\n t['afii57674'] = 0x05DA;\n t['afii57675'] = 0x05DB;\n t['afii57676'] = 0x05DC;\n t['afii57677'] = 0x05DD;\n t['afii57678'] = 0x05DE;\n t['afii57679'] = 0x05DF;\n t['afii57680'] = 0x05E0;\n t['afii57681'] = 0x05E1;\n t['afii57682'] = 0x05E2;\n t['afii57683'] = 0x05E3;\n t['afii57684'] = 0x05E4;\n t['afii57685'] = 0x05E5;\n t['afii57686'] = 0x05E6;\n t['afii57687'] = 0x05E7;\n t['afii57688'] = 0x05E8;\n t['afii57689'] = 0x05E9;\n t['afii57690'] = 0x05EA;\n t['afii57694'] = 0xFB2A;\n t['afii57695'] = 0xFB2B;\n t['afii57700'] = 0xFB4B;\n t['afii57705'] = 0xFB1F;\n t['afii57716'] = 0x05F0;\n t['afii57717'] = 0x05F1;\n t['afii57718'] = 0x05F2;\n t['afii57723'] = 0xFB35;\n t['afii57793'] = 0x05B4;\n t['afii57794'] = 0x05B5;\n t['afii57795'] = 0x05B6;\n t['afii57796'] = 0x05BB;\n t['afii57797'] = 0x05B8;\n t['afii57798'] = 0x05B7;\n t['afii57799'] = 0x05B0;\n t['afii57800'] = 0x05B2;\n t['afii57801'] = 0x05B1;\n t['afii57802'] = 0x05B3;\n t['afii57803'] = 0x05C2;\n t['afii57804'] = 0x05C1;\n t['afii57806'] = 0x05B9;\n t['afii57807'] = 0x05BC;\n t['afii57839'] = 0x05BD;\n t['afii57841'] = 0x05BF;\n t['afii57842'] = 0x05C0;\n t['afii57929'] = 0x02BC;\n t['afii61248'] = 0x2105;\n t['afii61289'] = 0x2113;\n t['afii61352'] = 0x2116;\n t['afii61573'] = 0x202C;\n t['afii61574'] = 0x202D;\n t['afii61575'] = 0x202E;\n t['afii61664'] = 0x200C;\n t['afii63167'] = 0x066D;\n t['afii64937'] = 0x02BD;\n t['agrave'] = 0x00E0;\n t['agujarati'] = 0x0A85;\n t['agurmukhi'] = 0x0A05;\n t['ahiragana'] = 0x3042;\n t['ahookabove'] = 0x1EA3;\n t['aibengali'] = 0x0990;\n t['aibopomofo'] = 0x311E;\n t['aideva'] = 0x0910;\n t['aiecyrillic'] = 0x04D5;\n t['aigujarati'] = 0x0A90;\n t['aigurmukhi'] = 0x0A10;\n t['aimatragurmukhi'] = 0x0A48;\n t['ainarabic'] = 0x0639;\n t['ainfinalarabic'] = 0xFECA;\n t['aininitialarabic'] = 0xFECB;\n t['ainmedialarabic'] = 0xFECC;\n t['ainvertedbreve'] = 0x0203;\n t['aivowelsignbengali'] = 0x09C8;\n t['aivowelsigndeva'] = 0x0948;\n t['aivowelsigngujarati'] = 0x0AC8;\n t['akatakana'] = 0x30A2;\n t['akatakanahalfwidth'] = 0xFF71;\n t['akorean'] = 0x314F;\n t['alef'] = 0x05D0;\n t['alefarabic'] = 0x0627;\n t['alefdageshhebrew'] = 0xFB30;\n t['aleffinalarabic'] = 0xFE8E;\n t['alefhamzaabovearabic'] = 0x0623;\n t['alefhamzaabovefinalarabic'] = 0xFE84;\n t['alefhamzabelowarabic'] = 0x0625;\n t['alefhamzabelowfinalarabic'] = 0xFE88;\n t['alefhebrew'] = 0x05D0;\n t['aleflamedhebrew'] = 0xFB4F;\n t['alefmaddaabovearabic'] = 0x0622;\n t['alefmaddaabovefinalarabic'] = 0xFE82;\n t['alefmaksuraarabic'] = 0x0649;\n t['alefmaksurafinalarabic'] = 0xFEF0;\n t['alefmaksurainitialarabic'] = 0xFEF3;\n t['alefmaksuramedialarabic'] = 0xFEF4;\n t['alefpatahhebrew'] = 0xFB2E;\n t['alefqamatshebrew'] = 0xFB2F;\n t['aleph'] = 0x2135;\n t['allequal'] = 0x224C;\n t['alpha'] = 0x03B1;\n t['alphatonos'] = 0x03AC;\n t['amacron'] = 0x0101;\n t['amonospace'] = 0xFF41;\n t['ampersand'] = 0x0026;\n t['ampersandmonospace'] = 0xFF06;\n t['ampersandsmall'] = 0xF726;\n t['amsquare'] = 0x33C2;\n t['anbopomofo'] = 0x3122;\n t['angbopomofo'] = 0x3124;\n t['angbracketleft'] = 0x3008;\n t['angbracketright'] = 0x3009;\n t['angkhankhuthai'] = 0x0E5A;\n t['angle'] = 0x2220;\n t['anglebracketleft'] = 0x3008;\n t['anglebracketleftvertical'] = 0xFE3F;\n t['anglebracketright'] = 0x3009;\n t['anglebracketrightvertical'] = 0xFE40;\n t['angleleft'] = 0x2329;\n t['angleright'] = 0x232A;\n t['angstrom'] = 0x212B;\n t['anoteleia'] = 0x0387;\n t['anudattadeva'] = 0x0952;\n t['anusvarabengali'] = 0x0982;\n t['anusvaradeva'] = 0x0902;\n t['anusvaragujarati'] = 0x0A82;\n t['aogonek'] = 0x0105;\n t['apaatosquare'] = 0x3300;\n t['aparen'] = 0x249C;\n t['apostrophearmenian'] = 0x055A;\n t['apostrophemod'] = 0x02BC;\n t['apple'] = 0xF8FF;\n t['approaches'] = 0x2250;\n t['approxequal'] = 0x2248;\n t['approxequalorimage'] = 0x2252;\n t['approximatelyequal'] = 0x2245;\n t['araeaekorean'] = 0x318E;\n t['araeakorean'] = 0x318D;\n t['arc'] = 0x2312;\n t['arighthalfring'] = 0x1E9A;\n t['aring'] = 0x00E5;\n t['aringacute'] = 0x01FB;\n t['aringbelow'] = 0x1E01;\n t['arrowboth'] = 0x2194;\n t['arrowdashdown'] = 0x21E3;\n t['arrowdashleft'] = 0x21E0;\n t['arrowdashright'] = 0x21E2;\n t['arrowdashup'] = 0x21E1;\n t['arrowdblboth'] = 0x21D4;\n t['arrowdbldown'] = 0x21D3;\n t['arrowdblleft'] = 0x21D0;\n t['arrowdblright'] = 0x21D2;\n t['arrowdblup'] = 0x21D1;\n t['arrowdown'] = 0x2193;\n t['arrowdownleft'] = 0x2199;\n t['arrowdownright'] = 0x2198;\n t['arrowdownwhite'] = 0x21E9;\n t['arrowheaddownmod'] = 0x02C5;\n t['arrowheadleftmod'] = 0x02C2;\n t['arrowheadrightmod'] = 0x02C3;\n t['arrowheadupmod'] = 0x02C4;\n t['arrowhorizex'] = 0xF8E7;\n t['arrowleft'] = 0x2190;\n t['arrowleftdbl'] = 0x21D0;\n t['arrowleftdblstroke'] = 0x21CD;\n t['arrowleftoverright'] = 0x21C6;\n t['arrowleftwhite'] = 0x21E6;\n t['arrowright'] = 0x2192;\n t['arrowrightdblstroke'] = 0x21CF;\n t['arrowrightheavy'] = 0x279E;\n t['arrowrightoverleft'] = 0x21C4;\n t['arrowrightwhite'] = 0x21E8;\n t['arrowtableft'] = 0x21E4;\n t['arrowtabright'] = 0x21E5;\n t['arrowup'] = 0x2191;\n t['arrowupdn'] = 0x2195;\n t['arrowupdnbse'] = 0x21A8;\n t['arrowupdownbase'] = 0x21A8;\n t['arrowupleft'] = 0x2196;\n t['arrowupleftofdown'] = 0x21C5;\n t['arrowupright'] = 0x2197;\n t['arrowupwhite'] = 0x21E7;\n t['arrowvertex'] = 0xF8E6;\n t['asciicircum'] = 0x005E;\n t['asciicircummonospace'] = 0xFF3E;\n t['asciitilde'] = 0x007E;\n t['asciitildemonospace'] = 0xFF5E;\n t['ascript'] = 0x0251;\n t['ascriptturned'] = 0x0252;\n t['asmallhiragana'] = 0x3041;\n t['asmallkatakana'] = 0x30A1;\n t['asmallkatakanahalfwidth'] = 0xFF67;\n t['asterisk'] = 0x002A;\n t['asteriskaltonearabic'] = 0x066D;\n t['asteriskarabic'] = 0x066D;\n t['asteriskmath'] = 0x2217;\n t['asteriskmonospace'] = 0xFF0A;\n t['asterisksmall'] = 0xFE61;\n t['asterism'] = 0x2042;\n t['asuperior'] = 0xF6E9;\n t['asymptoticallyequal'] = 0x2243;\n t['at'] = 0x0040;\n t['atilde'] = 0x00E3;\n t['atmonospace'] = 0xFF20;\n t['atsmall'] = 0xFE6B;\n t['aturned'] = 0x0250;\n t['aubengali'] = 0x0994;\n t['aubopomofo'] = 0x3120;\n t['audeva'] = 0x0914;\n t['augujarati'] = 0x0A94;\n t['augurmukhi'] = 0x0A14;\n t['aulengthmarkbengali'] = 0x09D7;\n t['aumatragurmukhi'] = 0x0A4C;\n t['auvowelsignbengali'] = 0x09CC;\n t['auvowelsigndeva'] = 0x094C;\n t['auvowelsigngujarati'] = 0x0ACC;\n t['avagrahadeva'] = 0x093D;\n t['aybarmenian'] = 0x0561;\n t['ayin'] = 0x05E2;\n t['ayinaltonehebrew'] = 0xFB20;\n t['ayinhebrew'] = 0x05E2;\n t['b'] = 0x0062;\n t['babengali'] = 0x09AC;\n t['backslash'] = 0x005C;\n t['backslashmonospace'] = 0xFF3C;\n t['badeva'] = 0x092C;\n t['bagujarati'] = 0x0AAC;\n t['bagurmukhi'] = 0x0A2C;\n t['bahiragana'] = 0x3070;\n t['bahtthai'] = 0x0E3F;\n t['bakatakana'] = 0x30D0;\n t['bar'] = 0x007C;\n t['barmonospace'] = 0xFF5C;\n t['bbopomofo'] = 0x3105;\n t['bcircle'] = 0x24D1;\n t['bdotaccent'] = 0x1E03;\n t['bdotbelow'] = 0x1E05;\n t['beamedsixteenthnotes'] = 0x266C;\n t['because'] = 0x2235;\n t['becyrillic'] = 0x0431;\n t['beharabic'] = 0x0628;\n t['behfinalarabic'] = 0xFE90;\n t['behinitialarabic'] = 0xFE91;\n t['behiragana'] = 0x3079;\n t['behmedialarabic'] = 0xFE92;\n t['behmeeminitialarabic'] = 0xFC9F;\n t['behmeemisolatedarabic'] = 0xFC08;\n t['behnoonfinalarabic'] = 0xFC6D;\n t['bekatakana'] = 0x30D9;\n t['benarmenian'] = 0x0562;\n t['bet'] = 0x05D1;\n t['beta'] = 0x03B2;\n t['betasymbolgreek'] = 0x03D0;\n t['betdagesh'] = 0xFB31;\n t['betdageshhebrew'] = 0xFB31;\n t['bethebrew'] = 0x05D1;\n t['betrafehebrew'] = 0xFB4C;\n t['bhabengali'] = 0x09AD;\n t['bhadeva'] = 0x092D;\n t['bhagujarati'] = 0x0AAD;\n t['bhagurmukhi'] = 0x0A2D;\n t['bhook'] = 0x0253;\n t['bihiragana'] = 0x3073;\n t['bikatakana'] = 0x30D3;\n t['bilabialclick'] = 0x0298;\n t['bindigurmukhi'] = 0x0A02;\n t['birusquare'] = 0x3331;\n t['blackcircle'] = 0x25CF;\n t['blackdiamond'] = 0x25C6;\n t['blackdownpointingtriangle'] = 0x25BC;\n t['blackleftpointingpointer'] = 0x25C4;\n t['blackleftpointingtriangle'] = 0x25C0;\n t['blacklenticularbracketleft'] = 0x3010;\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\n t['blacklenticularbracketright'] = 0x3011;\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\n t['blacklowerlefttriangle'] = 0x25E3;\n t['blacklowerrighttriangle'] = 0x25E2;\n t['blackrectangle'] = 0x25AC;\n t['blackrightpointingpointer'] = 0x25BA;\n t['blackrightpointingtriangle'] = 0x25B6;\n t['blacksmallsquare'] = 0x25AA;\n t['blacksmilingface'] = 0x263B;\n t['blacksquare'] = 0x25A0;\n t['blackstar'] = 0x2605;\n t['blackupperlefttriangle'] = 0x25E4;\n t['blackupperrighttriangle'] = 0x25E5;\n t['blackuppointingsmalltriangle'] = 0x25B4;\n t['blackuppointingtriangle'] = 0x25B2;\n t['blank'] = 0x2423;\n t['blinebelow'] = 0x1E07;\n t['block'] = 0x2588;\n t['bmonospace'] = 0xFF42;\n t['bobaimaithai'] = 0x0E1A;\n t['bohiragana'] = 0x307C;\n t['bokatakana'] = 0x30DC;\n t['bparen'] = 0x249D;\n t['bqsquare'] = 0x33C3;\n t['braceex'] = 0xF8F4;\n t['braceleft'] = 0x007B;\n t['braceleftbt'] = 0xF8F3;\n t['braceleftmid'] = 0xF8F2;\n t['braceleftmonospace'] = 0xFF5B;\n t['braceleftsmall'] = 0xFE5B;\n t['bracelefttp'] = 0xF8F1;\n t['braceleftvertical'] = 0xFE37;\n t['braceright'] = 0x007D;\n t['bracerightbt'] = 0xF8FE;\n t['bracerightmid'] = 0xF8FD;\n t['bracerightmonospace'] = 0xFF5D;\n t['bracerightsmall'] = 0xFE5C;\n t['bracerighttp'] = 0xF8FC;\n t['bracerightvertical'] = 0xFE38;\n t['bracketleft'] = 0x005B;\n t['bracketleftbt'] = 0xF8F0;\n t['bracketleftex'] = 0xF8EF;\n t['bracketleftmonospace'] = 0xFF3B;\n t['bracketlefttp'] = 0xF8EE;\n t['bracketright'] = 0x005D;\n t['bracketrightbt'] = 0xF8FB;\n t['bracketrightex'] = 0xF8FA;\n t['bracketrightmonospace'] = 0xFF3D;\n t['bracketrighttp'] = 0xF8F9;\n t['breve'] = 0x02D8;\n t['brevebelowcmb'] = 0x032E;\n t['brevecmb'] = 0x0306;\n t['breveinvertedbelowcmb'] = 0x032F;\n t['breveinvertedcmb'] = 0x0311;\n t['breveinverteddoublecmb'] = 0x0361;\n t['bridgebelowcmb'] = 0x032A;\n t['bridgeinvertedbelowcmb'] = 0x033A;\n t['brokenbar'] = 0x00A6;\n t['bstroke'] = 0x0180;\n t['bsuperior'] = 0xF6EA;\n t['btopbar'] = 0x0183;\n t['buhiragana'] = 0x3076;\n t['bukatakana'] = 0x30D6;\n t['bullet'] = 0x2022;\n t['bulletinverse'] = 0x25D8;\n t['bulletoperator'] = 0x2219;\n t['bullseye'] = 0x25CE;\n t['c'] = 0x0063;\n t['caarmenian'] = 0x056E;\n t['cabengali'] = 0x099A;\n t['cacute'] = 0x0107;\n t['cadeva'] = 0x091A;\n t['cagujarati'] = 0x0A9A;\n t['cagurmukhi'] = 0x0A1A;\n t['calsquare'] = 0x3388;\n t['candrabindubengali'] = 0x0981;\n t['candrabinducmb'] = 0x0310;\n t['candrabindudeva'] = 0x0901;\n t['candrabindugujarati'] = 0x0A81;\n t['capslock'] = 0x21EA;\n t['careof'] = 0x2105;\n t['caron'] = 0x02C7;\n t['caronbelowcmb'] = 0x032C;\n t['caroncmb'] = 0x030C;\n t['carriagereturn'] = 0x21B5;\n t['cbopomofo'] = 0x3118;\n t['ccaron'] = 0x010D;\n t['ccedilla'] = 0x00E7;\n t['ccedillaacute'] = 0x1E09;\n t['ccircle'] = 0x24D2;\n t['ccircumflex'] = 0x0109;\n t['ccurl'] = 0x0255;\n t['cdot'] = 0x010B;\n t['cdotaccent'] = 0x010B;\n t['cdsquare'] = 0x33C5;\n t['cedilla'] = 0x00B8;\n t['cedillacmb'] = 0x0327;\n t['cent'] = 0x00A2;\n t['centigrade'] = 0x2103;\n t['centinferior'] = 0xF6DF;\n t['centmonospace'] = 0xFFE0;\n t['centoldstyle'] = 0xF7A2;\n t['centsuperior'] = 0xF6E0;\n t['chaarmenian'] = 0x0579;\n t['chabengali'] = 0x099B;\n t['chadeva'] = 0x091B;\n t['chagujarati'] = 0x0A9B;\n t['chagurmukhi'] = 0x0A1B;\n t['chbopomofo'] = 0x3114;\n t['cheabkhasiancyrillic'] = 0x04BD;\n t['checkmark'] = 0x2713;\n t['checyrillic'] = 0x0447;\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\n t['chedescendercyrillic'] = 0x04B7;\n t['chedieresiscyrillic'] = 0x04F5;\n t['cheharmenian'] = 0x0573;\n t['chekhakassiancyrillic'] = 0x04CC;\n t['cheverticalstrokecyrillic'] = 0x04B9;\n t['chi'] = 0x03C7;\n t['chieuchacirclekorean'] = 0x3277;\n t['chieuchaparenkorean'] = 0x3217;\n t['chieuchcirclekorean'] = 0x3269;\n t['chieuchkorean'] = 0x314A;\n t['chieuchparenkorean'] = 0x3209;\n t['chochangthai'] = 0x0E0A;\n t['chochanthai'] = 0x0E08;\n t['chochingthai'] = 0x0E09;\n t['chochoethai'] = 0x0E0C;\n t['chook'] = 0x0188;\n t['cieucacirclekorean'] = 0x3276;\n t['cieucaparenkorean'] = 0x3216;\n t['cieuccirclekorean'] = 0x3268;\n t['cieuckorean'] = 0x3148;\n t['cieucparenkorean'] = 0x3208;\n t['cieucuparenkorean'] = 0x321C;\n t['circle'] = 0x25CB;\n t['circlecopyrt'] = 0x00A9;\n t['circlemultiply'] = 0x2297;\n t['circleot'] = 0x2299;\n t['circleplus'] = 0x2295;\n t['circlepostalmark'] = 0x3036;\n t['circlewithlefthalfblack'] = 0x25D0;\n t['circlewithrighthalfblack'] = 0x25D1;\n t['circumflex'] = 0x02C6;\n t['circumflexbelowcmb'] = 0x032D;\n t['circumflexcmb'] = 0x0302;\n t['clear'] = 0x2327;\n t['clickalveolar'] = 0x01C2;\n t['clickdental'] = 0x01C0;\n t['clicklateral'] = 0x01C1;\n t['clickretroflex'] = 0x01C3;\n t['club'] = 0x2663;\n t['clubsuitblack'] = 0x2663;\n t['clubsuitwhite'] = 0x2667;\n t['cmcubedsquare'] = 0x33A4;\n t['cmonospace'] = 0xFF43;\n t['cmsquaredsquare'] = 0x33A0;\n t['coarmenian'] = 0x0581;\n t['colon'] = 0x003A;\n t['colonmonetary'] = 0x20A1;\n t['colonmonospace'] = 0xFF1A;\n t['colonsign'] = 0x20A1;\n t['colonsmall'] = 0xFE55;\n t['colontriangularhalfmod'] = 0x02D1;\n t['colontriangularmod'] = 0x02D0;\n t['comma'] = 0x002C;\n t['commaabovecmb'] = 0x0313;\n t['commaaboverightcmb'] = 0x0315;\n t['commaaccent'] = 0xF6C3;\n t['commaarabic'] = 0x060C;\n t['commaarmenian'] = 0x055D;\n t['commainferior'] = 0xF6E1;\n t['commamonospace'] = 0xFF0C;\n t['commareversedabovecmb'] = 0x0314;\n t['commareversedmod'] = 0x02BD;\n t['commasmall'] = 0xFE50;\n t['commasuperior'] = 0xF6E2;\n t['commaturnedabovecmb'] = 0x0312;\n t['commaturnedmod'] = 0x02BB;\n t['compass'] = 0x263C;\n t['congruent'] = 0x2245;\n t['contourintegral'] = 0x222E;\n t['control'] = 0x2303;\n t['controlACK'] = 0x0006;\n t['controlBEL'] = 0x0007;\n t['controlBS'] = 0x0008;\n t['controlCAN'] = 0x0018;\n t['controlCR'] = 0x000D;\n t['controlDC1'] = 0x0011;\n t['controlDC2'] = 0x0012;\n t['controlDC3'] = 0x0013;\n t['controlDC4'] = 0x0014;\n t['controlDEL'] = 0x007F;\n t['controlDLE'] = 0x0010;\n t['controlEM'] = 0x0019;\n t['controlENQ'] = 0x0005;\n t['controlEOT'] = 0x0004;\n t['controlESC'] = 0x001B;\n t['controlETB'] = 0x0017;\n t['controlETX'] = 0x0003;\n t['controlFF'] = 0x000C;\n t['controlFS'] = 0x001C;\n t['controlGS'] = 0x001D;\n t['controlHT'] = 0x0009;\n t['controlLF'] = 0x000A;\n t['controlNAK'] = 0x0015;\n t['controlNULL'] = 0x0000;\n t['controlRS'] = 0x001E;\n t['controlSI'] = 0x000F;\n t['controlSO'] = 0x000E;\n t['controlSOT'] = 0x0002;\n t['controlSTX'] = 0x0001;\n t['controlSUB'] = 0x001A;\n t['controlSYN'] = 0x0016;\n t['controlUS'] = 0x001F;\n t['controlVT'] = 0x000B;\n t['copyright'] = 0x00A9;\n t['copyrightsans'] = 0xF8E9;\n t['copyrightserif'] = 0xF6D9;\n t['cornerbracketleft'] = 0x300C;\n t['cornerbracketlefthalfwidth'] = 0xFF62;\n t['cornerbracketleftvertical'] = 0xFE41;\n t['cornerbracketright'] = 0x300D;\n t['cornerbracketrighthalfwidth'] = 0xFF63;\n t['cornerbracketrightvertical'] = 0xFE42;\n t['corporationsquare'] = 0x337F;\n t['cosquare'] = 0x33C7;\n t['coverkgsquare'] = 0x33C6;\n t['cparen'] = 0x249E;\n t['cruzeiro'] = 0x20A2;\n t['cstretched'] = 0x0297;\n t['curlyand'] = 0x22CF;\n t['curlyor'] = 0x22CE;\n t['currency'] = 0x00A4;\n t['cyrBreve'] = 0xF6D1;\n t['cyrFlex'] = 0xF6D2;\n t['cyrbreve'] = 0xF6D4;\n t['cyrflex'] = 0xF6D5;\n t['d'] = 0x0064;\n t['daarmenian'] = 0x0564;\n t['dabengali'] = 0x09A6;\n t['dadarabic'] = 0x0636;\n t['dadeva'] = 0x0926;\n t['dadfinalarabic'] = 0xFEBE;\n t['dadinitialarabic'] = 0xFEBF;\n t['dadmedialarabic'] = 0xFEC0;\n t['dagesh'] = 0x05BC;\n t['dageshhebrew'] = 0x05BC;\n t['dagger'] = 0x2020;\n t['daggerdbl'] = 0x2021;\n t['dagujarati'] = 0x0AA6;\n t['dagurmukhi'] = 0x0A26;\n t['dahiragana'] = 0x3060;\n t['dakatakana'] = 0x30C0;\n t['dalarabic'] = 0x062F;\n t['dalet'] = 0x05D3;\n t['daletdagesh'] = 0xFB33;\n t['daletdageshhebrew'] = 0xFB33;\n t['dalethebrew'] = 0x05D3;\n t['dalfinalarabic'] = 0xFEAA;\n t['dammaarabic'] = 0x064F;\n t['dammalowarabic'] = 0x064F;\n t['dammatanaltonearabic'] = 0x064C;\n t['dammatanarabic'] = 0x064C;\n t['danda'] = 0x0964;\n t['dargahebrew'] = 0x05A7;\n t['dargalefthebrew'] = 0x05A7;\n t['dasiapneumatacyrilliccmb'] = 0x0485;\n t['dblGrave'] = 0xF6D3;\n t['dblanglebracketleft'] = 0x300A;\n t['dblanglebracketleftvertical'] = 0xFE3D;\n t['dblanglebracketright'] = 0x300B;\n t['dblanglebracketrightvertical'] = 0xFE3E;\n t['dblarchinvertedbelowcmb'] = 0x032B;\n t['dblarrowleft'] = 0x21D4;\n t['dblarrowright'] = 0x21D2;\n t['dbldanda'] = 0x0965;\n t['dblgrave'] = 0xF6D6;\n t['dblgravecmb'] = 0x030F;\n t['dblintegral'] = 0x222C;\n t['dbllowline'] = 0x2017;\n t['dbllowlinecmb'] = 0x0333;\n t['dbloverlinecmb'] = 0x033F;\n t['dblprimemod'] = 0x02BA;\n t['dblverticalbar'] = 0x2016;\n t['dblverticallineabovecmb'] = 0x030E;\n t['dbopomofo'] = 0x3109;\n t['dbsquare'] = 0x33C8;\n t['dcaron'] = 0x010F;\n t['dcedilla'] = 0x1E11;\n t['dcircle'] = 0x24D3;\n t['dcircumflexbelow'] = 0x1E13;\n t['dcroat'] = 0x0111;\n t['ddabengali'] = 0x09A1;\n t['ddadeva'] = 0x0921;\n t['ddagujarati'] = 0x0AA1;\n t['ddagurmukhi'] = 0x0A21;\n t['ddalarabic'] = 0x0688;\n t['ddalfinalarabic'] = 0xFB89;\n t['dddhadeva'] = 0x095C;\n t['ddhabengali'] = 0x09A2;\n t['ddhadeva'] = 0x0922;\n t['ddhagujarati'] = 0x0AA2;\n t['ddhagurmukhi'] = 0x0A22;\n t['ddotaccent'] = 0x1E0B;\n t['ddotbelow'] = 0x1E0D;\n t['decimalseparatorarabic'] = 0x066B;\n t['decimalseparatorpersian'] = 0x066B;\n t['decyrillic'] = 0x0434;\n t['degree'] = 0x00B0;\n t['dehihebrew'] = 0x05AD;\n t['dehiragana'] = 0x3067;\n t['deicoptic'] = 0x03EF;\n t['dekatakana'] = 0x30C7;\n t['deleteleft'] = 0x232B;\n t['deleteright'] = 0x2326;\n t['delta'] = 0x03B4;\n t['deltaturned'] = 0x018D;\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\n t['dezh'] = 0x02A4;\n t['dhabengali'] = 0x09A7;\n t['dhadeva'] = 0x0927;\n t['dhagujarati'] = 0x0AA7;\n t['dhagurmukhi'] = 0x0A27;\n t['dhook'] = 0x0257;\n t['dialytikatonos'] = 0x0385;\n t['dialytikatonoscmb'] = 0x0344;\n t['diamond'] = 0x2666;\n t['diamondsuitwhite'] = 0x2662;\n t['dieresis'] = 0x00A8;\n t['dieresisacute'] = 0xF6D7;\n t['dieresisbelowcmb'] = 0x0324;\n t['dieresiscmb'] = 0x0308;\n t['dieresisgrave'] = 0xF6D8;\n t['dieresistonos'] = 0x0385;\n t['dihiragana'] = 0x3062;\n t['dikatakana'] = 0x30C2;\n t['dittomark'] = 0x3003;\n t['divide'] = 0x00F7;\n t['divides'] = 0x2223;\n t['divisionslash'] = 0x2215;\n t['djecyrillic'] = 0x0452;\n t['dkshade'] = 0x2593;\n t['dlinebelow'] = 0x1E0F;\n t['dlsquare'] = 0x3397;\n t['dmacron'] = 0x0111;\n t['dmonospace'] = 0xFF44;\n t['dnblock'] = 0x2584;\n t['dochadathai'] = 0x0E0E;\n t['dodekthai'] = 0x0E14;\n t['dohiragana'] = 0x3069;\n t['dokatakana'] = 0x30C9;\n t['dollar'] = 0x0024;\n t['dollarinferior'] = 0xF6E3;\n t['dollarmonospace'] = 0xFF04;\n t['dollaroldstyle'] = 0xF724;\n t['dollarsmall'] = 0xFE69;\n t['dollarsuperior'] = 0xF6E4;\n t['dong'] = 0x20AB;\n t['dorusquare'] = 0x3326;\n t['dotaccent'] = 0x02D9;\n t['dotaccentcmb'] = 0x0307;\n t['dotbelowcmb'] = 0x0323;\n t['dotbelowcomb'] = 0x0323;\n t['dotkatakana'] = 0x30FB;\n t['dotlessi'] = 0x0131;\n t['dotlessj'] = 0xF6BE;\n t['dotlessjstrokehook'] = 0x0284;\n t['dotmath'] = 0x22C5;\n t['dottedcircle'] = 0x25CC;\n t['doubleyodpatah'] = 0xFB1F;\n t['doubleyodpatahhebrew'] = 0xFB1F;\n t['downtackbelowcmb'] = 0x031E;\n t['downtackmod'] = 0x02D5;\n t['dparen'] = 0x249F;\n t['dsuperior'] = 0xF6EB;\n t['dtail'] = 0x0256;\n t['dtopbar'] = 0x018C;\n t['duhiragana'] = 0x3065;\n t['dukatakana'] = 0x30C5;\n t['dz'] = 0x01F3;\n t['dzaltone'] = 0x02A3;\n t['dzcaron'] = 0x01C6;\n t['dzcurl'] = 0x02A5;\n t['dzeabkhasiancyrillic'] = 0x04E1;\n t['dzecyrillic'] = 0x0455;\n t['dzhecyrillic'] = 0x045F;\n t['e'] = 0x0065;\n t['eacute'] = 0x00E9;\n t['earth'] = 0x2641;\n t['ebengali'] = 0x098F;\n t['ebopomofo'] = 0x311C;\n t['ebreve'] = 0x0115;\n t['ecandradeva'] = 0x090D;\n t['ecandragujarati'] = 0x0A8D;\n t['ecandravowelsigndeva'] = 0x0945;\n t['ecandravowelsigngujarati'] = 0x0AC5;\n t['ecaron'] = 0x011B;\n t['ecedillabreve'] = 0x1E1D;\n t['echarmenian'] = 0x0565;\n t['echyiwnarmenian'] = 0x0587;\n t['ecircle'] = 0x24D4;\n t['ecircumflex'] = 0x00EA;\n t['ecircumflexacute'] = 0x1EBF;\n t['ecircumflexbelow'] = 0x1E19;\n t['ecircumflexdotbelow'] = 0x1EC7;\n t['ecircumflexgrave'] = 0x1EC1;\n t['ecircumflexhookabove'] = 0x1EC3;\n t['ecircumflextilde'] = 0x1EC5;\n t['ecyrillic'] = 0x0454;\n t['edblgrave'] = 0x0205;\n t['edeva'] = 0x090F;\n t['edieresis'] = 0x00EB;\n t['edot'] = 0x0117;\n t['edotaccent'] = 0x0117;\n t['edotbelow'] = 0x1EB9;\n t['eegurmukhi'] = 0x0A0F;\n t['eematragurmukhi'] = 0x0A47;\n t['efcyrillic'] = 0x0444;\n t['egrave'] = 0x00E8;\n t['egujarati'] = 0x0A8F;\n t['eharmenian'] = 0x0567;\n t['ehbopomofo'] = 0x311D;\n t['ehiragana'] = 0x3048;\n t['ehookabove'] = 0x1EBB;\n t['eibopomofo'] = 0x311F;\n t['eight'] = 0x0038;\n t['eightarabic'] = 0x0668;\n t['eightbengali'] = 0x09EE;\n t['eightcircle'] = 0x2467;\n t['eightcircleinversesansserif'] = 0x2791;\n t['eightdeva'] = 0x096E;\n t['eighteencircle'] = 0x2471;\n t['eighteenparen'] = 0x2485;\n t['eighteenperiod'] = 0x2499;\n t['eightgujarati'] = 0x0AEE;\n t['eightgurmukhi'] = 0x0A6E;\n t['eighthackarabic'] = 0x0668;\n t['eighthangzhou'] = 0x3028;\n t['eighthnotebeamed'] = 0x266B;\n t['eightideographicparen'] = 0x3227;\n t['eightinferior'] = 0x2088;\n t['eightmonospace'] = 0xFF18;\n t['eightoldstyle'] = 0xF738;\n t['eightparen'] = 0x247B;\n t['eightperiod'] = 0x248F;\n t['eightpersian'] = 0x06F8;\n t['eightroman'] = 0x2177;\n t['eightsuperior'] = 0x2078;\n t['eightthai'] = 0x0E58;\n t['einvertedbreve'] = 0x0207;\n t['eiotifiedcyrillic'] = 0x0465;\n t['ekatakana'] = 0x30A8;\n t['ekatakanahalfwidth'] = 0xFF74;\n t['ekonkargurmukhi'] = 0x0A74;\n t['ekorean'] = 0x3154;\n t['elcyrillic'] = 0x043B;\n t['element'] = 0x2208;\n t['elevencircle'] = 0x246A;\n t['elevenparen'] = 0x247E;\n t['elevenperiod'] = 0x2492;\n t['elevenroman'] = 0x217A;\n t['ellipsis'] = 0x2026;\n t['ellipsisvertical'] = 0x22EE;\n t['emacron'] = 0x0113;\n t['emacronacute'] = 0x1E17;\n t['emacrongrave'] = 0x1E15;\n t['emcyrillic'] = 0x043C;\n t['emdash'] = 0x2014;\n t['emdashvertical'] = 0xFE31;\n t['emonospace'] = 0xFF45;\n t['emphasismarkarmenian'] = 0x055B;\n t['emptyset'] = 0x2205;\n t['enbopomofo'] = 0x3123;\n t['encyrillic'] = 0x043D;\n t['endash'] = 0x2013;\n t['endashvertical'] = 0xFE32;\n t['endescendercyrillic'] = 0x04A3;\n t['eng'] = 0x014B;\n t['engbopomofo'] = 0x3125;\n t['enghecyrillic'] = 0x04A5;\n t['enhookcyrillic'] = 0x04C8;\n t['enspace'] = 0x2002;\n t['eogonek'] = 0x0119;\n t['eokorean'] = 0x3153;\n t['eopen'] = 0x025B;\n t['eopenclosed'] = 0x029A;\n t['eopenreversed'] = 0x025C;\n t['eopenreversedclosed'] = 0x025E;\n t['eopenreversedhook'] = 0x025D;\n t['eparen'] = 0x24A0;\n t['epsilon'] = 0x03B5;\n t['epsilontonos'] = 0x03AD;\n t['equal'] = 0x003D;\n t['equalmonospace'] = 0xFF1D;\n t['equalsmall'] = 0xFE66;\n t['equalsuperior'] = 0x207C;\n t['equivalence'] = 0x2261;\n t['erbopomofo'] = 0x3126;\n t['ercyrillic'] = 0x0440;\n t['ereversed'] = 0x0258;\n t['ereversedcyrillic'] = 0x044D;\n t['escyrillic'] = 0x0441;\n t['esdescendercyrillic'] = 0x04AB;\n t['esh'] = 0x0283;\n t['eshcurl'] = 0x0286;\n t['eshortdeva'] = 0x090E;\n t['eshortvowelsigndeva'] = 0x0946;\n t['eshreversedloop'] = 0x01AA;\n t['eshsquatreversed'] = 0x0285;\n t['esmallhiragana'] = 0x3047;\n t['esmallkatakana'] = 0x30A7;\n t['esmallkatakanahalfwidth'] = 0xFF6A;\n t['estimated'] = 0x212E;\n t['esuperior'] = 0xF6EC;\n t['eta'] = 0x03B7;\n t['etarmenian'] = 0x0568;\n t['etatonos'] = 0x03AE;\n t['eth'] = 0x00F0;\n t['etilde'] = 0x1EBD;\n t['etildebelow'] = 0x1E1B;\n t['etnahtafoukhhebrew'] = 0x0591;\n t['etnahtafoukhlefthebrew'] = 0x0591;\n t['etnahtahebrew'] = 0x0591;\n t['etnahtalefthebrew'] = 0x0591;\n t['eturned'] = 0x01DD;\n t['eukorean'] = 0x3161;\n t['euro'] = 0x20AC;\n t['evowelsignbengali'] = 0x09C7;\n t['evowelsigndeva'] = 0x0947;\n t['evowelsigngujarati'] = 0x0AC7;\n t['exclam'] = 0x0021;\n t['exclamarmenian'] = 0x055C;\n t['exclamdbl'] = 0x203C;\n t['exclamdown'] = 0x00A1;\n t['exclamdownsmall'] = 0xF7A1;\n t['exclammonospace'] = 0xFF01;\n t['exclamsmall'] = 0xF721;\n t['existential'] = 0x2203;\n t['ezh'] = 0x0292;\n t['ezhcaron'] = 0x01EF;\n t['ezhcurl'] = 0x0293;\n t['ezhreversed'] = 0x01B9;\n t['ezhtail'] = 0x01BA;\n t['f'] = 0x0066;\n t['fadeva'] = 0x095E;\n t['fagurmukhi'] = 0x0A5E;\n t['fahrenheit'] = 0x2109;\n t['fathaarabic'] = 0x064E;\n t['fathalowarabic'] = 0x064E;\n t['fathatanarabic'] = 0x064B;\n t['fbopomofo'] = 0x3108;\n t['fcircle'] = 0x24D5;\n t['fdotaccent'] = 0x1E1F;\n t['feharabic'] = 0x0641;\n t['feharmenian'] = 0x0586;\n t['fehfinalarabic'] = 0xFED2;\n t['fehinitialarabic'] = 0xFED3;\n t['fehmedialarabic'] = 0xFED4;\n t['feicoptic'] = 0x03E5;\n t['female'] = 0x2640;\n t['ff'] = 0xFB00;\n t['ffi'] = 0xFB03;\n t['ffl'] = 0xFB04;\n t['fi'] = 0xFB01;\n t['fifteencircle'] = 0x246E;\n t['fifteenparen'] = 0x2482;\n t['fifteenperiod'] = 0x2496;\n t['figuredash'] = 0x2012;\n t['filledbox'] = 0x25A0;\n t['filledrect'] = 0x25AC;\n t['finalkaf'] = 0x05DA;\n t['finalkafdagesh'] = 0xFB3A;\n t['finalkafdageshhebrew'] = 0xFB3A;\n t['finalkafhebrew'] = 0x05DA;\n t['finalmem'] = 0x05DD;\n t['finalmemhebrew'] = 0x05DD;\n t['finalnun'] = 0x05DF;\n t['finalnunhebrew'] = 0x05DF;\n t['finalpe'] = 0x05E3;\n t['finalpehebrew'] = 0x05E3;\n t['finaltsadi'] = 0x05E5;\n t['finaltsadihebrew'] = 0x05E5;\n t['firsttonechinese'] = 0x02C9;\n t['fisheye'] = 0x25C9;\n t['fitacyrillic'] = 0x0473;\n t['five'] = 0x0035;\n t['fivearabic'] = 0x0665;\n t['fivebengali'] = 0x09EB;\n t['fivecircle'] = 0x2464;\n t['fivecircleinversesansserif'] = 0x278E;\n t['fivedeva'] = 0x096B;\n t['fiveeighths'] = 0x215D;\n t['fivegujarati'] = 0x0AEB;\n t['fivegurmukhi'] = 0x0A6B;\n t['fivehackarabic'] = 0x0665;\n t['fivehangzhou'] = 0x3025;\n t['fiveideographicparen'] = 0x3224;\n t['fiveinferior'] = 0x2085;\n t['fivemonospace'] = 0xFF15;\n t['fiveoldstyle'] = 0xF735;\n t['fiveparen'] = 0x2478;\n t['fiveperiod'] = 0x248C;\n t['fivepersian'] = 0x06F5;\n t['fiveroman'] = 0x2174;\n t['fivesuperior'] = 0x2075;\n t['fivethai'] = 0x0E55;\n t['fl'] = 0xFB02;\n t['florin'] = 0x0192;\n t['fmonospace'] = 0xFF46;\n t['fmsquare'] = 0x3399;\n t['fofanthai'] = 0x0E1F;\n t['fofathai'] = 0x0E1D;\n t['fongmanthai'] = 0x0E4F;\n t['forall'] = 0x2200;\n t['four'] = 0x0034;\n t['fourarabic'] = 0x0664;\n t['fourbengali'] = 0x09EA;\n t['fourcircle'] = 0x2463;\n t['fourcircleinversesansserif'] = 0x278D;\n t['fourdeva'] = 0x096A;\n t['fourgujarati'] = 0x0AEA;\n t['fourgurmukhi'] = 0x0A6A;\n t['fourhackarabic'] = 0x0664;\n t['fourhangzhou'] = 0x3024;\n t['fourideographicparen'] = 0x3223;\n t['fourinferior'] = 0x2084;\n t['fourmonospace'] = 0xFF14;\n t['fournumeratorbengali'] = 0x09F7;\n t['fouroldstyle'] = 0xF734;\n t['fourparen'] = 0x2477;\n t['fourperiod'] = 0x248B;\n t['fourpersian'] = 0x06F4;\n t['fourroman'] = 0x2173;\n t['foursuperior'] = 0x2074;\n t['fourteencircle'] = 0x246D;\n t['fourteenparen'] = 0x2481;\n t['fourteenperiod'] = 0x2495;\n t['fourthai'] = 0x0E54;\n t['fourthtonechinese'] = 0x02CB;\n t['fparen'] = 0x24A1;\n t['fraction'] = 0x2044;\n t['franc'] = 0x20A3;\n t['g'] = 0x0067;\n t['gabengali'] = 0x0997;\n t['gacute'] = 0x01F5;\n t['gadeva'] = 0x0917;\n t['gafarabic'] = 0x06AF;\n t['gaffinalarabic'] = 0xFB93;\n t['gafinitialarabic'] = 0xFB94;\n t['gafmedialarabic'] = 0xFB95;\n t['gagujarati'] = 0x0A97;\n t['gagurmukhi'] = 0x0A17;\n t['gahiragana'] = 0x304C;\n t['gakatakana'] = 0x30AC;\n t['gamma'] = 0x03B3;\n t['gammalatinsmall'] = 0x0263;\n t['gammasuperior'] = 0x02E0;\n t['gangiacoptic'] = 0x03EB;\n t['gbopomofo'] = 0x310D;\n t['gbreve'] = 0x011F;\n t['gcaron'] = 0x01E7;\n t['gcedilla'] = 0x0123;\n t['gcircle'] = 0x24D6;\n t['gcircumflex'] = 0x011D;\n t['gcommaaccent'] = 0x0123;\n t['gdot'] = 0x0121;\n t['gdotaccent'] = 0x0121;\n t['gecyrillic'] = 0x0433;\n t['gehiragana'] = 0x3052;\n t['gekatakana'] = 0x30B2;\n t['geometricallyequal'] = 0x2251;\n t['gereshaccenthebrew'] = 0x059C;\n t['gereshhebrew'] = 0x05F3;\n t['gereshmuqdamhebrew'] = 0x059D;\n t['germandbls'] = 0x00DF;\n t['gershayimaccenthebrew'] = 0x059E;\n t['gershayimhebrew'] = 0x05F4;\n t['getamark'] = 0x3013;\n t['ghabengali'] = 0x0998;\n t['ghadarmenian'] = 0x0572;\n t['ghadeva'] = 0x0918;\n t['ghagujarati'] = 0x0A98;\n t['ghagurmukhi'] = 0x0A18;\n t['ghainarabic'] = 0x063A;\n t['ghainfinalarabic'] = 0xFECE;\n t['ghaininitialarabic'] = 0xFECF;\n t['ghainmedialarabic'] = 0xFED0;\n t['ghemiddlehookcyrillic'] = 0x0495;\n t['ghestrokecyrillic'] = 0x0493;\n t['gheupturncyrillic'] = 0x0491;\n t['ghhadeva'] = 0x095A;\n t['ghhagurmukhi'] = 0x0A5A;\n t['ghook'] = 0x0260;\n t['ghzsquare'] = 0x3393;\n t['gihiragana'] = 0x304E;\n t['gikatakana'] = 0x30AE;\n t['gimarmenian'] = 0x0563;\n t['gimel'] = 0x05D2;\n t['gimeldagesh'] = 0xFB32;\n t['gimeldageshhebrew'] = 0xFB32;\n t['gimelhebrew'] = 0x05D2;\n t['gjecyrillic'] = 0x0453;\n t['glottalinvertedstroke'] = 0x01BE;\n t['glottalstop'] = 0x0294;\n t['glottalstopinverted'] = 0x0296;\n t['glottalstopmod'] = 0x02C0;\n t['glottalstopreversed'] = 0x0295;\n t['glottalstopreversedmod'] = 0x02C1;\n t['glottalstopreversedsuperior'] = 0x02E4;\n t['glottalstopstroke'] = 0x02A1;\n t['glottalstopstrokereversed'] = 0x02A2;\n t['gmacron'] = 0x1E21;\n t['gmonospace'] = 0xFF47;\n t['gohiragana'] = 0x3054;\n t['gokatakana'] = 0x30B4;\n t['gparen'] = 0x24A2;\n t['gpasquare'] = 0x33AC;\n t['gradient'] = 0x2207;\n t['grave'] = 0x0060;\n t['gravebelowcmb'] = 0x0316;\n t['gravecmb'] = 0x0300;\n t['gravecomb'] = 0x0300;\n t['gravedeva'] = 0x0953;\n t['gravelowmod'] = 0x02CE;\n t['gravemonospace'] = 0xFF40;\n t['gravetonecmb'] = 0x0340;\n t['greater'] = 0x003E;\n t['greaterequal'] = 0x2265;\n t['greaterequalorless'] = 0x22DB;\n t['greatermonospace'] = 0xFF1E;\n t['greaterorequivalent'] = 0x2273;\n t['greaterorless'] = 0x2277;\n t['greateroverequal'] = 0x2267;\n t['greatersmall'] = 0xFE65;\n t['gscript'] = 0x0261;\n t['gstroke'] = 0x01E5;\n t['guhiragana'] = 0x3050;\n t['guillemotleft'] = 0x00AB;\n t['guillemotright'] = 0x00BB;\n t['guilsinglleft'] = 0x2039;\n t['guilsinglright'] = 0x203A;\n t['gukatakana'] = 0x30B0;\n t['guramusquare'] = 0x3318;\n t['gysquare'] = 0x33C9;\n t['h'] = 0x0068;\n t['haabkhasiancyrillic'] = 0x04A9;\n t['haaltonearabic'] = 0x06C1;\n t['habengali'] = 0x09B9;\n t['hadescendercyrillic'] = 0x04B3;\n t['hadeva'] = 0x0939;\n t['hagujarati'] = 0x0AB9;\n t['hagurmukhi'] = 0x0A39;\n t['haharabic'] = 0x062D;\n t['hahfinalarabic'] = 0xFEA2;\n t['hahinitialarabic'] = 0xFEA3;\n t['hahiragana'] = 0x306F;\n t['hahmedialarabic'] = 0xFEA4;\n t['haitusquare'] = 0x332A;\n t['hakatakana'] = 0x30CF;\n t['hakatakanahalfwidth'] = 0xFF8A;\n t['halantgurmukhi'] = 0x0A4D;\n t['hamzaarabic'] = 0x0621;\n t['hamzalowarabic'] = 0x0621;\n t['hangulfiller'] = 0x3164;\n t['hardsigncyrillic'] = 0x044A;\n t['harpoonleftbarbup'] = 0x21BC;\n t['harpoonrightbarbup'] = 0x21C0;\n t['hasquare'] = 0x33CA;\n t['hatafpatah'] = 0x05B2;\n t['hatafpatah16'] = 0x05B2;\n t['hatafpatah23'] = 0x05B2;\n t['hatafpatah2f'] = 0x05B2;\n t['hatafpatahhebrew'] = 0x05B2;\n t['hatafpatahnarrowhebrew'] = 0x05B2;\n t['hatafpatahquarterhebrew'] = 0x05B2;\n t['hatafpatahwidehebrew'] = 0x05B2;\n t['hatafqamats'] = 0x05B3;\n t['hatafqamats1b'] = 0x05B3;\n t['hatafqamats28'] = 0x05B3;\n t['hatafqamats34'] = 0x05B3;\n t['hatafqamatshebrew'] = 0x05B3;\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\n t['hatafqamatsquarterhebrew'] = 0x05B3;\n t['hatafqamatswidehebrew'] = 0x05B3;\n t['hatafsegol'] = 0x05B1;\n t['hatafsegol17'] = 0x05B1;\n t['hatafsegol24'] = 0x05B1;\n t['hatafsegol30'] = 0x05B1;\n t['hatafsegolhebrew'] = 0x05B1;\n t['hatafsegolnarrowhebrew'] = 0x05B1;\n t['hatafsegolquarterhebrew'] = 0x05B1;\n t['hatafsegolwidehebrew'] = 0x05B1;\n t['hbar'] = 0x0127;\n t['hbopomofo'] = 0x310F;\n t['hbrevebelow'] = 0x1E2B;\n t['hcedilla'] = 0x1E29;\n t['hcircle'] = 0x24D7;\n t['hcircumflex'] = 0x0125;\n t['hdieresis'] = 0x1E27;\n t['hdotaccent'] = 0x1E23;\n t['hdotbelow'] = 0x1E25;\n t['he'] = 0x05D4;\n t['heart'] = 0x2665;\n t['heartsuitblack'] = 0x2665;\n t['heartsuitwhite'] = 0x2661;\n t['hedagesh'] = 0xFB34;\n t['hedageshhebrew'] = 0xFB34;\n t['hehaltonearabic'] = 0x06C1;\n t['heharabic'] = 0x0647;\n t['hehebrew'] = 0x05D4;\n t['hehfinalaltonearabic'] = 0xFBA7;\n t['hehfinalalttwoarabic'] = 0xFEEA;\n t['hehfinalarabic'] = 0xFEEA;\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n t['hehinitialaltonearabic'] = 0xFBA8;\n t['hehinitialarabic'] = 0xFEEB;\n t['hehiragana'] = 0x3078;\n t['hehmedialaltonearabic'] = 0xFBA9;\n t['hehmedialarabic'] = 0xFEEC;\n t['heiseierasquare'] = 0x337B;\n t['hekatakana'] = 0x30D8;\n t['hekatakanahalfwidth'] = 0xFF8D;\n t['hekutaarusquare'] = 0x3336;\n t['henghook'] = 0x0267;\n t['herutusquare'] = 0x3339;\n t['het'] = 0x05D7;\n t['hethebrew'] = 0x05D7;\n t['hhook'] = 0x0266;\n t['hhooksuperior'] = 0x02B1;\n t['hieuhacirclekorean'] = 0x327B;\n t['hieuhaparenkorean'] = 0x321B;\n t['hieuhcirclekorean'] = 0x326D;\n t['hieuhkorean'] = 0x314E;\n t['hieuhparenkorean'] = 0x320D;\n t['hihiragana'] = 0x3072;\n t['hikatakana'] = 0x30D2;\n t['hikatakanahalfwidth'] = 0xFF8B;\n t['hiriq'] = 0x05B4;\n t['hiriq14'] = 0x05B4;\n t['hiriq21'] = 0x05B4;\n t['hiriq2d'] = 0x05B4;\n t['hiriqhebrew'] = 0x05B4;\n t['hiriqnarrowhebrew'] = 0x05B4;\n t['hiriqquarterhebrew'] = 0x05B4;\n t['hiriqwidehebrew'] = 0x05B4;\n t['hlinebelow'] = 0x1E96;\n t['hmonospace'] = 0xFF48;\n t['hoarmenian'] = 0x0570;\n t['hohipthai'] = 0x0E2B;\n t['hohiragana'] = 0x307B;\n t['hokatakana'] = 0x30DB;\n t['hokatakanahalfwidth'] = 0xFF8E;\n t['holam'] = 0x05B9;\n t['holam19'] = 0x05B9;\n t['holam26'] = 0x05B9;\n t['holam32'] = 0x05B9;\n t['holamhebrew'] = 0x05B9;\n t['holamnarrowhebrew'] = 0x05B9;\n t['holamquarterhebrew'] = 0x05B9;\n t['holamwidehebrew'] = 0x05B9;\n t['honokhukthai'] = 0x0E2E;\n t['hookabovecomb'] = 0x0309;\n t['hookcmb'] = 0x0309;\n t['hookpalatalizedbelowcmb'] = 0x0321;\n t['hookretroflexbelowcmb'] = 0x0322;\n t['hoonsquare'] = 0x3342;\n t['horicoptic'] = 0x03E9;\n t['horizontalbar'] = 0x2015;\n t['horncmb'] = 0x031B;\n t['hotsprings'] = 0x2668;\n t['house'] = 0x2302;\n t['hparen'] = 0x24A3;\n t['hsuperior'] = 0x02B0;\n t['hturned'] = 0x0265;\n t['huhiragana'] = 0x3075;\n t['huiitosquare'] = 0x3333;\n t['hukatakana'] = 0x30D5;\n t['hukatakanahalfwidth'] = 0xFF8C;\n t['hungarumlaut'] = 0x02DD;\n t['hungarumlautcmb'] = 0x030B;\n t['hv'] = 0x0195;\n t['hyphen'] = 0x002D;\n t['hypheninferior'] = 0xF6E5;\n t['hyphenmonospace'] = 0xFF0D;\n t['hyphensmall'] = 0xFE63;\n t['hyphensuperior'] = 0xF6E6;\n t['hyphentwo'] = 0x2010;\n t['i'] = 0x0069;\n t['iacute'] = 0x00ED;\n t['iacyrillic'] = 0x044F;\n t['ibengali'] = 0x0987;\n t['ibopomofo'] = 0x3127;\n t['ibreve'] = 0x012D;\n t['icaron'] = 0x01D0;\n t['icircle'] = 0x24D8;\n t['icircumflex'] = 0x00EE;\n t['icyrillic'] = 0x0456;\n t['idblgrave'] = 0x0209;\n t['ideographearthcircle'] = 0x328F;\n t['ideographfirecircle'] = 0x328B;\n t['ideographicallianceparen'] = 0x323F;\n t['ideographiccallparen'] = 0x323A;\n t['ideographiccentrecircle'] = 0x32A5;\n t['ideographicclose'] = 0x3006;\n t['ideographiccomma'] = 0x3001;\n t['ideographiccommaleft'] = 0xFF64;\n t['ideographiccongratulationparen'] = 0x3237;\n t['ideographiccorrectcircle'] = 0x32A3;\n t['ideographicearthparen'] = 0x322F;\n t['ideographicenterpriseparen'] = 0x323D;\n t['ideographicexcellentcircle'] = 0x329D;\n t['ideographicfestivalparen'] = 0x3240;\n t['ideographicfinancialcircle'] = 0x3296;\n t['ideographicfinancialparen'] = 0x3236;\n t['ideographicfireparen'] = 0x322B;\n t['ideographichaveparen'] = 0x3232;\n t['ideographichighcircle'] = 0x32A4;\n t['ideographiciterationmark'] = 0x3005;\n t['ideographiclaborcircle'] = 0x3298;\n t['ideographiclaborparen'] = 0x3238;\n t['ideographicleftcircle'] = 0x32A7;\n t['ideographiclowcircle'] = 0x32A6;\n t['ideographicmedicinecircle'] = 0x32A9;\n t['ideographicmetalparen'] = 0x322E;\n t['ideographicmoonparen'] = 0x322A;\n t['ideographicnameparen'] = 0x3234;\n t['ideographicperiod'] = 0x3002;\n t['ideographicprintcircle'] = 0x329E;\n t['ideographicreachparen'] = 0x3243;\n t['ideographicrepresentparen'] = 0x3239;\n t['ideographicresourceparen'] = 0x323E;\n t['ideographicrightcircle'] = 0x32A8;\n t['ideographicsecretcircle'] = 0x3299;\n t['ideographicselfparen'] = 0x3242;\n t['ideographicsocietyparen'] = 0x3233;\n t['ideographicspace'] = 0x3000;\n t['ideographicspecialparen'] = 0x3235;\n t['ideographicstockparen'] = 0x3231;\n t['ideographicstudyparen'] = 0x323B;\n t['ideographicsunparen'] = 0x3230;\n t['ideographicsuperviseparen'] = 0x323C;\n t['ideographicwaterparen'] = 0x322C;\n t['ideographicwoodparen'] = 0x322D;\n t['ideographiczero'] = 0x3007;\n t['ideographmetalcircle'] = 0x328E;\n t['ideographmooncircle'] = 0x328A;\n t['ideographnamecircle'] = 0x3294;\n t['ideographsuncircle'] = 0x3290;\n t['ideographwatercircle'] = 0x328C;\n t['ideographwoodcircle'] = 0x328D;\n t['ideva'] = 0x0907;\n t['idieresis'] = 0x00EF;\n t['idieresisacute'] = 0x1E2F;\n t['idieresiscyrillic'] = 0x04E5;\n t['idotbelow'] = 0x1ECB;\n t['iebrevecyrillic'] = 0x04D7;\n t['iecyrillic'] = 0x0435;\n t['ieungacirclekorean'] = 0x3275;\n t['ieungaparenkorean'] = 0x3215;\n t['ieungcirclekorean'] = 0x3267;\n t['ieungkorean'] = 0x3147;\n t['ieungparenkorean'] = 0x3207;\n t['igrave'] = 0x00EC;\n t['igujarati'] = 0x0A87;\n t['igurmukhi'] = 0x0A07;\n t['ihiragana'] = 0x3044;\n t['ihookabove'] = 0x1EC9;\n t['iibengali'] = 0x0988;\n t['iicyrillic'] = 0x0438;\n t['iideva'] = 0x0908;\n t['iigujarati'] = 0x0A88;\n t['iigurmukhi'] = 0x0A08;\n t['iimatragurmukhi'] = 0x0A40;\n t['iinvertedbreve'] = 0x020B;\n t['iishortcyrillic'] = 0x0439;\n t['iivowelsignbengali'] = 0x09C0;\n t['iivowelsigndeva'] = 0x0940;\n t['iivowelsigngujarati'] = 0x0AC0;\n t['ij'] = 0x0133;\n t['ikatakana'] = 0x30A4;\n t['ikatakanahalfwidth'] = 0xFF72;\n t['ikorean'] = 0x3163;\n t['ilde'] = 0x02DC;\n t['iluyhebrew'] = 0x05AC;\n t['imacron'] = 0x012B;\n t['imacroncyrillic'] = 0x04E3;\n t['imageorapproximatelyequal'] = 0x2253;\n t['imatragurmukhi'] = 0x0A3F;\n t['imonospace'] = 0xFF49;\n t['increment'] = 0x2206;\n t['infinity'] = 0x221E;\n t['iniarmenian'] = 0x056B;\n t['integral'] = 0x222B;\n t['integralbottom'] = 0x2321;\n t['integralbt'] = 0x2321;\n t['integralex'] = 0xF8F5;\n t['integraltop'] = 0x2320;\n t['integraltp'] = 0x2320;\n t['intersection'] = 0x2229;\n t['intisquare'] = 0x3305;\n t['invbullet'] = 0x25D8;\n t['invcircle'] = 0x25D9;\n t['invsmileface'] = 0x263B;\n t['iocyrillic'] = 0x0451;\n t['iogonek'] = 0x012F;\n t['iota'] = 0x03B9;\n t['iotadieresis'] = 0x03CA;\n t['iotadieresistonos'] = 0x0390;\n t['iotalatin'] = 0x0269;\n t['iotatonos'] = 0x03AF;\n t['iparen'] = 0x24A4;\n t['irigurmukhi'] = 0x0A72;\n t['ismallhiragana'] = 0x3043;\n t['ismallkatakana'] = 0x30A3;\n t['ismallkatakanahalfwidth'] = 0xFF68;\n t['issharbengali'] = 0x09FA;\n t['istroke'] = 0x0268;\n t['isuperior'] = 0xF6ED;\n t['iterationhiragana'] = 0x309D;\n t['iterationkatakana'] = 0x30FD;\n t['itilde'] = 0x0129;\n t['itildebelow'] = 0x1E2D;\n t['iubopomofo'] = 0x3129;\n t['iucyrillic'] = 0x044E;\n t['ivowelsignbengali'] = 0x09BF;\n t['ivowelsigndeva'] = 0x093F;\n t['ivowelsigngujarati'] = 0x0ABF;\n t['izhitsacyrillic'] = 0x0475;\n t['izhitsadblgravecyrillic'] = 0x0477;\n t['j'] = 0x006A;\n t['jaarmenian'] = 0x0571;\n t['jabengali'] = 0x099C;\n t['jadeva'] = 0x091C;\n t['jagujarati'] = 0x0A9C;\n t['jagurmukhi'] = 0x0A1C;\n t['jbopomofo'] = 0x3110;\n t['jcaron'] = 0x01F0;\n t['jcircle'] = 0x24D9;\n t['jcircumflex'] = 0x0135;\n t['jcrossedtail'] = 0x029D;\n t['jdotlessstroke'] = 0x025F;\n t['jecyrillic'] = 0x0458;\n t['jeemarabic'] = 0x062C;\n t['jeemfinalarabic'] = 0xFE9E;\n t['jeeminitialarabic'] = 0xFE9F;\n t['jeemmedialarabic'] = 0xFEA0;\n t['jeharabic'] = 0x0698;\n t['jehfinalarabic'] = 0xFB8B;\n t['jhabengali'] = 0x099D;\n t['jhadeva'] = 0x091D;\n t['jhagujarati'] = 0x0A9D;\n t['jhagurmukhi'] = 0x0A1D;\n t['jheharmenian'] = 0x057B;\n t['jis'] = 0x3004;\n t['jmonospace'] = 0xFF4A;\n t['jparen'] = 0x24A5;\n t['jsuperior'] = 0x02B2;\n t['k'] = 0x006B;\n t['kabashkircyrillic'] = 0x04A1;\n t['kabengali'] = 0x0995;\n t['kacute'] = 0x1E31;\n t['kacyrillic'] = 0x043A;\n t['kadescendercyrillic'] = 0x049B;\n t['kadeva'] = 0x0915;\n t['kaf'] = 0x05DB;\n t['kafarabic'] = 0x0643;\n t['kafdagesh'] = 0xFB3B;\n t['kafdageshhebrew'] = 0xFB3B;\n t['kaffinalarabic'] = 0xFEDA;\n t['kafhebrew'] = 0x05DB;\n t['kafinitialarabic'] = 0xFEDB;\n t['kafmedialarabic'] = 0xFEDC;\n t['kafrafehebrew'] = 0xFB4D;\n t['kagujarati'] = 0x0A95;\n t['kagurmukhi'] = 0x0A15;\n t['kahiragana'] = 0x304B;\n t['kahookcyrillic'] = 0x04C4;\n t['kakatakana'] = 0x30AB;\n t['kakatakanahalfwidth'] = 0xFF76;\n t['kappa'] = 0x03BA;\n t['kappasymbolgreek'] = 0x03F0;\n t['kapyeounmieumkorean'] = 0x3171;\n t['kapyeounphieuphkorean'] = 0x3184;\n t['kapyeounpieupkorean'] = 0x3178;\n t['kapyeounssangpieupkorean'] = 0x3179;\n t['karoriisquare'] = 0x330D;\n t['kashidaautoarabic'] = 0x0640;\n t['kashidaautonosidebearingarabic'] = 0x0640;\n t['kasmallkatakana'] = 0x30F5;\n t['kasquare'] = 0x3384;\n t['kasraarabic'] = 0x0650;\n t['kasratanarabic'] = 0x064D;\n t['kastrokecyrillic'] = 0x049F;\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n t['kaverticalstrokecyrillic'] = 0x049D;\n t['kbopomofo'] = 0x310E;\n t['kcalsquare'] = 0x3389;\n t['kcaron'] = 0x01E9;\n t['kcedilla'] = 0x0137;\n t['kcircle'] = 0x24DA;\n t['kcommaaccent'] = 0x0137;\n t['kdotbelow'] = 0x1E33;\n t['keharmenian'] = 0x0584;\n t['kehiragana'] = 0x3051;\n t['kekatakana'] = 0x30B1;\n t['kekatakanahalfwidth'] = 0xFF79;\n t['kenarmenian'] = 0x056F;\n t['kesmallkatakana'] = 0x30F6;\n t['kgreenlandic'] = 0x0138;\n t['khabengali'] = 0x0996;\n t['khacyrillic'] = 0x0445;\n t['khadeva'] = 0x0916;\n t['khagujarati'] = 0x0A96;\n t['khagurmukhi'] = 0x0A16;\n t['khaharabic'] = 0x062E;\n t['khahfinalarabic'] = 0xFEA6;\n t['khahinitialarabic'] = 0xFEA7;\n t['khahmedialarabic'] = 0xFEA8;\n t['kheicoptic'] = 0x03E7;\n t['khhadeva'] = 0x0959;\n t['khhagurmukhi'] = 0x0A59;\n t['khieukhacirclekorean'] = 0x3278;\n t['khieukhaparenkorean'] = 0x3218;\n t['khieukhcirclekorean'] = 0x326A;\n t['khieukhkorean'] = 0x314B;\n t['khieukhparenkorean'] = 0x320A;\n t['khokhaithai'] = 0x0E02;\n t['khokhonthai'] = 0x0E05;\n t['khokhuatthai'] = 0x0E03;\n t['khokhwaithai'] = 0x0E04;\n t['khomutthai'] = 0x0E5B;\n t['khook'] = 0x0199;\n t['khorakhangthai'] = 0x0E06;\n t['khzsquare'] = 0x3391;\n t['kihiragana'] = 0x304D;\n t['kikatakana'] = 0x30AD;\n t['kikatakanahalfwidth'] = 0xFF77;\n t['kiroguramusquare'] = 0x3315;\n t['kiromeetorusquare'] = 0x3316;\n t['kirosquare'] = 0x3314;\n t['kiyeokacirclekorean'] = 0x326E;\n t['kiyeokaparenkorean'] = 0x320E;\n t['kiyeokcirclekorean'] = 0x3260;\n t['kiyeokkorean'] = 0x3131;\n t['kiyeokparenkorean'] = 0x3200;\n t['kiyeoksioskorean'] = 0x3133;\n t['kjecyrillic'] = 0x045C;\n t['klinebelow'] = 0x1E35;\n t['klsquare'] = 0x3398;\n t['kmcubedsquare'] = 0x33A6;\n t['kmonospace'] = 0xFF4B;\n t['kmsquaredsquare'] = 0x33A2;\n t['kohiragana'] = 0x3053;\n t['kohmsquare'] = 0x33C0;\n t['kokaithai'] = 0x0E01;\n t['kokatakana'] = 0x30B3;\n t['kokatakanahalfwidth'] = 0xFF7A;\n t['kooposquare'] = 0x331E;\n t['koppacyrillic'] = 0x0481;\n t['koreanstandardsymbol'] = 0x327F;\n t['koroniscmb'] = 0x0343;\n t['kparen'] = 0x24A6;\n t['kpasquare'] = 0x33AA;\n t['ksicyrillic'] = 0x046F;\n t['ktsquare'] = 0x33CF;\n t['kturned'] = 0x029E;\n t['kuhiragana'] = 0x304F;\n t['kukatakana'] = 0x30AF;\n t['kukatakanahalfwidth'] = 0xFF78;\n t['kvsquare'] = 0x33B8;\n t['kwsquare'] = 0x33BE;\n t['l'] = 0x006C;\n t['labengali'] = 0x09B2;\n t['lacute'] = 0x013A;\n t['ladeva'] = 0x0932;\n t['lagujarati'] = 0x0AB2;\n t['lagurmukhi'] = 0x0A32;\n t['lakkhangyaothai'] = 0x0E45;\n t['lamaleffinalarabic'] = 0xFEFC;\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n t['lamalefisolatedarabic'] = 0xFEFB;\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n t['lamarabic'] = 0x0644;\n t['lambda'] = 0x03BB;\n t['lambdastroke'] = 0x019B;\n t['lamed'] = 0x05DC;\n t['lameddagesh'] = 0xFB3C;\n t['lameddageshhebrew'] = 0xFB3C;\n t['lamedhebrew'] = 0x05DC;\n t['lamfinalarabic'] = 0xFEDE;\n t['lamhahinitialarabic'] = 0xFCCA;\n t['laminitialarabic'] = 0xFEDF;\n t['lamjeeminitialarabic'] = 0xFCC9;\n t['lamkhahinitialarabic'] = 0xFCCB;\n t['lamlamhehisolatedarabic'] = 0xFDF2;\n t['lammedialarabic'] = 0xFEE0;\n t['lammeemhahinitialarabic'] = 0xFD88;\n t['lammeeminitialarabic'] = 0xFCCC;\n t['largecircle'] = 0x25EF;\n t['lbar'] = 0x019A;\n t['lbelt'] = 0x026C;\n t['lbopomofo'] = 0x310C;\n t['lcaron'] = 0x013E;\n t['lcedilla'] = 0x013C;\n t['lcircle'] = 0x24DB;\n t['lcircumflexbelow'] = 0x1E3D;\n t['lcommaaccent'] = 0x013C;\n t['ldot'] = 0x0140;\n t['ldotaccent'] = 0x0140;\n t['ldotbelow'] = 0x1E37;\n t['ldotbelowmacron'] = 0x1E39;\n t['leftangleabovecmb'] = 0x031A;\n t['lefttackbelowcmb'] = 0x0318;\n t['less'] = 0x003C;\n t['lessequal'] = 0x2264;\n t['lessequalorgreater'] = 0x22DA;\n t['lessmonospace'] = 0xFF1C;\n t['lessorequivalent'] = 0x2272;\n t['lessorgreater'] = 0x2276;\n t['lessoverequal'] = 0x2266;\n t['lesssmall'] = 0xFE64;\n t['lezh'] = 0x026E;\n t['lfblock'] = 0x258C;\n t['lhookretroflex'] = 0x026D;\n t['lira'] = 0x20A4;\n t['liwnarmenian'] = 0x056C;\n t['lj'] = 0x01C9;\n t['ljecyrillic'] = 0x0459;\n t['ll'] = 0xF6C0;\n t['lladeva'] = 0x0933;\n t['llagujarati'] = 0x0AB3;\n t['llinebelow'] = 0x1E3B;\n t['llladeva'] = 0x0934;\n t['llvocalicbengali'] = 0x09E1;\n t['llvocalicdeva'] = 0x0961;\n t['llvocalicvowelsignbengali'] = 0x09E3;\n t['llvocalicvowelsigndeva'] = 0x0963;\n t['lmiddletilde'] = 0x026B;\n t['lmonospace'] = 0xFF4C;\n t['lmsquare'] = 0x33D0;\n t['lochulathai'] = 0x0E2C;\n t['logicaland'] = 0x2227;\n t['logicalnot'] = 0x00AC;\n t['logicalnotreversed'] = 0x2310;\n t['logicalor'] = 0x2228;\n t['lolingthai'] = 0x0E25;\n t['longs'] = 0x017F;\n t['lowlinecenterline'] = 0xFE4E;\n t['lowlinecmb'] = 0x0332;\n t['lowlinedashed'] = 0xFE4D;\n t['lozenge'] = 0x25CA;\n t['lparen'] = 0x24A7;\n t['lslash'] = 0x0142;\n t['lsquare'] = 0x2113;\n t['lsuperior'] = 0xF6EE;\n t['ltshade'] = 0x2591;\n t['luthai'] = 0x0E26;\n t['lvocalicbengali'] = 0x098C;\n t['lvocalicdeva'] = 0x090C;\n t['lvocalicvowelsignbengali'] = 0x09E2;\n t['lvocalicvowelsigndeva'] = 0x0962;\n t['lxsquare'] = 0x33D3;\n t['m'] = 0x006D;\n t['mabengali'] = 0x09AE;\n t['macron'] = 0x00AF;\n t['macronbelowcmb'] = 0x0331;\n t['macroncmb'] = 0x0304;\n t['macronlowmod'] = 0x02CD;\n t['macronmonospace'] = 0xFFE3;\n t['macute'] = 0x1E3F;\n t['madeva'] = 0x092E;\n t['magujarati'] = 0x0AAE;\n t['magurmukhi'] = 0x0A2E;\n t['mahapakhhebrew'] = 0x05A4;\n t['mahapakhlefthebrew'] = 0x05A4;\n t['mahiragana'] = 0x307E;\n t['maichattawalowleftthai'] = 0xF895;\n t['maichattawalowrightthai'] = 0xF894;\n t['maichattawathai'] = 0x0E4B;\n t['maichattawaupperleftthai'] = 0xF893;\n t['maieklowleftthai'] = 0xF88C;\n t['maieklowrightthai'] = 0xF88B;\n t['maiekthai'] = 0x0E48;\n t['maiekupperleftthai'] = 0xF88A;\n t['maihanakatleftthai'] = 0xF884;\n t['maihanakatthai'] = 0x0E31;\n t['maitaikhuleftthai'] = 0xF889;\n t['maitaikhuthai'] = 0x0E47;\n t['maitholowleftthai'] = 0xF88F;\n t['maitholowrightthai'] = 0xF88E;\n t['maithothai'] = 0x0E49;\n t['maithoupperleftthai'] = 0xF88D;\n t['maitrilowleftthai'] = 0xF892;\n t['maitrilowrightthai'] = 0xF891;\n t['maitrithai'] = 0x0E4A;\n t['maitriupperleftthai'] = 0xF890;\n t['maiyamokthai'] = 0x0E46;\n t['makatakana'] = 0x30DE;\n t['makatakanahalfwidth'] = 0xFF8F;\n t['male'] = 0x2642;\n t['mansyonsquare'] = 0x3347;\n t['maqafhebrew'] = 0x05BE;\n t['mars'] = 0x2642;\n t['masoracirclehebrew'] = 0x05AF;\n t['masquare'] = 0x3383;\n t['mbopomofo'] = 0x3107;\n t['mbsquare'] = 0x33D4;\n t['mcircle'] = 0x24DC;\n t['mcubedsquare'] = 0x33A5;\n t['mdotaccent'] = 0x1E41;\n t['mdotbelow'] = 0x1E43;\n t['meemarabic'] = 0x0645;\n t['meemfinalarabic'] = 0xFEE2;\n t['meeminitialarabic'] = 0xFEE3;\n t['meemmedialarabic'] = 0xFEE4;\n t['meemmeeminitialarabic'] = 0xFCD1;\n t['meemmeemisolatedarabic'] = 0xFC48;\n t['meetorusquare'] = 0x334D;\n t['mehiragana'] = 0x3081;\n t['meizierasquare'] = 0x337E;\n t['mekatakana'] = 0x30E1;\n t['mekatakanahalfwidth'] = 0xFF92;\n t['mem'] = 0x05DE;\n t['memdagesh'] = 0xFB3E;\n t['memdageshhebrew'] = 0xFB3E;\n t['memhebrew'] = 0x05DE;\n t['menarmenian'] = 0x0574;\n t['merkhahebrew'] = 0x05A5;\n t['merkhakefulahebrew'] = 0x05A6;\n t['merkhakefulalefthebrew'] = 0x05A6;\n t['merkhalefthebrew'] = 0x05A5;\n t['mhook'] = 0x0271;\n t['mhzsquare'] = 0x3392;\n t['middledotkatakanahalfwidth'] = 0xFF65;\n t['middot'] = 0x00B7;\n t['mieumacirclekorean'] = 0x3272;\n t['mieumaparenkorean'] = 0x3212;\n t['mieumcirclekorean'] = 0x3264;\n t['mieumkorean'] = 0x3141;\n t['mieumpansioskorean'] = 0x3170;\n t['mieumparenkorean'] = 0x3204;\n t['mieumpieupkorean'] = 0x316E;\n t['mieumsioskorean'] = 0x316F;\n t['mihiragana'] = 0x307F;\n t['mikatakana'] = 0x30DF;\n t['mikatakanahalfwidth'] = 0xFF90;\n t['minus'] = 0x2212;\n t['minusbelowcmb'] = 0x0320;\n t['minuscircle'] = 0x2296;\n t['minusmod'] = 0x02D7;\n t['minusplus'] = 0x2213;\n t['minute'] = 0x2032;\n t['miribaarusquare'] = 0x334A;\n t['mirisquare'] = 0x3349;\n t['mlonglegturned'] = 0x0270;\n t['mlsquare'] = 0x3396;\n t['mmcubedsquare'] = 0x33A3;\n t['mmonospace'] = 0xFF4D;\n t['mmsquaredsquare'] = 0x339F;\n t['mohiragana'] = 0x3082;\n t['mohmsquare'] = 0x33C1;\n t['mokatakana'] = 0x30E2;\n t['mokatakanahalfwidth'] = 0xFF93;\n t['molsquare'] = 0x33D6;\n t['momathai'] = 0x0E21;\n t['moverssquare'] = 0x33A7;\n t['moverssquaredsquare'] = 0x33A8;\n t['mparen'] = 0x24A8;\n t['mpasquare'] = 0x33AB;\n t['mssquare'] = 0x33B3;\n t['msuperior'] = 0xF6EF;\n t['mturned'] = 0x026F;\n t['mu'] = 0x00B5;\n t['mu1'] = 0x00B5;\n t['muasquare'] = 0x3382;\n t['muchgreater'] = 0x226B;\n t['muchless'] = 0x226A;\n t['mufsquare'] = 0x338C;\n t['mugreek'] = 0x03BC;\n t['mugsquare'] = 0x338D;\n t['muhiragana'] = 0x3080;\n t['mukatakana'] = 0x30E0;\n t['mukatakanahalfwidth'] = 0xFF91;\n t['mulsquare'] = 0x3395;\n t['multiply'] = 0x00D7;\n t['mumsquare'] = 0x339B;\n t['munahhebrew'] = 0x05A3;\n t['munahlefthebrew'] = 0x05A3;\n t['musicalnote'] = 0x266A;\n t['musicalnotedbl'] = 0x266B;\n t['musicflatsign'] = 0x266D;\n t['musicsharpsign'] = 0x266F;\n t['mussquare'] = 0x33B2;\n t['muvsquare'] = 0x33B6;\n t['muwsquare'] = 0x33BC;\n t['mvmegasquare'] = 0x33B9;\n t['mvsquare'] = 0x33B7;\n t['mwmegasquare'] = 0x33BF;\n t['mwsquare'] = 0x33BD;\n t['n'] = 0x006E;\n t['nabengali'] = 0x09A8;\n t['nabla'] = 0x2207;\n t['nacute'] = 0x0144;\n t['nadeva'] = 0x0928;\n t['nagujarati'] = 0x0AA8;\n t['nagurmukhi'] = 0x0A28;\n t['nahiragana'] = 0x306A;\n t['nakatakana'] = 0x30CA;\n t['nakatakanahalfwidth'] = 0xFF85;\n t['napostrophe'] = 0x0149;\n t['nasquare'] = 0x3381;\n t['nbopomofo'] = 0x310B;\n t['nbspace'] = 0x00A0;\n t['ncaron'] = 0x0148;\n t['ncedilla'] = 0x0146;\n t['ncircle'] = 0x24DD;\n t['ncircumflexbelow'] = 0x1E4B;\n t['ncommaaccent'] = 0x0146;\n t['ndotaccent'] = 0x1E45;\n t['ndotbelow'] = 0x1E47;\n t['nehiragana'] = 0x306D;\n t['nekatakana'] = 0x30CD;\n t['nekatakanahalfwidth'] = 0xFF88;\n t['newsheqelsign'] = 0x20AA;\n t['nfsquare'] = 0x338B;\n t['ngabengali'] = 0x0999;\n t['ngadeva'] = 0x0919;\n t['ngagujarati'] = 0x0A99;\n t['ngagurmukhi'] = 0x0A19;\n t['ngonguthai'] = 0x0E07;\n t['nhiragana'] = 0x3093;\n t['nhookleft'] = 0x0272;\n t['nhookretroflex'] = 0x0273;\n t['nieunacirclekorean'] = 0x326F;\n t['nieunaparenkorean'] = 0x320F;\n t['nieuncieuckorean'] = 0x3135;\n t['nieuncirclekorean'] = 0x3261;\n t['nieunhieuhkorean'] = 0x3136;\n t['nieunkorean'] = 0x3134;\n t['nieunpansioskorean'] = 0x3168;\n t['nieunparenkorean'] = 0x3201;\n t['nieunsioskorean'] = 0x3167;\n t['nieuntikeutkorean'] = 0x3166;\n t['nihiragana'] = 0x306B;\n t['nikatakana'] = 0x30CB;\n t['nikatakanahalfwidth'] = 0xFF86;\n t['nikhahitleftthai'] = 0xF899;\n t['nikhahitthai'] = 0x0E4D;\n t['nine'] = 0x0039;\n t['ninearabic'] = 0x0669;\n t['ninebengali'] = 0x09EF;\n t['ninecircle'] = 0x2468;\n t['ninecircleinversesansserif'] = 0x2792;\n t['ninedeva'] = 0x096F;\n t['ninegujarati'] = 0x0AEF;\n t['ninegurmukhi'] = 0x0A6F;\n t['ninehackarabic'] = 0x0669;\n t['ninehangzhou'] = 0x3029;\n t['nineideographicparen'] = 0x3228;\n t['nineinferior'] = 0x2089;\n t['ninemonospace'] = 0xFF19;\n t['nineoldstyle'] = 0xF739;\n t['nineparen'] = 0x247C;\n t['nineperiod'] = 0x2490;\n t['ninepersian'] = 0x06F9;\n t['nineroman'] = 0x2178;\n t['ninesuperior'] = 0x2079;\n t['nineteencircle'] = 0x2472;\n t['nineteenparen'] = 0x2486;\n t['nineteenperiod'] = 0x249A;\n t['ninethai'] = 0x0E59;\n t['nj'] = 0x01CC;\n t['njecyrillic'] = 0x045A;\n t['nkatakana'] = 0x30F3;\n t['nkatakanahalfwidth'] = 0xFF9D;\n t['nlegrightlong'] = 0x019E;\n t['nlinebelow'] = 0x1E49;\n t['nmonospace'] = 0xFF4E;\n t['nmsquare'] = 0x339A;\n t['nnabengali'] = 0x09A3;\n t['nnadeva'] = 0x0923;\n t['nnagujarati'] = 0x0AA3;\n t['nnagurmukhi'] = 0x0A23;\n t['nnnadeva'] = 0x0929;\n t['nohiragana'] = 0x306E;\n t['nokatakana'] = 0x30CE;\n t['nokatakanahalfwidth'] = 0xFF89;\n t['nonbreakingspace'] = 0x00A0;\n t['nonenthai'] = 0x0E13;\n t['nonuthai'] = 0x0E19;\n t['noonarabic'] = 0x0646;\n t['noonfinalarabic'] = 0xFEE6;\n t['noonghunnaarabic'] = 0x06BA;\n t['noonghunnafinalarabic'] = 0xFB9F;\n t['nooninitialarabic'] = 0xFEE7;\n t['noonjeeminitialarabic'] = 0xFCD2;\n t['noonjeemisolatedarabic'] = 0xFC4B;\n t['noonmedialarabic'] = 0xFEE8;\n t['noonmeeminitialarabic'] = 0xFCD5;\n t['noonmeemisolatedarabic'] = 0xFC4E;\n t['noonnoonfinalarabic'] = 0xFC8D;\n t['notcontains'] = 0x220C;\n t['notelement'] = 0x2209;\n t['notelementof'] = 0x2209;\n t['notequal'] = 0x2260;\n t['notgreater'] = 0x226F;\n t['notgreaternorequal'] = 0x2271;\n t['notgreaternorless'] = 0x2279;\n t['notidentical'] = 0x2262;\n t['notless'] = 0x226E;\n t['notlessnorequal'] = 0x2270;\n t['notparallel'] = 0x2226;\n t['notprecedes'] = 0x2280;\n t['notsubset'] = 0x2284;\n t['notsucceeds'] = 0x2281;\n t['notsuperset'] = 0x2285;\n t['nowarmenian'] = 0x0576;\n t['nparen'] = 0x24A9;\n t['nssquare'] = 0x33B1;\n t['nsuperior'] = 0x207F;\n t['ntilde'] = 0x00F1;\n t['nu'] = 0x03BD;\n t['nuhiragana'] = 0x306C;\n t['nukatakana'] = 0x30CC;\n t['nukatakanahalfwidth'] = 0xFF87;\n t['nuktabengali'] = 0x09BC;\n t['nuktadeva'] = 0x093C;\n t['nuktagujarati'] = 0x0ABC;\n t['nuktagurmukhi'] = 0x0A3C;\n t['numbersign'] = 0x0023;\n t['numbersignmonospace'] = 0xFF03;\n t['numbersignsmall'] = 0xFE5F;\n t['numeralsigngreek'] = 0x0374;\n t['numeralsignlowergreek'] = 0x0375;\n t['numero'] = 0x2116;\n t['nun'] = 0x05E0;\n t['nundagesh'] = 0xFB40;\n t['nundageshhebrew'] = 0xFB40;\n t['nunhebrew'] = 0x05E0;\n t['nvsquare'] = 0x33B5;\n t['nwsquare'] = 0x33BB;\n t['nyabengali'] = 0x099E;\n t['nyadeva'] = 0x091E;\n t['nyagujarati'] = 0x0A9E;\n t['nyagurmukhi'] = 0x0A1E;\n t['o'] = 0x006F;\n t['oacute'] = 0x00F3;\n t['oangthai'] = 0x0E2D;\n t['obarred'] = 0x0275;\n t['obarredcyrillic'] = 0x04E9;\n t['obarreddieresiscyrillic'] = 0x04EB;\n t['obengali'] = 0x0993;\n t['obopomofo'] = 0x311B;\n t['obreve'] = 0x014F;\n t['ocandradeva'] = 0x0911;\n t['ocandragujarati'] = 0x0A91;\n t['ocandravowelsigndeva'] = 0x0949;\n t['ocandravowelsigngujarati'] = 0x0AC9;\n t['ocaron'] = 0x01D2;\n t['ocircle'] = 0x24DE;\n t['ocircumflex'] = 0x00F4;\n t['ocircumflexacute'] = 0x1ED1;\n t['ocircumflexdotbelow'] = 0x1ED9;\n t['ocircumflexgrave'] = 0x1ED3;\n t['ocircumflexhookabove'] = 0x1ED5;\n t['ocircumflextilde'] = 0x1ED7;\n t['ocyrillic'] = 0x043E;\n t['odblacute'] = 0x0151;\n t['odblgrave'] = 0x020D;\n t['odeva'] = 0x0913;\n t['odieresis'] = 0x00F6;\n t['odieresiscyrillic'] = 0x04E7;\n t['odotbelow'] = 0x1ECD;\n t['oe'] = 0x0153;\n t['oekorean'] = 0x315A;\n t['ogonek'] = 0x02DB;\n t['ogonekcmb'] = 0x0328;\n t['ograve'] = 0x00F2;\n t['ogujarati'] = 0x0A93;\n t['oharmenian'] = 0x0585;\n t['ohiragana'] = 0x304A;\n t['ohookabove'] = 0x1ECF;\n t['ohorn'] = 0x01A1;\n t['ohornacute'] = 0x1EDB;\n t['ohorndotbelow'] = 0x1EE3;\n t['ohorngrave'] = 0x1EDD;\n t['ohornhookabove'] = 0x1EDF;\n t['ohorntilde'] = 0x1EE1;\n t['ohungarumlaut'] = 0x0151;\n t['oi'] = 0x01A3;\n t['oinvertedbreve'] = 0x020F;\n t['okatakana'] = 0x30AA;\n t['okatakanahalfwidth'] = 0xFF75;\n t['okorean'] = 0x3157;\n t['olehebrew'] = 0x05AB;\n t['omacron'] = 0x014D;\n t['omacronacute'] = 0x1E53;\n t['omacrongrave'] = 0x1E51;\n t['omdeva'] = 0x0950;\n t['omega'] = 0x03C9;\n t['omega1'] = 0x03D6;\n t['omegacyrillic'] = 0x0461;\n t['omegalatinclosed'] = 0x0277;\n t['omegaroundcyrillic'] = 0x047B;\n t['omegatitlocyrillic'] = 0x047D;\n t['omegatonos'] = 0x03CE;\n t['omgujarati'] = 0x0AD0;\n t['omicron'] = 0x03BF;\n t['omicrontonos'] = 0x03CC;\n t['omonospace'] = 0xFF4F;\n t['one'] = 0x0031;\n t['onearabic'] = 0x0661;\n t['onebengali'] = 0x09E7;\n t['onecircle'] = 0x2460;\n t['onecircleinversesansserif'] = 0x278A;\n t['onedeva'] = 0x0967;\n t['onedotenleader'] = 0x2024;\n t['oneeighth'] = 0x215B;\n t['onefitted'] = 0xF6DC;\n t['onegujarati'] = 0x0AE7;\n t['onegurmukhi'] = 0x0A67;\n t['onehackarabic'] = 0x0661;\n t['onehalf'] = 0x00BD;\n t['onehangzhou'] = 0x3021;\n t['oneideographicparen'] = 0x3220;\n t['oneinferior'] = 0x2081;\n t['onemonospace'] = 0xFF11;\n t['onenumeratorbengali'] = 0x09F4;\n t['oneoldstyle'] = 0xF731;\n t['oneparen'] = 0x2474;\n t['oneperiod'] = 0x2488;\n t['onepersian'] = 0x06F1;\n t['onequarter'] = 0x00BC;\n t['oneroman'] = 0x2170;\n t['onesuperior'] = 0x00B9;\n t['onethai'] = 0x0E51;\n t['onethird'] = 0x2153;\n t['oogonek'] = 0x01EB;\n t['oogonekmacron'] = 0x01ED;\n t['oogurmukhi'] = 0x0A13;\n t['oomatragurmukhi'] = 0x0A4B;\n t['oopen'] = 0x0254;\n t['oparen'] = 0x24AA;\n t['openbullet'] = 0x25E6;\n t['option'] = 0x2325;\n t['ordfeminine'] = 0x00AA;\n t['ordmasculine'] = 0x00BA;\n t['orthogonal'] = 0x221F;\n t['oshortdeva'] = 0x0912;\n t['oshortvowelsigndeva'] = 0x094A;\n t['oslash'] = 0x00F8;\n t['oslashacute'] = 0x01FF;\n t['osmallhiragana'] = 0x3049;\n t['osmallkatakana'] = 0x30A9;\n t['osmallkatakanahalfwidth'] = 0xFF6B;\n t['ostrokeacute'] = 0x01FF;\n t['osuperior'] = 0xF6F0;\n t['otcyrillic'] = 0x047F;\n t['otilde'] = 0x00F5;\n t['otildeacute'] = 0x1E4D;\n t['otildedieresis'] = 0x1E4F;\n t['oubopomofo'] = 0x3121;\n t['overline'] = 0x203E;\n t['overlinecenterline'] = 0xFE4A;\n t['overlinecmb'] = 0x0305;\n t['overlinedashed'] = 0xFE49;\n t['overlinedblwavy'] = 0xFE4C;\n t['overlinewavy'] = 0xFE4B;\n t['overscore'] = 0x00AF;\n t['ovowelsignbengali'] = 0x09CB;\n t['ovowelsigndeva'] = 0x094B;\n t['ovowelsigngujarati'] = 0x0ACB;\n t['p'] = 0x0070;\n t['paampssquare'] = 0x3380;\n t['paasentosquare'] = 0x332B;\n t['pabengali'] = 0x09AA;\n t['pacute'] = 0x1E55;\n t['padeva'] = 0x092A;\n t['pagedown'] = 0x21DF;\n t['pageup'] = 0x21DE;\n t['pagujarati'] = 0x0AAA;\n t['pagurmukhi'] = 0x0A2A;\n t['pahiragana'] = 0x3071;\n t['paiyannoithai'] = 0x0E2F;\n t['pakatakana'] = 0x30D1;\n t['palatalizationcyrilliccmb'] = 0x0484;\n t['palochkacyrillic'] = 0x04C0;\n t['pansioskorean'] = 0x317F;\n t['paragraph'] = 0x00B6;\n t['parallel'] = 0x2225;\n t['parenleft'] = 0x0028;\n t['parenleftaltonearabic'] = 0xFD3E;\n t['parenleftbt'] = 0xF8ED;\n t['parenleftex'] = 0xF8EC;\n t['parenleftinferior'] = 0x208D;\n t['parenleftmonospace'] = 0xFF08;\n t['parenleftsmall'] = 0xFE59;\n t['parenleftsuperior'] = 0x207D;\n t['parenlefttp'] = 0xF8EB;\n t['parenleftvertical'] = 0xFE35;\n t['parenright'] = 0x0029;\n t['parenrightaltonearabic'] = 0xFD3F;\n t['parenrightbt'] = 0xF8F8;\n t['parenrightex'] = 0xF8F7;\n t['parenrightinferior'] = 0x208E;\n t['parenrightmonospace'] = 0xFF09;\n t['parenrightsmall'] = 0xFE5A;\n t['parenrightsuperior'] = 0x207E;\n t['parenrighttp'] = 0xF8F6;\n t['parenrightvertical'] = 0xFE36;\n t['partialdiff'] = 0x2202;\n t['paseqhebrew'] = 0x05C0;\n t['pashtahebrew'] = 0x0599;\n t['pasquare'] = 0x33A9;\n t['patah'] = 0x05B7;\n t['patah11'] = 0x05B7;\n t['patah1d'] = 0x05B7;\n t['patah2a'] = 0x05B7;\n t['patahhebrew'] = 0x05B7;\n t['patahnarrowhebrew'] = 0x05B7;\n t['patahquarterhebrew'] = 0x05B7;\n t['patahwidehebrew'] = 0x05B7;\n t['pazerhebrew'] = 0x05A1;\n t['pbopomofo'] = 0x3106;\n t['pcircle'] = 0x24DF;\n t['pdotaccent'] = 0x1E57;\n t['pe'] = 0x05E4;\n t['pecyrillic'] = 0x043F;\n t['pedagesh'] = 0xFB44;\n t['pedageshhebrew'] = 0xFB44;\n t['peezisquare'] = 0x333B;\n t['pefinaldageshhebrew'] = 0xFB43;\n t['peharabic'] = 0x067E;\n t['peharmenian'] = 0x057A;\n t['pehebrew'] = 0x05E4;\n t['pehfinalarabic'] = 0xFB57;\n t['pehinitialarabic'] = 0xFB58;\n t['pehiragana'] = 0x307A;\n t['pehmedialarabic'] = 0xFB59;\n t['pekatakana'] = 0x30DA;\n t['pemiddlehookcyrillic'] = 0x04A7;\n t['perafehebrew'] = 0xFB4E;\n t['percent'] = 0x0025;\n t['percentarabic'] = 0x066A;\n t['percentmonospace'] = 0xFF05;\n t['percentsmall'] = 0xFE6A;\n t['period'] = 0x002E;\n t['periodarmenian'] = 0x0589;\n t['periodcentered'] = 0x00B7;\n t['periodhalfwidth'] = 0xFF61;\n t['periodinferior'] = 0xF6E7;\n t['periodmonospace'] = 0xFF0E;\n t['periodsmall'] = 0xFE52;\n t['periodsuperior'] = 0xF6E8;\n t['perispomenigreekcmb'] = 0x0342;\n t['perpendicular'] = 0x22A5;\n t['perthousand'] = 0x2030;\n t['peseta'] = 0x20A7;\n t['pfsquare'] = 0x338A;\n t['phabengali'] = 0x09AB;\n t['phadeva'] = 0x092B;\n t['phagujarati'] = 0x0AAB;\n t['phagurmukhi'] = 0x0A2B;\n t['phi'] = 0x03C6;\n t['phi1'] = 0x03D5;\n t['phieuphacirclekorean'] = 0x327A;\n t['phieuphaparenkorean'] = 0x321A;\n t['phieuphcirclekorean'] = 0x326C;\n t['phieuphkorean'] = 0x314D;\n t['phieuphparenkorean'] = 0x320C;\n t['philatin'] = 0x0278;\n t['phinthuthai'] = 0x0E3A;\n t['phisymbolgreek'] = 0x03D5;\n t['phook'] = 0x01A5;\n t['phophanthai'] = 0x0E1E;\n t['phophungthai'] = 0x0E1C;\n t['phosamphaothai'] = 0x0E20;\n t['pi'] = 0x03C0;\n t['pieupacirclekorean'] = 0x3273;\n t['pieupaparenkorean'] = 0x3213;\n t['pieupcieuckorean'] = 0x3176;\n t['pieupcirclekorean'] = 0x3265;\n t['pieupkiyeokkorean'] = 0x3172;\n t['pieupkorean'] = 0x3142;\n t['pieupparenkorean'] = 0x3205;\n t['pieupsioskiyeokkorean'] = 0x3174;\n t['pieupsioskorean'] = 0x3144;\n t['pieupsiostikeutkorean'] = 0x3175;\n t['pieupthieuthkorean'] = 0x3177;\n t['pieuptikeutkorean'] = 0x3173;\n t['pihiragana'] = 0x3074;\n t['pikatakana'] = 0x30D4;\n t['pisymbolgreek'] = 0x03D6;\n t['piwrarmenian'] = 0x0583;\n t['plus'] = 0x002B;\n t['plusbelowcmb'] = 0x031F;\n t['pluscircle'] = 0x2295;\n t['plusminus'] = 0x00B1;\n t['plusmod'] = 0x02D6;\n t['plusmonospace'] = 0xFF0B;\n t['plussmall'] = 0xFE62;\n t['plussuperior'] = 0x207A;\n t['pmonospace'] = 0xFF50;\n t['pmsquare'] = 0x33D8;\n t['pohiragana'] = 0x307D;\n t['pointingindexdownwhite'] = 0x261F;\n t['pointingindexleftwhite'] = 0x261C;\n t['pointingindexrightwhite'] = 0x261E;\n t['pointingindexupwhite'] = 0x261D;\n t['pokatakana'] = 0x30DD;\n t['poplathai'] = 0x0E1B;\n t['postalmark'] = 0x3012;\n t['postalmarkface'] = 0x3020;\n t['pparen'] = 0x24AB;\n t['precedes'] = 0x227A;\n t['prescription'] = 0x211E;\n t['primemod'] = 0x02B9;\n t['primereversed'] = 0x2035;\n t['product'] = 0x220F;\n t['projective'] = 0x2305;\n t['prolongedkana'] = 0x30FC;\n t['propellor'] = 0x2318;\n t['propersubset'] = 0x2282;\n t['propersuperset'] = 0x2283;\n t['proportion'] = 0x2237;\n t['proportional'] = 0x221D;\n t['psi'] = 0x03C8;\n t['psicyrillic'] = 0x0471;\n t['psilipneumatacyrilliccmb'] = 0x0486;\n t['pssquare'] = 0x33B0;\n t['puhiragana'] = 0x3077;\n t['pukatakana'] = 0x30D7;\n t['pvsquare'] = 0x33B4;\n t['pwsquare'] = 0x33BA;\n t['q'] = 0x0071;\n t['qadeva'] = 0x0958;\n t['qadmahebrew'] = 0x05A8;\n t['qafarabic'] = 0x0642;\n t['qaffinalarabic'] = 0xFED6;\n t['qafinitialarabic'] = 0xFED7;\n t['qafmedialarabic'] = 0xFED8;\n t['qamats'] = 0x05B8;\n t['qamats10'] = 0x05B8;\n t['qamats1a'] = 0x05B8;\n t['qamats1c'] = 0x05B8;\n t['qamats27'] = 0x05B8;\n t['qamats29'] = 0x05B8;\n t['qamats33'] = 0x05B8;\n t['qamatsde'] = 0x05B8;\n t['qamatshebrew'] = 0x05B8;\n t['qamatsnarrowhebrew'] = 0x05B8;\n t['qamatsqatanhebrew'] = 0x05B8;\n t['qamatsqatannarrowhebrew'] = 0x05B8;\n t['qamatsqatanquarterhebrew'] = 0x05B8;\n t['qamatsqatanwidehebrew'] = 0x05B8;\n t['qamatsquarterhebrew'] = 0x05B8;\n t['qamatswidehebrew'] = 0x05B8;\n t['qarneyparahebrew'] = 0x059F;\n t['qbopomofo'] = 0x3111;\n t['qcircle'] = 0x24E0;\n t['qhook'] = 0x02A0;\n t['qmonospace'] = 0xFF51;\n t['qof'] = 0x05E7;\n t['qofdagesh'] = 0xFB47;\n t['qofdageshhebrew'] = 0xFB47;\n t['qofhebrew'] = 0x05E7;\n t['qparen'] = 0x24AC;\n t['quarternote'] = 0x2669;\n t['qubuts'] = 0x05BB;\n t['qubuts18'] = 0x05BB;\n t['qubuts25'] = 0x05BB;\n t['qubuts31'] = 0x05BB;\n t['qubutshebrew'] = 0x05BB;\n t['qubutsnarrowhebrew'] = 0x05BB;\n t['qubutsquarterhebrew'] = 0x05BB;\n t['qubutswidehebrew'] = 0x05BB;\n t['question'] = 0x003F;\n t['questionarabic'] = 0x061F;\n t['questionarmenian'] = 0x055E;\n t['questiondown'] = 0x00BF;\n t['questiondownsmall'] = 0xF7BF;\n t['questiongreek'] = 0x037E;\n t['questionmonospace'] = 0xFF1F;\n t['questionsmall'] = 0xF73F;\n t['quotedbl'] = 0x0022;\n t['quotedblbase'] = 0x201E;\n t['quotedblleft'] = 0x201C;\n t['quotedblmonospace'] = 0xFF02;\n t['quotedblprime'] = 0x301E;\n t['quotedblprimereversed'] = 0x301D;\n t['quotedblright'] = 0x201D;\n t['quoteleft'] = 0x2018;\n t['quoteleftreversed'] = 0x201B;\n t['quotereversed'] = 0x201B;\n t['quoteright'] = 0x2019;\n t['quoterightn'] = 0x0149;\n t['quotesinglbase'] = 0x201A;\n t['quotesingle'] = 0x0027;\n t['quotesinglemonospace'] = 0xFF07;\n t['r'] = 0x0072;\n t['raarmenian'] = 0x057C;\n t['rabengali'] = 0x09B0;\n t['racute'] = 0x0155;\n t['radeva'] = 0x0930;\n t['radical'] = 0x221A;\n t['radicalex'] = 0xF8E5;\n t['radoverssquare'] = 0x33AE;\n t['radoverssquaredsquare'] = 0x33AF;\n t['radsquare'] = 0x33AD;\n t['rafe'] = 0x05BF;\n t['rafehebrew'] = 0x05BF;\n t['ragujarati'] = 0x0AB0;\n t['ragurmukhi'] = 0x0A30;\n t['rahiragana'] = 0x3089;\n t['rakatakana'] = 0x30E9;\n t['rakatakanahalfwidth'] = 0xFF97;\n t['ralowerdiagonalbengali'] = 0x09F1;\n t['ramiddlediagonalbengali'] = 0x09F0;\n t['ramshorn'] = 0x0264;\n t['ratio'] = 0x2236;\n t['rbopomofo'] = 0x3116;\n t['rcaron'] = 0x0159;\n t['rcedilla'] = 0x0157;\n t['rcircle'] = 0x24E1;\n t['rcommaaccent'] = 0x0157;\n t['rdblgrave'] = 0x0211;\n t['rdotaccent'] = 0x1E59;\n t['rdotbelow'] = 0x1E5B;\n t['rdotbelowmacron'] = 0x1E5D;\n t['referencemark'] = 0x203B;\n t['reflexsubset'] = 0x2286;\n t['reflexsuperset'] = 0x2287;\n t['registered'] = 0x00AE;\n t['registersans'] = 0xF8E8;\n t['registerserif'] = 0xF6DA;\n t['reharabic'] = 0x0631;\n t['reharmenian'] = 0x0580;\n t['rehfinalarabic'] = 0xFEAE;\n t['rehiragana'] = 0x308C;\n t['rekatakana'] = 0x30EC;\n t['rekatakanahalfwidth'] = 0xFF9A;\n t['resh'] = 0x05E8;\n t['reshdageshhebrew'] = 0xFB48;\n t['reshhebrew'] = 0x05E8;\n t['reversedtilde'] = 0x223D;\n t['reviahebrew'] = 0x0597;\n t['reviamugrashhebrew'] = 0x0597;\n t['revlogicalnot'] = 0x2310;\n t['rfishhook'] = 0x027E;\n t['rfishhookreversed'] = 0x027F;\n t['rhabengali'] = 0x09DD;\n t['rhadeva'] = 0x095D;\n t['rho'] = 0x03C1;\n t['rhook'] = 0x027D;\n t['rhookturned'] = 0x027B;\n t['rhookturnedsuperior'] = 0x02B5;\n t['rhosymbolgreek'] = 0x03F1;\n t['rhotichookmod'] = 0x02DE;\n t['rieulacirclekorean'] = 0x3271;\n t['rieulaparenkorean'] = 0x3211;\n t['rieulcirclekorean'] = 0x3263;\n t['rieulhieuhkorean'] = 0x3140;\n t['rieulkiyeokkorean'] = 0x313A;\n t['rieulkiyeoksioskorean'] = 0x3169;\n t['rieulkorean'] = 0x3139;\n t['rieulmieumkorean'] = 0x313B;\n t['rieulpansioskorean'] = 0x316C;\n t['rieulparenkorean'] = 0x3203;\n t['rieulphieuphkorean'] = 0x313F;\n t['rieulpieupkorean'] = 0x313C;\n t['rieulpieupsioskorean'] = 0x316B;\n t['rieulsioskorean'] = 0x313D;\n t['rieulthieuthkorean'] = 0x313E;\n t['rieultikeutkorean'] = 0x316A;\n t['rieulyeorinhieuhkorean'] = 0x316D;\n t['rightangle'] = 0x221F;\n t['righttackbelowcmb'] = 0x0319;\n t['righttriangle'] = 0x22BF;\n t['rihiragana'] = 0x308A;\n t['rikatakana'] = 0x30EA;\n t['rikatakanahalfwidth'] = 0xFF98;\n t['ring'] = 0x02DA;\n t['ringbelowcmb'] = 0x0325;\n t['ringcmb'] = 0x030A;\n t['ringhalfleft'] = 0x02BF;\n t['ringhalfleftarmenian'] = 0x0559;\n t['ringhalfleftbelowcmb'] = 0x031C;\n t['ringhalfleftcentered'] = 0x02D3;\n t['ringhalfright'] = 0x02BE;\n t['ringhalfrightbelowcmb'] = 0x0339;\n t['ringhalfrightcentered'] = 0x02D2;\n t['rinvertedbreve'] = 0x0213;\n t['rittorusquare'] = 0x3351;\n t['rlinebelow'] = 0x1E5F;\n t['rlongleg'] = 0x027C;\n t['rlonglegturned'] = 0x027A;\n t['rmonospace'] = 0xFF52;\n t['rohiragana'] = 0x308D;\n t['rokatakana'] = 0x30ED;\n t['rokatakanahalfwidth'] = 0xFF9B;\n t['roruathai'] = 0x0E23;\n t['rparen'] = 0x24AD;\n t['rrabengali'] = 0x09DC;\n t['rradeva'] = 0x0931;\n t['rragurmukhi'] = 0x0A5C;\n t['rreharabic'] = 0x0691;\n t['rrehfinalarabic'] = 0xFB8D;\n t['rrvocalicbengali'] = 0x09E0;\n t['rrvocalicdeva'] = 0x0960;\n t['rrvocalicgujarati'] = 0x0AE0;\n t['rrvocalicvowelsignbengali'] = 0x09C4;\n t['rrvocalicvowelsigndeva'] = 0x0944;\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n t['rsuperior'] = 0xF6F1;\n t['rtblock'] = 0x2590;\n t['rturned'] = 0x0279;\n t['rturnedsuperior'] = 0x02B4;\n t['ruhiragana'] = 0x308B;\n t['rukatakana'] = 0x30EB;\n t['rukatakanahalfwidth'] = 0xFF99;\n t['rupeemarkbengali'] = 0x09F2;\n t['rupeesignbengali'] = 0x09F3;\n t['rupiah'] = 0xF6DD;\n t['ruthai'] = 0x0E24;\n t['rvocalicbengali'] = 0x098B;\n t['rvocalicdeva'] = 0x090B;\n t['rvocalicgujarati'] = 0x0A8B;\n t['rvocalicvowelsignbengali'] = 0x09C3;\n t['rvocalicvowelsigndeva'] = 0x0943;\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\n t['s'] = 0x0073;\n t['sabengali'] = 0x09B8;\n t['sacute'] = 0x015B;\n t['sacutedotaccent'] = 0x1E65;\n t['sadarabic'] = 0x0635;\n t['sadeva'] = 0x0938;\n t['sadfinalarabic'] = 0xFEBA;\n t['sadinitialarabic'] = 0xFEBB;\n t['sadmedialarabic'] = 0xFEBC;\n t['sagujarati'] = 0x0AB8;\n t['sagurmukhi'] = 0x0A38;\n t['sahiragana'] = 0x3055;\n t['sakatakana'] = 0x30B5;\n t['sakatakanahalfwidth'] = 0xFF7B;\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n t['samekh'] = 0x05E1;\n t['samekhdagesh'] = 0xFB41;\n t['samekhdageshhebrew'] = 0xFB41;\n t['samekhhebrew'] = 0x05E1;\n t['saraaathai'] = 0x0E32;\n t['saraaethai'] = 0x0E41;\n t['saraaimaimalaithai'] = 0x0E44;\n t['saraaimaimuanthai'] = 0x0E43;\n t['saraamthai'] = 0x0E33;\n t['saraathai'] = 0x0E30;\n t['saraethai'] = 0x0E40;\n t['saraiileftthai'] = 0xF886;\n t['saraiithai'] = 0x0E35;\n t['saraileftthai'] = 0xF885;\n t['saraithai'] = 0x0E34;\n t['saraothai'] = 0x0E42;\n t['saraueeleftthai'] = 0xF888;\n t['saraueethai'] = 0x0E37;\n t['saraueleftthai'] = 0xF887;\n t['sarauethai'] = 0x0E36;\n t['sarauthai'] = 0x0E38;\n t['sarauuthai'] = 0x0E39;\n t['sbopomofo'] = 0x3119;\n t['scaron'] = 0x0161;\n t['scarondotaccent'] = 0x1E67;\n t['scedilla'] = 0x015F;\n t['schwa'] = 0x0259;\n t['schwacyrillic'] = 0x04D9;\n t['schwadieresiscyrillic'] = 0x04DB;\n t['schwahook'] = 0x025A;\n t['scircle'] = 0x24E2;\n t['scircumflex'] = 0x015D;\n t['scommaaccent'] = 0x0219;\n t['sdotaccent'] = 0x1E61;\n t['sdotbelow'] = 0x1E63;\n t['sdotbelowdotaccent'] = 0x1E69;\n t['seagullbelowcmb'] = 0x033C;\n t['second'] = 0x2033;\n t['secondtonechinese'] = 0x02CA;\n t['section'] = 0x00A7;\n t['seenarabic'] = 0x0633;\n t['seenfinalarabic'] = 0xFEB2;\n t['seeninitialarabic'] = 0xFEB3;\n t['seenmedialarabic'] = 0xFEB4;\n t['segol'] = 0x05B6;\n t['segol13'] = 0x05B6;\n t['segol1f'] = 0x05B6;\n t['segol2c'] = 0x05B6;\n t['segolhebrew'] = 0x05B6;\n t['segolnarrowhebrew'] = 0x05B6;\n t['segolquarterhebrew'] = 0x05B6;\n t['segoltahebrew'] = 0x0592;\n t['segolwidehebrew'] = 0x05B6;\n t['seharmenian'] = 0x057D;\n t['sehiragana'] = 0x305B;\n t['sekatakana'] = 0x30BB;\n t['sekatakanahalfwidth'] = 0xFF7E;\n t['semicolon'] = 0x003B;\n t['semicolonarabic'] = 0x061B;\n t['semicolonmonospace'] = 0xFF1B;\n t['semicolonsmall'] = 0xFE54;\n t['semivoicedmarkkana'] = 0x309C;\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n t['sentisquare'] = 0x3322;\n t['sentosquare'] = 0x3323;\n t['seven'] = 0x0037;\n t['sevenarabic'] = 0x0667;\n t['sevenbengali'] = 0x09ED;\n t['sevencircle'] = 0x2466;\n t['sevencircleinversesansserif'] = 0x2790;\n t['sevendeva'] = 0x096D;\n t['seveneighths'] = 0x215E;\n t['sevengujarati'] = 0x0AED;\n t['sevengurmukhi'] = 0x0A6D;\n t['sevenhackarabic'] = 0x0667;\n t['sevenhangzhou'] = 0x3027;\n t['sevenideographicparen'] = 0x3226;\n t['seveninferior'] = 0x2087;\n t['sevenmonospace'] = 0xFF17;\n t['sevenoldstyle'] = 0xF737;\n t['sevenparen'] = 0x247A;\n t['sevenperiod'] = 0x248E;\n t['sevenpersian'] = 0x06F7;\n t['sevenroman'] = 0x2176;\n t['sevensuperior'] = 0x2077;\n t['seventeencircle'] = 0x2470;\n t['seventeenparen'] = 0x2484;\n t['seventeenperiod'] = 0x2498;\n t['seventhai'] = 0x0E57;\n t['sfthyphen'] = 0x00AD;\n t['shaarmenian'] = 0x0577;\n t['shabengali'] = 0x09B6;\n t['shacyrillic'] = 0x0448;\n t['shaddaarabic'] = 0x0651;\n t['shaddadammaarabic'] = 0xFC61;\n t['shaddadammatanarabic'] = 0xFC5E;\n t['shaddafathaarabic'] = 0xFC60;\n t['shaddakasraarabic'] = 0xFC62;\n t['shaddakasratanarabic'] = 0xFC5F;\n t['shade'] = 0x2592;\n t['shadedark'] = 0x2593;\n t['shadelight'] = 0x2591;\n t['shademedium'] = 0x2592;\n t['shadeva'] = 0x0936;\n t['shagujarati'] = 0x0AB6;\n t['shagurmukhi'] = 0x0A36;\n t['shalshelethebrew'] = 0x0593;\n t['shbopomofo'] = 0x3115;\n t['shchacyrillic'] = 0x0449;\n t['sheenarabic'] = 0x0634;\n t['sheenfinalarabic'] = 0xFEB6;\n t['sheeninitialarabic'] = 0xFEB7;\n t['sheenmedialarabic'] = 0xFEB8;\n t['sheicoptic'] = 0x03E3;\n t['sheqel'] = 0x20AA;\n t['sheqelhebrew'] = 0x20AA;\n t['sheva'] = 0x05B0;\n t['sheva115'] = 0x05B0;\n t['sheva15'] = 0x05B0;\n t['sheva22'] = 0x05B0;\n t['sheva2e'] = 0x05B0;\n t['shevahebrew'] = 0x05B0;\n t['shevanarrowhebrew'] = 0x05B0;\n t['shevaquarterhebrew'] = 0x05B0;\n t['shevawidehebrew'] = 0x05B0;\n t['shhacyrillic'] = 0x04BB;\n t['shimacoptic'] = 0x03ED;\n t['shin'] = 0x05E9;\n t['shindagesh'] = 0xFB49;\n t['shindageshhebrew'] = 0xFB49;\n t['shindageshshindot'] = 0xFB2C;\n t['shindageshshindothebrew'] = 0xFB2C;\n t['shindageshsindot'] = 0xFB2D;\n t['shindageshsindothebrew'] = 0xFB2D;\n t['shindothebrew'] = 0x05C1;\n t['shinhebrew'] = 0x05E9;\n t['shinshindot'] = 0xFB2A;\n t['shinshindothebrew'] = 0xFB2A;\n t['shinsindot'] = 0xFB2B;\n t['shinsindothebrew'] = 0xFB2B;\n t['shook'] = 0x0282;\n t['sigma'] = 0x03C3;\n t['sigma1'] = 0x03C2;\n t['sigmafinal'] = 0x03C2;\n t['sigmalunatesymbolgreek'] = 0x03F2;\n t['sihiragana'] = 0x3057;\n t['sikatakana'] = 0x30B7;\n t['sikatakanahalfwidth'] = 0xFF7C;\n t['siluqhebrew'] = 0x05BD;\n t['siluqlefthebrew'] = 0x05BD;\n t['similar'] = 0x223C;\n t['sindothebrew'] = 0x05C2;\n t['siosacirclekorean'] = 0x3274;\n t['siosaparenkorean'] = 0x3214;\n t['sioscieuckorean'] = 0x317E;\n t['sioscirclekorean'] = 0x3266;\n t['sioskiyeokkorean'] = 0x317A;\n t['sioskorean'] = 0x3145;\n t['siosnieunkorean'] = 0x317B;\n t['siosparenkorean'] = 0x3206;\n t['siospieupkorean'] = 0x317D;\n t['siostikeutkorean'] = 0x317C;\n t['six'] = 0x0036;\n t['sixarabic'] = 0x0666;\n t['sixbengali'] = 0x09EC;\n t['sixcircle'] = 0x2465;\n t['sixcircleinversesansserif'] = 0x278F;\n t['sixdeva'] = 0x096C;\n t['sixgujarati'] = 0x0AEC;\n t['sixgurmukhi'] = 0x0A6C;\n t['sixhackarabic'] = 0x0666;\n t['sixhangzhou'] = 0x3026;\n t['sixideographicparen'] = 0x3225;\n t['sixinferior'] = 0x2086;\n t['sixmonospace'] = 0xFF16;\n t['sixoldstyle'] = 0xF736;\n t['sixparen'] = 0x2479;\n t['sixperiod'] = 0x248D;\n t['sixpersian'] = 0x06F6;\n t['sixroman'] = 0x2175;\n t['sixsuperior'] = 0x2076;\n t['sixteencircle'] = 0x246F;\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\n t['sixteenparen'] = 0x2483;\n t['sixteenperiod'] = 0x2497;\n t['sixthai'] = 0x0E56;\n t['slash'] = 0x002F;\n t['slashmonospace'] = 0xFF0F;\n t['slong'] = 0x017F;\n t['slongdotaccent'] = 0x1E9B;\n t['smileface'] = 0x263A;\n t['smonospace'] = 0xFF53;\n t['sofpasuqhebrew'] = 0x05C3;\n t['softhyphen'] = 0x00AD;\n t['softsigncyrillic'] = 0x044C;\n t['sohiragana'] = 0x305D;\n t['sokatakana'] = 0x30BD;\n t['sokatakanahalfwidth'] = 0xFF7F;\n t['soliduslongoverlaycmb'] = 0x0338;\n t['solidusshortoverlaycmb'] = 0x0337;\n t['sorusithai'] = 0x0E29;\n t['sosalathai'] = 0x0E28;\n t['sosothai'] = 0x0E0B;\n t['sosuathai'] = 0x0E2A;\n t['space'] = 0x0020;\n t['spacehackarabic'] = 0x0020;\n t['spade'] = 0x2660;\n t['spadesuitblack'] = 0x2660;\n t['spadesuitwhite'] = 0x2664;\n t['sparen'] = 0x24AE;\n t['squarebelowcmb'] = 0x033B;\n t['squarecc'] = 0x33C4;\n t['squarecm'] = 0x339D;\n t['squarediagonalcrosshatchfill'] = 0x25A9;\n t['squarehorizontalfill'] = 0x25A4;\n t['squarekg'] = 0x338F;\n t['squarekm'] = 0x339E;\n t['squarekmcapital'] = 0x33CE;\n t['squareln'] = 0x33D1;\n t['squarelog'] = 0x33D2;\n t['squaremg'] = 0x338E;\n t['squaremil'] = 0x33D5;\n t['squaremm'] = 0x339C;\n t['squaremsquared'] = 0x33A1;\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\n t['squareupperlefttolowerrightfill'] = 0x25A7;\n t['squareupperrighttolowerleftfill'] = 0x25A8;\n t['squareverticalfill'] = 0x25A5;\n t['squarewhitewithsmallblack'] = 0x25A3;\n t['srsquare'] = 0x33DB;\n t['ssabengali'] = 0x09B7;\n t['ssadeva'] = 0x0937;\n t['ssagujarati'] = 0x0AB7;\n t['ssangcieuckorean'] = 0x3149;\n t['ssanghieuhkorean'] = 0x3185;\n t['ssangieungkorean'] = 0x3180;\n t['ssangkiyeokkorean'] = 0x3132;\n t['ssangnieunkorean'] = 0x3165;\n t['ssangpieupkorean'] = 0x3143;\n t['ssangsioskorean'] = 0x3146;\n t['ssangtikeutkorean'] = 0x3138;\n t['ssuperior'] = 0xF6F2;\n t['sterling'] = 0x00A3;\n t['sterlingmonospace'] = 0xFFE1;\n t['strokelongoverlaycmb'] = 0x0336;\n t['strokeshortoverlaycmb'] = 0x0335;\n t['subset'] = 0x2282;\n t['subsetnotequal'] = 0x228A;\n t['subsetorequal'] = 0x2286;\n t['succeeds'] = 0x227B;\n t['suchthat'] = 0x220B;\n t['suhiragana'] = 0x3059;\n t['sukatakana'] = 0x30B9;\n t['sukatakanahalfwidth'] = 0xFF7D;\n t['sukunarabic'] = 0x0652;\n t['summation'] = 0x2211;\n t['sun'] = 0x263C;\n t['superset'] = 0x2283;\n t['supersetnotequal'] = 0x228B;\n t['supersetorequal'] = 0x2287;\n t['svsquare'] = 0x33DC;\n t['syouwaerasquare'] = 0x337C;\n t['t'] = 0x0074;\n t['tabengali'] = 0x09A4;\n t['tackdown'] = 0x22A4;\n t['tackleft'] = 0x22A3;\n t['tadeva'] = 0x0924;\n t['tagujarati'] = 0x0AA4;\n t['tagurmukhi'] = 0x0A24;\n t['taharabic'] = 0x0637;\n t['tahfinalarabic'] = 0xFEC2;\n t['tahinitialarabic'] = 0xFEC3;\n t['tahiragana'] = 0x305F;\n t['tahmedialarabic'] = 0xFEC4;\n t['taisyouerasquare'] = 0x337D;\n t['takatakana'] = 0x30BF;\n t['takatakanahalfwidth'] = 0xFF80;\n t['tatweelarabic'] = 0x0640;\n t['tau'] = 0x03C4;\n t['tav'] = 0x05EA;\n t['tavdages'] = 0xFB4A;\n t['tavdagesh'] = 0xFB4A;\n t['tavdageshhebrew'] = 0xFB4A;\n t['tavhebrew'] = 0x05EA;\n t['tbar'] = 0x0167;\n t['tbopomofo'] = 0x310A;\n t['tcaron'] = 0x0165;\n t['tccurl'] = 0x02A8;\n t['tcedilla'] = 0x0163;\n t['tcheharabic'] = 0x0686;\n t['tchehfinalarabic'] = 0xFB7B;\n t['tchehinitialarabic'] = 0xFB7C;\n t['tchehmedialarabic'] = 0xFB7D;\n t['tcircle'] = 0x24E3;\n t['tcircumflexbelow'] = 0x1E71;\n t['tcommaaccent'] = 0x0163;\n t['tdieresis'] = 0x1E97;\n t['tdotaccent'] = 0x1E6B;\n t['tdotbelow'] = 0x1E6D;\n t['tecyrillic'] = 0x0442;\n t['tedescendercyrillic'] = 0x04AD;\n t['teharabic'] = 0x062A;\n t['tehfinalarabic'] = 0xFE96;\n t['tehhahinitialarabic'] = 0xFCA2;\n t['tehhahisolatedarabic'] = 0xFC0C;\n t['tehinitialarabic'] = 0xFE97;\n t['tehiragana'] = 0x3066;\n t['tehjeeminitialarabic'] = 0xFCA1;\n t['tehjeemisolatedarabic'] = 0xFC0B;\n t['tehmarbutaarabic'] = 0x0629;\n t['tehmarbutafinalarabic'] = 0xFE94;\n t['tehmedialarabic'] = 0xFE98;\n t['tehmeeminitialarabic'] = 0xFCA4;\n t['tehmeemisolatedarabic'] = 0xFC0E;\n t['tehnoonfinalarabic'] = 0xFC73;\n t['tekatakana'] = 0x30C6;\n t['tekatakanahalfwidth'] = 0xFF83;\n t['telephone'] = 0x2121;\n t['telephoneblack'] = 0x260E;\n t['telishagedolahebrew'] = 0x05A0;\n t['telishaqetanahebrew'] = 0x05A9;\n t['tencircle'] = 0x2469;\n t['tenideographicparen'] = 0x3229;\n t['tenparen'] = 0x247D;\n t['tenperiod'] = 0x2491;\n t['tenroman'] = 0x2179;\n t['tesh'] = 0x02A7;\n t['tet'] = 0x05D8;\n t['tetdagesh'] = 0xFB38;\n t['tetdageshhebrew'] = 0xFB38;\n t['tethebrew'] = 0x05D8;\n t['tetsecyrillic'] = 0x04B5;\n t['tevirhebrew'] = 0x059B;\n t['tevirlefthebrew'] = 0x059B;\n t['thabengali'] = 0x09A5;\n t['thadeva'] = 0x0925;\n t['thagujarati'] = 0x0AA5;\n t['thagurmukhi'] = 0x0A25;\n t['thalarabic'] = 0x0630;\n t['thalfinalarabic'] = 0xFEAC;\n t['thanthakhatlowleftthai'] = 0xF898;\n t['thanthakhatlowrightthai'] = 0xF897;\n t['thanthakhatthai'] = 0x0E4C;\n t['thanthakhatupperleftthai'] = 0xF896;\n t['theharabic'] = 0x062B;\n t['thehfinalarabic'] = 0xFE9A;\n t['thehinitialarabic'] = 0xFE9B;\n t['thehmedialarabic'] = 0xFE9C;\n t['thereexists'] = 0x2203;\n t['therefore'] = 0x2234;\n t['theta'] = 0x03B8;\n t['theta1'] = 0x03D1;\n t['thetasymbolgreek'] = 0x03D1;\n t['thieuthacirclekorean'] = 0x3279;\n t['thieuthaparenkorean'] = 0x3219;\n t['thieuthcirclekorean'] = 0x326B;\n t['thieuthkorean'] = 0x314C;\n t['thieuthparenkorean'] = 0x320B;\n t['thirteencircle'] = 0x246C;\n t['thirteenparen'] = 0x2480;\n t['thirteenperiod'] = 0x2494;\n t['thonangmonthothai'] = 0x0E11;\n t['thook'] = 0x01AD;\n t['thophuthaothai'] = 0x0E12;\n t['thorn'] = 0x00FE;\n t['thothahanthai'] = 0x0E17;\n t['thothanthai'] = 0x0E10;\n t['thothongthai'] = 0x0E18;\n t['thothungthai'] = 0x0E16;\n t['thousandcyrillic'] = 0x0482;\n t['thousandsseparatorarabic'] = 0x066C;\n t['thousandsseparatorpersian'] = 0x066C;\n t['three'] = 0x0033;\n t['threearabic'] = 0x0663;\n t['threebengali'] = 0x09E9;\n t['threecircle'] = 0x2462;\n t['threecircleinversesansserif'] = 0x278C;\n t['threedeva'] = 0x0969;\n t['threeeighths'] = 0x215C;\n t['threegujarati'] = 0x0AE9;\n t['threegurmukhi'] = 0x0A69;\n t['threehackarabic'] = 0x0663;\n t['threehangzhou'] = 0x3023;\n t['threeideographicparen'] = 0x3222;\n t['threeinferior'] = 0x2083;\n t['threemonospace'] = 0xFF13;\n t['threenumeratorbengali'] = 0x09F6;\n t['threeoldstyle'] = 0xF733;\n t['threeparen'] = 0x2476;\n t['threeperiod'] = 0x248A;\n t['threepersian'] = 0x06F3;\n t['threequarters'] = 0x00BE;\n t['threequartersemdash'] = 0xF6DE;\n t['threeroman'] = 0x2172;\n t['threesuperior'] = 0x00B3;\n t['threethai'] = 0x0E53;\n t['thzsquare'] = 0x3394;\n t['tihiragana'] = 0x3061;\n t['tikatakana'] = 0x30C1;\n t['tikatakanahalfwidth'] = 0xFF81;\n t['tikeutacirclekorean'] = 0x3270;\n t['tikeutaparenkorean'] = 0x3210;\n t['tikeutcirclekorean'] = 0x3262;\n t['tikeutkorean'] = 0x3137;\n t['tikeutparenkorean'] = 0x3202;\n t['tilde'] = 0x02DC;\n t['tildebelowcmb'] = 0x0330;\n t['tildecmb'] = 0x0303;\n t['tildecomb'] = 0x0303;\n t['tildedoublecmb'] = 0x0360;\n t['tildeoperator'] = 0x223C;\n t['tildeoverlaycmb'] = 0x0334;\n t['tildeverticalcmb'] = 0x033E;\n t['timescircle'] = 0x2297;\n t['tipehahebrew'] = 0x0596;\n t['tipehalefthebrew'] = 0x0596;\n t['tippigurmukhi'] = 0x0A70;\n t['titlocyrilliccmb'] = 0x0483;\n t['tiwnarmenian'] = 0x057F;\n t['tlinebelow'] = 0x1E6F;\n t['tmonospace'] = 0xFF54;\n t['toarmenian'] = 0x0569;\n t['tohiragana'] = 0x3068;\n t['tokatakana'] = 0x30C8;\n t['tokatakanahalfwidth'] = 0xFF84;\n t['tonebarextrahighmod'] = 0x02E5;\n t['tonebarextralowmod'] = 0x02E9;\n t['tonebarhighmod'] = 0x02E6;\n t['tonebarlowmod'] = 0x02E8;\n t['tonebarmidmod'] = 0x02E7;\n t['tonefive'] = 0x01BD;\n t['tonesix'] = 0x0185;\n t['tonetwo'] = 0x01A8;\n t['tonos'] = 0x0384;\n t['tonsquare'] = 0x3327;\n t['topatakthai'] = 0x0E0F;\n t['tortoiseshellbracketleft'] = 0x3014;\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n t['tortoiseshellbracketleftvertical'] = 0xFE39;\n t['tortoiseshellbracketright'] = 0x3015;\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n t['totaothai'] = 0x0E15;\n t['tpalatalhook'] = 0x01AB;\n t['tparen'] = 0x24AF;\n t['trademark'] = 0x2122;\n t['trademarksans'] = 0xF8EA;\n t['trademarkserif'] = 0xF6DB;\n t['tretroflexhook'] = 0x0288;\n t['triagdn'] = 0x25BC;\n t['triaglf'] = 0x25C4;\n t['triagrt'] = 0x25BA;\n t['triagup'] = 0x25B2;\n t['ts'] = 0x02A6;\n t['tsadi'] = 0x05E6;\n t['tsadidagesh'] = 0xFB46;\n t['tsadidageshhebrew'] = 0xFB46;\n t['tsadihebrew'] = 0x05E6;\n t['tsecyrillic'] = 0x0446;\n t['tsere'] = 0x05B5;\n t['tsere12'] = 0x05B5;\n t['tsere1e'] = 0x05B5;\n t['tsere2b'] = 0x05B5;\n t['tserehebrew'] = 0x05B5;\n t['tserenarrowhebrew'] = 0x05B5;\n t['tserequarterhebrew'] = 0x05B5;\n t['tserewidehebrew'] = 0x05B5;\n t['tshecyrillic'] = 0x045B;\n t['tsuperior'] = 0xF6F3;\n t['ttabengali'] = 0x099F;\n t['ttadeva'] = 0x091F;\n t['ttagujarati'] = 0x0A9F;\n t['ttagurmukhi'] = 0x0A1F;\n t['tteharabic'] = 0x0679;\n t['ttehfinalarabic'] = 0xFB67;\n t['ttehinitialarabic'] = 0xFB68;\n t['ttehmedialarabic'] = 0xFB69;\n t['tthabengali'] = 0x09A0;\n t['tthadeva'] = 0x0920;\n t['tthagujarati'] = 0x0AA0;\n t['tthagurmukhi'] = 0x0A20;\n t['tturned'] = 0x0287;\n t['tuhiragana'] = 0x3064;\n t['tukatakana'] = 0x30C4;\n t['tukatakanahalfwidth'] = 0xFF82;\n t['tusmallhiragana'] = 0x3063;\n t['tusmallkatakana'] = 0x30C3;\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\n t['twelvecircle'] = 0x246B;\n t['twelveparen'] = 0x247F;\n t['twelveperiod'] = 0x2493;\n t['twelveroman'] = 0x217B;\n t['twentycircle'] = 0x2473;\n t['twentyhangzhou'] = 0x5344;\n t['twentyparen'] = 0x2487;\n t['twentyperiod'] = 0x249B;\n t['two'] = 0x0032;\n t['twoarabic'] = 0x0662;\n t['twobengali'] = 0x09E8;\n t['twocircle'] = 0x2461;\n t['twocircleinversesansserif'] = 0x278B;\n t['twodeva'] = 0x0968;\n t['twodotenleader'] = 0x2025;\n t['twodotleader'] = 0x2025;\n t['twodotleadervertical'] = 0xFE30;\n t['twogujarati'] = 0x0AE8;\n t['twogurmukhi'] = 0x0A68;\n t['twohackarabic'] = 0x0662;\n t['twohangzhou'] = 0x3022;\n t['twoideographicparen'] = 0x3221;\n t['twoinferior'] = 0x2082;\n t['twomonospace'] = 0xFF12;\n t['twonumeratorbengali'] = 0x09F5;\n t['twooldstyle'] = 0xF732;\n t['twoparen'] = 0x2475;\n t['twoperiod'] = 0x2489;\n t['twopersian'] = 0x06F2;\n t['tworoman'] = 0x2171;\n t['twostroke'] = 0x01BB;\n t['twosuperior'] = 0x00B2;\n t['twothai'] = 0x0E52;\n t['twothirds'] = 0x2154;\n t['u'] = 0x0075;\n t['uacute'] = 0x00FA;\n t['ubar'] = 0x0289;\n t['ubengali'] = 0x0989;\n t['ubopomofo'] = 0x3128;\n t['ubreve'] = 0x016D;\n t['ucaron'] = 0x01D4;\n t['ucircle'] = 0x24E4;\n t['ucircumflex'] = 0x00FB;\n t['ucircumflexbelow'] = 0x1E77;\n t['ucyrillic'] = 0x0443;\n t['udattadeva'] = 0x0951;\n t['udblacute'] = 0x0171;\n t['udblgrave'] = 0x0215;\n t['udeva'] = 0x0909;\n t['udieresis'] = 0x00FC;\n t['udieresisacute'] = 0x01D8;\n t['udieresisbelow'] = 0x1E73;\n t['udieresiscaron'] = 0x01DA;\n t['udieresiscyrillic'] = 0x04F1;\n t['udieresisgrave'] = 0x01DC;\n t['udieresismacron'] = 0x01D6;\n t['udotbelow'] = 0x1EE5;\n t['ugrave'] = 0x00F9;\n t['ugujarati'] = 0x0A89;\n t['ugurmukhi'] = 0x0A09;\n t['uhiragana'] = 0x3046;\n t['uhookabove'] = 0x1EE7;\n t['uhorn'] = 0x01B0;\n t['uhornacute'] = 0x1EE9;\n t['uhorndotbelow'] = 0x1EF1;\n t['uhorngrave'] = 0x1EEB;\n t['uhornhookabove'] = 0x1EED;\n t['uhorntilde'] = 0x1EEF;\n t['uhungarumlaut'] = 0x0171;\n t['uhungarumlautcyrillic'] = 0x04F3;\n t['uinvertedbreve'] = 0x0217;\n t['ukatakana'] = 0x30A6;\n t['ukatakanahalfwidth'] = 0xFF73;\n t['ukcyrillic'] = 0x0479;\n t['ukorean'] = 0x315C;\n t['umacron'] = 0x016B;\n t['umacroncyrillic'] = 0x04EF;\n t['umacrondieresis'] = 0x1E7B;\n t['umatragurmukhi'] = 0x0A41;\n t['umonospace'] = 0xFF55;\n t['underscore'] = 0x005F;\n t['underscoredbl'] = 0x2017;\n t['underscoremonospace'] = 0xFF3F;\n t['underscorevertical'] = 0xFE33;\n t['underscorewavy'] = 0xFE4F;\n t['union'] = 0x222A;\n t['universal'] = 0x2200;\n t['uogonek'] = 0x0173;\n t['uparen'] = 0x24B0;\n t['upblock'] = 0x2580;\n t['upperdothebrew'] = 0x05C4;\n t['upsilon'] = 0x03C5;\n t['upsilondieresis'] = 0x03CB;\n t['upsilondieresistonos'] = 0x03B0;\n t['upsilonlatin'] = 0x028A;\n t['upsilontonos'] = 0x03CD;\n t['uptackbelowcmb'] = 0x031D;\n t['uptackmod'] = 0x02D4;\n t['uragurmukhi'] = 0x0A73;\n t['uring'] = 0x016F;\n t['ushortcyrillic'] = 0x045E;\n t['usmallhiragana'] = 0x3045;\n t['usmallkatakana'] = 0x30A5;\n t['usmallkatakanahalfwidth'] = 0xFF69;\n t['ustraightcyrillic'] = 0x04AF;\n t['ustraightstrokecyrillic'] = 0x04B1;\n t['utilde'] = 0x0169;\n t['utildeacute'] = 0x1E79;\n t['utildebelow'] = 0x1E75;\n t['uubengali'] = 0x098A;\n t['uudeva'] = 0x090A;\n t['uugujarati'] = 0x0A8A;\n t['uugurmukhi'] = 0x0A0A;\n t['uumatragurmukhi'] = 0x0A42;\n t['uuvowelsignbengali'] = 0x09C2;\n t['uuvowelsigndeva'] = 0x0942;\n t['uuvowelsigngujarati'] = 0x0AC2;\n t['uvowelsignbengali'] = 0x09C1;\n t['uvowelsigndeva'] = 0x0941;\n t['uvowelsigngujarati'] = 0x0AC1;\n t['v'] = 0x0076;\n t['vadeva'] = 0x0935;\n t['vagujarati'] = 0x0AB5;\n t['vagurmukhi'] = 0x0A35;\n t['vakatakana'] = 0x30F7;\n t['vav'] = 0x05D5;\n t['vavdagesh'] = 0xFB35;\n t['vavdagesh65'] = 0xFB35;\n t['vavdageshhebrew'] = 0xFB35;\n t['vavhebrew'] = 0x05D5;\n t['vavholam'] = 0xFB4B;\n t['vavholamhebrew'] = 0xFB4B;\n t['vavvavhebrew'] = 0x05F0;\n t['vavyodhebrew'] = 0x05F1;\n t['vcircle'] = 0x24E5;\n t['vdotbelow'] = 0x1E7F;\n t['vecyrillic'] = 0x0432;\n t['veharabic'] = 0x06A4;\n t['vehfinalarabic'] = 0xFB6B;\n t['vehinitialarabic'] = 0xFB6C;\n t['vehmedialarabic'] = 0xFB6D;\n t['vekatakana'] = 0x30F9;\n t['venus'] = 0x2640;\n t['verticalbar'] = 0x007C;\n t['verticallineabovecmb'] = 0x030D;\n t['verticallinebelowcmb'] = 0x0329;\n t['verticallinelowmod'] = 0x02CC;\n t['verticallinemod'] = 0x02C8;\n t['vewarmenian'] = 0x057E;\n t['vhook'] = 0x028B;\n t['vikatakana'] = 0x30F8;\n t['viramabengali'] = 0x09CD;\n t['viramadeva'] = 0x094D;\n t['viramagujarati'] = 0x0ACD;\n t['visargabengali'] = 0x0983;\n t['visargadeva'] = 0x0903;\n t['visargagujarati'] = 0x0A83;\n t['vmonospace'] = 0xFF56;\n t['voarmenian'] = 0x0578;\n t['voicediterationhiragana'] = 0x309E;\n t['voicediterationkatakana'] = 0x30FE;\n t['voicedmarkkana'] = 0x309B;\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\n t['vokatakana'] = 0x30FA;\n t['vparen'] = 0x24B1;\n t['vtilde'] = 0x1E7D;\n t['vturned'] = 0x028C;\n t['vuhiragana'] = 0x3094;\n t['vukatakana'] = 0x30F4;\n t['w'] = 0x0077;\n t['wacute'] = 0x1E83;\n t['waekorean'] = 0x3159;\n t['wahiragana'] = 0x308F;\n t['wakatakana'] = 0x30EF;\n t['wakatakanahalfwidth'] = 0xFF9C;\n t['wakorean'] = 0x3158;\n t['wasmallhiragana'] = 0x308E;\n t['wasmallkatakana'] = 0x30EE;\n t['wattosquare'] = 0x3357;\n t['wavedash'] = 0x301C;\n t['wavyunderscorevertical'] = 0xFE34;\n t['wawarabic'] = 0x0648;\n t['wawfinalarabic'] = 0xFEEE;\n t['wawhamzaabovearabic'] = 0x0624;\n t['wawhamzaabovefinalarabic'] = 0xFE86;\n t['wbsquare'] = 0x33DD;\n t['wcircle'] = 0x24E6;\n t['wcircumflex'] = 0x0175;\n t['wdieresis'] = 0x1E85;\n t['wdotaccent'] = 0x1E87;\n t['wdotbelow'] = 0x1E89;\n t['wehiragana'] = 0x3091;\n t['weierstrass'] = 0x2118;\n t['wekatakana'] = 0x30F1;\n t['wekorean'] = 0x315E;\n t['weokorean'] = 0x315D;\n t['wgrave'] = 0x1E81;\n t['whitebullet'] = 0x25E6;\n t['whitecircle'] = 0x25CB;\n t['whitecircleinverse'] = 0x25D9;\n t['whitecornerbracketleft'] = 0x300E;\n t['whitecornerbracketleftvertical'] = 0xFE43;\n t['whitecornerbracketright'] = 0x300F;\n t['whitecornerbracketrightvertical'] = 0xFE44;\n t['whitediamond'] = 0x25C7;\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n t['whitedownpointingsmalltriangle'] = 0x25BF;\n t['whitedownpointingtriangle'] = 0x25BD;\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\n t['whiteleftpointingtriangle'] = 0x25C1;\n t['whitelenticularbracketleft'] = 0x3016;\n t['whitelenticularbracketright'] = 0x3017;\n t['whiterightpointingsmalltriangle'] = 0x25B9;\n t['whiterightpointingtriangle'] = 0x25B7;\n t['whitesmallsquare'] = 0x25AB;\n t['whitesmilingface'] = 0x263A;\n t['whitesquare'] = 0x25A1;\n t['whitestar'] = 0x2606;\n t['whitetelephone'] = 0x260F;\n t['whitetortoiseshellbracketleft'] = 0x3018;\n t['whitetortoiseshellbracketright'] = 0x3019;\n t['whiteuppointingsmalltriangle'] = 0x25B5;\n t['whiteuppointingtriangle'] = 0x25B3;\n t['wihiragana'] = 0x3090;\n t['wikatakana'] = 0x30F0;\n t['wikorean'] = 0x315F;\n t['wmonospace'] = 0xFF57;\n t['wohiragana'] = 0x3092;\n t['wokatakana'] = 0x30F2;\n t['wokatakanahalfwidth'] = 0xFF66;\n t['won'] = 0x20A9;\n t['wonmonospace'] = 0xFFE6;\n t['wowaenthai'] = 0x0E27;\n t['wparen'] = 0x24B2;\n t['wring'] = 0x1E98;\n t['wsuperior'] = 0x02B7;\n t['wturned'] = 0x028D;\n t['wynn'] = 0x01BF;\n t['x'] = 0x0078;\n t['xabovecmb'] = 0x033D;\n t['xbopomofo'] = 0x3112;\n t['xcircle'] = 0x24E7;\n t['xdieresis'] = 0x1E8D;\n t['xdotaccent'] = 0x1E8B;\n t['xeharmenian'] = 0x056D;\n t['xi'] = 0x03BE;\n t['xmonospace'] = 0xFF58;\n t['xparen'] = 0x24B3;\n t['xsuperior'] = 0x02E3;\n t['y'] = 0x0079;\n t['yaadosquare'] = 0x334E;\n t['yabengali'] = 0x09AF;\n t['yacute'] = 0x00FD;\n t['yadeva'] = 0x092F;\n t['yaekorean'] = 0x3152;\n t['yagujarati'] = 0x0AAF;\n t['yagurmukhi'] = 0x0A2F;\n t['yahiragana'] = 0x3084;\n t['yakatakana'] = 0x30E4;\n t['yakatakanahalfwidth'] = 0xFF94;\n t['yakorean'] = 0x3151;\n t['yamakkanthai'] = 0x0E4E;\n t['yasmallhiragana'] = 0x3083;\n t['yasmallkatakana'] = 0x30E3;\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\n t['yatcyrillic'] = 0x0463;\n t['ycircle'] = 0x24E8;\n t['ycircumflex'] = 0x0177;\n t['ydieresis'] = 0x00FF;\n t['ydotaccent'] = 0x1E8F;\n t['ydotbelow'] = 0x1EF5;\n t['yeharabic'] = 0x064A;\n t['yehbarreearabic'] = 0x06D2;\n t['yehbarreefinalarabic'] = 0xFBAF;\n t['yehfinalarabic'] = 0xFEF2;\n t['yehhamzaabovearabic'] = 0x0626;\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\n t['yehinitialarabic'] = 0xFEF3;\n t['yehmedialarabic'] = 0xFEF4;\n t['yehmeeminitialarabic'] = 0xFCDD;\n t['yehmeemisolatedarabic'] = 0xFC58;\n t['yehnoonfinalarabic'] = 0xFC94;\n t['yehthreedotsbelowarabic'] = 0x06D1;\n t['yekorean'] = 0x3156;\n t['yen'] = 0x00A5;\n t['yenmonospace'] = 0xFFE5;\n t['yeokorean'] = 0x3155;\n t['yeorinhieuhkorean'] = 0x3186;\n t['yerahbenyomohebrew'] = 0x05AA;\n t['yerahbenyomolefthebrew'] = 0x05AA;\n t['yericyrillic'] = 0x044B;\n t['yerudieresiscyrillic'] = 0x04F9;\n t['yesieungkorean'] = 0x3181;\n t['yesieungpansioskorean'] = 0x3183;\n t['yesieungsioskorean'] = 0x3182;\n t['yetivhebrew'] = 0x059A;\n t['ygrave'] = 0x1EF3;\n t['yhook'] = 0x01B4;\n t['yhookabove'] = 0x1EF7;\n t['yiarmenian'] = 0x0575;\n t['yicyrillic'] = 0x0457;\n t['yikorean'] = 0x3162;\n t['yinyang'] = 0x262F;\n t['yiwnarmenian'] = 0x0582;\n t['ymonospace'] = 0xFF59;\n t['yod'] = 0x05D9;\n t['yoddagesh'] = 0xFB39;\n t['yoddageshhebrew'] = 0xFB39;\n t['yodhebrew'] = 0x05D9;\n t['yodyodhebrew'] = 0x05F2;\n t['yodyodpatahhebrew'] = 0xFB1F;\n t['yohiragana'] = 0x3088;\n t['yoikorean'] = 0x3189;\n t['yokatakana'] = 0x30E8;\n t['yokatakanahalfwidth'] = 0xFF96;\n t['yokorean'] = 0x315B;\n t['yosmallhiragana'] = 0x3087;\n t['yosmallkatakana'] = 0x30E7;\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\n t['yotgreek'] = 0x03F3;\n t['yoyaekorean'] = 0x3188;\n t['yoyakorean'] = 0x3187;\n t['yoyakthai'] = 0x0E22;\n t['yoyingthai'] = 0x0E0D;\n t['yparen'] = 0x24B4;\n t['ypogegrammeni'] = 0x037A;\n t['ypogegrammenigreekcmb'] = 0x0345;\n t['yr'] = 0x01A6;\n t['yring'] = 0x1E99;\n t['ysuperior'] = 0x02B8;\n t['ytilde'] = 0x1EF9;\n t['yturned'] = 0x028E;\n t['yuhiragana'] = 0x3086;\n t['yuikorean'] = 0x318C;\n t['yukatakana'] = 0x30E6;\n t['yukatakanahalfwidth'] = 0xFF95;\n t['yukorean'] = 0x3160;\n t['yusbigcyrillic'] = 0x046B;\n t['yusbigiotifiedcyrillic'] = 0x046D;\n t['yuslittlecyrillic'] = 0x0467;\n t['yuslittleiotifiedcyrillic'] = 0x0469;\n t['yusmallhiragana'] = 0x3085;\n t['yusmallkatakana'] = 0x30E5;\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\n t['yuyekorean'] = 0x318B;\n t['yuyeokorean'] = 0x318A;\n t['yyabengali'] = 0x09DF;\n t['yyadeva'] = 0x095F;\n t['z'] = 0x007A;\n t['zaarmenian'] = 0x0566;\n t['zacute'] = 0x017A;\n t['zadeva'] = 0x095B;\n t['zagurmukhi'] = 0x0A5B;\n t['zaharabic'] = 0x0638;\n t['zahfinalarabic'] = 0xFEC6;\n t['zahinitialarabic'] = 0xFEC7;\n t['zahiragana'] = 0x3056;\n t['zahmedialarabic'] = 0xFEC8;\n t['zainarabic'] = 0x0632;\n t['zainfinalarabic'] = 0xFEB0;\n t['zakatakana'] = 0x30B6;\n t['zaqefgadolhebrew'] = 0x0595;\n t['zaqefqatanhebrew'] = 0x0594;\n t['zarqahebrew'] = 0x0598;\n t['zayin'] = 0x05D6;\n t['zayindagesh'] = 0xFB36;\n t['zayindageshhebrew'] = 0xFB36;\n t['zayinhebrew'] = 0x05D6;\n t['zbopomofo'] = 0x3117;\n t['zcaron'] = 0x017E;\n t['zcircle'] = 0x24E9;\n t['zcircumflex'] = 0x1E91;\n t['zcurl'] = 0x0291;\n t['zdot'] = 0x017C;\n t['zdotaccent'] = 0x017C;\n t['zdotbelow'] = 0x1E93;\n t['zecyrillic'] = 0x0437;\n t['zedescendercyrillic'] = 0x0499;\n t['zedieresiscyrillic'] = 0x04DF;\n t['zehiragana'] = 0x305C;\n t['zekatakana'] = 0x30BC;\n t['zero'] = 0x0030;\n t['zeroarabic'] = 0x0660;\n t['zerobengali'] = 0x09E6;\n t['zerodeva'] = 0x0966;\n t['zerogujarati'] = 0x0AE6;\n t['zerogurmukhi'] = 0x0A66;\n t['zerohackarabic'] = 0x0660;\n t['zeroinferior'] = 0x2080;\n t['zeromonospace'] = 0xFF10;\n t['zerooldstyle'] = 0xF730;\n t['zeropersian'] = 0x06F0;\n t['zerosuperior'] = 0x2070;\n t['zerothai'] = 0x0E50;\n t['zerowidthjoiner'] = 0xFEFF;\n t['zerowidthnonjoiner'] = 0x200C;\n t['zerowidthspace'] = 0x200B;\n t['zeta'] = 0x03B6;\n t['zhbopomofo'] = 0x3113;\n t['zhearmenian'] = 0x056A;\n t['zhebrevecyrillic'] = 0x04C2;\n t['zhecyrillic'] = 0x0436;\n t['zhedescendercyrillic'] = 0x0497;\n t['zhedieresiscyrillic'] = 0x04DD;\n t['zihiragana'] = 0x3058;\n t['zikatakana'] = 0x30B8;\n t['zinorhebrew'] = 0x05AE;\n t['zlinebelow'] = 0x1E95;\n t['zmonospace'] = 0xFF5A;\n t['zohiragana'] = 0x305E;\n t['zokatakana'] = 0x30BE;\n t['zparen'] = 0x24B5;\n t['zretroflexhook'] = 0x0290;\n t['zstroke'] = 0x01B6;\n t['zuhiragana'] = 0x305A;\n t['zukatakana'] = 0x30BA;\n t['.notdef'] = 0x0000;\n t['angbracketleftbig'] = 0x2329;\n t['angbracketleftBig'] = 0x2329;\n t['angbracketleftbigg'] = 0x2329;\n t['angbracketleftBigg'] = 0x2329;\n t['angbracketrightBig'] = 0x232A;\n t['angbracketrightbig'] = 0x232A;\n t['angbracketrightBigg'] = 0x232A;\n t['angbracketrightbigg'] = 0x232A;\n t['arrowhookleft'] = 0x21AA;\n t['arrowhookright'] = 0x21A9;\n t['arrowlefttophalf'] = 0x21BC;\n t['arrowleftbothalf'] = 0x21BD;\n t['arrownortheast'] = 0x2197;\n t['arrownorthwest'] = 0x2196;\n t['arrowrighttophalf'] = 0x21C0;\n t['arrowrightbothalf'] = 0x21C1;\n t['arrowsoutheast'] = 0x2198;\n t['arrowsouthwest'] = 0x2199;\n t['backslashbig'] = 0x2216;\n t['backslashBig'] = 0x2216;\n t['backslashBigg'] = 0x2216;\n t['backslashbigg'] = 0x2216;\n t['bardbl'] = 0x2016;\n t['bracehtipdownleft'] = 0xFE37;\n t['bracehtipdownright'] = 0xFE37;\n t['bracehtipupleft'] = 0xFE38;\n t['bracehtipupright'] = 0xFE38;\n t['braceleftBig'] = 0x007B;\n t['braceleftbig'] = 0x007B;\n t['braceleftbigg'] = 0x007B;\n t['braceleftBigg'] = 0x007B;\n t['bracerightBig'] = 0x007D;\n t['bracerightbig'] = 0x007D;\n t['bracerightbigg'] = 0x007D;\n t['bracerightBigg'] = 0x007D;\n t['bracketleftbig'] = 0x005B;\n t['bracketleftBig'] = 0x005B;\n t['bracketleftbigg'] = 0x005B;\n t['bracketleftBigg'] = 0x005B;\n t['bracketrightBig'] = 0x005D;\n t['bracketrightbig'] = 0x005D;\n t['bracketrightbigg'] = 0x005D;\n t['bracketrightBigg'] = 0x005D;\n t['ceilingleftbig'] = 0x2308;\n t['ceilingleftBig'] = 0x2308;\n t['ceilingleftBigg'] = 0x2308;\n t['ceilingleftbigg'] = 0x2308;\n t['ceilingrightbig'] = 0x2309;\n t['ceilingrightBig'] = 0x2309;\n t['ceilingrightbigg'] = 0x2309;\n t['ceilingrightBigg'] = 0x2309;\n t['circledotdisplay'] = 0x2299;\n t['circledottext'] = 0x2299;\n t['circlemultiplydisplay'] = 0x2297;\n t['circlemultiplytext'] = 0x2297;\n t['circleplusdisplay'] = 0x2295;\n t['circleplustext'] = 0x2295;\n t['contintegraldisplay'] = 0x222E;\n t['contintegraltext'] = 0x222E;\n t['coproductdisplay'] = 0x2210;\n t['coproducttext'] = 0x2210;\n t['floorleftBig'] = 0x230A;\n t['floorleftbig'] = 0x230A;\n t['floorleftbigg'] = 0x230A;\n t['floorleftBigg'] = 0x230A;\n t['floorrightbig'] = 0x230B;\n t['floorrightBig'] = 0x230B;\n t['floorrightBigg'] = 0x230B;\n t['floorrightbigg'] = 0x230B;\n t['hatwide'] = 0x0302;\n t['hatwider'] = 0x0302;\n t['hatwidest'] = 0x0302;\n t['intercal'] = 0x1D40;\n t['integraldisplay'] = 0x222B;\n t['integraltext'] = 0x222B;\n t['intersectiondisplay'] = 0x22C2;\n t['intersectiontext'] = 0x22C2;\n t['logicalanddisplay'] = 0x2227;\n t['logicalandtext'] = 0x2227;\n t['logicalordisplay'] = 0x2228;\n t['logicalortext'] = 0x2228;\n t['parenleftBig'] = 0x0028;\n t['parenleftbig'] = 0x0028;\n t['parenleftBigg'] = 0x0028;\n t['parenleftbigg'] = 0x0028;\n t['parenrightBig'] = 0x0029;\n t['parenrightbig'] = 0x0029;\n t['parenrightBigg'] = 0x0029;\n t['parenrightbigg'] = 0x0029;\n t['prime'] = 0x2032;\n t['productdisplay'] = 0x220F;\n t['producttext'] = 0x220F;\n t['radicalbig'] = 0x221A;\n t['radicalBig'] = 0x221A;\n t['radicalBigg'] = 0x221A;\n t['radicalbigg'] = 0x221A;\n t['radicalbt'] = 0x221A;\n t['radicaltp'] = 0x221A;\n t['radicalvertex'] = 0x221A;\n t['slashbig'] = 0x002F;\n t['slashBig'] = 0x002F;\n t['slashBigg'] = 0x002F;\n t['slashbigg'] = 0x002F;\n t['summationdisplay'] = 0x2211;\n t['summationtext'] = 0x2211;\n t['tildewide'] = 0x02DC;\n t['tildewider'] = 0x02DC;\n t['tildewidest'] = 0x02DC;\n t['uniondisplay'] = 0x22C3;\n t['unionmultidisplay'] = 0x228E;\n t['unionmultitext'] = 0x228E;\n t['unionsqdisplay'] = 0x2294;\n t['unionsqtext'] = 0x2294;\n t['uniontext'] = 0x22C3;\n t['vextenddouble'] = 0x2225;\n t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n t['space'] = 0x0020;\n t['a1'] = 0x2701;\n t['a2'] = 0x2702;\n t['a202'] = 0x2703;\n t['a3'] = 0x2704;\n t['a4'] = 0x260E;\n t['a5'] = 0x2706;\n t['a119'] = 0x2707;\n t['a118'] = 0x2708;\n t['a117'] = 0x2709;\n t['a11'] = 0x261B;\n t['a12'] = 0x261E;\n t['a13'] = 0x270C;\n t['a14'] = 0x270D;\n t['a15'] = 0x270E;\n t['a16'] = 0x270F;\n t['a105'] = 0x2710;\n t['a17'] = 0x2711;\n t['a18'] = 0x2712;\n t['a19'] = 0x2713;\n t['a20'] = 0x2714;\n t['a21'] = 0x2715;\n t['a22'] = 0x2716;\n t['a23'] = 0x2717;\n t['a24'] = 0x2718;\n t['a25'] = 0x2719;\n t['a26'] = 0x271A;\n t['a27'] = 0x271B;\n t['a28'] = 0x271C;\n t['a6'] = 0x271D;\n t['a7'] = 0x271E;\n t['a8'] = 0x271F;\n t['a9'] = 0x2720;\n t['a10'] = 0x2721;\n t['a29'] = 0x2722;\n t['a30'] = 0x2723;\n t['a31'] = 0x2724;\n t['a32'] = 0x2725;\n t['a33'] = 0x2726;\n t['a34'] = 0x2727;\n t['a35'] = 0x2605;\n t['a36'] = 0x2729;\n t['a37'] = 0x272A;\n t['a38'] = 0x272B;\n t['a39'] = 0x272C;\n t['a40'] = 0x272D;\n t['a41'] = 0x272E;\n t['a42'] = 0x272F;\n t['a43'] = 0x2730;\n t['a44'] = 0x2731;\n t['a45'] = 0x2732;\n t['a46'] = 0x2733;\n t['a47'] = 0x2734;\n t['a48'] = 0x2735;\n t['a49'] = 0x2736;\n t['a50'] = 0x2737;\n t['a51'] = 0x2738;\n t['a52'] = 0x2739;\n t['a53'] = 0x273A;\n t['a54'] = 0x273B;\n t['a55'] = 0x273C;\n t['a56'] = 0x273D;\n t['a57'] = 0x273E;\n t['a58'] = 0x273F;\n t['a59'] = 0x2740;\n t['a60'] = 0x2741;\n t['a61'] = 0x2742;\n t['a62'] = 0x2743;\n t['a63'] = 0x2744;\n t['a64'] = 0x2745;\n t['a65'] = 0x2746;\n t['a66'] = 0x2747;\n t['a67'] = 0x2748;\n t['a68'] = 0x2749;\n t['a69'] = 0x274A;\n t['a70'] = 0x274B;\n t['a71'] = 0x25CF;\n t['a72'] = 0x274D;\n t['a73'] = 0x25A0;\n t['a74'] = 0x274F;\n t['a203'] = 0x2750;\n t['a75'] = 0x2751;\n t['a204'] = 0x2752;\n t['a76'] = 0x25B2;\n t['a77'] = 0x25BC;\n t['a78'] = 0x25C6;\n t['a79'] = 0x2756;\n t['a81'] = 0x25D7;\n t['a82'] = 0x2758;\n t['a83'] = 0x2759;\n t['a84'] = 0x275A;\n t['a97'] = 0x275B;\n t['a98'] = 0x275C;\n t['a99'] = 0x275D;\n t['a100'] = 0x275E;\n t['a101'] = 0x2761;\n t['a102'] = 0x2762;\n t['a103'] = 0x2763;\n t['a104'] = 0x2764;\n t['a106'] = 0x2765;\n t['a107'] = 0x2766;\n t['a108'] = 0x2767;\n t['a112'] = 0x2663;\n t['a111'] = 0x2666;\n t['a110'] = 0x2665;\n t['a109'] = 0x2660;\n t['a120'] = 0x2460;\n t['a121'] = 0x2461;\n t['a122'] = 0x2462;\n t['a123'] = 0x2463;\n t['a124'] = 0x2464;\n t['a125'] = 0x2465;\n t['a126'] = 0x2466;\n t['a127'] = 0x2467;\n t['a128'] = 0x2468;\n t['a129'] = 0x2469;\n t['a130'] = 0x2776;\n t['a131'] = 0x2777;\n t['a132'] = 0x2778;\n t['a133'] = 0x2779;\n t['a134'] = 0x277A;\n t['a135'] = 0x277B;\n t['a136'] = 0x277C;\n t['a137'] = 0x277D;\n t['a138'] = 0x277E;\n t['a139'] = 0x277F;\n t['a140'] = 0x2780;\n t['a141'] = 0x2781;\n t['a142'] = 0x2782;\n t['a143'] = 0x2783;\n t['a144'] = 0x2784;\n t['a145'] = 0x2785;\n t['a146'] = 0x2786;\n t['a147'] = 0x2787;\n t['a148'] = 0x2788;\n t['a149'] = 0x2789;\n t['a150'] = 0x278A;\n t['a151'] = 0x278B;\n t['a152'] = 0x278C;\n t['a153'] = 0x278D;\n t['a154'] = 0x278E;\n t['a155'] = 0x278F;\n t['a156'] = 0x2790;\n t['a157'] = 0x2791;\n t['a158'] = 0x2792;\n t['a159'] = 0x2793;\n t['a160'] = 0x2794;\n t['a161'] = 0x2192;\n t['a163'] = 0x2194;\n t['a164'] = 0x2195;\n t['a196'] = 0x2798;\n t['a165'] = 0x2799;\n t['a192'] = 0x279A;\n t['a166'] = 0x279B;\n t['a167'] = 0x279C;\n t['a168'] = 0x279D;\n t['a169'] = 0x279E;\n t['a170'] = 0x279F;\n t['a171'] = 0x27A0;\n t['a172'] = 0x27A1;\n t['a173'] = 0x27A2;\n t['a162'] = 0x27A3;\n t['a174'] = 0x27A4;\n t['a175'] = 0x27A5;\n t['a176'] = 0x27A6;\n t['a177'] = 0x27A7;\n t['a178'] = 0x27A8;\n t['a179'] = 0x27A9;\n t['a193'] = 0x27AA;\n t['a180'] = 0x27AB;\n t['a199'] = 0x27AC;\n t['a181'] = 0x27AD;\n t['a200'] = 0x27AE;\n t['a182'] = 0x27AF;\n t['a201'] = 0x27B1;\n t['a183'] = 0x27B2;\n t['a184'] = 0x27B3;\n t['a197'] = 0x27B4;\n t['a185'] = 0x27B5;\n t['a194'] = 0x27B6;\n t['a198'] = 0x27B7;\n t['a186'] = 0x27B8;\n t['a195'] = 0x27B9;\n t['a187'] = 0x27BA;\n t['a188'] = 0x27BB;\n t['a189'] = 0x27BC;\n t['a190'] = 0x27BD;\n t['a191'] = 0x27BE;\n t['a89'] = 0x2768;\n t['a90'] = 0x2769;\n t['a93'] = 0x276A;\n t['a94'] = 0x276B;\n t['a91'] = 0x276C;\n t['a92'] = 0x276D;\n t['a205'] = 0x276E;\n t['a85'] = 0x276F;\n t['a206'] = 0x2770;\n t['a86'] = 0x2771;\n t['a87'] = 0x2772;\n t['a88'] = 0x2773;\n t['a95'] = 0x2774;\n t['a96'] = 0x2775;\n t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePdfManager = __w_pdfjs_require__(33);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MessageHandler = sharedUtil.MessageHandler;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nvar PasswordException = sharedUtil.PasswordException;\nvar UnknownErrorException = sharedUtil.UnknownErrorException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar setVerbosityLevel = sharedUtil.setVerbosityLevel;\nvar isNodeJS = sharedUtil.isNodeJS;\nvar Ref = corePrimitives.Ref;\nvar LocalPdfManager = corePdfManager.LocalPdfManager;\nvar NetworkPdfManager = corePdfManager.NetworkPdfManager;\nvar globalScope = sharedUtil.globalScope;\nvar WorkerTask = function WorkerTaskClosure() {\n function WorkerTask(name) {\n  this.name = name;\n  this.terminated = false;\n  this._capability = createPromiseCapability();\n }\n WorkerTask.prototype = {\n  get finished() {\n   return this._capability.promise;\n  },\n  finish: function () {\n   this._capability.resolve();\n  },\n  terminate: function () {\n   this.terminated = true;\n  },\n  ensureNotTerminated: function () {\n   if (this.terminated) {\n    throw new Error('Worker task was terminated');\n   }\n  }\n };\n return WorkerTask;\n}();\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n function PDFWorkerStream(params, msgHandler) {\n  this._queuedChunks = [];\n  var initialData = params.initialData;\n  if (initialData && initialData.length > 0) {\n   this._queuedChunks.push(initialData);\n  }\n  this._msgHandler = msgHandler;\n  this._isRangeSupported = !params.disableRange;\n  this._isStreamingSupported = !params.disableStream;\n  this._contentLength = params.length;\n  this._fullRequestReader = null;\n  this._rangeReaders = [];\n  msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n  msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n }\n PDFWorkerStream.prototype = {\n  _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n   if (args.begin === undefined) {\n    if (this._fullRequestReader) {\n     this._fullRequestReader._enqueue(args.chunk);\n    } else {\n     this._queuedChunks.push(args.chunk);\n    }\n   } else {\n    var found = this._rangeReaders.some(function (rangeReader) {\n     if (rangeReader._begin !== args.begin) {\n      return false;\n     }\n     rangeReader._enqueue(args.chunk);\n     return true;\n    });\n    assert(found);\n   }\n  },\n  _onProgress: function PDFWorkerStream_onProgress(evt) {\n   if (this._rangeReaders.length > 0) {\n    var firstReader = this._rangeReaders[0];\n    if (firstReader.onProgress) {\n     firstReader.onProgress({ loaded: evt.loaded });\n    }\n   }\n  },\n  _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n   var i = this._rangeReaders.indexOf(reader);\n   if (i >= 0) {\n    this._rangeReaders.splice(i, 1);\n   }\n  },\n  getFullReader: function PDFWorkerStream_getFullReader() {\n   assert(!this._fullRequestReader);\n   var queuedChunks = this._queuedChunks;\n   this._queuedChunks = null;\n   return new PDFWorkerStreamReader(this, queuedChunks);\n  },\n  getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n   var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n   this._msgHandler.send('RequestDataRange', {\n    begin: begin,\n    end: end\n   });\n   this._rangeReaders.push(reader);\n   return reader;\n  },\n  cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n   if (this._fullRequestReader) {\n    this._fullRequestReader.cancel(reason);\n   }\n   var readers = this._rangeReaders.slice(0);\n   readers.forEach(function (rangeReader) {\n    rangeReader.cancel(reason);\n   });\n  }\n };\n function PDFWorkerStreamReader(stream, queuedChunks) {\n  this._stream = stream;\n  this._done = false;\n  this._queuedChunks = queuedChunks || [];\n  this._requests = [];\n  this._headersReady = Promise.resolve();\n  stream._fullRequestReader = this;\n  this.onProgress = null;\n }\n PDFWorkerStreamReader.prototype = {\n  _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length > 0) {\n    var requestCapability = this._requests.shift();\n    requestCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    return;\n   }\n   this._queuedChunks.push(chunk);\n  },\n  get headersReady() {\n   return this._headersReady;\n  },\n  get isRangeSupported() {\n   return this._stream._isRangeSupported;\n  },\n  get isStreamingSupported() {\n   return this._stream._isStreamingSupported;\n  },\n  get contentLength() {\n   return this._stream._contentLength;\n  },\n  read: function PDFWorkerStreamReader_read() {\n   if (this._queuedChunks.length > 0) {\n    var chunk = this._queuedChunks.shift();\n    return Promise.resolve({\n     value: chunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n  }\n };\n function PDFWorkerStreamRangeReader(stream, begin, end) {\n  this._stream = stream;\n  this._begin = begin;\n  this._end = end;\n  this._queuedChunk = null;\n  this._requests = [];\n  this._done = false;\n  this.onProgress = null;\n }\n PDFWorkerStreamRangeReader.prototype = {\n  _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length === 0) {\n    this._queuedChunk = chunk;\n   } else {\n    var requestsCapability = this._requests.shift();\n    requestsCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    this._requests.forEach(function (requestCapability) {\n     requestCapability.resolve({\n      value: undefined,\n      done: true\n     });\n    });\n    this._requests = [];\n   }\n   this._done = true;\n   this._stream._removeRangeReader(this);\n  },\n  get isStreamingSupported() {\n   return false;\n  },\n  read: function PDFWorkerStreamRangeReader_read() {\n   if (this._queuedChunk) {\n    return Promise.resolve({\n     value: this._queuedChunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n   this._stream._removeRangeReader(this);\n  }\n };\n return PDFWorkerStream;\n}();\nvar PDFNetworkStream;\nfunction setPDFNetworkStreamClass(cls) {\n PDFNetworkStream = cls;\n}\nvar WorkerMessageHandler = {\n setup: function wphSetup(handler, port) {\n  var testMessageProcessed = false;\n  handler.on('test', function wphSetupTest(data) {\n   if (testMessageProcessed) {\n    return;\n   }\n   testMessageProcessed = true;\n   if (!(data instanceof Uint8Array)) {\n    handler.send('test', 'main', false);\n    return;\n   }\n   var supportTransfers = data[0] === 255;\n   handler.postMessageTransfers = supportTransfers;\n   var xhr = new XMLHttpRequest();\n   var responseExists = 'response' in xhr;\n   try {\n    xhr.responseType;\n   } catch (e) {\n    responseExists = false;\n   }\n   if (!responseExists) {\n    handler.send('test', false);\n    return;\n   }\n   handler.send('test', {\n    supportTypedArray: true,\n    supportTransfers: supportTransfers\n   });\n  });\n  handler.on('configure', function wphConfigure(data) {\n   setVerbosityLevel(data.verbosity);\n  });\n  handler.on('GetDocRequest', function wphSetupDoc(data) {\n   return WorkerMessageHandler.createDocumentHandler(data, port);\n  });\n },\n createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n  var pdfManager;\n  var terminated = false;\n  var cancelXHRs = null;\n  var WorkerTasks = [];\n  var docId = docParams.docId;\n  var docBaseUrl = docParams.docBaseUrl;\n  var workerHandlerName = docParams.docId + '_worker';\n  var handler = new MessageHandler(workerHandlerName, docId, port);\n  handler.postMessageTransfers = docParams.postMessageTransfers;\n  function ensureNotTerminated() {\n   if (terminated) {\n    throw new Error('Worker was terminated');\n   }\n  }\n  function startWorkerTask(task) {\n   WorkerTasks.push(task);\n  }\n  function finishWorkerTask(task) {\n   task.finish();\n   var i = WorkerTasks.indexOf(task);\n   WorkerTasks.splice(i, 1);\n  }\n  function loadDocument(recoveryMode) {\n   var loadDocumentCapability = createPromiseCapability();\n   var parseSuccess = function parseSuccess() {\n    var numPagesPromise = pdfManager.ensureDoc('numPages');\n    var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n    var encryptedPromise = pdfManager.ensureXRef('encrypt');\n    Promise.all([\n     numPagesPromise,\n     fingerprintPromise,\n     encryptedPromise\n    ]).then(function onDocReady(results) {\n     var doc = {\n      numPages: results[0],\n      fingerprint: results[1],\n      encrypted: !!results[2]\n     };\n     loadDocumentCapability.resolve(doc);\n    }, parseFailure);\n   };\n   var parseFailure = function parseFailure(e) {\n    loadDocumentCapability.reject(e);\n   };\n   pdfManager.ensureDoc('checkHeader', []).then(function () {\n    pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n     pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n    }, parseFailure);\n   }, parseFailure);\n   return loadDocumentCapability.promise;\n  }\n  function getPdfManager(data, evaluatorOptions) {\n   var pdfManagerCapability = createPromiseCapability();\n   var pdfManager;\n   var source = data.source;\n   if (source.data) {\n    try {\n     pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    return pdfManagerCapability.promise;\n   }\n   var pdfStream;\n   try {\n    if (source.chunkedViewerLoading) {\n     pdfStream = new PDFWorkerStream(source, handler);\n    } else {\n     assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n     pdfStream = new PDFNetworkStream(data);\n    }\n   } catch (ex) {\n    pdfManagerCapability.reject(ex);\n    return pdfManagerCapability.promise;\n   }\n   var fullRequest = pdfStream.getFullReader();\n   fullRequest.headersReady.then(function () {\n    if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n     fullRequest.onProgress = function (evt) {\n      handler.send('DocProgress', {\n       loaded: evt.loaded,\n       total: evt.total\n      });\n     };\n    }\n    if (!fullRequest.isRangeSupported) {\n     return;\n    }\n    var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n    pdfManager = new NetworkPdfManager(docId, pdfStream, {\n     msgHandler: handler,\n     url: source.url,\n     password: source.password,\n     length: fullRequest.contentLength,\n     disableAutoFetch: disableAutoFetch,\n     rangeChunkSize: source.rangeChunkSize\n    }, evaluatorOptions, docBaseUrl);\n    pdfManagerCapability.resolve(pdfManager);\n    cancelXHRs = null;\n   }).catch(function (reason) {\n    pdfManagerCapability.reject(reason);\n    cancelXHRs = null;\n   });\n   var cachedChunks = [], loaded = 0;\n   var flushChunks = function () {\n    var pdfFile = arraysToBytes(cachedChunks);\n    if (source.length && pdfFile.length !== source.length) {\n     warn('reported HTTP length is different from actual');\n    }\n    try {\n     pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    cachedChunks = [];\n   };\n   var readPromise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      ensureNotTerminated();\n      if (chunk.done) {\n       if (!pdfManager) {\n        flushChunks();\n       }\n       cancelXHRs = null;\n       return;\n      }\n      var data = chunk.value;\n      loaded += arrayByteLength(data);\n      if (!fullRequest.isStreamingSupported) {\n       handler.send('DocProgress', {\n        loaded: loaded,\n        total: Math.max(loaded, fullRequest.contentLength || 0)\n       });\n      }\n      if (pdfManager) {\n       pdfManager.sendProgressiveData(data);\n      } else {\n       cachedChunks.push(data);\n      }\n      fullRequest.read().then(readChunk, reject);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    fullRequest.read().then(readChunk, reject);\n   });\n   readPromise.catch(function (e) {\n    pdfManagerCapability.reject(e);\n    cancelXHRs = null;\n   });\n   cancelXHRs = function () {\n    pdfStream.cancelAllRequests('abort');\n   };\n   return pdfManagerCapability.promise;\n  }\n  function setupDoc(data) {\n   function onSuccess(doc) {\n    ensureNotTerminated();\n    handler.send('GetDoc', { pdfInfo: doc });\n   }\n   function onFailure(e) {\n    if (e instanceof PasswordException) {\n     var task = new WorkerTask('PasswordException: response ' + e.code);\n     startWorkerTask(task);\n     handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n      finishWorkerTask(task);\n      pdfManager.updatePassword(data.password);\n      pdfManagerReady();\n     }).catch(function (ex) {\n      finishWorkerTask(task);\n      handler.send('PasswordException', ex);\n     }.bind(null, e));\n    } else if (e instanceof InvalidPDFException) {\n     handler.send('InvalidPDF', e);\n    } else if (e instanceof MissingPDFException) {\n     handler.send('MissingPDF', e);\n    } else if (e instanceof UnexpectedResponseException) {\n     handler.send('UnexpectedResponse', e);\n    } else {\n     handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n    }\n   }\n   function pdfManagerReady() {\n    ensureNotTerminated();\n    loadDocument(false).then(onSuccess, function loadFailure(ex) {\n     ensureNotTerminated();\n     if (!(ex instanceof XRefParseException)) {\n      onFailure(ex);\n      return;\n     }\n     pdfManager.requestLoadedStream();\n     pdfManager.onLoadedStream().then(function () {\n      ensureNotTerminated();\n      loadDocument(true).then(onSuccess, onFailure);\n     });\n    }, onFailure);\n   }\n   ensureNotTerminated();\n   var evaluatorOptions = {\n    forceDataSchema: data.disableCreateObjectURL,\n    maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n    disableFontFace: data.disableFontFace,\n    disableNativeImageDecoder: data.disableNativeImageDecoder\n   };\n   getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n    if (terminated) {\n     newPdfManager.terminate();\n     throw new Error('Worker was terminated');\n    }\n    pdfManager = newPdfManager;\n    handler.send('PDFManagerReady', null);\n    pdfManager.onLoadedStream().then(function (stream) {\n     handler.send('DataLoaded', { length: stream.bytes.byteLength });\n    });\n   }).then(pdfManagerReady, onFailure);\n  }\n  handler.on('GetPage', function wphSetupGetPage(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    var rotatePromise = pdfManager.ensure(page, 'rotate');\n    var refPromise = pdfManager.ensure(page, 'ref');\n    var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n    var viewPromise = pdfManager.ensure(page, 'view');\n    return Promise.all([\n     rotatePromise,\n     refPromise,\n     userUnitPromise,\n     viewPromise\n    ]).then(function (results) {\n     return {\n      rotate: results[0],\n      ref: results[1],\n      userUnit: results[2],\n      view: results[3]\n     };\n    });\n   });\n  });\n  handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n   var ref = new Ref(data.ref.num, data.ref.gen);\n   var catalog = pdfManager.pdfDocument.catalog;\n   return catalog.getPageIndex(ref);\n  });\n  handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n   return pdfManager.ensureCatalog('destinations');\n  });\n  handler.on('GetDestination', function wphSetupGetDestination(data) {\n   return pdfManager.ensureCatalog('getDestination', [data.id]);\n  });\n  handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n   return pdfManager.ensureCatalog('pageLabels');\n  });\n  handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n   return pdfManager.ensureCatalog('attachments');\n  });\n  handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n   return pdfManager.ensureCatalog('javaScript');\n  });\n  handler.on('GetOutline', function wphSetupGetOutline(data) {\n   return pdfManager.ensureCatalog('documentOutline');\n  });\n  handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n   return Promise.all([\n    pdfManager.ensureDoc('documentInfo'),\n    pdfManager.ensureCatalog('metadata')\n   ]);\n  });\n  handler.on('GetData', function wphSetupGetData(data) {\n   pdfManager.requestLoadedStream();\n   return pdfManager.onLoadedStream().then(function (stream) {\n    return stream.bytes;\n   });\n  });\n  handler.on('GetStats', function wphSetupGetStats(data) {\n   return pdfManager.pdfDocument.xref.stats;\n  });\n  handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n   });\n  });\n  handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n   var pageIndex = data.pageIndex;\n   pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n     finishWorkerTask(task);\n     info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n    }, function (e) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n     var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n     var wrappedException;\n     if (typeof e === 'string') {\n      wrappedException = {\n       message: e,\n       stack: minimumStackMessage\n      };\n     } else if (typeof e === 'object') {\n      wrappedException = {\n       message: e.message || e.toString(),\n       stack: e.stack || minimumStackMessage\n      };\n     } else {\n      wrappedException = {\n       message: 'Unknown exception type: ' + typeof e,\n       stack: minimumStackMessage\n      };\n     }\n     handler.send('PageError', {\n      pageNum: pageNum,\n      error: wrappedException,\n      intent: data.intent\n     });\n    });\n   });\n  }, this);\n  handler.on('GetTextContent', function wphExtractText(data) {\n   var pageIndex = data.pageIndex;\n   var normalizeWhitespace = data.normalizeWhitespace;\n   var combineTextItems = data.combineTextItems;\n   return pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n     finishWorkerTask(task);\n     info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n     return textContent;\n    }, function (reason) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     throw reason;\n    });\n   });\n  });\n  handler.on('Cleanup', function wphCleanup(data) {\n   return pdfManager.cleanup();\n  });\n  handler.on('Terminate', function wphTerminate(data) {\n   terminated = true;\n   if (pdfManager) {\n    pdfManager.terminate();\n    pdfManager = null;\n   }\n   if (cancelXHRs) {\n    cancelXHRs();\n   }\n   var waitOn = [];\n   WorkerTasks.forEach(function (task) {\n    waitOn.push(task.finished);\n    task.terminate();\n   });\n   return Promise.all(waitOn).then(function () {\n    handler.destroy();\n    handler = null;\n   });\n  });\n  handler.on('Ready', function wphReady(data) {\n   setupDoc(docParams);\n   docParams = null;\n  });\n  return workerHandlerName;\n }\n};\nfunction initializeWorker() {\n if (!('console' in globalScope)) {\n  var consoleTimer = {};\n  var workerConsole = {\n   log: function log() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_log',\n     data: args\n    });\n   },\n   error: function error() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_error',\n     data: args\n    });\n    throw 'pdf.js execution error';\n   },\n   time: function time(name) {\n    consoleTimer[name] = Date.now();\n   },\n   timeEnd: function timeEnd(name) {\n    var time = consoleTimer[name];\n    if (!time) {\n     error('Unknown timer name ' + name);\n    }\n    this.log('Timer:', name, Date.now() - time);\n   }\n  };\n  globalScope.console = workerConsole;\n }\n var handler = new MessageHandler('worker', 'main', self);\n WorkerMessageHandler.setup(handler, self);\n handler.send('ready', null);\n}\nif (typeof window === 'undefined' && !isNodeJS()) {\n initializeWorker();\n}\nexports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n var QeTable = [\n  {\n   qe: 0x5601,\n   nmps: 1,\n   nlps: 1,\n   switchFlag: 1\n  },\n  {\n   qe: 0x3401,\n   nmps: 2,\n   nlps: 6,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 3,\n   nlps: 9,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 4,\n   nlps: 12,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 5,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 38,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 7,\n   nlps: 6,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 8,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 9,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 10,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 11,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 12,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 13,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 29,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 15,\n   nlps: 14,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 16,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5101,\n   nmps: 17,\n   nlps: 15,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 18,\n   nlps: 16,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 19,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3401,\n   nmps: 20,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 21,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2801,\n   nmps: 22,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 23,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2201,\n   nmps: 24,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 25,\n   nlps: 22,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 26,\n   nlps: 23,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 27,\n   nlps: 24,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1401,\n   nmps: 28,\n   nlps: 25,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1201,\n   nmps: 29,\n   nlps: 26,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1101,\n   nmps: 30,\n   nlps: 27,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 31,\n   nlps: 28,\n   switchFlag: 0\n  },\n  {\n   qe: 0x09C1,\n   nmps: 32,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x08A1,\n   nmps: 33,\n   nlps: 30,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 34,\n   nlps: 31,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0441,\n   nmps: 35,\n   nlps: 32,\n   switchFlag: 0\n  },\n  {\n   qe: 0x02A1,\n   nmps: 36,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 37,\n   nlps: 34,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0141,\n   nmps: 38,\n   nlps: 35,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0111,\n   nmps: 39,\n   nlps: 36,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0085,\n   nmps: 40,\n   nlps: 37,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0049,\n   nmps: 41,\n   nlps: 38,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0025,\n   nmps: 42,\n   nlps: 39,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0015,\n   nmps: 43,\n   nlps: 40,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0009,\n   nmps: 44,\n   nlps: 41,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0005,\n   nmps: 45,\n   nlps: 42,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0001,\n   nmps: 45,\n   nlps: 43,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 46,\n   nlps: 46,\n   switchFlag: 0\n  }\n ];\n function ArithmeticDecoder(data, start, end) {\n  this.data = data;\n  this.bp = start;\n  this.dataEnd = end;\n  this.chigh = data[start];\n  this.clow = 0;\n  this.byteIn();\n  this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n  this.clow = this.clow << 7 & 0xFFFF;\n  this.ct -= 7;\n  this.a = 0x8000;\n }\n ArithmeticDecoder.prototype = {\n  byteIn: function ArithmeticDecoder_byteIn() {\n   var data = this.data;\n   var bp = this.bp;\n   if (data[bp] === 0xFF) {\n    var b1 = data[bp + 1];\n    if (b1 > 0x8F) {\n     this.clow += 0xFF00;\n     this.ct = 8;\n    } else {\n     bp++;\n     this.clow += data[bp] << 9;\n     this.ct = 7;\n     this.bp = bp;\n    }\n   } else {\n    bp++;\n    this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n    this.ct = 8;\n    this.bp = bp;\n   }\n   if (this.clow > 0xFFFF) {\n    this.chigh += this.clow >> 16;\n    this.clow &= 0xFFFF;\n   }\n  },\n  readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n   var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n   var qeTableIcx = QeTable[cx_index];\n   var qeIcx = qeTableIcx.qe;\n   var d;\n   var a = this.a - qeIcx;\n   if (this.chigh < qeIcx) {\n    if (a < qeIcx) {\n     a = qeIcx;\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    } else {\n     a = qeIcx;\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    }\n   } else {\n    this.chigh -= qeIcx;\n    if ((a & 0x8000) !== 0) {\n     this.a = a;\n     return cx_mps;\n    }\n    if (a < qeIcx) {\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    } else {\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    }\n   }\n   do {\n    if (this.ct === 0) {\n     this.byteIn();\n    }\n    a <<= 1;\n    this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n    this.clow = this.clow << 1 & 0xFFFF;\n    this.ct--;\n   } while ((a & 0x8000) === 0);\n   this.a = a;\n   contexts[pos] = cx_index << 1 | cx_mps;\n   return d;\n  }\n };\n return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreCharsets = __w_pdfjs_require__(22);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar isArray = sharedUtil.isArray;\nvar Util = sharedUtil.Util;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar assert = sharedUtil.assert;\nvar ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\nvar ExpertCharset = coreCharsets.ExpertCharset;\nvar ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar ExpertEncoding = coreEncodings.ExpertEncoding;\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall',\n '001.000',\n '001.001',\n '001.002',\n '001.003',\n 'Black',\n 'Bold',\n 'Book',\n 'Light',\n 'Medium',\n 'Regular',\n 'Roman',\n 'Semibold'\n];\nvar CFFParser = function CFFParserClosure() {\n var CharstringValidationData = [\n  null,\n  {\n   id: 'hstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  null,\n  {\n   id: 'vstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'vmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'rlineto',\n   min: 2,\n   resetStack: true\n  },\n  {\n   id: 'hlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'vlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'rrcurveto',\n   min: 6,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'return',\n   min: 0,\n   undefStack: true\n  },\n  null,\n  null,\n  {\n   id: 'endchar',\n   min: 0,\n   stackClearing: true\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'hintmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'cntrmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'rmoveto',\n   min: 2,\n   stackClearing: true\n  },\n  {\n   id: 'hmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'vstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'rcurveline',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'rlinecurve',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'vvcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callgsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'vhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hvcurveto',\n   min: 4,\n   resetStack: true\n  }\n ];\n var CharstringValidationData12 = [\n  null,\n  null,\n  null,\n  {\n   id: 'and',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'or',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'not',\n   min: 1,\n   stackDelta: 0\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'abs',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'add',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] + stack[index - 1];\n   }\n  },\n  {\n   id: 'sub',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] - stack[index - 1];\n   }\n  },\n  {\n   id: 'div',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] / stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'neg',\n   min: 1,\n   stackDelta: 0,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 1] = -stack[index - 1];\n   }\n  },\n  {\n   id: 'eq',\n   min: 2,\n   stackDelta: -1\n  },\n  null,\n  null,\n  {\n   id: 'drop',\n   min: 1,\n   stackDelta: -1\n  },\n  null,\n  {\n   id: 'put',\n   min: 2,\n   stackDelta: -2\n  },\n  {\n   id: 'get',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'ifelse',\n   min: 4,\n   stackDelta: -3\n  },\n  {\n   id: 'random',\n   min: 0,\n   stackDelta: 1\n  },\n  {\n   id: 'mul',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] * stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'sqrt',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'dup',\n   min: 1,\n   stackDelta: 1\n  },\n  {\n   id: 'exch',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'index',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'roll',\n   min: 3,\n   stackDelta: -2\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hflex',\n   min: 7,\n   resetStack: true\n  },\n  {\n   id: 'flex',\n   min: 13,\n   resetStack: true\n  },\n  {\n   id: 'hflex1',\n   min: 9,\n   resetStack: true\n  },\n  {\n   id: 'flex1',\n   min: 11,\n   resetStack: true\n  }\n ];\n function CFFParser(file, properties, seacAnalysisEnabled) {\n  this.bytes = file.getBytes();\n  this.properties = properties;\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n }\n CFFParser.prototype = {\n  parse: function CFFParser_parse() {\n   var properties = this.properties;\n   var cff = new CFF();\n   this.cff = cff;\n   var header = this.parseHeader();\n   var nameIndex = this.parseIndex(header.endPos);\n   var topDictIndex = this.parseIndex(nameIndex.endPos);\n   var stringIndex = this.parseIndex(topDictIndex.endPos);\n   var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n   var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n   var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n   cff.header = header.obj;\n   cff.names = this.parseNameIndex(nameIndex.obj);\n   cff.strings = this.parseStringIndex(stringIndex.obj);\n   cff.topDict = topDict;\n   cff.globalSubrIndex = globalSubrIndex.obj;\n   this.parsePrivateDict(cff.topDict);\n   cff.isCIDFont = topDict.hasName('ROS');\n   var charStringOffset = topDict.getByName('CharStrings');\n   var charStringIndex = this.parseIndex(charStringOffset).obj;\n   var fontMatrix = topDict.getByName('FontMatrix');\n   if (fontMatrix) {\n    properties.fontMatrix = fontMatrix;\n   }\n   var fontBBox = topDict.getByName('FontBBox');\n   if (fontBBox) {\n    properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n    properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n    properties.ascentScaled = true;\n   }\n   var charset, encoding;\n   if (cff.isCIDFont) {\n    var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n    for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n     var dictRaw = fdArrayIndex.get(i);\n     var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n     this.parsePrivateDict(fontDict);\n     cff.fdArray.push(fontDict);\n    }\n    encoding = null;\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n    cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n   } else {\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n    encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n   }\n   cff.charset = charset;\n   cff.encoding = encoding;\n   var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n   cff.charStrings = charStringsAndSeacs.charStrings;\n   cff.seacs = charStringsAndSeacs.seacs;\n   cff.widths = charStringsAndSeacs.widths;\n   return cff;\n  },\n  parseHeader: function CFFParser_parseHeader() {\n   var bytes = this.bytes;\n   var bytesLength = bytes.length;\n   var offset = 0;\n   while (offset < bytesLength && bytes[offset] !== 1) {\n    ++offset;\n   }\n   if (offset >= bytesLength) {\n    error('Invalid CFF header');\n   } else if (offset !== 0) {\n    info('cff data is shifted');\n    bytes = bytes.subarray(offset);\n    this.bytes = bytes;\n   }\n   var major = bytes[0];\n   var minor = bytes[1];\n   var hdrSize = bytes[2];\n   var offSize = bytes[3];\n   var header = new CFFHeader(major, minor, hdrSize, offSize);\n   return {\n    obj: header,\n    endPos: hdrSize\n   };\n  },\n  parseDict: function CFFParser_parseDict(dict) {\n   var pos = 0;\n   function parseOperand() {\n    var value = dict[pos++];\n    if (value === 30) {\n     return parseFloatOperand();\n    } else if (value === 28) {\n     value = dict[pos++];\n     value = (value << 24 | dict[pos++] << 16) >> 16;\n     return value;\n    } else if (value === 29) {\n     value = dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     return value;\n    } else if (value >= 32 && value <= 246) {\n     return value - 139;\n    } else if (value >= 247 && value <= 250) {\n     return (value - 247) * 256 + dict[pos++] + 108;\n    } else if (value >= 251 && value <= 254) {\n     return -((value - 251) * 256) - dict[pos++] - 108;\n    }\n    warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n    return NaN;\n   }\n   function parseFloatOperand() {\n    var str = '';\n    var eof = 15;\n    var lookup = [\n     '0',\n     '1',\n     '2',\n     '3',\n     '4',\n     '5',\n     '6',\n     '7',\n     '8',\n     '9',\n     '.',\n     'E',\n     'E-',\n     null,\n     '-'\n    ];\n    var length = dict.length;\n    while (pos < length) {\n     var b = dict[pos++];\n     var b1 = b >> 4;\n     var b2 = b & 15;\n     if (b1 === eof) {\n      break;\n     }\n     str += lookup[b1];\n     if (b2 === eof) {\n      break;\n     }\n     str += lookup[b2];\n    }\n    return parseFloat(str);\n   }\n   var operands = [];\n   var entries = [];\n   pos = 0;\n   var end = dict.length;\n   while (pos < end) {\n    var b = dict[pos];\n    if (b <= 21) {\n     if (b === 12) {\n      b = b << 8 | dict[++pos];\n     }\n     entries.push([\n      b,\n      operands\n     ]);\n     operands = [];\n     ++pos;\n    } else {\n     operands.push(parseOperand());\n    }\n   }\n   return entries;\n  },\n  parseIndex: function CFFParser_parseIndex(pos) {\n   var cffIndex = new CFFIndex();\n   var bytes = this.bytes;\n   var count = bytes[pos++] << 8 | bytes[pos++];\n   var offsets = [];\n   var end = pos;\n   var i, ii;\n   if (count !== 0) {\n    var offsetSize = bytes[pos++];\n    var startPos = pos + (count + 1) * offsetSize - 1;\n    for (i = 0, ii = count + 1; i < ii; ++i) {\n     var offset = 0;\n     for (var j = 0; j < offsetSize; ++j) {\n      offset <<= 8;\n      offset += bytes[pos++];\n     }\n     offsets.push(startPos + offset);\n    }\n    end = offsets[count];\n   }\n   for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n    var offsetStart = offsets[i];\n    var offsetEnd = offsets[i + 1];\n    cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n   }\n   return {\n    obj: cffIndex,\n    endPos: end\n   };\n  },\n  parseNameIndex: function CFFParser_parseNameIndex(index) {\n   var names = [];\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var name = index.get(i);\n    var length = Math.min(name.length, 127);\n    var data = [];\n    for (var j = 0; j < length; ++j) {\n     var c = name[j];\n     if (j === 0 && c === 0) {\n      data[j] = c;\n      continue;\n     }\n     if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35) {\n      data[j] = 95;\n      continue;\n     }\n     data[j] = c;\n    }\n    names.push(bytesToString(data));\n   }\n   return names;\n  },\n  parseStringIndex: function CFFParser_parseStringIndex(index) {\n   var strings = new CFFStrings();\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var data = index.get(i);\n    strings.add(bytesToString(data));\n   }\n   return strings;\n  },\n  createDict: function CFFParser_createDict(Type, dict, strings) {\n   var cffDict = new Type(strings);\n   for (var i = 0, ii = dict.length; i < ii; ++i) {\n    var pair = dict[i];\n    var key = pair[0];\n    var value = pair[1];\n    cffDict.setByKey(key, value);\n   }\n   return cffDict;\n  },\n  parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n   if (state.callDepth > MAX_SUBR_NESTING) {\n    return false;\n   }\n   var stackSize = state.stackSize;\n   var stack = state.stack;\n   var length = data.length;\n   for (var j = 0; j < length;) {\n    var value = data[j++];\n    var validationCommand = null;\n    if (value === 12) {\n     var q = data[j++];\n     if (q === 0) {\n      data[j - 2] = 139;\n      data[j - 1] = 22;\n      stackSize = 0;\n     } else {\n      validationCommand = CharstringValidationData12[q];\n     }\n    } else if (value === 28) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n     j += 2;\n     stackSize++;\n    } else if (value === 14) {\n     if (stackSize >= 4) {\n      stackSize -= 4;\n      if (this.seacAnalysisEnabled) {\n       state.seac = stack.slice(stackSize, stackSize + 4);\n       return false;\n      }\n     }\n     validationCommand = CharstringValidationData[value];\n    } else if (value >= 32 && value <= 246) {\n     stack[stackSize] = value - 139;\n     stackSize++;\n    } else if (value >= 247 && value <= 254) {\n     stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n     j++;\n     stackSize++;\n    } else if (value === 255) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n     j += 4;\n     stackSize++;\n    } else if (value === 19 || value === 20) {\n     state.hints += stackSize >> 1;\n     j += state.hints + 7 >> 3;\n     stackSize %= 2;\n     validationCommand = CharstringValidationData[value];\n    } else if (value === 10 || value === 29) {\n     var subrsIndex;\n     if (value === 10) {\n      subrsIndex = localSubrIndex;\n     } else {\n      subrsIndex = globalSubrIndex;\n     }\n     if (!subrsIndex) {\n      validationCommand = CharstringValidationData[value];\n      warn('Missing subrsIndex for ' + validationCommand.id);\n      return false;\n     }\n     var bias = 32768;\n     if (subrsIndex.count < 1240) {\n      bias = 107;\n     } else if (subrsIndex.count < 33900) {\n      bias = 1131;\n     }\n     var subrNumber = stack[--stackSize] + bias;\n     if (subrNumber < 0 || subrNumber >= subrsIndex.count) {\n      validationCommand = CharstringValidationData[value];\n      warn('Out of bounds subrIndex for ' + validationCommand.id);\n      return false;\n     }\n     state.stackSize = stackSize;\n     state.callDepth++;\n     var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n     if (!valid) {\n      return false;\n     }\n     state.callDepth--;\n     stackSize = state.stackSize;\n     continue;\n    } else if (value === 11) {\n     state.stackSize = stackSize;\n     return true;\n    } else {\n     validationCommand = CharstringValidationData[value];\n    }\n    if (validationCommand) {\n     if (validationCommand.stem) {\n      state.hints += stackSize >> 1;\n     }\n     if ('min' in validationCommand) {\n      if (!state.undefStack && stackSize < validationCommand.min) {\n       warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n       return false;\n      }\n     }\n     if (state.firstStackClearing && validationCommand.stackClearing) {\n      state.firstStackClearing = false;\n      stackSize -= validationCommand.min;\n      if (stackSize >= 2 && validationCommand.stem) {\n       stackSize %= 2;\n      } else if (stackSize > 1) {\n       warn('Found too many parameters for stack-clearing command');\n      }\n      if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n       state.width = stack[stackSize - 1];\n      }\n     }\n     if ('stackDelta' in validationCommand) {\n      if ('stackFn' in validationCommand) {\n       validationCommand.stackFn(stack, stackSize);\n      }\n      stackSize += validationCommand.stackDelta;\n     } else if (validationCommand.stackClearing) {\n      stackSize = 0;\n     } else if (validationCommand.resetStack) {\n      stackSize = 0;\n      state.undefStack = false;\n     } else if (validationCommand.undefStack) {\n      stackSize = 0;\n      state.undefStack = true;\n      state.firstStackClearing = false;\n     }\n    }\n   }\n   state.stackSize = stackSize;\n   return true;\n  },\n  parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n   var seacs = [];\n   var widths = [];\n   var count = charStrings.count;\n   for (var i = 0; i < count; i++) {\n    var charstring = charStrings.get(i);\n    var state = {\n     callDepth: 0,\n     stackSize: 0,\n     stack: [],\n     undefStack: true,\n     hints: 0,\n     firstStackClearing: true,\n     seac: null,\n     width: null\n    };\n    var valid = true;\n    var localSubrToUse = null;\n    if (fdSelect && fdArray.length) {\n     var fdIndex = fdSelect.getFDIndex(i);\n     if (fdIndex === -1) {\n      warn('Glyph index is not in fd select.');\n      valid = false;\n     }\n     if (fdIndex >= fdArray.length) {\n      warn('Invalid fd index for glyph index.');\n      valid = false;\n     }\n     if (valid) {\n      localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n     }\n    } else if (localSubrIndex) {\n     localSubrToUse = localSubrIndex;\n    }\n    if (valid) {\n     valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n    }\n    if (state.width !== null) {\n     widths[i] = state.width;\n    }\n    if (state.seac !== null) {\n     seacs[i] = state.seac;\n    }\n    if (!valid) {\n     charStrings.set(i, new Uint8Array([14]));\n    }\n   }\n   return {\n    charStrings: charStrings,\n    seacs: seacs,\n    widths: widths\n   };\n  },\n  emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n   var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n   parentDict.setByKey(18, [\n    0,\n    0\n   ]);\n   parentDict.privateDict = privateDict;\n  },\n  parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n   if (!parentDict.hasName('Private')) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateOffset = parentDict.getByName('Private');\n   if (!isArray(privateOffset) || privateOffset.length !== 2) {\n    parentDict.removeByName('Private');\n    return;\n   }\n   var size = privateOffset[0];\n   var offset = privateOffset[1];\n   if (size === 0 || offset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateDictEnd = offset + size;\n   var dictData = this.bytes.subarray(offset, privateDictEnd);\n   var dict = this.parseDict(dictData);\n   var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n   parentDict.privateDict = privateDict;\n   if (!privateDict.getByName('Subrs')) {\n    return;\n   }\n   var subrsOffset = privateDict.getByName('Subrs');\n   var relativeOffset = offset + subrsOffset;\n   if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var subrsIndex = this.parseIndex(relativeOffset);\n   privateDict.subrsIndex = subrsIndex.obj;\n  },\n  parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n   if (pos === 0) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n   } else if (pos === 1) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n   } else if (pos === 2) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n   }\n   var bytes = this.bytes;\n   var start = pos;\n   var format = bytes[pos++];\n   var charset = ['.notdef'];\n   var id, count, i;\n   length -= 1;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; i++) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     charset.push(cid ? id : strings.get(id));\n    }\n    break;\n   case 1:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   case 2:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++] << 8 | bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   default:\n    error('Unknown charset format');\n   }\n   var end = pos;\n   var raw = bytes.subarray(start, end);\n   return new CFFCharset(false, format, charset, raw);\n  },\n  parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n   var encoding = Object.create(null);\n   var bytes = this.bytes;\n   var predefined = false;\n   var format, i, ii;\n   var raw = null;\n   function readSupplement() {\n    var supplementsCount = bytes[pos++];\n    for (i = 0; i < supplementsCount; i++) {\n     var code = bytes[pos++];\n     var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n     encoding[code] = charset.indexOf(strings.get(sid));\n    }\n   }\n   if (pos === 0 || pos === 1) {\n    predefined = true;\n    format = pos;\n    var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n    for (i = 0, ii = charset.length; i < ii; i++) {\n     var index = baseEncoding.indexOf(charset[i]);\n     if (index !== -1) {\n      encoding[index] = i;\n     }\n    }\n   } else {\n    var dataStart = pos;\n    format = bytes[pos++];\n    switch (format & 0x7f) {\n    case 0:\n     var glyphsCount = bytes[pos++];\n     for (i = 1; i <= glyphsCount; i++) {\n      encoding[bytes[pos++]] = i;\n     }\n     break;\n    case 1:\n     var rangesCount = bytes[pos++];\n     var gid = 1;\n     for (i = 0; i < rangesCount; i++) {\n      var start = bytes[pos++];\n      var left = bytes[pos++];\n      for (var j = start; j <= start + left; j++) {\n       encoding[j] = gid++;\n      }\n     }\n     break;\n    default:\n     error('Unknown encoding format: ' + format + ' in CFF');\n     break;\n    }\n    var dataEnd = pos;\n    if (format & 0x80) {\n     bytes[dataStart] &= 0x7f;\n     readSupplement();\n    }\n    raw = bytes.subarray(dataStart, dataEnd);\n   }\n   format = format & 0x7f;\n   return new CFFEncoding(predefined, format, encoding, raw);\n  },\n  parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n   var start = pos;\n   var bytes = this.bytes;\n   var format = bytes[pos++];\n   var fdSelect = [], rawBytes;\n   var i, invalidFirstGID = false;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; ++i) {\n     var id = bytes[pos++];\n     fdSelect.push(id);\n    }\n    rawBytes = bytes.subarray(start, pos);\n    break;\n   case 3:\n    var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n    for (i = 0; i < rangesCount; ++i) {\n     var first = bytes[pos++] << 8 | bytes[pos++];\n     if (i === 0 && first !== 0) {\n      warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n      invalidFirstGID = true;\n      first = 0;\n     }\n     var fdIndex = bytes[pos++];\n     var next = bytes[pos] << 8 | bytes[pos + 1];\n     for (var j = first; j < next; ++j) {\n      fdSelect.push(fdIndex);\n     }\n    }\n    pos += 2;\n    rawBytes = bytes.subarray(start, pos);\n    if (invalidFirstGID) {\n     rawBytes[3] = rawBytes[4] = 0;\n    }\n    break;\n   default:\n    error('parseFDSelect: Unknown format \"' + format + '\".');\n    break;\n   }\n   assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n   return new CFFFDSelect(fdSelect, rawBytes);\n  }\n };\n return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n function CFF() {\n  this.header = null;\n  this.names = [];\n  this.topDict = null;\n  this.strings = new CFFStrings();\n  this.globalSubrIndex = null;\n  this.encoding = null;\n  this.charset = null;\n  this.charStrings = null;\n  this.fdArray = [];\n  this.fdSelect = null;\n  this.isCIDFont = false;\n }\n return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n function CFFHeader(major, minor, hdrSize, offSize) {\n  this.major = major;\n  this.minor = minor;\n  this.hdrSize = hdrSize;\n  this.offSize = offSize;\n }\n return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n function CFFStrings() {\n  this.strings = [];\n }\n CFFStrings.prototype = {\n  get: function CFFStrings_get(index) {\n   if (index >= 0 && index <= 390) {\n    return CFFStandardStrings[index];\n   }\n   if (index - 391 <= this.strings.length) {\n    return this.strings[index - 391];\n   }\n   return CFFStandardStrings[0];\n  },\n  add: function CFFStrings_add(value) {\n   this.strings.push(value);\n  },\n  get count() {\n   return this.strings.length;\n  }\n };\n return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n function CFFIndex() {\n  this.objects = [];\n  this.length = 0;\n }\n CFFIndex.prototype = {\n  add: function CFFIndex_add(data) {\n   this.length += data.length;\n   this.objects.push(data);\n  },\n  set: function CFFIndex_set(index, data) {\n   this.length += data.length - this.objects[index].length;\n   this.objects[index] = data;\n  },\n  get: function CFFIndex_get(index) {\n   return this.objects[index];\n  },\n  get count() {\n   return this.objects.length;\n  }\n };\n return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n function CFFDict(tables, strings) {\n  this.keyToNameMap = tables.keyToNameMap;\n  this.nameToKeyMap = tables.nameToKeyMap;\n  this.defaults = tables.defaults;\n  this.types = tables.types;\n  this.opcodes = tables.opcodes;\n  this.order = tables.order;\n  this.strings = strings;\n  this.values = Object.create(null);\n }\n CFFDict.prototype = {\n  setByKey: function CFFDict_setByKey(key, value) {\n   if (!(key in this.keyToNameMap)) {\n    return false;\n   }\n   var valueLength = value.length;\n   if (valueLength === 0) {\n    return true;\n   }\n   for (var i = 0; i < valueLength; i++) {\n    if (isNaN(value[i])) {\n     warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n     return true;\n    }\n   }\n   var type = this.types[key];\n   if (type === 'num' || type === 'sid' || type === 'offset') {\n    value = value[0];\n   }\n   this.values[key] = value;\n   return true;\n  },\n  setByName: function CFFDict_setByName(name, value) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   this.values[this.nameToKeyMap[name]] = value;\n  },\n  hasName: function CFFDict_hasName(name) {\n   return this.nameToKeyMap[name] in this.values;\n  },\n  getByName: function CFFDict_getByName(name) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   var key = this.nameToKeyMap[name];\n   if (!(key in this.values)) {\n    return this.defaults[key];\n   }\n   return this.values[key];\n  },\n  removeByName: function CFFDict_removeByName(name) {\n   delete this.values[this.nameToKeyMap[name]];\n  }\n };\n CFFDict.createTables = function CFFDict_createTables(layout) {\n  var tables = {\n   keyToNameMap: {},\n   nameToKeyMap: {},\n   defaults: {},\n   types: {},\n   opcodes: {},\n   order: []\n  };\n  for (var i = 0, ii = layout.length; i < ii; ++i) {\n   var entry = layout[i];\n   var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n   tables.keyToNameMap[key] = entry[1];\n   tables.nameToKeyMap[entry[1]] = key;\n   tables.types[key] = entry[2];\n   tables.defaults[key] = entry[3];\n   tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n   tables.order.push(key);\n  }\n  return tables;\n };\n return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n var layout = [\n  [\n   [\n    12,\n    30\n   ],\n   'ROS',\n   [\n    'sid',\n    'sid',\n    'num'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    20\n   ],\n   'SyntheticBase',\n   'num',\n   null\n  ],\n  [\n   0,\n   'version',\n   'sid',\n   null\n  ],\n  [\n   1,\n   'Notice',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    0\n   ],\n   'Copyright',\n   'sid',\n   null\n  ],\n  [\n   2,\n   'FullName',\n   'sid',\n   null\n  ],\n  [\n   3,\n   'FamilyName',\n   'sid',\n   null\n  ],\n  [\n   4,\n   'Weight',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    1\n   ],\n   'isFixedPitch',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    2\n   ],\n   'ItalicAngle',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    3\n   ],\n   'UnderlinePosition',\n   'num',\n   -100\n  ],\n  [\n   [\n    12,\n    4\n   ],\n   'UnderlineThickness',\n   'num',\n   50\n  ],\n  [\n   [\n    12,\n    5\n   ],\n   'PaintType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    6\n   ],\n   'CharstringType',\n   'num',\n   2\n  ],\n  [\n   [\n    12,\n    7\n   ],\n   'FontMatrix',\n   [\n    'num',\n    'num',\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0.001,\n    0,\n    0,\n    0.001,\n    0,\n    0\n   ]\n  ],\n  [\n   13,\n   'UniqueID',\n   'num',\n   null\n  ],\n  [\n   5,\n   'FontBBox',\n   [\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0,\n    0,\n    0,\n    0\n   ]\n  ],\n  [\n   [\n    12,\n    8\n   ],\n   'StrokeWidth',\n   'num',\n   0\n  ],\n  [\n   14,\n   'XUID',\n   'array',\n   null\n  ],\n  [\n   15,\n   'charset',\n   'offset',\n   0\n  ],\n  [\n   16,\n   'Encoding',\n   'offset',\n   0\n  ],\n  [\n   17,\n   'CharStrings',\n   'offset',\n   0\n  ],\n  [\n   18,\n   'Private',\n   [\n    'offset',\n    'offset'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    21\n   ],\n   'PostScript',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    22\n   ],\n   'BaseFontName',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    23\n   ],\n   'BaseFontBlend',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    31\n   ],\n   'CIDFontVersion',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    32\n   ],\n   'CIDFontRevision',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    33\n   ],\n   'CIDFontType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    34\n   ],\n   'CIDCount',\n   'num',\n   8720\n  ],\n  [\n   [\n    12,\n    35\n   ],\n   'UIDBase',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    37\n   ],\n   'FDSelect',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    36\n   ],\n   'FDArray',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    38\n   ],\n   'FontName',\n   'sid',\n   null\n  ]\n ];\n var tables = null;\n function CFFTopDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.privateDict = null;\n }\n CFFTopDict.prototype = Object.create(CFFDict.prototype);\n return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n var layout = [\n  [\n   6,\n   'BlueValues',\n   'delta',\n   null\n  ],\n  [\n   7,\n   'OtherBlues',\n   'delta',\n   null\n  ],\n  [\n   8,\n   'FamilyBlues',\n   'delta',\n   null\n  ],\n  [\n   9,\n   'FamilyOtherBlues',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    9\n   ],\n   'BlueScale',\n   'num',\n   0.039625\n  ],\n  [\n   [\n    12,\n    10\n   ],\n   'BlueShift',\n   'num',\n   7\n  ],\n  [\n   [\n    12,\n    11\n   ],\n   'BlueFuzz',\n   'num',\n   1\n  ],\n  [\n   10,\n   'StdHW',\n   'num',\n   null\n  ],\n  [\n   11,\n   'StdVW',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    12\n   ],\n   'StemSnapH',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    13\n   ],\n   'StemSnapV',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    14\n   ],\n   'ForceBold',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    17\n   ],\n   'LanguageGroup',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    18\n   ],\n   'ExpansionFactor',\n   'num',\n   0.06\n  ],\n  [\n   [\n    12,\n    19\n   ],\n   'initialRandomSeed',\n   'num',\n   0\n  ],\n  [\n   20,\n   'defaultWidthX',\n   'num',\n   0\n  ],\n  [\n   21,\n   'nominalWidthX',\n   'num',\n   0\n  ],\n  [\n   19,\n   'Subrs',\n   'offset',\n   null\n  ]\n ];\n var tables = null;\n function CFFPrivateDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.subrsIndex = null;\n }\n CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n ISO_ADOBE: 0,\n EXPERT: 1,\n EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n function CFFCharset(predefined, format, charset, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.charset = charset;\n  this.raw = raw;\n }\n return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n function CFFEncoding(predefined, format, encoding, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.encoding = encoding;\n  this.raw = raw;\n }\n return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n function CFFFDSelect(fdSelect, raw) {\n  this.fdSelect = fdSelect;\n  this.raw = raw;\n }\n CFFFDSelect.prototype = {\n  getFDIndex: function CFFFDSelect_get(glyphIndex) {\n   if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n    return -1;\n   }\n   return this.fdSelect[glyphIndex];\n  }\n };\n return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n function CFFOffsetTracker() {\n  this.offsets = Object.create(null);\n }\n CFFOffsetTracker.prototype = {\n  isTracking: function CFFOffsetTracker_isTracking(key) {\n   return key in this.offsets;\n  },\n  track: function CFFOffsetTracker_track(key, location) {\n   if (key in this.offsets) {\n    error('Already tracking location of ' + key);\n   }\n   this.offsets[key] = location;\n  },\n  offset: function CFFOffsetTracker_offset(value) {\n   for (var key in this.offsets) {\n    this.offsets[key] += value;\n   }\n  },\n  setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n   if (!(key in this.offsets)) {\n    error('Not tracking location of ' + key);\n   }\n   var data = output.data;\n   var dataOffset = this.offsets[key];\n   var size = 5;\n   for (var i = 0, ii = values.length; i < ii; ++i) {\n    var offset0 = i * size + dataOffset;\n    var offset1 = offset0 + 1;\n    var offset2 = offset0 + 2;\n    var offset3 = offset0 + 3;\n    var offset4 = offset0 + 4;\n    if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n     error('writing to an offset that is not empty');\n    }\n    var value = values[i];\n    data[offset0] = 0x1d;\n    data[offset1] = value >> 24 & 0xFF;\n    data[offset2] = value >> 16 & 0xFF;\n    data[offset3] = value >> 8 & 0xFF;\n    data[offset4] = value & 0xFF;\n   }\n  }\n };\n return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n function CFFCompiler(cff) {\n  this.cff = cff;\n }\n CFFCompiler.prototype = {\n  compile: function CFFCompiler_compile() {\n   var cff = this.cff;\n   var output = {\n    data: [],\n    length: 0,\n    add: function CFFCompiler_add(data) {\n     this.data = this.data.concat(data);\n     this.length = this.data.length;\n    }\n   };\n   var header = this.compileHeader(cff.header);\n   output.add(header);\n   var nameIndex = this.compileNameIndex(cff.names);\n   output.add(nameIndex);\n   if (cff.isCIDFont) {\n    if (cff.topDict.hasName('FontMatrix')) {\n     var base = cff.topDict.getByName('FontMatrix');\n     cff.topDict.removeByName('FontMatrix');\n     for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n      var subDict = cff.fdArray[i];\n      var matrix = base.slice(0);\n      if (subDict.hasName('FontMatrix')) {\n       matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n      }\n      subDict.setByName('FontMatrix', matrix);\n     }\n    }\n   }\n   var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n   output.add(compiled.output);\n   var topDictTracker = compiled.trackers[0];\n   var stringIndex = this.compileStringIndex(cff.strings.strings);\n   output.add(stringIndex);\n   var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n   output.add(globalSubrIndex);\n   if (cff.encoding && cff.topDict.hasName('Encoding')) {\n    if (cff.encoding.predefined) {\n     topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n    } else {\n     var encoding = this.compileEncoding(cff.encoding);\n     topDictTracker.setEntryLocation('Encoding', [output.length], output);\n     output.add(encoding);\n    }\n   }\n   if (cff.charset && cff.topDict.hasName('charset')) {\n    if (cff.charset.predefined) {\n     topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n    } else {\n     var charset = this.compileCharset(cff.charset);\n     topDictTracker.setEntryLocation('charset', [output.length], output);\n     output.add(charset);\n    }\n   }\n   var charStrings = this.compileCharStrings(cff.charStrings);\n   topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n   output.add(charStrings);\n   if (cff.isCIDFont) {\n    topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n    var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n    output.add(fdSelect);\n    compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n    topDictTracker.setEntryLocation('FDArray', [output.length], output);\n    output.add(compiled.output);\n    var fontDictTrackers = compiled.trackers;\n    this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n   }\n   this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n   output.add([0]);\n   return output.data;\n  },\n  encodeNumber: function CFFCompiler_encodeNumber(value) {\n   if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n    return this.encodeInteger(value);\n   }\n   return this.encodeFloat(value);\n  },\n  encodeFloat: function CFFCompiler_encodeFloat(num) {\n   var value = num.toString();\n   var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n   if (m) {\n    var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n    value = (Math.round(num * epsilon) / epsilon).toString();\n   }\n   var nibbles = '';\n   var i, ii;\n   for (i = 0, ii = value.length; i < ii; ++i) {\n    var a = value[i];\n    if (a === 'e') {\n     nibbles += value[++i] === '-' ? 'c' : 'b';\n    } else if (a === '.') {\n     nibbles += 'a';\n    } else if (a === '-') {\n     nibbles += 'e';\n    } else {\n     nibbles += a;\n    }\n   }\n   nibbles += nibbles.length & 1 ? 'f' : 'ff';\n   var out = [30];\n   for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n    out.push(parseInt(nibbles.substr(i, 2), 16));\n   }\n   return out;\n  },\n  encodeInteger: function CFFCompiler_encodeInteger(value) {\n   var code;\n   if (value >= -107 && value <= 107) {\n    code = [value + 139];\n   } else if (value >= 108 && value <= 1131) {\n    value = value - 108;\n    code = [\n     (value >> 8) + 247,\n     value & 0xFF\n    ];\n   } else if (value >= -1131 && value <= -108) {\n    value = -value - 108;\n    code = [\n     (value >> 8) + 251,\n     value & 0xFF\n    ];\n   } else if (value >= -32768 && value <= 32767) {\n    code = [\n     0x1c,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   } else {\n    code = [\n     0x1d,\n     value >> 24 & 0xFF,\n     value >> 16 & 0xFF,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   }\n   return code;\n  },\n  compileHeader: function CFFCompiler_compileHeader(header) {\n   return [\n    header.major,\n    header.minor,\n    header.hdrSize,\n    header.offSize\n   ];\n  },\n  compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n   var nameIndex = new CFFIndex();\n   for (var i = 0, ii = names.length; i < ii; ++i) {\n    nameIndex.add(stringToBytes(names[i]));\n   }\n   return this.compileIndex(nameIndex);\n  },\n  compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n   var fontDictTrackers = [];\n   var fdArrayIndex = new CFFIndex();\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    if (removeCidKeys) {\n     fontDict.removeByName('CIDFontVersion');\n     fontDict.removeByName('CIDFontRevision');\n     fontDict.removeByName('CIDFontType');\n     fontDict.removeByName('CIDCount');\n     fontDict.removeByName('UIDBase');\n    }\n    var fontDictTracker = new CFFOffsetTracker();\n    var fontDictData = this.compileDict(fontDict, fontDictTracker);\n    fontDictTrackers.push(fontDictTracker);\n    fdArrayIndex.add(fontDictData);\n    fontDictTracker.offset(length);\n   }\n   fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n   return {\n    trackers: fontDictTrackers,\n    output: fdArrayIndex\n   };\n  },\n  compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n    var privateDict = fontDict.privateDict;\n    var privateDictTracker = new CFFOffsetTracker();\n    var privateDictData = this.compileDict(privateDict, privateDictTracker);\n    var outputLength = output.length;\n    privateDictTracker.offset(outputLength);\n    if (!privateDictData.length) {\n     outputLength = 0;\n    }\n    trackers[i].setEntryLocation('Private', [\n     privateDictData.length,\n     outputLength\n    ], output);\n    output.add(privateDictData);\n    if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n     var subrs = this.compileIndex(privateDict.subrsIndex);\n     privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n     output.add(subrs);\n    }\n   }\n  },\n  compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n   var out = [];\n   var order = dict.order;\n   for (var i = 0; i < order.length; ++i) {\n    var key = order[i];\n    if (!(key in dict.values)) {\n     continue;\n    }\n    var values = dict.values[key];\n    var types = dict.types[key];\n    if (!isArray(types)) {\n     types = [types];\n    }\n    if (!isArray(values)) {\n     values = [values];\n    }\n    if (values.length === 0) {\n     continue;\n    }\n    for (var j = 0, jj = types.length; j < jj; ++j) {\n     var type = types[j];\n     var value = values[j];\n     switch (type) {\n     case 'num':\n     case 'sid':\n      out = out.concat(this.encodeNumber(value));\n      break;\n     case 'offset':\n      var name = dict.keyToNameMap[key];\n      if (!offsetTracker.isTracking(name)) {\n       offsetTracker.track(name, out.length);\n      }\n      out = out.concat([\n       0x1d,\n       0,\n       0,\n       0,\n       0\n      ]);\n      break;\n     case 'array':\n     case 'delta':\n      out = out.concat(this.encodeNumber(value));\n      for (var k = 1, kk = values.length; k < kk; ++k) {\n       out = out.concat(this.encodeNumber(values[k]));\n      }\n      break;\n     default:\n      error('Unknown data type of ' + type);\n      break;\n     }\n    }\n    out = out.concat(dict.opcodes[key]);\n   }\n   return out;\n  },\n  compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n   var stringIndex = new CFFIndex();\n   for (var i = 0, ii = strings.length; i < ii; ++i) {\n    stringIndex.add(stringToBytes(strings[i]));\n   }\n   return this.compileIndex(stringIndex);\n  },\n  compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n   var globalSubrIndex = this.cff.globalSubrIndex;\n   this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n  },\n  compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n   return this.compileIndex(charStrings);\n  },\n  compileCharset: function CFFCompiler_compileCharset(charset) {\n   return this.compileTypedArray(charset.raw);\n  },\n  compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n   return this.compileTypedArray(encoding.raw);\n  },\n  compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n   return this.compileTypedArray(fdSelect);\n  },\n  compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n   var out = [];\n   for (var i = 0, ii = data.length; i < ii; ++i) {\n    out[i] = data[i];\n   }\n   return out;\n  },\n  compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n   trackers = trackers || [];\n   var objects = index.objects;\n   var count = objects.length;\n   if (count === 0) {\n    return [\n     0,\n     0,\n     0\n    ];\n   }\n   var data = [\n    count >> 8 & 0xFF,\n    count & 0xff\n   ];\n   var lastOffset = 1, i;\n   for (i = 0; i < count; ++i) {\n    lastOffset += objects[i].length;\n   }\n   var offsetSize;\n   if (lastOffset < 0x100) {\n    offsetSize = 1;\n   } else if (lastOffset < 0x10000) {\n    offsetSize = 2;\n   } else if (lastOffset < 0x1000000) {\n    offsetSize = 3;\n   } else {\n    offsetSize = 4;\n   }\n   data.push(offsetSize);\n   var relativeOffset = 1;\n   for (i = 0; i < count + 1; i++) {\n    if (offsetSize === 1) {\n     data.push(relativeOffset & 0xFF);\n    } else if (offsetSize === 2) {\n     data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else if (offsetSize === 3) {\n     data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else {\n     data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    }\n    if (objects[i]) {\n     relativeOffset += objects[i].length;\n    }\n   }\n   for (i = 0; i < count; i++) {\n    if (trackers[i]) {\n     trackers[i].offset(data.length);\n    }\n    for (var j = 0, jj = objects[i].length; j < jj; j++) {\n     data.push(objects[i][j]);\n    }\n   }\n   return data;\n  }\n };\n return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar isEmptyObj = sharedUtil.isEmptyObj;\nvar ChunkedStream = function ChunkedStreamClosure() {\n function ChunkedStream(length, chunkSize, manager) {\n  this.bytes = new Uint8Array(length);\n  this.start = 0;\n  this.pos = 0;\n  this.end = length;\n  this.chunkSize = chunkSize;\n  this.loadedChunks = [];\n  this.numChunksLoaded = 0;\n  this.numChunks = Math.ceil(length / chunkSize);\n  this.manager = manager;\n  this.progressiveDataLength = 0;\n  this.lastSuccessfulEnsureByteChunk = -1;\n }\n ChunkedStream.prototype = {\n  getMissingChunks: function ChunkedStream_getMissingChunks() {\n   var chunks = [];\n   for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     chunks.push(chunk);\n    }\n   }\n   return chunks;\n  },\n  getBaseStreams: function ChunkedStream_getBaseStreams() {\n   return [this];\n  },\n  allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n   return this.numChunksLoaded === this.numChunks;\n  },\n  onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n   var end = begin + chunk.byteLength;\n   assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n   var length = this.bytes.length;\n   assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n   this.bytes.set(new Uint8Array(chunk), begin);\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n   var position = this.progressiveDataLength;\n   var beginChunk = Math.floor(position / this.chunkSize);\n   this.bytes.set(new Uint8Array(data), position);\n   position += data.byteLength;\n   this.progressiveDataLength = position;\n   var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  ensureByte: function ChunkedStream_ensureByte(pos) {\n   var chunk = Math.floor(pos / this.chunkSize);\n   if (chunk === this.lastSuccessfulEnsureByteChunk) {\n    return;\n   }\n   if (!this.loadedChunks[chunk]) {\n    throw new MissingDataException(pos, pos + 1);\n   }\n   this.lastSuccessfulEnsureByteChunk = chunk;\n  },\n  ensureRange: function ChunkedStream_ensureRange(begin, end) {\n   if (begin >= end) {\n    return;\n   }\n   if (end <= this.progressiveDataLength) {\n    return;\n   }\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     throw new MissingDataException(begin, end);\n    }\n   }\n  },\n  nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n   var chunk, numChunks = this.numChunks;\n   for (var i = 0; i < numChunks; ++i) {\n    chunk = (beginChunk + i) % numChunks;\n    if (!this.loadedChunks[chunk]) {\n     return chunk;\n    }\n   }\n   return null;\n  },\n  hasChunk: function ChunkedStream_hasChunk(chunk) {\n   return !!this.loadedChunks[chunk];\n  },\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function ChunkedStream_getByte() {\n   var pos = this.pos;\n   if (pos >= this.end) {\n    return -1;\n   }\n   this.ensureByte(pos);\n   return this.bytes[this.pos++];\n  },\n  getUint16: function ChunkedStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function ChunkedStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function ChunkedStream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    this.ensureRange(pos, strEnd);\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.ensureRange(pos, end);\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function ChunkedStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function ChunkedStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  getByteRange: function ChunkedStream_getBytes(begin, end) {\n   this.ensureRange(begin, end);\n   return this.bytes.subarray(begin, end);\n  },\n  skip: function ChunkedStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function ChunkedStream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function ChunkedStream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n   this.ensureRange(start, start + length);\n   function ChunkedStreamSubstream() {\n   }\n   ChunkedStreamSubstream.prototype = Object.create(this);\n   ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n    var chunkSize = this.chunkSize;\n    var beginChunk = Math.floor(this.start / chunkSize);\n    var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n    var missingChunks = [];\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (!this.loadedChunks[chunk]) {\n      missingChunks.push(chunk);\n     }\n    }\n    return missingChunks;\n   };\n   var subStream = new ChunkedStreamSubstream();\n   subStream.pos = subStream.start = start;\n   subStream.end = start + length || this.end;\n   subStream.dict = dict;\n   return subStream;\n  }\n };\n return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n function ChunkedStreamManager(pdfNetworkStream, args) {\n  var chunkSize = args.rangeChunkSize;\n  var length = args.length;\n  this.stream = new ChunkedStream(length, chunkSize, this);\n  this.length = length;\n  this.chunkSize = chunkSize;\n  this.pdfNetworkStream = pdfNetworkStream;\n  this.url = args.url;\n  this.disableAutoFetch = args.disableAutoFetch;\n  this.msgHandler = args.msgHandler;\n  this.currRequestId = 0;\n  this.chunksNeededByRequest = Object.create(null);\n  this.requestsByChunk = Object.create(null);\n  this.promisesByRequest = Object.create(null);\n  this.progressiveDataLength = 0;\n  this.aborted = false;\n  this._loadedStreamCapability = createPromiseCapability();\n }\n ChunkedStreamManager.prototype = {\n  onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n   var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n   if (!rangeReader.isStreamingSupported) {\n    rangeReader.onProgress = this.onProgress.bind(this);\n   }\n   var chunks = [], loaded = 0;\n   var manager = this;\n   var promise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      if (!chunk.done) {\n       var data = chunk.value;\n       chunks.push(data);\n       loaded += arrayByteLength(data);\n       if (rangeReader.isStreamingSupported) {\n        manager.onProgress({ loaded: loaded });\n       }\n       rangeReader.read().then(readChunk, reject);\n       return;\n      }\n      var chunkData = arraysToBytes(chunks);\n      chunks = null;\n      resolve(chunkData);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    rangeReader.read().then(readChunk, reject);\n   });\n   promise.then(function (data) {\n    if (this.aborted) {\n     return;\n    }\n    this.onReceiveData({\n     chunk: data,\n     begin: begin\n    });\n   }.bind(this));\n  },\n  requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n   var missingChunks = this.stream.getMissingChunks();\n   this._requestChunks(missingChunks);\n   return this._loadedStreamCapability.promise;\n  },\n  _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n   var requestId = this.currRequestId++;\n   var i, ii;\n   var chunksNeeded = Object.create(null);\n   this.chunksNeededByRequest[requestId] = chunksNeeded;\n   for (i = 0, ii = chunks.length; i < ii; i++) {\n    if (!this.stream.hasChunk(chunks[i])) {\n     chunksNeeded[chunks[i]] = true;\n    }\n   }\n   if (isEmptyObj(chunksNeeded)) {\n    return Promise.resolve();\n   }\n   var capability = createPromiseCapability();\n   this.promisesByRequest[requestId] = capability;\n   var chunksToRequest = [];\n   for (var chunk in chunksNeeded) {\n    chunk = chunk | 0;\n    if (!(chunk in this.requestsByChunk)) {\n     this.requestsByChunk[chunk] = [];\n     chunksToRequest.push(chunk);\n    }\n    this.requestsByChunk[chunk].push(requestId);\n   }\n   if (!chunksToRequest.length) {\n    return capability.promise;\n   }\n   var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n   for (i = 0; i < groupedChunksToRequest.length; ++i) {\n    var groupedChunk = groupedChunksToRequest[i];\n    var begin = groupedChunk.beginChunk * this.chunkSize;\n    var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n    this.sendRequest(begin, end);\n   }\n   return capability.promise;\n  },\n  getStream: function ChunkedStreamManager_getStream() {\n   return this.stream;\n  },\n  requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n   end = Math.min(end, this.length);\n   var beginChunk = this.getBeginChunk(begin);\n   var endChunk = this.getEndChunk(end);\n   var chunks = [];\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    chunks.push(chunk);\n   }\n   return this._requestChunks(chunks);\n  },\n  requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n   ranges = ranges || [];\n   var chunksToRequest = [];\n   for (var i = 0; i < ranges.length; i++) {\n    var beginChunk = this.getBeginChunk(ranges[i].begin);\n    var endChunk = this.getEndChunk(ranges[i].end);\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (chunksToRequest.indexOf(chunk) < 0) {\n      chunksToRequest.push(chunk);\n     }\n    }\n   }\n   chunksToRequest.sort(function (a, b) {\n    return a - b;\n   });\n   return this._requestChunks(chunksToRequest);\n  },\n  groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n   var groupedChunks = [];\n   var beginChunk = -1;\n   var prevChunk = -1;\n   for (var i = 0; i < chunks.length; ++i) {\n    var chunk = chunks[i];\n    if (beginChunk < 0) {\n     beginChunk = chunk;\n    }\n    if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: prevChunk + 1\n     });\n     beginChunk = chunk;\n    }\n    if (i + 1 === chunks.length) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: chunk + 1\n     });\n    }\n    prevChunk = chunk;\n   }\n   return groupedChunks;\n  },\n  onProgress: function ChunkedStreamManager_onProgress(args) {\n   var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n   this.msgHandler.send('DocProgress', {\n    loaded: bytesLoaded,\n    total: this.length\n   });\n  },\n  onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n   var chunk = args.chunk;\n   var isProgressive = args.begin === undefined;\n   var begin = isProgressive ? this.progressiveDataLength : args.begin;\n   var end = begin + chunk.byteLength;\n   var beginChunk = Math.floor(begin / this.chunkSize);\n   var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n   if (isProgressive) {\n    this.stream.onReceiveProgressiveData(chunk);\n    this.progressiveDataLength = end;\n   } else {\n    this.stream.onReceiveData(begin, chunk);\n   }\n   if (this.stream.allChunksLoaded()) {\n    this._loadedStreamCapability.resolve(this.stream);\n   }\n   var loadedRequests = [];\n   var i, requestId;\n   for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n    var requestIds = this.requestsByChunk[chunk] || [];\n    delete this.requestsByChunk[chunk];\n    for (i = 0; i < requestIds.length; ++i) {\n     requestId = requestIds[i];\n     var chunksNeeded = this.chunksNeededByRequest[requestId];\n     if (chunk in chunksNeeded) {\n      delete chunksNeeded[chunk];\n     }\n     if (!isEmptyObj(chunksNeeded)) {\n      continue;\n     }\n     loadedRequests.push(requestId);\n    }\n   }\n   if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n    var nextEmptyChunk;\n    if (this.stream.numChunksLoaded === 1) {\n     var lastChunk = this.stream.numChunks - 1;\n     if (!this.stream.hasChunk(lastChunk)) {\n      nextEmptyChunk = lastChunk;\n     }\n    } else {\n     nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n    }\n    if (isInt(nextEmptyChunk)) {\n     this._requestChunks([nextEmptyChunk]);\n    }\n   }\n   for (i = 0; i < loadedRequests.length; ++i) {\n    requestId = loadedRequests[i];\n    var capability = this.promisesByRequest[requestId];\n    delete this.promisesByRequest[requestId];\n    capability.resolve();\n   }\n   this.msgHandler.send('DocProgress', {\n    loaded: this.stream.numChunksLoaded * this.chunkSize,\n    total: this.length\n   });\n  },\n  onError: function ChunkedStreamManager_onError(err) {\n   this._loadedStreamCapability.reject(err);\n  },\n  getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n   var chunk = Math.floor(begin / this.chunkSize);\n   return chunk;\n  },\n  getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n   var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n   return chunk;\n  },\n  abort: function ChunkedStreamManager_abort() {\n   this.aborted = true;\n   if (this.pdfNetworkStream) {\n    this.pdfNetworkStream.cancelAllRequests('abort');\n   }\n   for (var requestId in this.promisesByRequest) {\n    var capability = this.promisesByRequest[requestId];\n    capability.reject(new Error('Request was aborted'));\n   }\n  }\n };\n return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar PasswordException = sharedUtil.PasswordException;\nvar PasswordResponses = sharedUtil.PasswordResponses;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar assert = sharedUtil.assert;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar utf8StringToString = sharedUtil.utf8StringToString;\nvar Name = corePrimitives.Name;\nvar isName = corePrimitives.isName;\nvar isDict = corePrimitives.isDict;\nvar DecryptStream = coreStream.DecryptStream;\nvar ARCFourCipher = function ARCFourCipherClosure() {\n function ARCFourCipher(key) {\n  this.a = 0;\n  this.b = 0;\n  var s = new Uint8Array(256);\n  var i, j = 0, tmp, keyLength = key.length;\n  for (i = 0; i < 256; ++i) {\n   s[i] = i;\n  }\n  for (i = 0; i < 256; ++i) {\n   tmp = s[i];\n   j = j + tmp + key[i % keyLength] & 0xFF;\n   s[i] = s[j];\n   s[j] = tmp;\n  }\n  this.s = s;\n }\n ARCFourCipher.prototype = {\n  encryptBlock: function ARCFourCipher_encryptBlock(data) {\n   var i, n = data.length, tmp, tmp2;\n   var a = this.a, b = this.b, s = this.s;\n   var output = new Uint8Array(n);\n   for (i = 0; i < n; ++i) {\n    a = a + 1 & 0xFF;\n    tmp = s[a];\n    b = b + tmp & 0xFF;\n    tmp2 = s[b];\n    s[a] = tmp2;\n    s[b] = tmp;\n    output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n   }\n   this.a = a;\n   this.b = b;\n   return output;\n  }\n };\n ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n var r = new Uint8Array([\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21\n ]);\n var k = new Int32Array([\n  -680876936,\n  -389564586,\n  606105819,\n  -1044525330,\n  -176418897,\n  1200080426,\n  -1473231341,\n  -45705983,\n  1770035416,\n  -1958414417,\n  -42063,\n  -1990404162,\n  1804603682,\n  -40341101,\n  -1502002290,\n  1236535329,\n  -165796510,\n  -1069501632,\n  643717713,\n  -373897302,\n  -701558691,\n  38016083,\n  -660478335,\n  -405537848,\n  568446438,\n  -1019803690,\n  -187363961,\n  1163531501,\n  -1444681467,\n  -51403784,\n  1735328473,\n  -1926607734,\n  -378558,\n  -2022574463,\n  1839030562,\n  -35309556,\n  -1530992060,\n  1272893353,\n  -155497632,\n  -1094730640,\n  681279174,\n  -358537222,\n  -722521979,\n  76029189,\n  -640364487,\n  -421815835,\n  530742520,\n  -995338651,\n  -198630844,\n  1126891415,\n  -1416354905,\n  -57434055,\n  1700485571,\n  -1894986606,\n  -1051523,\n  -2054922799,\n  1873313359,\n  -30611744,\n  -1560198380,\n  1309151649,\n  -145523070,\n  -1120210379,\n  718787259,\n  -343485551\n ]);\n function hash(data, offset, length) {\n  var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n  var paddedLength = length + 72 & ~63;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = length << 3 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  var w = new Int32Array(16);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j, i += 4) {\n    w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n   }\n   var a = h0, b = h1, c = h2, d = h3, f, g;\n   for (j = 0; j < 64; ++j) {\n    if (j < 16) {\n     f = b & c | ~b & d;\n     g = j;\n    } else if (j < 32) {\n     f = d & b | ~d & c;\n     g = 5 * j + 1 & 15;\n    } else if (j < 48) {\n     f = b ^ c ^ d;\n     g = 3 * j + 5 & 15;\n    } else {\n     f = c ^ (b | ~d);\n     g = 7 * j & 15;\n    }\n    var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n    d = c;\n    c = b;\n    b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n    a = tmp;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n  }\n  return new Uint8Array([\n   h0 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >>> 24 & 0xFF,\n   h1 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >>> 24 & 0xFF,\n   h2 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >>> 24 & 0xFF,\n   h3 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >>> 24 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar Word64 = function Word64Closure() {\n function Word64(highInteger, lowInteger) {\n  this.high = highInteger | 0;\n  this.low = lowInteger | 0;\n }\n Word64.prototype = {\n  and: function Word64_and(word) {\n   this.high &= word.high;\n   this.low &= word.low;\n  },\n  xor: function Word64_xor(word) {\n   this.high ^= word.high;\n   this.low ^= word.low;\n  },\n  or: function Word64_or(word) {\n   this.high |= word.high;\n   this.low |= word.low;\n  },\n  shiftRight: function Word64_shiftRight(places) {\n   if (places >= 32) {\n    this.low = this.high >>> places - 32 | 0;\n    this.high = 0;\n   } else {\n    this.low = this.low >>> places | this.high << 32 - places;\n    this.high = this.high >>> places | 0;\n   }\n  },\n  shiftLeft: function Word64_shiftLeft(places) {\n   if (places >= 32) {\n    this.high = this.low << places - 32;\n    this.low = 0;\n   } else {\n    this.high = this.high << places | this.low >>> 32 - places;\n    this.low = this.low << places;\n   }\n  },\n  rotateRight: function Word64_rotateRight(places) {\n   var low, high;\n   if (places & 32) {\n    high = this.low;\n    low = this.high;\n   } else {\n    low = this.low;\n    high = this.high;\n   }\n   places &= 31;\n   this.low = low >>> places | high << 32 - places;\n   this.high = high >>> places | low << 32 - places;\n  },\n  not: function Word64_not() {\n   this.high = ~this.high;\n   this.low = ~this.low;\n  },\n  add: function Word64_add(word) {\n   var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n   var highAdd = (this.high >>> 0) + (word.high >>> 0);\n   if (lowAdd > 0xFFFFFFFF) {\n    highAdd += 1;\n   }\n   this.low = lowAdd | 0;\n   this.high = highAdd | 0;\n  },\n  copyTo: function Word64_copyTo(bytes, offset) {\n   bytes[offset] = this.high >>> 24 & 0xFF;\n   bytes[offset + 1] = this.high >> 16 & 0xFF;\n   bytes[offset + 2] = this.high >> 8 & 0xFF;\n   bytes[offset + 3] = this.high & 0xFF;\n   bytes[offset + 4] = this.low >>> 24 & 0xFF;\n   bytes[offset + 5] = this.low >> 16 & 0xFF;\n   bytes[offset + 6] = this.low >> 8 & 0xFF;\n   bytes[offset + 7] = this.low & 0xFF;\n  },\n  assign: function Word64_assign(word) {\n   this.high = word.high;\n   this.low = word.low;\n  }\n };\n return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n function rotr(x, n) {\n  return x >>> n | x << 32 - n;\n }\n function ch(x, y, z) {\n  return x & y ^ ~x & z;\n }\n function maj(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n }\n function sigma(x) {\n  return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n }\n function sigmaPrime(x) {\n  return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n }\n function littleSigma(x) {\n  return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n }\n function littleSigmaPrime(x) {\n  return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n }\n var k = [\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n ];\n function hash(data, offset, length) {\n  var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n  var paddedLength = Math.ceil((length + 9) / 64) * 64;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Uint32Array(64);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    i += 4;\n   }\n   for (j = 16; j < 64; ++j) {\n    w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n   }\n   var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n   for (j = 0; j < 64; ++j) {\n    t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n    t2 = sigma(a) + maj(a, b, c);\n    h = g;\n    g = f;\n    f = e;\n    e = d + t1 | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = t1 + t2 | 0;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n   h4 = h4 + e | 0;\n   h5 = h5 + f | 0;\n   h6 = h6 + g | 0;\n   h7 = h7 + h | 0;\n  }\n  return new Uint8Array([\n   h0 >> 24 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 & 0xFF,\n   h1 >> 24 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 & 0xFF,\n   h2 >> 24 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 & 0xFF,\n   h3 >> 24 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 & 0xFF,\n   h4 >> 24 & 0xFF,\n   h4 >> 16 & 0xFF,\n   h4 >> 8 & 0xFF,\n   h4 & 0xFF,\n   h5 >> 24 & 0xFF,\n   h5 >> 16 & 0xFF,\n   h5 >> 8 & 0xFF,\n   h5 & 0xFF,\n   h6 >> 24 & 0xFF,\n   h6 >> 16 & 0xFF,\n   h6 >> 8 & 0xFF,\n   h6 & 0xFF,\n   h7 >> 24 & 0xFF,\n   h7 >> 16 & 0xFF,\n   h7 >> 8 & 0xFF,\n   h7 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n function ch(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.not();\n  tmp.and(z);\n  result.xor(tmp);\n }\n function maj(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.and(z);\n  result.xor(tmp);\n  tmp.assign(y);\n  tmp.and(z);\n  result.xor(tmp);\n }\n function sigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(28);\n  tmp.assign(x);\n  tmp.rotateRight(34);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(39);\n  result.xor(tmp);\n }\n function sigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(14);\n  tmp.assign(x);\n  tmp.rotateRight(18);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(41);\n  result.xor(tmp);\n }\n function littleSigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(1);\n  tmp.assign(x);\n  tmp.rotateRight(8);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(7);\n  result.xor(tmp);\n }\n function littleSigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(19);\n  tmp.assign(x);\n  tmp.rotateRight(61);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(6);\n  result.xor(tmp);\n }\n var k = [\n  new Word64(0x428a2f98, 0xd728ae22),\n  new Word64(0x71374491, 0x23ef65cd),\n  new Word64(0xb5c0fbcf, 0xec4d3b2f),\n  new Word64(0xe9b5dba5, 0x8189dbbc),\n  new Word64(0x3956c25b, 0xf348b538),\n  new Word64(0x59f111f1, 0xb605d019),\n  new Word64(0x923f82a4, 0xaf194f9b),\n  new Word64(0xab1c5ed5, 0xda6d8118),\n  new Word64(0xd807aa98, 0xa3030242),\n  new Word64(0x12835b01, 0x45706fbe),\n  new Word64(0x243185be, 0x4ee4b28c),\n  new Word64(0x550c7dc3, 0xd5ffb4e2),\n  new Word64(0x72be5d74, 0xf27b896f),\n  new Word64(0x80deb1fe, 0x3b1696b1),\n  new Word64(0x9bdc06a7, 0x25c71235),\n  new Word64(0xc19bf174, 0xcf692694),\n  new Word64(0xe49b69c1, 0x9ef14ad2),\n  new Word64(0xefbe4786, 0x384f25e3),\n  new Word64(0x0fc19dc6, 0x8b8cd5b5),\n  new Word64(0x240ca1cc, 0x77ac9c65),\n  new Word64(0x2de92c6f, 0x592b0275),\n  new Word64(0x4a7484aa, 0x6ea6e483),\n  new Word64(0x5cb0a9dc, 0xbd41fbd4),\n  new Word64(0x76f988da, 0x831153b5),\n  new Word64(0x983e5152, 0xee66dfab),\n  new Word64(0xa831c66d, 0x2db43210),\n  new Word64(0xb00327c8, 0x98fb213f),\n  new Word64(0xbf597fc7, 0xbeef0ee4),\n  new Word64(0xc6e00bf3, 0x3da88fc2),\n  new Word64(0xd5a79147, 0x930aa725),\n  new Word64(0x06ca6351, 0xe003826f),\n  new Word64(0x14292967, 0x0a0e6e70),\n  new Word64(0x27b70a85, 0x46d22ffc),\n  new Word64(0x2e1b2138, 0x5c26c926),\n  new Word64(0x4d2c6dfc, 0x5ac42aed),\n  new Word64(0x53380d13, 0x9d95b3df),\n  new Word64(0x650a7354, 0x8baf63de),\n  new Word64(0x766a0abb, 0x3c77b2a8),\n  new Word64(0x81c2c92e, 0x47edaee6),\n  new Word64(0x92722c85, 0x1482353b),\n  new Word64(0xa2bfe8a1, 0x4cf10364),\n  new Word64(0xa81a664b, 0xbc423001),\n  new Word64(0xc24b8b70, 0xd0f89791),\n  new Word64(0xc76c51a3, 0x0654be30),\n  new Word64(0xd192e819, 0xd6ef5218),\n  new Word64(0xd6990624, 0x5565a910),\n  new Word64(0xf40e3585, 0x5771202a),\n  new Word64(0x106aa070, 0x32bbd1b8),\n  new Word64(0x19a4c116, 0xb8d2d0c8),\n  new Word64(0x1e376c08, 0x5141ab53),\n  new Word64(0x2748774c, 0xdf8eeb99),\n  new Word64(0x34b0bcb5, 0xe19b48a8),\n  new Word64(0x391c0cb3, 0xc5c95a63),\n  new Word64(0x4ed8aa4a, 0xe3418acb),\n  new Word64(0x5b9cca4f, 0x7763e373),\n  new Word64(0x682e6ff3, 0xd6b2b8a3),\n  new Word64(0x748f82ee, 0x5defb2fc),\n  new Word64(0x78a5636f, 0x43172f60),\n  new Word64(0x84c87814, 0xa1f0ab72),\n  new Word64(0x8cc70208, 0x1a6439ec),\n  new Word64(0x90befffa, 0x23631e28),\n  new Word64(0xa4506ceb, 0xde82bde9),\n  new Word64(0xbef9a3f7, 0xb2c67915),\n  new Word64(0xc67178f2, 0xe372532b),\n  new Word64(0xca273ece, 0xea26619c),\n  new Word64(0xd186b8c7, 0x21c0c207),\n  new Word64(0xeada7dd6, 0xcde0eb1e),\n  new Word64(0xf57d4f7f, 0xee6ed178),\n  new Word64(0x06f067aa, 0x72176fba),\n  new Word64(0x0a637dc5, 0xa2c898a6),\n  new Word64(0x113f9804, 0xbef90dae),\n  new Word64(0x1b710b35, 0x131c471b),\n  new Word64(0x28db77f5, 0x23047d84),\n  new Word64(0x32caab7b, 0x40c72493),\n  new Word64(0x3c9ebe0a, 0x15c9bebc),\n  new Word64(0x431d67c4, 0x9c100d4c),\n  new Word64(0x4cc5d4be, 0xcb3e42b6),\n  new Word64(0x597f299c, 0xfc657e2a),\n  new Word64(0x5fcb6fab, 0x3ad6faec),\n  new Word64(0x6c44198c, 0x4a475817)\n ];\n function hash(data, offset, length, mode384) {\n  mode384 = !!mode384;\n  var h0, h1, h2, h3, h4, h5, h6, h7;\n  if (!mode384) {\n   h0 = new Word64(0x6a09e667, 0xf3bcc908);\n   h1 = new Word64(0xbb67ae85, 0x84caa73b);\n   h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n   h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n   h4 = new Word64(0x510e527f, 0xade682d1);\n   h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n   h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n   h7 = new Word64(0x5be0cd19, 0x137e2179);\n  } else {\n   h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n   h1 = new Word64(0x629a292a, 0x367cd507);\n   h2 = new Word64(0x9159015a, 0x3070dd17);\n   h3 = new Word64(0x152fecd8, 0xf70e5939);\n   h4 = new Word64(0x67332667, 0xffc00b31);\n   h5 = new Word64(0x8eb44a87, 0x68581511);\n   h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n   h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n  }\n  var paddedLength = Math.ceil((length + 17) / 128) * 128;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 16;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Array(80);\n  for (i = 0; i < 80; i++) {\n   w[i] = new Word64(0, 0);\n  }\n  var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n  var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n  var g = new Word64(0, 0), h = new Word64(0, 0);\n  var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n  var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n    i += 8;\n   }\n   for (j = 16; j < 80; ++j) {\n    tmp3 = w[j];\n    littleSigmaPrime(tmp3, w[j - 2], tmp2);\n    tmp3.add(w[j - 7]);\n    littleSigma(tmp1, w[j - 15], tmp2);\n    tmp3.add(tmp1);\n    tmp3.add(w[j - 16]);\n   }\n   a.assign(h0);\n   b.assign(h1);\n   c.assign(h2);\n   d.assign(h3);\n   e.assign(h4);\n   f.assign(h5);\n   g.assign(h6);\n   h.assign(h7);\n   for (j = 0; j < 80; ++j) {\n    t1.assign(h);\n    sigmaPrime(tmp1, e, tmp2);\n    t1.add(tmp1);\n    ch(tmp1, e, f, g, tmp2);\n    t1.add(tmp1);\n    t1.add(k[j]);\n    t1.add(w[j]);\n    sigma(t2, a, tmp2);\n    maj(tmp1, a, b, c, tmp2);\n    t2.add(tmp1);\n    tmp3 = h;\n    h = g;\n    g = f;\n    f = e;\n    d.add(t1);\n    e = d;\n    d = c;\n    c = b;\n    b = a;\n    tmp3.assign(t1);\n    tmp3.add(t2);\n    a = tmp3;\n   }\n   h0.add(a);\n   h1.add(b);\n   h2.add(c);\n   h3.add(d);\n   h4.add(e);\n   h5.add(f);\n   h6.add(g);\n   h7.add(h);\n  }\n  var result;\n  if (!mode384) {\n   result = new Uint8Array(64);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n   h6.copyTo(result, 48);\n   h7.copyTo(result, 56);\n  } else {\n   result = new Uint8Array(48);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n  }\n  return result;\n }\n return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n function hash(data, offset, length) {\n  return calculateSHA512(data, offset, length, true);\n }\n return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n function NullCipher() {\n }\n NullCipher.prototype = {\n  decryptBlock: function NullCipher_decryptBlock(data) {\n   return data;\n  }\n };\n return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n var rcon = new Uint8Array([\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d\n ]);\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey128(cipherKey) {\n  var b = 176, result = new Uint8Array(b);\n  result.set(cipherKey);\n  for (var j = 16, i = 1; j < b; ++i) {\n   var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n   t1 = s[t1];\n   t2 = s[t2];\n   t3 = s[t3];\n   t4 = s[t4];\n   t1 = t1 ^ rcon[i];\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 16];\n    j++;\n    result[j] = t2 ^= result[j - 16];\n    j++;\n    result[j] = t3 ^= result[j - 16];\n    j++;\n    result[j] = t4 ^= result[j - 16];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt128(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 9; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt128(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 10; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES128Cipher(key) {\n  this.key = expandKey128(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt128(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES128Cipher.prototype = {\n  decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n    buffer[bufferLength] = data[i];\n   }\n   if (bufferLength < 16) {\n    this.bufferLength = bufferLength;\n    return new Uint8Array([]);\n   }\n   this.iv = buffer;\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data.subarray(16), finalize);\n  },\n  encrypt: function AES128Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt128(buffer, this.key);\n    iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey256(cipherKey) {\n  var b = 240, result = new Uint8Array(b);\n  var r = 1;\n  result.set(cipherKey);\n  for (var j = 32, i = 1; j < b; ++i) {\n   if (j % 32 === 16) {\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n   } else if (j % 32 === 0) {\n    var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n    t1 = t1 ^ r;\n    if ((r <<= 1) >= 256) {\n     r = (r ^ 0x1b) & 0xFF;\n    }\n   }\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 32];\n    j++;\n    result[j] = t2 ^= result[j - 32];\n    j++;\n    result[j] = t3 ^= result[j - 32];\n    j++;\n    result[j] = t4 ^= result[j - 32];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt256(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 13; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt256(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 14; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES256Cipher(key) {\n  this.key = expandKey256(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt256(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES256Cipher.prototype = {\n  decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   if (iv) {\n    this.iv = iv;\n   } else {\n    for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n     buffer[bufferLength] = data[i];\n    }\n    if (bufferLength < 16) {\n     this.bufferLength = bufferLength;\n     return new Uint8Array([]);\n    }\n    this.iv = buffer;\n    data = data.subarray(16);\n   }\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data, finalize);\n  },\n  encrypt: function AES256Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt256(buffer, this.key);\n    this.iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n function PDF17() {\n }\n PDF17.prototype = {\n  checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n function concatArrays(array1, array2) {\n  var t = new Uint8Array(array1.length + array2.length);\n  t.set(array1, 0);\n  t.set(array2, array1.length);\n  return t;\n }\n function calculatePDF20Hash(password, input, userBytes) {\n  var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n  var e = [0];\n  var i = 0;\n  while (i < 64 || e[e.length - 1] > i - 32) {\n   var arrayLength = password.length + k.length + userBytes.length;\n   var k1 = new Uint8Array(arrayLength * 64);\n   var array = concatArrays(password, k);\n   array = concatArrays(array, userBytes);\n   for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n    k1.set(array, pos);\n   }\n   var cipher = new AES128Cipher(k.subarray(0, 16));\n   e = cipher.encrypt(k1, k.subarray(16, 32));\n   var remainder = 0;\n   for (var z = 0; z < 16; z++) {\n    remainder *= 256 % 3;\n    remainder %= 3;\n    remainder += (e[z] >>> 0) % 3;\n    remainder %= 3;\n   }\n   if (remainder === 0) {\n    k = calculateSHA256(e, 0, e.length);\n   } else if (remainder === 1) {\n    k = calculateSHA384(e, 0, e.length);\n   } else if (remainder === 2) {\n    k = calculateSHA512(e, 0, e.length);\n   }\n   i++;\n  }\n  return k.subarray(0, 32);\n }\n function PDF20() {\n }\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n PDF20.prototype = {\n  hash: function PDF20_hash(password, concatBytes, userBytes) {\n   return calculatePDF20Hash(password, concatBytes, userBytes);\n  },\n  checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculatePDF20Hash(password, hashData, userBytes);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculatePDF20Hash(password, hashData, []);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculatePDF20Hash(password, hashData, userBytes);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculatePDF20Hash(password, hashData, []);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n  this.StringCipherConstructor = stringCipherConstructor;\n  this.StreamCipherConstructor = streamCipherConstructor;\n }\n CipherTransform.prototype = {\n  createStream: function CipherTransform_createStream(stream, length) {\n   var cipher = new this.StreamCipherConstructor();\n   return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n    return cipher.decryptBlock(data, finalize);\n   });\n  },\n  decryptString: function CipherTransform_decryptString(s) {\n   var cipher = new this.StringCipherConstructor();\n   var data = stringToBytes(s);\n   data = cipher.decryptBlock(data, true);\n   return bytesToString(data);\n  }\n };\n return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n var defaultPasswordBytes = new Uint8Array([\n  0x28,\n  0xBF,\n  0x4E,\n  0x5E,\n  0x4E,\n  0x75,\n  0x8A,\n  0x41,\n  0x64,\n  0x00,\n  0x4E,\n  0x56,\n  0xFF,\n  0xFA,\n  0x01,\n  0x08,\n  0x2E,\n  0x2E,\n  0x00,\n  0xB6,\n  0xD0,\n  0x68,\n  0x3E,\n  0x80,\n  0x2F,\n  0x0C,\n  0xA9,\n  0xFE,\n  0x64,\n  0x53,\n  0x69,\n  0x7A\n ]);\n function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n  if (password) {\n   var passwordLength = Math.min(127, password.length);\n   password = password.subarray(0, passwordLength);\n  } else {\n   password = [];\n  }\n  var pdfAlgorithm;\n  if (revision === 6) {\n   pdfAlgorithm = new PDF20();\n  } else {\n   pdfAlgorithm = new PDF17();\n  }\n  if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n   return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n  } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n   return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n  }\n  return null;\n }\n function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n  var hashDataSize = 40 + ownerPassword.length + fileId.length;\n  var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n  if (password) {\n   n = Math.min(32, password.length);\n   for (; i < n; ++i) {\n    hashData[i] = password[i];\n   }\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  for (j = 0, n = ownerPassword.length; j < n; ++j) {\n   hashData[i++] = ownerPassword[j];\n  }\n  hashData[i++] = flags & 0xFF;\n  hashData[i++] = flags >> 8 & 0xFF;\n  hashData[i++] = flags >> 16 & 0xFF;\n  hashData[i++] = flags >>> 24 & 0xFF;\n  for (j = 0, n = fileId.length; j < n; ++j) {\n   hashData[i++] = fileId[j];\n  }\n  if (revision >= 4 && !encryptMetadata) {\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, keyLengthInBytes);\n   }\n  }\n  var encryptionKey = hash.subarray(0, keyLengthInBytes);\n  var cipher, checkData;\n  if (revision >= 3) {\n   for (i = 0; i < 32; ++i) {\n    hashData[i] = defaultPasswordBytes[i];\n   }\n   for (j = 0, n = fileId.length; j < n; ++j) {\n    hashData[i++] = fileId[j];\n   }\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n   n = encryptionKey.length;\n   var derivedKey = new Uint8Array(n), k;\n   for (j = 1; j <= 19; ++j) {\n    for (k = 0; k < n; ++k) {\n     derivedKey[k] = encryptionKey[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    checkData = cipher.encryptBlock(checkData);\n   }\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  } else {\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(defaultPasswordBytes);\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  }\n  return encryptionKey;\n }\n function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n  var hashData = new Uint8Array(32), i = 0, j, n;\n  n = Math.min(32, password.length);\n  for (; i < n; ++i) {\n   hashData[i] = password[i];\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, hash.length);\n   }\n  }\n  var cipher, userPassword;\n  if (revision >= 3) {\n   userPassword = ownerPassword;\n   var derivedKey = new Uint8Array(keyLengthInBytes), k;\n   for (j = 19; j >= 0; j--) {\n    for (k = 0; k < keyLengthInBytes; ++k) {\n     derivedKey[k] = hash[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    userPassword = cipher.encryptBlock(userPassword);\n   }\n  } else {\n   cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n   userPassword = cipher.encryptBlock(ownerPassword);\n  }\n  return userPassword;\n }\n var identityName = Name.get('Identity');\n function CipherTransformFactory(dict, fileId, password) {\n  var filter = dict.get('Filter');\n  if (!isName(filter, 'Standard')) {\n   error('unknown encryption method');\n  }\n  this.dict = dict;\n  var algorithm = dict.get('V');\n  if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n   error('unsupported encryption algorithm');\n  }\n  this.algorithm = algorithm;\n  var keyLength = dict.get('Length');\n  if (!keyLength) {\n   if (algorithm <= 3) {\n    keyLength = 40;\n   } else {\n    var cfDict = dict.get('CF');\n    var streamCryptoName = dict.get('StmF');\n    if (isDict(cfDict) && isName(streamCryptoName)) {\n     cfDict.suppressEncryption = true;\n     var handlerDict = cfDict.get(streamCryptoName.name);\n     keyLength = handlerDict && handlerDict.get('Length') || 128;\n     if (keyLength < 40) {\n      keyLength <<= 3;\n     }\n    }\n   }\n  }\n  if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n   error('invalid key length');\n  }\n  var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n  var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n  var flags = dict.get('P');\n  var revision = dict.get('R');\n  var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n  this.encryptMetadata = encryptMetadata;\n  var fileIdBytes = stringToBytes(fileId);\n  var passwordBytes;\n  if (password) {\n   if (revision === 6) {\n    try {\n     password = utf8StringToString(password);\n    } catch (ex) {\n     warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n    }\n   }\n   passwordBytes = stringToBytes(password);\n  }\n  var encryptionKey;\n  if (algorithm !== 5) {\n   encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  } else {\n   var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n   var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n   var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n   var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n   var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n   var ownerEncryption = stringToBytes(dict.get('OE'));\n   var userEncryption = stringToBytes(dict.get('UE'));\n   var perms = stringToBytes(dict.get('Perms'));\n   encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n  }\n  if (!encryptionKey && !password) {\n   throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n  } else if (!encryptionKey && password) {\n   var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n   encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  }\n  if (!encryptionKey) {\n   throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n  }\n  this.encryptionKey = encryptionKey;\n  if (algorithm >= 4) {\n   var cf = dict.get('CF');\n   if (isDict(cf)) {\n    cf.suppressEncryption = true;\n   }\n   this.cf = cf;\n   this.stmf = dict.get('StmF') || identityName;\n   this.strf = dict.get('StrF') || identityName;\n   this.eff = dict.get('EFF') || this.stmf;\n  }\n }\n function buildObjectKey(num, gen, encryptionKey, isAes) {\n  var key = new Uint8Array(encryptionKey.length + 9), i, n;\n  for (i = 0, n = encryptionKey.length; i < n; ++i) {\n   key[i] = encryptionKey[i];\n  }\n  key[i++] = num & 0xFF;\n  key[i++] = num >> 8 & 0xFF;\n  key[i++] = num >> 16 & 0xFF;\n  key[i++] = gen & 0xFF;\n  key[i++] = gen >> 8 & 0xFF;\n  if (isAes) {\n   key[i++] = 0x73;\n   key[i++] = 0x41;\n   key[i++] = 0x6C;\n   key[i++] = 0x54;\n  }\n  var hash = calculateMD5(key, 0, i);\n  return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n }\n function buildCipherConstructor(cf, name, num, gen, key) {\n  assert(isName(name), 'Invalid crypt filter name.');\n  var cryptFilter = cf.get(name.name);\n  var cfm;\n  if (cryptFilter !== null && cryptFilter !== undefined) {\n   cfm = cryptFilter.get('CFM');\n  }\n  if (!cfm || cfm.name === 'None') {\n   return function cipherTransformFactoryBuildCipherConstructorNone() {\n    return new NullCipher();\n   };\n  }\n  if (cfm.name === 'V2') {\n   return function cipherTransformFactoryBuildCipherConstructorV2() {\n    return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n   };\n  }\n  if (cfm.name === 'AESV2') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n    return new AES128Cipher(buildObjectKey(num, gen, key, true));\n   };\n  }\n  if (cfm.name === 'AESV3') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n    return new AES256Cipher(key);\n   };\n  }\n  error('Unknown crypto method');\n }\n CipherTransformFactory.prototype = {\n  createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n   if (this.algorithm === 4 || this.algorithm === 5) {\n    return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n   }\n   var key = buildObjectKey(num, gen, this.encryptionKey, false);\n   var cipherConstructor = function buildCipherCipherConstructor() {\n    return new ARCFourCipher(key);\n   };\n   return new CipherTransform(cipherConstructor, cipherConstructor);\n  }\n };\n return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreImage = __w_pdfjs_require__(27);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreMurmurHash3 = __w_pdfjs_require__(31);\nvar coreFonts = __w_pdfjs_require__(26);\nvar coreFunction = __w_pdfjs_require__(6);\nvar corePattern = __w_pdfjs_require__(32);\nvar coreCMap = __w_pdfjs_require__(23);\nvar coreMetrics = __w_pdfjs_require__(30);\nvar coreBidi = __w_pdfjs_require__(21);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(16);\nvar coreUnicode = __w_pdfjs_require__(17);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar ImageKind = sharedUtil.ImageKind;\nvar OPS = sharedUtil.OPS;\nvar TextRenderingMode = sharedUtil.TextRenderingMode;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar PDFImage = coreImage.PDFImage;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\nvar ErrorFont = coreFonts.ErrorFont;\nvar FontFlags = coreFonts.FontFlags;\nvar Font = coreFonts.Font;\nvar IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\nvar ToUnicodeMap = coreFonts.ToUnicodeMap;\nvar getFontType = coreFonts.getFontType;\nvar isPDFFunction = coreFunction.isPDFFunction;\nvar PDFFunction = coreFunction.PDFFunction;\nvar Pattern = corePattern.Pattern;\nvar getTilingPatternIR = corePattern.getTilingPatternIR;\nvar CMapFactory = coreCMap.CMapFactory;\nvar IdentityCMap = coreCMap.IdentityCMap;\nvar getMetrics = coreMetrics.getMetrics;\nvar bidi = coreBidi.bidi;\nvar WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getSerifFonts = coreStandardFonts.getSerifFonts;\nvar getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\nvar getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\nvar reverseIfRtl = coreUnicode.reverseIfRtl;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n var DefaultPartialEvaluatorOptions = {\n  forceDataSchema: false,\n  maxImageSize: -1,\n  disableFontFace: false,\n  disableNativeImageDecoder: false\n };\n function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n  this.xref = xref;\n  this.resources = resources;\n  this.handler = handler;\n  this.forceDataSchema = forceDataSchema;\n }\n NativeImageDecoder.prototype = {\n  canDecode: function (image) {\n   return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n  },\n  decode: function (image) {\n   var dict = image.dict;\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n   var numComps = colorSpace.numComps;\n   var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n    image.getIR(this.forceDataSchema),\n    numComps\n   ]);\n   return decodePromise.then(function (message) {\n    var data = message.data;\n    return new Stream(data, 0, data.length, image.dict);\n   });\n  }\n };\n NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, builtInCMapCache, options) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.handler = handler;\n  this.pageIndex = pageIndex;\n  this.idFactory = idFactory;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.options = options || DefaultPartialEvaluatorOptions;\n  this.fetchBuiltInCMap = function (name) {\n   var cachedCMap = builtInCMapCache[name];\n   if (cachedCMap) {\n    return Promise.resolve(cachedCMap);\n   }\n   return handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n    if (data.compressionType !== CMapCompressionType.NONE) {\n     builtInCMapCache[name] = data;\n    }\n    return data;\n   });\n  };\n }\n var TIME_SLOT_DURATION_MS = 20;\n var CHECK_TIME_EVERY = 100;\n function TimeSlotManager() {\n  this.reset();\n }\n TimeSlotManager.prototype = {\n  check: function TimeSlotManager_check() {\n   if (++this.checked < CHECK_TIME_EVERY) {\n    return false;\n   }\n   this.checked = 0;\n   return this.endTime <= Date.now();\n  },\n  reset: function TimeSlotManager_reset() {\n   this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n   this.checked = 0;\n  }\n };\n var deferred = Promise.resolve();\n var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n PartialEvaluator.prototype = {\n  hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n   if (!isDict(resources)) {\n    return false;\n   }\n   var processed = Object.create(null);\n   if (resources.objId) {\n    processed[resources.objId] = true;\n   }\n   var nodes = [resources], xref = this.xref;\n   while (nodes.length) {\n    var key, i, ii;\n    var node = nodes.shift();\n    var graphicStates = node.get('ExtGState');\n    if (isDict(graphicStates)) {\n     var graphicStatesKeys = graphicStates.getKeys();\n     for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n      key = graphicStatesKeys[i];\n      var graphicState = graphicStates.get(key);\n      var bm = graphicState.get('BM');\n      if (isName(bm) && bm.name !== 'Normal') {\n       return true;\n      }\n     }\n    }\n    var xObjects = node.get('XObject');\n    if (!isDict(xObjects)) {\n     continue;\n    }\n    var xObjectsKeys = xObjects.getKeys();\n    for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n     key = xObjectsKeys[i];\n     var xObject = xObjects.getRaw(key);\n     if (isRef(xObject)) {\n      if (processed[xObject.toString()]) {\n       continue;\n      }\n      xObject = xref.fetch(xObject);\n     }\n     if (!isStream(xObject)) {\n      continue;\n     }\n     if (xObject.dict.objId) {\n      if (processed[xObject.dict.objId]) {\n       continue;\n      }\n      processed[xObject.dict.objId] = true;\n     }\n     var xResources = xObject.dict.get('Resources');\n     if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n      nodes.push(xResources);\n      if (xResources.objId) {\n       processed[xResources.objId] = true;\n      }\n     }\n    }\n   }\n   return false;\n  },\n  buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n   var matrix = xobj.dict.getArray('Matrix');\n   var bbox = xobj.dict.getArray('BBox');\n   var group = xobj.dict.get('Group');\n   if (group) {\n    var groupOptions = {\n     matrix: matrix,\n     bbox: bbox,\n     smask: smask,\n     isolated: false,\n     knockout: false\n    };\n    var groupSubtype = group.get('S');\n    var colorSpace;\n    if (isName(groupSubtype, 'Transparency')) {\n     groupOptions.isolated = group.get('I') || false;\n     groupOptions.knockout = group.get('K') || false;\n     colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n    }\n    if (smask && smask.backdrop) {\n     colorSpace = colorSpace || ColorSpace.singletons.rgb;\n     smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n    }\n    operatorList.addOp(OPS.beginGroup, [groupOptions]);\n   }\n   operatorList.addOp(OPS.paintFormXObjectBegin, [\n    matrix,\n    bbox\n   ]);\n   return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n    operatorList.addOp(OPS.paintFormXObjectEnd, []);\n    if (group) {\n     operatorList.addOp(OPS.endGroup, [groupOptions]);\n    }\n   });\n  },\n  buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n   var self = this;\n   var dict = image.dict;\n   var w = dict.get('Width', 'W');\n   var h = dict.get('Height', 'H');\n   if (!(w && isNum(w)) || !(h && isNum(h))) {\n    warn('Image dimensions are missing, or not numbers.');\n    return;\n   }\n   var maxImageSize = this.options.maxImageSize;\n   if (maxImageSize !== -1 && w * h > maxImageSize) {\n    warn('Image exceeded maximum allowed size and was removed.');\n    return;\n   }\n   var imageMask = dict.get('ImageMask', 'IM') || false;\n   var imgData, args;\n   if (imageMask) {\n    var width = dict.get('Width', 'W');\n    var height = dict.get('Height', 'H');\n    var bitStrideLength = width + 7 >> 3;\n    var imgArray = image.getBytes(bitStrideLength * height);\n    var decode = dict.getArray('Decode', 'D');\n    var inverseDecode = !!decode && decode[0] > 0;\n    imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n    imgData.cached = true;\n    args = [imgData];\n    operatorList.addOp(OPS.paintImageMaskXObject, args);\n    if (cacheKey) {\n     imageCache[cacheKey] = {\n      fn: OPS.paintImageMaskXObject,\n      args: args\n     };\n    }\n    return;\n   }\n   var softMask = dict.get('SMask', 'SM') || false;\n   var mask = dict.get('Mask') || false;\n   var SMALL_IMAGE_DIMENSIONS = 200;\n   if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n    var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n    imgData = imageObj.createImageData(true);\n    operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n    return;\n   }\n   var useNativeImageDecoder = !this.options.disableNativeImageDecoder;\n   var objId = 'img_' + this.idFactory.createObjId();\n   operatorList.addDependency(objId);\n   args = [\n    objId,\n    w,\n    h\n   ];\n   if (useNativeImageDecoder && !softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n    operatorList.addOp(OPS.paintJpegXObject, args);\n    this.handler.send('obj', [\n     objId,\n     this.pageIndex,\n     'JpegStream',\n     image.getIR(this.options.forceDataSchema)\n    ]);\n    return;\n   }\n   var nativeImageDecoder = null;\n   if (useNativeImageDecoder && (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream)) {\n    nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n   }\n   PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n    var imgData = imageObj.createImageData(false);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     imgData\n    ], [imgData.data.buffer]);\n   }).then(undefined, function (reason) {\n    warn('Unable to decode image: ' + reason);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     null\n    ]);\n   });\n   operatorList.addOp(OPS.paintImageXObject, args);\n   if (cacheKey) {\n    imageCache[cacheKey] = {\n     fn: OPS.paintImageXObject,\n     args: args\n    };\n   }\n  },\n  handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n   var smaskContent = smask.get('G');\n   var smaskOptions = {\n    subtype: smask.get('S').name,\n    backdrop: smask.get('BC')\n   };\n   var transferObj = smask.get('TR');\n   if (isPDFFunction(transferObj)) {\n    var transferFn = PDFFunction.parse(this.xref, transferObj);\n    var transferMap = new Uint8Array(256);\n    var tmp = new Float32Array(1);\n    for (var i = 0; i < 256; i++) {\n     tmp[0] = i / 255;\n     transferFn(tmp, 0, tmp, 0);\n     transferMap[i] = tmp[0] * 255 | 0;\n    }\n    smaskOptions.transferMap = transferMap;\n   }\n   return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n  },\n  handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n   var tilingOpList = new OperatorList();\n   var resourcesArray = [\n    patternDict.get('Resources'),\n    resources\n   ];\n   var patternResources = Dict.merge(this.xref, resourcesArray);\n   return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n    operatorList.addDependencies(tilingOpList.dependencies);\n    operatorList.addOp(fn, getTilingPatternIR({\n     fnArray: tilingOpList.fnArray,\n     argsArray: tilingOpList.argsArray\n    }, patternDict, args));\n   });\n  },\n  handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n   var fontName;\n   if (fontArgs) {\n    fontArgs = fontArgs.slice();\n    fontName = fontArgs[0].name;\n   }\n   var self = this;\n   return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n    if (!translated.font.isType3Font) {\n     return translated;\n    }\n    return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n     return translated;\n    }, function (reason) {\n     self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n     return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n    });\n   }).then(function (translated) {\n    state.font = translated.font;\n    translated.send(self.handler);\n    return translated.loadedName;\n   });\n  },\n  handleText: function PartialEvaluator_handleText(chars, state) {\n   var font = state.font;\n   var glyphs = font.charsToGlyphs(chars);\n   var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n   if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n    var buildPath = function (fontChar) {\n     if (!font.renderer.hasBuiltPath(fontChar)) {\n      var path = font.renderer.getPathJs(fontChar);\n      this.handler.send('commonobj', [\n       font.loadedName + '_path_' + fontChar,\n       'FontPath',\n       path\n      ]);\n     }\n    }.bind(this);\n    for (var i = 0, ii = glyphs.length; i < ii; i++) {\n     var glyph = glyphs[i];\n     buildPath(glyph.fontChar);\n     var accent = glyph.accent;\n     if (accent && accent.fontChar) {\n      buildPath(accent.fontChar);\n     }\n    }\n   }\n   return glyphs;\n  },\n  setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n   var gStateObj = [];\n   var gStateKeys = gState.getKeys();\n   var self = this;\n   var promise = Promise.resolve();\n   for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n    var key = gStateKeys[i];\n    var value = gState.get(key);\n    switch (key) {\n    case 'Type':\n     break;\n    case 'LW':\n    case 'LC':\n    case 'LJ':\n    case 'ML':\n    case 'D':\n    case 'RI':\n    case 'FL':\n    case 'CA':\n    case 'ca':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'Font':\n     promise = promise.then(function () {\n      return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       gStateObj.push([\n        key,\n        [\n         loadedName,\n         value[1]\n        ]\n       ]);\n      });\n     });\n     break;\n    case 'BM':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'SMask':\n     if (isName(value, 'None')) {\n      gStateObj.push([\n       key,\n       false\n      ]);\n      break;\n     }\n     if (isDict(value)) {\n      promise = promise.then(function (dict) {\n       return self.handleSMask(dict, resources, operatorList, task, stateManager);\n      }.bind(this, value));\n      gStateObj.push([\n       key,\n       true\n      ]);\n     } else {\n      warn('Unsupported SMask type');\n     }\n     break;\n    case 'OP':\n    case 'op':\n    case 'OPM':\n    case 'BG':\n    case 'BG2':\n    case 'UCR':\n    case 'UCR2':\n    case 'TR':\n    case 'TR2':\n    case 'HT':\n    case 'SM':\n    case 'SA':\n    case 'AIS':\n    case 'TK':\n     info('graphic state operator ' + key);\n     break;\n    default:\n     info('Unknown graphic state operator ' + key);\n     break;\n    }\n   }\n   return promise.then(function () {\n    if (gStateObj.length > 0) {\n     operatorList.addOp(OPS.setGState, [gStateObj]);\n    }\n   });\n  },\n  loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n   function errorFont() {\n    return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n   }\n   var fontRef;\n   if (font) {\n    assert(isRef(font));\n    fontRef = font;\n   } else {\n    var fontRes = resources.get('Font');\n    if (fontRes) {\n     fontRef = fontRes.getRaw(fontName);\n    } else {\n     warn('fontRes not available');\n     return errorFont();\n    }\n   }\n   if (!fontRef) {\n    warn('fontRef not available');\n    return errorFont();\n   }\n   if (this.fontCache.has(fontRef)) {\n    return this.fontCache.get(fontRef);\n   }\n   font = xref.fetchIfRef(fontRef);\n   if (!isDict(font)) {\n    return errorFont();\n   }\n   if (font.translated) {\n    return font.translated;\n   }\n   var fontCapability = createPromiseCapability();\n   var preEvaluatedFont = this.preEvaluateFont(font, xref);\n   var descriptor = preEvaluatedFont.descriptor;\n   var fontRefIsRef = isRef(fontRef), fontID;\n   if (fontRefIsRef) {\n    fontID = fontRef.toString();\n   }\n   if (isDict(descriptor)) {\n    if (!descriptor.fontAliases) {\n     descriptor.fontAliases = Object.create(null);\n    }\n    var fontAliases = descriptor.fontAliases;\n    var hash = preEvaluatedFont.hash;\n    if (fontAliases[hash]) {\n     var aliasFontRef = fontAliases[hash].aliasRef;\n     if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n      this.fontCache.putAlias(fontRef, aliasFontRef);\n      return this.fontCache.get(fontRef);\n     }\n    } else {\n     fontAliases[hash] = { fontID: Font.getFontID() };\n    }\n    if (fontRefIsRef) {\n     fontAliases[hash].aliasRef = fontRef;\n    }\n    fontID = fontAliases[hash].fontID;\n   }\n   if (fontRefIsRef) {\n    this.fontCache.put(fontRef, fontCapability.promise);\n   } else {\n    if (!fontID) {\n     fontID = this.idFactory.createObjId();\n    }\n    this.fontCache.put('id_' + fontID, fontCapability.promise);\n   }\n   assert(fontID, 'The \"fontID\" must be defined.');\n   font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n   font.translated = fontCapability.promise;\n   var translatedPromise;\n   try {\n    translatedPromise = this.translateFont(preEvaluatedFont, xref);\n   } catch (e) {\n    translatedPromise = Promise.reject(e);\n   }\n   var self = this;\n   translatedPromise.then(function (translatedFont) {\n    if (translatedFont.fontType !== undefined) {\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[translatedFont.fontType] = true;\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n   }, function (reason) {\n    self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n    try {\n     var descriptor = preEvaluatedFont.descriptor;\n     var fontFile3 = descriptor && descriptor.get('FontFile3');\n     var subtype = fontFile3 && fontFile3.get('Subtype');\n     var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[fontType] = true;\n    } catch (ex) {\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n   });\n   return fontCapability.promise;\n  },\n  buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n   var lastIndex = operatorList.length - 1;\n   if (!args) {\n    args = [];\n   }\n   if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n    operatorList.addOp(OPS.constructPath, [\n     [fn],\n     args\n    ]);\n   } else {\n    var opArgs = operatorList.argsArray[lastIndex];\n    opArgs[0].push(fn);\n    Array.prototype.push.apply(opArgs[1], args);\n   }\n  },\n  handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n   var patternName = args[args.length - 1];\n   var pattern;\n   if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n    var dict = isStream(pattern) ? pattern.dict : pattern;\n    var typeNum = dict.get('PatternType');\n    if (typeNum === TILING_PATTERN) {\n     var color = cs.base ? cs.base.getRgb(args, 0) : null;\n     return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n    } else if (typeNum === SHADING_PATTERN) {\n     var shading = dict.get('Shading');\n     var matrix = dict.getArray('Matrix');\n     pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n     operatorList.addOp(fn, pattern.getIR());\n     return Promise.resolve();\n    }\n    return Promise.reject('Unknown PatternType: ' + typeNum);\n   }\n   operatorList.addOp(fn, args);\n   return Promise.resolve();\n  },\n  getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n   var self = this;\n   var xref = this.xref;\n   var imageCache = Object.create(null);\n   assert(operatorList);\n   resources = resources || Dict.empty;\n   var xobjs = resources.get('XObject') || Dict.empty;\n   var patterns = resources.get('Pattern') || Dict.empty;\n   var stateManager = new StateManager(initialState || new EvalState());\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, i, ii, cs;\n    while (!(stop = timeSlotManager.check())) {\n     operation.args = null;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     var args = operation.args;\n     var fn = operation.fn;\n     switch (fn | 0) {\n     case OPS.paintXObject:\n      if (args[0].code) {\n       break;\n      }\n      var name = args[0].name;\n      if (!name) {\n       warn('XObject must be referred to by name.');\n       continue;\n      }\n      if (imageCache[name] !== undefined) {\n       operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n       args = null;\n       continue;\n      }\n      var xobj = xobjs.get(name);\n      if (xobj) {\n       assert(isStream(xobj), 'XObject should be a stream');\n       var type = xobj.dict.get('Subtype');\n       assert(isName(type), 'XObject should have a Name subtype');\n       if (type.name === 'Form') {\n        stateManager.save();\n        next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n         stateManager.restore();\n        }));\n        return;\n       } else if (type.name === 'Image') {\n        self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n        args = null;\n        continue;\n       } else if (type.name === 'PS') {\n        info('Ignored XObject subtype PS');\n        continue;\n       } else {\n        error('Unhandled XObject subtype ' + type.name);\n       }\n      }\n      break;\n     case OPS.setFont:\n      var fontSize = args[1];\n      next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       operatorList.addOp(OPS.setFont, [\n        loadedName,\n        fontSize\n       ]);\n      }));\n      return;\n     case OPS.endInlineImage:\n      var cacheKey = args[0].cacheKey;\n      if (cacheKey) {\n       var cacheEntry = imageCache[cacheKey];\n       if (cacheEntry !== undefined) {\n        operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n        args = null;\n        continue;\n       }\n      }\n      self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n      args = null;\n      continue;\n     case OPS.showText:\n      args[0] = self.handleText(args[0], stateManager.state);\n      break;\n     case OPS.showSpacedText:\n      var arr = args[0];\n      var combinedGlyphs = [];\n      var arrLength = arr.length;\n      var state = stateManager.state;\n      for (i = 0; i < arrLength; ++i) {\n       var arrItem = arr[i];\n       if (isString(arrItem)) {\n        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n       } else if (isNum(arrItem)) {\n        combinedGlyphs.push(arrItem);\n       }\n      }\n      args[0] = combinedGlyphs;\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineShowText:\n      operatorList.addOp(OPS.nextLine);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      operatorList.addOp(OPS.nextLine);\n      operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n      operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.setTextRenderingMode:\n      stateManager.state.textRenderingMode = args[0];\n      break;\n     case OPS.setFillColorSpace:\n      stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setStrokeColorSpace:\n      stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setFillColor:\n      cs = stateManager.state.fillColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColor:\n      cs = stateManager.state.strokeColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillGray:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeGray:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillCMYKColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeCMYKColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillRGBColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setStrokeRGBColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setFillColorN:\n      cs = stateManager.state.fillColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColorN:\n      cs = stateManager.state.strokeColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.shadingFill:\n      var shadingRes = resources.get('Shading');\n      if (!shadingRes) {\n       error('No shading resource found');\n      }\n      var shading = shadingRes.get(args[0].name);\n      if (!shading) {\n       error('No shading object found');\n      }\n      var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n      var patternIR = shadingFill.getIR();\n      args = [patternIR];\n      fn = OPS.shadingFill;\n      break;\n     case OPS.setGState:\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !extGState.has(dictName.name)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n      return;\n     case OPS.moveTo:\n     case OPS.lineTo:\n     case OPS.curveTo:\n     case OPS.curveTo2:\n     case OPS.curveTo3:\n     case OPS.closePath:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.rectangle:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.markPoint:\n     case OPS.markPointProps:\n     case OPS.beginMarkedContent:\n     case OPS.beginMarkedContentProps:\n     case OPS.endMarkedContent:\n     case OPS.beginCompat:\n     case OPS.endCompat:\n      continue;\n     default:\n      if (args !== null) {\n       for (i = 0, ii = args.length; i < ii; i++) {\n        if (args[i] instanceof Dict) {\n         break;\n        }\n       }\n       if (i < ii) {\n        warn('getOperatorList - ignoring operator: ' + fn);\n        continue;\n       }\n      }\n     }\n     operatorList.addOp(fn, args);\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n     operatorList.addOp(OPS.restore, []);\n    }\n    resolve();\n   });\n  },\n  getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n   stateManager = stateManager || new StateManager(new TextState());\n   var WhitespaceRegexp = /\\s/g;\n   var textContent = {\n    items: [],\n    styles: Object.create(null)\n   };\n   var textContentItem = {\n    initialized: false,\n    str: [],\n    width: 0,\n    height: 0,\n    vertical: false,\n    lastAdvanceWidth: 0,\n    lastAdvanceHeight: 0,\n    textAdvanceScale: 0,\n    spaceWidth: 0,\n    fakeSpaceMin: Infinity,\n    fakeMultiSpaceMin: Infinity,\n    fakeMultiSpaceMax: -0,\n    textRunBreakAllowed: false,\n    transform: null,\n    fontName: null\n   };\n   var SPACE_FACTOR = 0.3;\n   var MULTI_SPACE_FACTOR = 1.5;\n   var MULTI_SPACE_FACTOR_MAX = 4;\n   var self = this;\n   var xref = this.xref;\n   resources = xref.fetchIfRef(resources) || Dict.empty;\n   var xobjs = null;\n   var xobjsCache = Object.create(null);\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var textState;\n   function ensureTextContentItem() {\n    if (textContentItem.initialized) {\n     return textContentItem;\n    }\n    var font = textState.font;\n    if (!(font.loadedName in textContent.styles)) {\n     textContent.styles[font.loadedName] = {\n      fontFamily: font.fallbackName,\n      ascent: font.ascent,\n      descent: font.descent,\n      vertical: font.vertical\n     };\n    }\n    textContentItem.fontName = font.loadedName;\n    var tsm = [\n     textState.fontSize * textState.textHScale,\n     0,\n     0,\n     textState.fontSize,\n     0,\n     textState.textRise\n    ];\n    if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n     var glyphHeight = font.bbox[3] - font.bbox[1];\n     if (glyphHeight > 0) {\n      glyphHeight = glyphHeight * textState.fontMatrix[3];\n      tsm[3] *= glyphHeight;\n     }\n    }\n    var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n    textContentItem.transform = trm;\n    if (!font.vertical) {\n     textContentItem.width = 0;\n     textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n     textContentItem.vertical = false;\n    } else {\n     textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n     textContentItem.height = 0;\n     textContentItem.vertical = true;\n    }\n    var a = textState.textLineMatrix[0];\n    var b = textState.textLineMatrix[1];\n    var scaleLineX = Math.sqrt(a * a + b * b);\n    a = textState.ctm[0];\n    b = textState.ctm[1];\n    var scaleCtmX = Math.sqrt(a * a + b * b);\n    textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n    textContentItem.lastAdvanceWidth = 0;\n    textContentItem.lastAdvanceHeight = 0;\n    var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n    if (spaceWidth) {\n     textContentItem.spaceWidth = spaceWidth;\n     textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n     textContentItem.textRunBreakAllowed = !font.isMonospace;\n    } else {\n     textContentItem.spaceWidth = 0;\n     textContentItem.fakeSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMax = 0;\n     textContentItem.textRunBreakAllowed = false;\n    }\n    textContentItem.initialized = true;\n    return textContentItem;\n   }\n   function replaceWhitespace(str) {\n    var i = 0, ii = str.length, code;\n    while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n     i++;\n    }\n    return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n   }\n   function runBidiTransform(textChunk) {\n    var str = textChunk.str.join('');\n    var bidiResult = bidi(str, -1, textChunk.vertical);\n    return {\n     str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n     dir: bidiResult.dir,\n     width: textChunk.width,\n     height: textChunk.height,\n     transform: textChunk.transform,\n     fontName: textChunk.fontName\n    };\n   }\n   function handleSetFont(fontName, fontRef) {\n    return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n     textState.font = translated.font;\n     textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n    });\n   }\n   function buildTextContentItem(chars) {\n    var font = textState.font;\n    var textChunk = ensureTextContentItem();\n    var width = 0;\n    var height = 0;\n    var glyphs = font.charsToGlyphs(chars);\n    for (var i = 0; i < glyphs.length; i++) {\n     var glyph = glyphs[i];\n     var glyphWidth = null;\n     if (font.vertical && glyph.vmetric) {\n      glyphWidth = glyph.vmetric[0];\n     } else {\n      glyphWidth = glyph.width;\n     }\n     var glyphUnicode = glyph.unicode;\n     var NormalizedUnicodes = getNormalizedUnicodes();\n     if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n      glyphUnicode = NormalizedUnicodes[glyphUnicode];\n     }\n     glyphUnicode = reverseIfRtl(glyphUnicode);\n     var charSpacing = textState.charSpacing;\n     if (glyph.isSpace) {\n      var wordSpacing = textState.wordSpacing;\n      charSpacing += wordSpacing;\n      if (wordSpacing > 0) {\n       addFakeSpaces(wordSpacing, textChunk.str);\n      }\n     }\n     var tx = 0;\n     var ty = 0;\n     if (!font.vertical) {\n      var w0 = glyphWidth * textState.fontMatrix[0];\n      tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n      width += tx;\n     } else {\n      var w1 = glyphWidth * textState.fontMatrix[0];\n      ty = w1 * textState.fontSize + charSpacing;\n      height += ty;\n     }\n     textState.translateTextMatrix(tx, ty);\n     textChunk.str.push(glyphUnicode);\n    }\n    if (!font.vertical) {\n     textChunk.lastAdvanceWidth = width;\n     textChunk.width += width;\n    } else {\n     textChunk.lastAdvanceHeight = height;\n     textChunk.height += Math.abs(height);\n    }\n    return textChunk;\n   }\n   function addFakeSpaces(width, strBuf) {\n    if (width < textContentItem.fakeSpaceMin) {\n     return;\n    }\n    if (width < textContentItem.fakeMultiSpaceMin) {\n     strBuf.push(' ');\n     return;\n    }\n    var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n    while (fakeSpaces-- > 0) {\n     strBuf.push(' ');\n    }\n   }\n   function flushTextContentItem() {\n    if (!textContentItem.initialized) {\n     return;\n    }\n    textContentItem.width *= textContentItem.textAdvanceScale;\n    textContentItem.height *= textContentItem.textAdvanceScale;\n    textContent.items.push(runBidiTransform(textContentItem));\n    textContentItem.initialized = false;\n    textContentItem.str.length = 0;\n   }\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, args = [];\n    while (!(stop = timeSlotManager.check())) {\n     args.length = 0;\n     operation.args = args;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     textState = stateManager.state;\n     var fn = operation.fn;\n     args = operation.args;\n     var advance, diff;\n     switch (fn | 0) {\n     case OPS.setFont:\n      var fontNameArg = args[0].name, fontSizeArg = args[1];\n      if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n       break;\n      }\n      flushTextContentItem();\n      textState.fontName = fontNameArg;\n      textState.fontSize = fontSizeArg;\n      next(handleSetFont(fontNameArg, null));\n      return;\n     case OPS.setTextRise:\n      flushTextContentItem();\n      textState.textRise = args[0];\n      break;\n     case OPS.setHScale:\n      flushTextContentItem();\n      textState.textHScale = args[0] / 100;\n      break;\n     case OPS.setLeading:\n      flushTextContentItem();\n      textState.leading = args[0];\n      break;\n     case OPS.moveText:\n      var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n      advance = args[0] - args[1];\n      if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(args[0], args[1]);\n       textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n       textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n       diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.setLeadingMoveText:\n      flushTextContentItem();\n      textState.leading = -args[1];\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.nextLine:\n      flushTextContentItem();\n      textState.carriageReturn();\n      break;\n     case OPS.setTextMatrix:\n      advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n      if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(advance.width, advance.height);\n       textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n       textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n       diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      break;\n     case OPS.setCharSpacing:\n      textState.charSpacing = args[0];\n      break;\n     case OPS.setWordSpacing:\n      textState.wordSpacing = args[0];\n      break;\n     case OPS.beginText:\n      flushTextContentItem();\n      textState.textMatrix = IDENTITY_MATRIX.slice();\n      textState.textLineMatrix = IDENTITY_MATRIX.slice();\n      break;\n     case OPS.showSpacedText:\n      var items = args[0];\n      var offset;\n      for (var j = 0, jj = items.length; j < jj; j++) {\n       if (typeof items[j] === 'string') {\n        buildTextContentItem(items[j]);\n       } else if (isNum(items[j])) {\n        ensureTextContentItem();\n        advance = items[j] * textState.fontSize / 1000;\n        var breakTextRun = false;\n        if (textState.font.vertical) {\n         offset = advance;\n         textState.translateTextMatrix(0, offset);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.height += offset;\n         }\n        } else {\n         advance = -advance;\n         offset = advance * textState.textHScale;\n         textState.translateTextMatrix(offset, 0);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.width += offset;\n         }\n        }\n        if (breakTextRun) {\n         flushTextContentItem();\n        } else if (advance > 0) {\n         addFakeSpaces(advance, textContentItem.str);\n        }\n       }\n      }\n      break;\n     case OPS.showText:\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineShowText:\n      flushTextContentItem();\n      textState.carriageReturn();\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      flushTextContentItem();\n      textState.wordSpacing = args[0];\n      textState.charSpacing = args[1];\n      textState.carriageReturn();\n      buildTextContentItem(args[2]);\n      break;\n     case OPS.paintXObject:\n      flushTextContentItem();\n      if (args[0].code) {\n       break;\n      }\n      if (!xobjs) {\n       xobjs = resources.get('XObject') || Dict.empty;\n      }\n      var name = args[0].name;\n      if (xobjsCache.key === name) {\n       if (xobjsCache.texts) {\n        Util.appendToArray(textContent.items, xobjsCache.texts.items);\n        Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n       }\n       break;\n      }\n      var xobj = xobjs.get(name);\n      if (!xobj) {\n       break;\n      }\n      assert(isStream(xobj), 'XObject should be a stream');\n      var type = xobj.dict.get('Subtype');\n      assert(isName(type), 'XObject should have a Name subtype');\n      if ('Form' !== type.name) {\n       xobjsCache.key = name;\n       xobjsCache.texts = null;\n       break;\n      }\n      stateManager.save();\n      var matrix = xobj.dict.getArray('Matrix');\n      if (isArray(matrix) && matrix.length === 6) {\n       stateManager.transform(matrix);\n      }\n      next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n       Util.appendToArray(textContent.items, formTextContent.items);\n       Util.extendObj(textContent.styles, formTextContent.styles);\n       stateManager.restore();\n       xobjsCache.key = name;\n       xobjsCache.texts = formTextContent;\n      }));\n      return;\n     case OPS.setGState:\n      flushTextContentItem();\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !isName(dictName)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      if (!isDict(gState)) {\n       break;\n      }\n      var gStateFont = gState.get('Font');\n      if (gStateFont) {\n       textState.fontName = null;\n       textState.fontSize = gStateFont[1];\n       next(handleSetFont(null, gStateFont[0]));\n       return;\n      }\n      break;\n     }\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    flushTextContentItem();\n    resolve(textContent);\n   });\n  },\n  extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n   var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n   var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n   if (properties.composite) {\n    var cidSystemInfo = dict.get('CIDSystemInfo');\n    if (isDict(cidSystemInfo)) {\n     properties.cidSystemInfo = {\n      registry: cidSystemInfo.get('Registry'),\n      ordering: cidSystemInfo.get('Ordering'),\n      supplement: cidSystemInfo.get('Supplement')\n     };\n    }\n    var cidToGidMap = dict.get('CIDToGIDMap');\n    if (isStream(cidToGidMap)) {\n     properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n    }\n   }\n   var differences = [];\n   var baseEncodingName = null;\n   var encoding;\n   if (dict.has('Encoding')) {\n    encoding = dict.get('Encoding');\n    if (isDict(encoding)) {\n     baseEncodingName = encoding.get('BaseEncoding');\n     baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n     if (encoding.has('Differences')) {\n      var diffEncoding = encoding.get('Differences');\n      var index = 0;\n      for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n       var data = xref.fetchIfRef(diffEncoding[j]);\n       if (isNum(data)) {\n        index = data;\n       } else if (isName(data)) {\n        differences[index++] = data.name;\n       } else {\n        error('Invalid entry in \\'Differences\\' array: ' + data);\n       }\n      }\n     }\n    } else if (isName(encoding)) {\n     baseEncodingName = encoding.name;\n    } else {\n     error('Encoding is not a Name nor a Dict');\n    }\n    if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n     baseEncodingName = null;\n    }\n   }\n   if (baseEncodingName) {\n    properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n   } else {\n    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n    encoding = StandardEncoding;\n    if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n     encoding = WinAnsiEncoding;\n    }\n    if (isSymbolicFont) {\n     encoding = MacRomanEncoding;\n     if (!properties.file) {\n      if (/Symbol/i.test(properties.name)) {\n       encoding = SymbolSetEncoding;\n      } else if (/Dingbats/i.test(properties.name)) {\n       encoding = ZapfDingbatsEncoding;\n      }\n     }\n    }\n    properties.defaultEncoding = encoding;\n   }\n   properties.differences = differences;\n   properties.baseEncodingName = baseEncodingName;\n   properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n   properties.dict = dict;\n   return toUnicodePromise.then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return this.buildToUnicode(properties);\n   }.bind(this)).then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return properties;\n   });\n  },\n  buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n   properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n   if (properties.hasIncludedToUnicodeMap) {\n    return Promise.resolve(properties.toUnicode);\n   }\n   var toUnicode, charcode, glyphName;\n   if (!properties.composite) {\n    toUnicode = [];\n    var encoding = properties.defaultEncoding.slice();\n    var baseEncodingName = properties.baseEncodingName;\n    var differences = properties.differences;\n    for (charcode in differences) {\n     glyphName = differences[charcode];\n     if (glyphName === '.notdef') {\n      continue;\n     }\n     encoding[charcode] = glyphName;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    for (charcode in encoding) {\n     glyphName = encoding[charcode];\n     if (glyphName === '') {\n      continue;\n     } else if (glyphsUnicodeMap[glyphName] === undefined) {\n      var code = 0;\n      switch (glyphName[0]) {\n      case 'G':\n       if (glyphName.length === 3) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'g':\n       if (glyphName.length === 5) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'C':\n      case 'c':\n       if (glyphName.length >= 3) {\n        code = +glyphName.substr(1);\n       }\n       break;\n      default:\n       var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n       if (unicode !== -1) {\n        code = unicode;\n       }\n      }\n      if (code) {\n       if (baseEncodingName && code === +charcode) {\n        var baseEncoding = getEncoding(baseEncodingName);\n        if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n         continue;\n        }\n       }\n       toUnicode[charcode] = String.fromCharCode(code);\n      }\n      continue;\n     }\n     toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n    }\n    return Promise.resolve(new ToUnicodeMap(toUnicode));\n   }\n   if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n    var registry = properties.cidSystemInfo.registry;\n    var ordering = properties.cidSystemInfo.ordering;\n    var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n    return CMapFactory.create({\n     encoding: ucs2CMapName,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (ucs2CMap) {\n     var cMap = properties.cMap;\n     toUnicode = [];\n     cMap.forEach(function (charcode, cid) {\n      assert(cid <= 0xffff, 'Max size of CID is 65,535');\n      var ucs2 = ucs2CMap.lookup(cid);\n      if (ucs2) {\n       toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n      }\n     });\n     return new ToUnicodeMap(toUnicode);\n    });\n   }\n   return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n  },\n  readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n   var cmapObj = toUnicode;\n   if (isName(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     return new ToUnicodeMap(cmap.getMap());\n    });\n   } else if (isStream(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     var map = new Array(cmap.length);\n     cmap.forEach(function (charCode, token) {\n      var str = [];\n      for (var k = 0; k < token.length; k += 2) {\n       var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       if ((w1 & 0xF800) !== 0xD800) {\n        str.push(w1);\n        continue;\n       }\n       k += 2;\n       var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n      }\n      map[charCode] = String.fromCharCode.apply(String, str);\n     });\n     return new ToUnicodeMap(map);\n    });\n   }\n   return Promise.resolve(null);\n  },\n  readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n   var glyphsData = cidToGidStream.getBytes();\n   var result = [];\n   for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n    var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n    if (glyphID === 0) {\n     continue;\n    }\n    var code = j >> 1;\n    result[code] = glyphID;\n   }\n   return result;\n  },\n  extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n   var glyphsWidths = [];\n   var defaultWidth = 0;\n   var glyphsVMetrics = [];\n   var defaultVMetrics;\n   var i, ii, j, jj, start, code, widths;\n   if (properties.composite) {\n    defaultWidth = dict.get('DW') || 1000;\n    widths = dict.get('W');\n    if (widths) {\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      start = xref.fetchIfRef(widths[i++]);\n      code = xref.fetchIfRef(widths[i]);\n      if (isArray(code)) {\n       for (j = 0, jj = code.length; j < jj; j++) {\n        glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n       }\n      } else {\n       var width = xref.fetchIfRef(widths[++i]);\n       for (j = start; j <= code; j++) {\n        glyphsWidths[j] = width;\n       }\n      }\n     }\n    }\n    if (properties.vertical) {\n     var vmetrics = dict.getArray('DW2') || [\n      880,\n      -1000\n     ];\n     defaultVMetrics = [\n      vmetrics[1],\n      defaultWidth * 0.5,\n      vmetrics[0]\n     ];\n     vmetrics = dict.get('W2');\n     if (vmetrics) {\n      for (i = 0, ii = vmetrics.length; i < ii; i++) {\n       start = xref.fetchIfRef(vmetrics[i++]);\n       code = xref.fetchIfRef(vmetrics[i]);\n       if (isArray(code)) {\n        for (j = 0, jj = code.length; j < jj; j++) {\n         glyphsVMetrics[start++] = [\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j])\n         ];\n        }\n       } else {\n        var vmetric = [\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i])\n        ];\n        for (j = start; j <= code; j++) {\n         glyphsVMetrics[j] = vmetric;\n        }\n       }\n      }\n     }\n    }\n   } else {\n    var firstChar = properties.firstChar;\n    widths = dict.get('Widths');\n    if (widths) {\n     j = firstChar;\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n     }\n     defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (isName(baseFontName)) {\n      var metrics = this.getBaseFontMetrics(baseFontName.name);\n      glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n      defaultWidth = metrics.defaultWidth;\n     }\n    }\n   }\n   var isMonospace = true;\n   var firstWidth = defaultWidth;\n   for (var glyph in glyphsWidths) {\n    var glyphWidth = glyphsWidths[glyph];\n    if (!glyphWidth) {\n     continue;\n    }\n    if (!firstWidth) {\n     firstWidth = glyphWidth;\n     continue;\n    }\n    if (firstWidth !== glyphWidth) {\n     isMonospace = false;\n     break;\n    }\n   }\n   if (isMonospace) {\n    properties.flags |= FontFlags.FixedPitch;\n   }\n   properties.defaultWidth = defaultWidth;\n   properties.widths = glyphsWidths;\n   properties.defaultVMetrics = defaultVMetrics;\n   properties.vmetrics = glyphsVMetrics;\n  },\n  isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n   var fontNameWoStyle = baseFontName.split('-')[0];\n   return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n  },\n  getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n   var defaultWidth = 0;\n   var widths = [];\n   var monospace = false;\n   var stdFontMap = getStdFontMap();\n   var lookupName = stdFontMap[name] || name;\n   var Metrics = getMetrics();\n   if (!(lookupName in Metrics)) {\n    if (this.isSerifFont(name)) {\n     lookupName = 'Times-Roman';\n    } else {\n     lookupName = 'Helvetica';\n    }\n   }\n   var glyphWidths = Metrics[lookupName];\n   if (isNum(glyphWidths)) {\n    defaultWidth = glyphWidths;\n    monospace = true;\n   } else {\n    widths = glyphWidths();\n   }\n   return {\n    defaultWidth: defaultWidth,\n    monospace: monospace,\n    widths: widths\n   };\n  },\n  buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n   var widths = Object.create(null);\n   var differences = properties.differences;\n   var encoding = properties.defaultEncoding;\n   for (var charCode = 0; charCode < 256; charCode++) {\n    if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n     widths[charCode] = widthsByGlyphName[differences[charCode]];\n     continue;\n    }\n    if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n     widths[charCode] = widthsByGlyphName[encoding[charCode]];\n     continue;\n    }\n   }\n   return widths;\n  },\n  preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n   var baseDict = dict;\n   var type = dict.get('Subtype');\n   assert(isName(type), 'invalid font Subtype');\n   var composite = false;\n   var uint8array;\n   if (type.name === 'Type0') {\n    var df = dict.get('DescendantFonts');\n    if (!df) {\n     error('Descendant fonts are not specified');\n    }\n    dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n    type = dict.get('Subtype');\n    assert(isName(type), 'invalid font Subtype');\n    composite = true;\n   }\n   var descriptor = dict.get('FontDescriptor');\n   if (descriptor) {\n    var hash = new MurmurHash3_64();\n    var encoding = baseDict.getRaw('Encoding');\n    if (isName(encoding)) {\n     hash.update(encoding.name);\n    } else if (isRef(encoding)) {\n     hash.update(encoding.toString());\n    } else if (isDict(encoding)) {\n     var keys = encoding.getKeys();\n     for (var i = 0, ii = keys.length; i < ii; i++) {\n      var entry = encoding.getRaw(keys[i]);\n      if (isName(entry)) {\n       hash.update(entry.name);\n      } else if (isRef(entry)) {\n       hash.update(entry.toString());\n      } else if (isArray(entry)) {\n       var diffLength = entry.length, diffBuf = new Array(diffLength);\n       for (var j = 0; j < diffLength; j++) {\n        var diffEntry = entry[j];\n        if (isName(diffEntry)) {\n         diffBuf[j] = diffEntry.name;\n        } else if (isNum(diffEntry) || isRef(diffEntry)) {\n         diffBuf[j] = diffEntry.toString();\n        }\n       }\n       hash.update(diffBuf.join());\n      }\n     }\n    }\n    var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n    if (isStream(toUnicode)) {\n     var stream = toUnicode.str || toUnicode;\n     uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n     hash.update(uint8array);\n    } else if (isName(toUnicode)) {\n     hash.update(toUnicode.name);\n    }\n    var widths = dict.get('Widths') || baseDict.get('Widths');\n    if (widths) {\n     uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n     hash.update(uint8array);\n    }\n   }\n   return {\n    descriptor: descriptor,\n    dict: dict,\n    baseDict: baseDict,\n    composite: composite,\n    type: type.name,\n    hash: hash ? hash.hexdigest() : ''\n   };\n  },\n  translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n   var baseDict = preEvaluatedFont.baseDict;\n   var dict = preEvaluatedFont.dict;\n   var composite = preEvaluatedFont.composite;\n   var descriptor = preEvaluatedFont.descriptor;\n   var type = preEvaluatedFont.type;\n   var maxCharIndex = composite ? 0xFFFF : 0xFF;\n   var properties;\n   if (!descriptor) {\n    if (type === 'Type3') {\n     descriptor = new Dict(null);\n     descriptor.set('FontName', Name.get(type));\n     descriptor.set('FontBBox', dict.getArray('FontBBox'));\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (!isName(baseFontName)) {\n      error('Base font is not specified');\n     }\n     baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n     var metrics = this.getBaseFontMetrics(baseFontName);\n     var fontNameWoStyle = baseFontName.split('-')[0];\n     var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n     properties = {\n      type: type,\n      name: baseFontName,\n      widths: metrics.widths,\n      defaultWidth: metrics.defaultWidth,\n      flags: flags,\n      firstChar: 0,\n      lastChar: maxCharIndex\n     };\n     return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n      properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n      return new Font(baseFontName, null, properties);\n     }.bind(this));\n    }\n   }\n   var firstChar = dict.get('FirstChar') || 0;\n   var lastChar = dict.get('LastChar') || maxCharIndex;\n   var fontName = descriptor.get('FontName');\n   var baseFont = dict.get('BaseFont');\n   if (isString(fontName)) {\n    fontName = Name.get(fontName);\n   }\n   if (isString(baseFont)) {\n    baseFont = Name.get(baseFont);\n   }\n   if (type !== 'Type3') {\n    var fontNameStr = fontName && fontName.name;\n    var baseFontStr = baseFont && baseFont.name;\n    if (fontNameStr !== baseFontStr) {\n     info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n     if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n      fontName = baseFont;\n     }\n    }\n   }\n   fontName = fontName || baseFont;\n   assert(isName(fontName), 'invalid font name');\n   var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n   if (fontFile) {\n    if (fontFile.dict) {\n     var subtype = fontFile.dict.get('Subtype');\n     if (subtype) {\n      subtype = subtype.name;\n     }\n     var length1 = fontFile.dict.get('Length1');\n     var length2 = fontFile.dict.get('Length2');\n     var length3 = fontFile.dict.get('Length3');\n    }\n   }\n   properties = {\n    type: type,\n    name: fontName.name,\n    subtype: subtype,\n    file: fontFile,\n    length1: length1,\n    length2: length2,\n    length3: length3,\n    loadedName: baseDict.loadedName,\n    composite: composite,\n    wideChars: composite,\n    fixedPitch: false,\n    fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n    firstChar: firstChar || 0,\n    lastChar: lastChar || maxCharIndex,\n    bbox: descriptor.getArray('FontBBox'),\n    ascent: descriptor.get('Ascent'),\n    descent: descriptor.get('Descent'),\n    xHeight: descriptor.get('XHeight'),\n    capHeight: descriptor.get('CapHeight'),\n    flags: descriptor.get('Flags'),\n    italicAngle: descriptor.get('ItalicAngle'),\n    coded: false\n   };\n   var cMapPromise;\n   if (composite) {\n    var cidEncoding = baseDict.get('Encoding');\n    if (isName(cidEncoding)) {\n     properties.cidEncoding = cidEncoding.name;\n    }\n    cMapPromise = CMapFactory.create({\n     encoding: cidEncoding,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cMap) {\n     properties.cMap = cMap;\n     properties.vertical = properties.cMap.vertical;\n    });\n   } else {\n    cMapPromise = Promise.resolve(undefined);\n   }\n   return cMapPromise.then(function () {\n    return this.extractDataStructures(dict, baseDict, xref, properties);\n   }.bind(this)).then(function (properties) {\n    this.extractWidths(dict, xref, descriptor, properties);\n    if (type === 'Type3') {\n     properties.isType3Font = true;\n    }\n    return new Font(fontName.name, fontFile, properties);\n   }.bind(this));\n  }\n };\n return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n function TranslatedFont(loadedName, font, dict) {\n  this.loadedName = loadedName;\n  this.font = font;\n  this.dict = dict;\n  this.type3Loaded = null;\n  this.sent = false;\n }\n TranslatedFont.prototype = {\n  send: function (handler) {\n   if (this.sent) {\n    return;\n   }\n   var fontData = this.font.exportData();\n   handler.send('commonobj', [\n    this.loadedName,\n    'Font',\n    fontData\n   ]);\n   this.sent = true;\n  },\n  loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n   assert(this.font.isType3Font);\n   if (this.type3Loaded) {\n    return this.type3Loaded;\n   }\n   var translatedFont = this.font;\n   var loadCharProcsPromise = Promise.resolve();\n   var charProcs = this.dict.get('CharProcs');\n   var fontResources = this.dict.get('Resources') || resources;\n   var charProcKeys = charProcs.getKeys();\n   var charProcOperatorList = Object.create(null);\n   for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n    loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n     var glyphStream = charProcs.get(key);\n     var operatorList = new OperatorList();\n     return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n      charProcOperatorList[key] = operatorList.getIR();\n      parentOperatorList.addDependencies(operatorList.dependencies);\n     }, function (reason) {\n      warn('Type3 font resource \\\"' + key + '\\\" is not available');\n      var operatorList = new OperatorList();\n      charProcOperatorList[key] = operatorList.getIR();\n     });\n    }.bind(this, charProcKeys[i]));\n   }\n   this.type3Loaded = loadCharProcsPromise.then(function () {\n    translatedFont.charProcOperatorList = charProcOperatorList;\n   });\n   return this.type3Loaded;\n  }\n };\n return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n var CHUNK_SIZE = 1000;\n var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n function getTransfers(queue) {\n  var transfers = [];\n  var fnArray = queue.fnArray, argsArray = queue.argsArray;\n  for (var i = 0, ii = queue.length; i < ii; i++) {\n   switch (fnArray[i]) {\n   case OPS.paintInlineImageXObject:\n   case OPS.paintInlineImageXObjectGroup:\n   case OPS.paintImageMaskXObject:\n    var arg = argsArray[i][0];\n    if (!arg.cached) {\n     transfers.push(arg.data.buffer);\n    }\n    break;\n   }\n  }\n  return transfers;\n }\n function OperatorList(intent, messageHandler, pageIndex) {\n  this.messageHandler = messageHandler;\n  this.fnArray = [];\n  this.argsArray = [];\n  this.dependencies = Object.create(null);\n  this._totalLength = 0;\n  this.pageIndex = pageIndex;\n  this.intent = intent;\n }\n OperatorList.prototype = {\n  get length() {\n   return this.argsArray.length;\n  },\n  get totalLength() {\n   return this._totalLength + this.length;\n  },\n  addOp: function (fn, args) {\n   this.fnArray.push(fn);\n   this.argsArray.push(args);\n   if (this.messageHandler) {\n    if (this.fnArray.length >= CHUNK_SIZE) {\n     this.flush();\n    } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n     this.flush();\n    }\n   }\n  },\n  addDependency: function (dependency) {\n   if (dependency in this.dependencies) {\n    return;\n   }\n   this.dependencies[dependency] = true;\n   this.addOp(OPS.dependency, [dependency]);\n  },\n  addDependencies: function (dependencies) {\n   for (var key in dependencies) {\n    this.addDependency(key);\n   }\n  },\n  addOpList: function (opList) {\n   Util.extendObj(this.dependencies, opList.dependencies);\n   for (var i = 0, ii = opList.length; i < ii; i++) {\n    this.addOp(opList.fnArray[i], opList.argsArray[i]);\n   }\n  },\n  getIR: function () {\n   return {\n    fnArray: this.fnArray,\n    argsArray: this.argsArray,\n    length: this.length\n   };\n  },\n  flush: function (lastChunk) {\n   if (this.intent !== 'oplist') {\n    new QueueOptimizer().optimize(this);\n   }\n   var transfers = getTransfers(this);\n   var length = this.length;\n   this._totalLength += length;\n   this.messageHandler.send('RenderPageChunk', {\n    operatorList: {\n     fnArray: this.fnArray,\n     argsArray: this.argsArray,\n     lastChunk: lastChunk,\n     length: length\n    },\n    pageIndex: this.pageIndex,\n    intent: this.intent\n   }, transfers);\n   this.dependencies = Object.create(null);\n   this.fnArray.length = 0;\n   this.argsArray.length = 0;\n  }\n };\n return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n function StateManager(initialState) {\n  this.state = initialState;\n  this.stateStack = [];\n }\n StateManager.prototype = {\n  save: function () {\n   var old = this.state;\n   this.stateStack.push(this.state);\n   this.state = old.clone();\n  },\n  restore: function () {\n   var prev = this.stateStack.pop();\n   if (prev) {\n    this.state = prev;\n   }\n  },\n  transform: function (args) {\n   this.state.ctm = Util.transform(this.state.ctm, args);\n  }\n };\n return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n function TextState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.fontName = null;\n  this.fontSize = 0;\n  this.font = null;\n  this.fontMatrix = FONT_IDENTITY_MATRIX;\n  this.textMatrix = IDENTITY_MATRIX.slice();\n  this.textLineMatrix = IDENTITY_MATRIX.slice();\n  this.charSpacing = 0;\n  this.wordSpacing = 0;\n  this.leading = 0;\n  this.textHScale = 1;\n  this.textRise = 0;\n }\n TextState.prototype = {\n  setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textLineMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textLineMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n   var font = this.font;\n   if (!font) {\n    return null;\n   }\n   var m = this.textLineMatrix;\n   if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n    return null;\n   }\n   var txDiff = e - m[4], tyDiff = f - m[5];\n   if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n    return null;\n   }\n   var tx, ty, denominator = a * d - b * c;\n   if (font.vertical) {\n    tx = -tyDiff * c / denominator;\n    ty = tyDiff * a / denominator;\n   } else {\n    tx = txDiff * d / denominator;\n    ty = -txDiff * b / denominator;\n   }\n   return {\n    width: tx,\n    height: ty,\n    value: font.vertical ? ty : tx\n   };\n  },\n  calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n   var tsm = [\n    this.fontSize * this.textHScale,\n    0,\n    0,\n    this.fontSize,\n    0,\n    this.textRise\n   ];\n   return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n  },\n  carriageReturn: function TextState_carriageReturn() {\n   this.translateTextLineMatrix(0, -this.leading);\n   this.textMatrix = this.textLineMatrix.slice();\n  },\n  clone: function TextState_clone() {\n   var clone = Object.create(this);\n   clone.textMatrix = this.textMatrix.slice();\n   clone.textLineMatrix = this.textLineMatrix.slice();\n   clone.fontMatrix = this.fontMatrix.slice();\n   return clone;\n  }\n };\n return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n function EvalState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.font = null;\n  this.textRenderingMode = TextRenderingMode.FILL;\n  this.fillColorSpace = ColorSpace.singletons.gray;\n  this.strokeColorSpace = ColorSpace.singletons.gray;\n }\n EvalState.prototype = {\n  clone: function CanvasExtraState_clone() {\n   return Object.create(this);\n  }\n };\n return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n var getOPMap = getLookupTableFactory(function (t) {\n  t['w'] = {\n   id: OPS.setLineWidth,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['J'] = {\n   id: OPS.setLineCap,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['j'] = {\n   id: OPS.setLineJoin,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['M'] = {\n   id: OPS.setMiterLimit,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['d'] = {\n   id: OPS.setDash,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['ri'] = {\n   id: OPS.setRenderingIntent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['i'] = {\n   id: OPS.setFlatness,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['gs'] = {\n   id: OPS.setGState,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['q'] = {\n   id: OPS.save,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Q'] = {\n   id: OPS.restore,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['cm'] = {\n   id: OPS.transform,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['m'] = {\n   id: OPS.moveTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['l'] = {\n   id: OPS.lineTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['c'] = {\n   id: OPS.curveTo,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['v'] = {\n   id: OPS.curveTo2,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['y'] = {\n   id: OPS.curveTo3,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['h'] = {\n   id: OPS.closePath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['re'] = {\n   id: OPS.rectangle,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['S'] = {\n   id: OPS.stroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['s'] = {\n   id: OPS.closeStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['F'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f*'] = {\n   id: OPS.eoFill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B'] = {\n   id: OPS.fillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B*'] = {\n   id: OPS.eoFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b'] = {\n   id: OPS.closeFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b*'] = {\n   id: OPS.closeEOFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['n'] = {\n   id: OPS.endPath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W'] = {\n   id: OPS.clip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W*'] = {\n   id: OPS.eoClip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BT'] = {\n   id: OPS.beginText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ET'] = {\n   id: OPS.endText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tc'] = {\n   id: OPS.setCharSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tw'] = {\n   id: OPS.setWordSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tz'] = {\n   id: OPS.setHScale,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TL'] = {\n   id: OPS.setLeading,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tf'] = {\n   id: OPS.setFont,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tr'] = {\n   id: OPS.setTextRenderingMode,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Ts'] = {\n   id: OPS.setTextRise,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Td'] = {\n   id: OPS.moveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['TD'] = {\n   id: OPS.setLeadingMoveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tm'] = {\n   id: OPS.setTextMatrix,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['T*'] = {\n   id: OPS.nextLine,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tj'] = {\n   id: OPS.showText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TJ'] = {\n   id: OPS.showSpacedText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\\''] = {\n   id: OPS.nextLineShowText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\"'] = {\n   id: OPS.nextLineSetSpacingShowText,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['d0'] = {\n   id: OPS.setCharWidth,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['d1'] = {\n   id: OPS.setCharWidthAndBounds,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['CS'] = {\n   id: OPS.setStrokeColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['cs'] = {\n   id: OPS.setFillColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['SC'] = {\n   id: OPS.setStrokeColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['SCN'] = {\n   id: OPS.setStrokeColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['sc'] = {\n   id: OPS.setFillColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['scn'] = {\n   id: OPS.setFillColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['G'] = {\n   id: OPS.setStrokeGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['g'] = {\n   id: OPS.setFillGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['RG'] = {\n   id: OPS.setStrokeRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['rg'] = {\n   id: OPS.setFillRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['K'] = {\n   id: OPS.setStrokeCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['k'] = {\n   id: OPS.setFillCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['sh'] = {\n   id: OPS.shadingFill,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BI'] = {\n   id: OPS.beginInlineImage,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ID'] = {\n   id: OPS.beginImageData,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EI'] = {\n   id: OPS.endInlineImage,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Do'] = {\n   id: OPS.paintXObject,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['MP'] = {\n   id: OPS.markPoint,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['DP'] = {\n   id: OPS.markPointProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['BMC'] = {\n   id: OPS.beginMarkedContent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BDC'] = {\n   id: OPS.beginMarkedContentProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['EMC'] = {\n   id: OPS.endMarkedContent,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BX'] = {\n   id: OPS.beginCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EX'] = {\n   id: OPS.endCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BM'] = null;\n  t['BD'] = null;\n  t['true'] = null;\n  t['fa'] = null;\n  t['fal'] = null;\n  t['fals'] = null;\n  t['false'] = null;\n  t['nu'] = null;\n  t['nul'] = null;\n  t['null'] = null;\n });\n function EvaluatorPreprocessor(stream, xref, stateManager) {\n  this.opMap = getOPMap();\n  this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n  this.stateManager = stateManager;\n  this.nonProcessedArgs = [];\n }\n EvaluatorPreprocessor.prototype = {\n  get savedStatesDepth() {\n   return this.stateManager.stateStack.length;\n  },\n  read: function EvaluatorPreprocessor_read(operation) {\n   var args = operation.args;\n   while (true) {\n    var obj = this.parser.getObj();\n    if (isCmd(obj)) {\n     var cmd = obj.cmd;\n     var opSpec = this.opMap[cmd];\n     if (!opSpec) {\n      warn('Unknown command \"' + cmd + '\"');\n      continue;\n     }\n     var fn = opSpec.id;\n     var numArgs = opSpec.numArgs;\n     var argsLength = args !== null ? args.length : 0;\n     if (!opSpec.variableArgs) {\n      if (argsLength !== numArgs) {\n       var nonProcessedArgs = this.nonProcessedArgs;\n       while (argsLength > numArgs) {\n        nonProcessedArgs.push(args.shift());\n        argsLength--;\n       }\n       while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n        if (args === null) {\n         args = [];\n        }\n        args.unshift(nonProcessedArgs.pop());\n        argsLength++;\n       }\n      }\n      if (argsLength < numArgs) {\n       warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n       if (args !== null) {\n        args.length = 0;\n       }\n       continue;\n      }\n     } else if (argsLength > numArgs) {\n      info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n     }\n     this.preprocessCommand(fn, args);\n     operation.fn = fn;\n     operation.args = args;\n     return true;\n    }\n    if (isEOF(obj)) {\n     return false;\n    }\n    if (obj !== null) {\n     if (args === null) {\n      args = [];\n     }\n     args.push(obj);\n     assert(args.length <= 33, 'Too many arguments');\n    }\n   }\n  },\n  preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n   switch (fn | 0) {\n   case OPS.save:\n    this.stateManager.save();\n    break;\n   case OPS.restore:\n    this.stateManager.restore();\n    break;\n   case OPS.transform:\n    this.stateManager.transform(args);\n    break;\n   }\n  }\n };\n return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n function addState(parentState, pattern, fn) {\n  var state = parentState;\n  for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n   var item = pattern[i];\n   state = state[item] || (state[item] = []);\n  }\n  state[pattern[pattern.length - 1]] = fn;\n }\n function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n  var iFirstPIMXO = iFirstSave + 2;\n  for (var i = 0; i < count; i++) {\n   var arg = argsArray[iFirstPIMXO + 4 * i];\n   var imageMask = arg.length === 1 && arg[0];\n   if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n    fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n    continue;\n   }\n   break;\n  }\n  return count - i;\n }\n var InitialState = [];\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintInlineImageXObject,\n  OPS.restore\n ], function foundInlineImageGroup(context) {\n  var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n  var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n  var MAX_WIDTH = 1000;\n  var IMAGE_PADDING = 1;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIIXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n  if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n   return i;\n  }\n  var maxX = 0;\n  var map = [], maxLineHeight = 0;\n  var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n  var q;\n  for (q = 0; q < count; q++) {\n   var transform = argsArray[iFirstTransform + (q << 2)];\n   var img = argsArray[iFirstPIIXO + (q << 2)][0];\n   if (currentX + img.width > MAX_WIDTH) {\n    maxX = Math.max(maxX, currentX);\n    currentY += maxLineHeight + 2 * IMAGE_PADDING;\n    currentX = 0;\n    maxLineHeight = 0;\n   }\n   map.push({\n    transform: transform,\n    x: currentX,\n    y: currentY,\n    w: img.width,\n    h: img.height\n   });\n   currentX += img.width + 2 * IMAGE_PADDING;\n   maxLineHeight = Math.max(maxLineHeight, img.height);\n  }\n  var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n  var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n  var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n  var imgRowSize = imgWidth << 2;\n  for (q = 0; q < count; q++) {\n   var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n   var rowSize = map[q].w << 2;\n   var dataOffset = 0;\n   var offset = map[q].x + map[q].y * imgWidth << 2;\n   imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n   for (var k = 0, kk = map[q].h; k < kk; k++) {\n    imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n    dataOffset += rowSize;\n    offset += imgRowSize;\n   }\n   imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n   while (offset >= 0) {\n    data[offset - 4] = data[offset];\n    data[offset - 3] = data[offset + 1];\n    data[offset - 2] = data[offset + 2];\n    data[offset - 1] = data[offset + 3];\n    data[offset + rowSize] = data[offset + rowSize - 4];\n    data[offset + rowSize + 1] = data[offset + rowSize - 3];\n    data[offset + rowSize + 2] = data[offset + rowSize - 2];\n    data[offset + rowSize + 3] = data[offset + rowSize - 1];\n    offset -= imgRowSize;\n   }\n  }\n  fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n  argsArray.splice(iFirstSave, count * 4, [\n   {\n    width: imgWidth,\n    height: imgHeight,\n    kind: ImageKind.RGBA_32BPP,\n    data: imgData\n   },\n   map\n  ]);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageMaskXObject,\n  OPS.restore\n ], function foundImageMaskGroup(context) {\n  var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n  var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n  var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIMXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = (i - iFirstSave) / 4;\n  count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n  if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n   return i;\n  }\n  var q;\n  var isSameImage = false;\n  var iTransform, transformArgs;\n  var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n  if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n   isSameImage = true;\n   var firstTransformArg0 = argsArray[iFirstTransform][0];\n   var firstTransformArg3 = argsArray[iFirstTransform][3];\n   iTransform = iFirstTransform + 4;\n   var iPIMXO = iFirstPIMXO + 4;\n   for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n    transformArgs = argsArray[iTransform];\n    if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n     if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n      isSameImage = false;\n     } else {\n      count = q;\n     }\n     break;\n    }\n   }\n  }\n  if (isSameImage) {\n   count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n   var positions = new Float32Array(count * 2);\n   iTransform = iFirstTransform;\n   for (q = 0; q < count; q++, iTransform += 4) {\n    transformArgs = argsArray[iTransform];\n    positions[q << 1] = transformArgs[4];\n    positions[(q << 1) + 1] = transformArgs[5];\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n   argsArray.splice(iFirstSave, count * 4, [\n    firstPIMXOArg0,\n    firstTransformArg0,\n    firstTransformArg3,\n    positions\n   ]);\n  } else {\n   count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n   var images = [];\n   for (q = 0; q < count; q++) {\n    transformArgs = argsArray[iFirstTransform + (q << 2)];\n    var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n    images.push({\n     data: maskParams.data,\n     width: maskParams.width,\n     height: maskParams.height,\n     transform: transformArgs\n    });\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n   argsArray.splice(iFirstSave, count * 4, [images]);\n  }\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageXObject,\n  OPS.restore\n ], function (context) {\n  var MIN_IMAGES_IN_BLOCK = 3;\n  var MAX_IMAGES_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIXO = curr - 1;\n  var iFirstRestore = curr;\n  if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n   return iFirstRestore + 1;\n  }\n  var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n  var firstTransformArg0 = argsArray[iFirstTransform][0];\n  var firstTransformArg3 = argsArray[iFirstTransform][3];\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n    break;\n   }\n   if (argsArray[i + 2][0] !== firstPIXOArg0) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n  if (count < MIN_IMAGES_IN_BLOCK) {\n   return i;\n  }\n  var positions = new Float32Array(count * 2);\n  var iTransform = iFirstTransform;\n  for (var q = 0; q < count; q++, iTransform += 4) {\n   var transformArgs = argsArray[iTransform];\n   positions[q << 1] = transformArgs[4];\n   positions[(q << 1) + 1] = transformArgs[5];\n  }\n  var args = [\n   firstPIXOArg0,\n   firstTransformArg0,\n   firstTransformArg3,\n   positions\n  ];\n  fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n  argsArray.splice(iFirstSave, count * 4, args);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.beginText,\n  OPS.setFont,\n  OPS.setTextMatrix,\n  OPS.showText,\n  OPS.endText\n ], function (context) {\n  var MIN_CHARS_IN_BLOCK = 3;\n  var MAX_CHARS_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstBeginText = curr - 4;\n  var iFirstSetFont = curr - 3;\n  var iFirstSetTextMatrix = curr - 2;\n  var iFirstShowText = curr - 1;\n  var iFirstEndText = curr;\n  var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n  var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n  var i = iFirstBeginText + 5;\n  var ii = fnArray.length;\n  while (i + 4 < ii) {\n   if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n    break;\n   }\n   i += 5;\n  }\n  var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n  if (count < MIN_CHARS_IN_BLOCK) {\n   return i;\n  }\n  var iFirst = iFirstBeginText;\n  if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n   count++;\n   iFirst -= 5;\n  }\n  var iEndText = iFirst + 4;\n  for (var q = 1; q < count; q++) {\n   fnArray.splice(iEndText, 3);\n   argsArray.splice(iEndText, 3);\n   iEndText += 2;\n  }\n  return iEndText + 1;\n });\n function QueueOptimizer() {\n }\n QueueOptimizer.prototype = {\n  optimize: function QueueOptimizer_optimize(queue) {\n   var fnArray = queue.fnArray, argsArray = queue.argsArray;\n   var context = {\n    iCurr: 0,\n    fnArray: fnArray,\n    argsArray: argsArray\n   };\n   var state;\n   var i = 0, ii = fnArray.length;\n   while (i < ii) {\n    state = (state || InitialState)[fnArray[i]];\n    if (typeof state === 'function') {\n     context.iCurr = i;\n     i = state(context);\n     state = undefined;\n     ii = context.fnArray.length;\n    } else {\n     i++;\n    }\n   }\n  }\n };\n return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(9);\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar JpxImage = function JpxImageClosure() {\n var SubbandsGainLog2 = {\n  'LL': 0,\n  'LH': 1,\n  'HL': 1,\n  'HH': 2\n };\n function JpxImage() {\n  this.failOnCorruptedImage = false;\n }\n JpxImage.prototype = {\n  parse: function JpxImage_parse(data) {\n   var head = readUint16(data, 0);\n   if (head === 0xFF4F) {\n    this.parseCodestream(data, 0, data.length);\n    return;\n   }\n   var position = 0, length = data.length;\n   while (position < length) {\n    var headerSize = 8;\n    var lbox = readUint32(data, position);\n    var tbox = readUint32(data, position + 4);\n    position += headerSize;\n    if (lbox === 1) {\n     lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n     position += 8;\n     headerSize += 8;\n    }\n    if (lbox === 0) {\n     lbox = length - position + headerSize;\n    }\n    if (lbox < headerSize) {\n     error('JPX Error: Invalid box field size');\n    }\n    var dataLength = lbox - headerSize;\n    var jumpDataLength = true;\n    switch (tbox) {\n    case 0x6A703268:\n     jumpDataLength = false;\n     break;\n    case 0x636F6C72:\n     var method = data[position];\n     if (method === 1) {\n      var colorspace = readUint32(data, position + 3);\n      switch (colorspace) {\n      case 16:\n      case 17:\n      case 18:\n       break;\n      default:\n       warn('Unknown colorspace ' + colorspace);\n       break;\n      }\n     } else if (method === 2) {\n      info('ICC profile not supported');\n     }\n     break;\n    case 0x6A703263:\n     this.parseCodestream(data, position, position + dataLength);\n     break;\n    case 0x6A502020:\n     if (0x0d0a870a !== readUint32(data, position)) {\n      warn('Invalid JP2 signature');\n     }\n     break;\n    case 0x6A501A1A:\n    case 0x66747970:\n    case 0x72726571:\n    case 0x72657320:\n    case 0x69686472:\n     break;\n    default:\n     var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n     warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n     break;\n    }\n    if (jumpDataLength) {\n     position += dataLength;\n    }\n   }\n  },\n  parseImageProperties: function JpxImage_parseImageProperties(stream) {\n   var newByte = stream.getByte();\n   while (newByte >= 0) {\n    var oldByte = newByte;\n    newByte = stream.getByte();\n    var code = oldByte << 8 | newByte;\n    if (code === 0xFF51) {\n     stream.skip(4);\n     var Xsiz = stream.getInt32() >>> 0;\n     var Ysiz = stream.getInt32() >>> 0;\n     var XOsiz = stream.getInt32() >>> 0;\n     var YOsiz = stream.getInt32() >>> 0;\n     stream.skip(16);\n     var Csiz = stream.getUint16();\n     this.width = Xsiz - XOsiz;\n     this.height = Ysiz - YOsiz;\n     this.componentsCount = Csiz;\n     this.bitsPerComponent = 8;\n     return;\n    }\n   }\n   error('JPX Error: No size marker found in JPX stream');\n  },\n  parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n   var context = {};\n   var doNotRecover = false;\n   try {\n    var position = start;\n    while (position + 1 < end) {\n     var code = readUint16(data, position);\n     position += 2;\n     var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n     switch (code) {\n     case 0xFF4F:\n      context.mainHeader = true;\n      break;\n     case 0xFFD9:\n      break;\n     case 0xFF51:\n      length = readUint16(data, position);\n      var siz = {};\n      siz.Xsiz = readUint32(data, position + 4);\n      siz.Ysiz = readUint32(data, position + 8);\n      siz.XOsiz = readUint32(data, position + 12);\n      siz.YOsiz = readUint32(data, position + 16);\n      siz.XTsiz = readUint32(data, position + 20);\n      siz.YTsiz = readUint32(data, position + 24);\n      siz.XTOsiz = readUint32(data, position + 28);\n      siz.YTOsiz = readUint32(data, position + 32);\n      var componentsCount = readUint16(data, position + 36);\n      siz.Csiz = componentsCount;\n      var components = [];\n      j = position + 38;\n      for (var i = 0; i < componentsCount; i++) {\n       var component = {\n        precision: (data[j] & 0x7F) + 1,\n        isSigned: !!(data[j] & 0x80),\n        XRsiz: data[j + 1],\n        YRsiz: data[j + 1]\n       };\n       calculateComponentDimensions(component, siz);\n       components.push(component);\n      }\n      context.SIZ = siz;\n      context.components = components;\n      calculateTileGrids(context, components);\n      context.QCC = [];\n      context.COC = [];\n      break;\n     case 0xFF5C:\n      length = readUint16(data, position);\n      var qcd = {};\n      j = position + 2;\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcd.noQuantization = spqcdSize === 8;\n      qcd.scalarExpounded = scalarExpounded;\n      qcd.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       var spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcd.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCD = qcd;\n      } else {\n       context.currentTile.QCD = qcd;\n       context.currentTile.QCC = [];\n      }\n      break;\n     case 0xFF5D:\n      length = readUint16(data, position);\n      var qcc = {};\n      j = position + 2;\n      var cqcc;\n      if (context.SIZ.Csiz < 257) {\n       cqcc = data[j++];\n      } else {\n       cqcc = readUint16(data, j);\n       j += 2;\n      }\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcc.noQuantization = spqcdSize === 8;\n      qcc.scalarExpounded = scalarExpounded;\n      qcc.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcc.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCC[cqcc] = qcc;\n      } else {\n       context.currentTile.QCC[cqcc] = qcc;\n      }\n      break;\n     case 0xFF52:\n      length = readUint16(data, position);\n      var cod = {};\n      j = position + 2;\n      var scod = data[j++];\n      cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n      cod.sopMarkerUsed = !!(scod & 2);\n      cod.ephMarkerUsed = !!(scod & 4);\n      cod.progressionOrder = data[j++];\n      cod.layersCount = readUint16(data, j);\n      j += 2;\n      cod.multipleComponentTransform = data[j++];\n      cod.decompositionLevelsCount = data[j++];\n      cod.xcb = (data[j++] & 0xF) + 2;\n      cod.ycb = (data[j++] & 0xF) + 2;\n      var blockStyle = data[j++];\n      cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n      cod.resetContextProbabilities = !!(blockStyle & 2);\n      cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n      cod.verticalyStripe = !!(blockStyle & 8);\n      cod.predictableTermination = !!(blockStyle & 16);\n      cod.segmentationSymbolUsed = !!(blockStyle & 32);\n      cod.reversibleTransformation = data[j++];\n      if (cod.entropyCoderWithCustomPrecincts) {\n       var precinctsSizes = [];\n       while (j < length + position) {\n        var precinctsSize = data[j++];\n        precinctsSizes.push({\n         PPx: precinctsSize & 0xF,\n         PPy: precinctsSize >> 4\n        });\n       }\n       cod.precinctsSizes = precinctsSizes;\n      }\n      var unsupported = [];\n      if (cod.selectiveArithmeticCodingBypass) {\n       unsupported.push('selectiveArithmeticCodingBypass');\n      }\n      if (cod.resetContextProbabilities) {\n       unsupported.push('resetContextProbabilities');\n      }\n      if (cod.terminationOnEachCodingPass) {\n       unsupported.push('terminationOnEachCodingPass');\n      }\n      if (cod.verticalyStripe) {\n       unsupported.push('verticalyStripe');\n      }\n      if (cod.predictableTermination) {\n       unsupported.push('predictableTermination');\n      }\n      if (unsupported.length > 0) {\n       doNotRecover = true;\n       throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n      }\n      if (context.mainHeader) {\n       context.COD = cod;\n      } else {\n       context.currentTile.COD = cod;\n       context.currentTile.COC = [];\n      }\n      break;\n     case 0xFF90:\n      length = readUint16(data, position);\n      tile = {};\n      tile.index = readUint16(data, position + 2);\n      tile.length = readUint32(data, position + 4);\n      tile.dataEnd = tile.length + position - 2;\n      tile.partIndex = data[position + 8];\n      tile.partsCount = data[position + 9];\n      context.mainHeader = false;\n      if (tile.partIndex === 0) {\n       tile.COD = context.COD;\n       tile.COC = context.COC.slice(0);\n       tile.QCD = context.QCD;\n       tile.QCC = context.QCC.slice(0);\n      }\n      context.currentTile = tile;\n      break;\n     case 0xFF93:\n      tile = context.currentTile;\n      if (tile.partIndex === 0) {\n       initializeTile(context, tile.index);\n       buildPackets(context);\n      }\n      length = tile.dataEnd - position;\n      parseTilePackets(context, data, position, length);\n      break;\n     case 0xFF55:\n     case 0xFF57:\n     case 0xFF58:\n     case 0xFF64:\n      length = readUint16(data, position);\n      break;\n     case 0xFF53:\n      throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n     default:\n      throw new Error('Unknown codestream code: ' + code.toString(16));\n     }\n     position += length;\n    }\n   } catch (e) {\n    if (doNotRecover || this.failOnCorruptedImage) {\n     error('JPX Error: ' + e.message);\n    } else {\n     warn('JPX: Trying to recover from: ' + e.message);\n    }\n   }\n   this.tiles = transformComponents(context);\n   this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n   this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n   this.componentsCount = context.SIZ.Csiz;\n  }\n };\n function calculateComponentDimensions(component, siz) {\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n }\n function calculateTileGrids(context, components) {\n  var siz = context.SIZ;\n  var tile, tiles = [];\n  var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (var q = 0; q < numYtiles; q++) {\n   for (var p = 0; p < numXtiles; p++) {\n    tile = {};\n    tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n    tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n    tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n    tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n    tile.width = tile.tx1 - tile.tx0;\n    tile.height = tile.ty1 - tile.ty0;\n    tile.components = [];\n    tiles.push(tile);\n   }\n  }\n  context.tiles = tiles;\n  var componentsCount = siz.Csiz;\n  for (var i = 0, ii = componentsCount; i < ii; i++) {\n   var component = components[i];\n   for (var j = 0, jj = tiles.length; j < jj; j++) {\n    var tileComponent = {};\n    tile = tiles[j];\n    tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n    tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n    tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n    tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n    tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n    tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n    tile.components[i] = tileComponent;\n   }\n  }\n }\n function getBlocksDimensions(context, component, r) {\n  var codOrCoc = component.codingStyleParameters;\n  var result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n   result.PPx = 15;\n   result.PPy = 15;\n  } else {\n   result.PPx = codOrCoc.precinctsSizes[r].PPx;\n   result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n }\n function buildPrecincts(context, resolution, dimensions) {\n  var precinctWidth = 1 << dimensions.PPx;\n  var precinctHeight = 1 << dimensions.PPy;\n  var isZeroRes = resolution.resLevel === 0;\n  var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n  var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n  var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n  var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n  var numprecincts = numprecinctswide * numprecinctshigh;\n  resolution.precinctParameters = {\n   precinctWidth: precinctWidth,\n   precinctHeight: precinctHeight,\n   numprecinctswide: numprecinctswide,\n   numprecinctshigh: numprecinctshigh,\n   numprecincts: numprecincts,\n   precinctWidthInSubband: precinctWidthInSubband,\n   precinctHeightInSubband: precinctHeightInSubband\n  };\n }\n function buildCodeblocks(context, subband, dimensions) {\n  var xcb_ = dimensions.xcb_;\n  var ycb_ = dimensions.ycb_;\n  var codeblockWidth = 1 << xcb_;\n  var codeblockHeight = 1 << ycb_;\n  var cbx0 = subband.tbx0 >> xcb_;\n  var cby0 = subband.tby0 >> ycb_;\n  var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n  var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n  var precinctParameters = subband.resolution.precinctParameters;\n  var codeblocks = [];\n  var precincts = [];\n  var i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n   for (i = cbx0; i < cbx1; i++) {\n    codeblock = {\n     cbx: i,\n     cby: j,\n     tbx0: codeblockWidth * i,\n     tby0: codeblockHeight * j,\n     tbx1: codeblockWidth * (i + 1),\n     tby1: codeblockHeight * (j + 1)\n    };\n    codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n    codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n    codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n    codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n    var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n    var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n    precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n    codeblock.precinctNumber = precinctNumber;\n    codeblock.subbandType = subband.type;\n    codeblock.Lblock = 3;\n    if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n     continue;\n    }\n    codeblocks.push(codeblock);\n    var precinct = precincts[precinctNumber];\n    if (precinct !== undefined) {\n     if (i < precinct.cbxMin) {\n      precinct.cbxMin = i;\n     } else if (i > precinct.cbxMax) {\n      precinct.cbxMax = i;\n     }\n     if (j < precinct.cbyMin) {\n      precinct.cbxMin = j;\n     } else if (j > precinct.cbyMax) {\n      precinct.cbyMax = j;\n     }\n    } else {\n     precincts[precinctNumber] = precinct = {\n      cbxMin: i,\n      cbyMin: j,\n      cbxMax: i,\n      cbyMax: j\n     };\n    }\n    codeblock.precinct = precinct;\n   }\n  }\n  subband.codeblockParameters = {\n   codeblockWidth: xcb_,\n   codeblockHeight: ycb_,\n   numcodeblockwide: cbx1 - cbx0 + 1,\n   numcodeblockhigh: cby1 - cby0 + 1\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n }\n function createPacket(resolution, precinctNumber, layerNumber) {\n  var precinctCodeblocks = [];\n  var subbands = resolution.subbands;\n  for (var i = 0, ii = subbands.length; i < ii; i++) {\n   var subband = subbands[i];\n   var codeblocks = subband.codeblocks;\n   for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n    var codeblock = codeblocks[j];\n    if (codeblock.precinctNumber !== precinctNumber) {\n     continue;\n    }\n    precinctCodeblocks.push(codeblock);\n   }\n  }\n  return {\n   layerNumber: layerNumber,\n   codeblocks: precinctCodeblocks\n  };\n }\n function LayerResolutionComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var l = 0, r = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; l < layersCount; l++) {\n    for (; r <= maxDecompositionLevelsCount; r++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    r = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionLayerComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var r = 0, l = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; l < layersCount; l++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    l = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionPositionComponentLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var l, r, c, p;\n  var maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n  }\n  var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n   var maxNumPrecincts = 0;\n   for (c = 0; c < componentsCount; ++c) {\n    var resolutions = tile.components[c].resolutions;\n    if (r < resolutions.length) {\n     maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n    }\n   }\n   maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; p < maxNumPrecinctsInLevel[r]; p++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      if (p >= numprecincts) {\n       continue;\n      }\n      for (; l < layersCount;) {\n       var packet = createPacket(resolution, p, l);\n       l++;\n       return packet;\n      }\n      l = 0;\n     }\n     c = 0;\n    }\n    p = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function PositionComponentResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var precinctsIterationSizes = precinctsSizes;\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n    for (; px < precinctsIterationSizes.maxNumWide; px++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     c = 0;\n    }\n    px = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ComponentPositionResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; c < componentsCount; ++c) {\n    var component = tile.components[c];\n    var precinctsIterationSizes = precinctsSizes.components[c];\n    var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n     for (; px < precinctsIterationSizes.maxNumWide; px++) {\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     px = 0;\n    }\n    py = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n  var posX = pxIndex * precinctIterationSizes.minWidth;\n  var posY = pyIndex * precinctIterationSizes.minHeight;\n  if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n   return null;\n  }\n  var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n }\n function getPrecinctSizesInImageScale(tile) {\n  var componentsCount = tile.components.length;\n  var minWidth = Number.MAX_VALUE;\n  var minHeight = Number.MAX_VALUE;\n  var maxNumWide = 0;\n  var maxNumHigh = 0;\n  var sizePerComponent = new Array(componentsCount);\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var sizePerResolution = new Array(decompositionLevelsCount + 1);\n   var minWidthCurrentComponent = Number.MAX_VALUE;\n   var minHeightCurrentComponent = Number.MAX_VALUE;\n   var maxNumWideCurrentComponent = 0;\n   var maxNumHighCurrentComponent = 0;\n   var scale = 1;\n   for (var r = decompositionLevelsCount; r >= 0; --r) {\n    var resolution = component.resolutions[r];\n    var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n    var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n    minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n    minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n    maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n    maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n    sizePerResolution[r] = {\n     width: widthCurrentResolution,\n     height: heightCurrentResolution\n    };\n    scale <<= 1;\n   }\n   minWidth = Math.min(minWidth, minWidthCurrentComponent);\n   minHeight = Math.min(minHeight, minHeightCurrentComponent);\n   maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n   maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n   sizePerComponent[c] = {\n    resolutions: sizePerResolution,\n    minWidth: minWidthCurrentComponent,\n    minHeight: minHeightCurrentComponent,\n    maxNumWide: maxNumWideCurrentComponent,\n    maxNumHigh: maxNumHighCurrentComponent\n   };\n  }\n  return {\n   components: sizePerComponent,\n   minWidth: minWidth,\n   minHeight: minHeight,\n   maxNumWide: maxNumWide,\n   maxNumHigh: maxNumHigh\n  };\n }\n function buildPackets(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var componentsCount = siz.Csiz;\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var resolutions = [];\n   var subbands = [];\n   for (var r = 0; r <= decompositionLevelsCount; r++) {\n    var blocksDimensions = getBlocksDimensions(context, component, r);\n    var resolution = {};\n    var scale = 1 << decompositionLevelsCount - r;\n    resolution.trx0 = Math.ceil(component.tcx0 / scale);\n    resolution.try0 = Math.ceil(component.tcy0 / scale);\n    resolution.trx1 = Math.ceil(component.tcx1 / scale);\n    resolution.try1 = Math.ceil(component.tcy1 / scale);\n    resolution.resLevel = r;\n    buildPrecincts(context, resolution, blocksDimensions);\n    resolutions.push(resolution);\n    var subband;\n    if (r === 0) {\n     subband = {};\n     subband.type = 'LL';\n     subband.tbx0 = Math.ceil(component.tcx0 / scale);\n     subband.tby0 = Math.ceil(component.tcy0 / scale);\n     subband.tbx1 = Math.ceil(component.tcx1 / scale);\n     subband.tby1 = Math.ceil(component.tcy1 / scale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolution.subbands = [subband];\n    } else {\n     var bscale = 1 << decompositionLevelsCount - r + 1;\n     var resolutionSubbands = [];\n     subband = {};\n     subband.type = 'HL';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'LH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'HH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     resolution.subbands = resolutionSubbands;\n    }\n   }\n   component.resolutions = resolutions;\n   component.subbands = subbands;\n  }\n  var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n  case 0:\n   tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n   break;\n  case 1:\n   tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n   break;\n  case 2:\n   tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n   break;\n  case 3:\n   tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n   break;\n  case 4:\n   tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n   break;\n  default:\n   error('JPX Error: Unsupported progression order ' + progressionOrder);\n  }\n }\n function parseTilePackets(context, data, offset, dataLength) {\n  var position = 0;\n  var buffer, bufferSize = 0, skipNextBit = false;\n  function readBits(count) {\n   while (bufferSize < count) {\n    var b = data[offset + position];\n    position++;\n    if (skipNextBit) {\n     buffer = buffer << 7 | b;\n     bufferSize += 7;\n     skipNextBit = false;\n    } else {\n     buffer = buffer << 8 | b;\n     bufferSize += 8;\n    }\n    if (b === 0xFF) {\n     skipNextBit = true;\n    }\n   }\n   bufferSize -= count;\n   return buffer >>> bufferSize & (1 << count) - 1;\n  }\n  function skipMarkerIfEqual(value) {\n   if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n    skipBytes(1);\n    return true;\n   } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n    skipBytes(2);\n    return true;\n   }\n   return false;\n  }\n  function skipBytes(count) {\n   position += count;\n  }\n  function alignToByte() {\n   bufferSize = 0;\n   if (skipNextBit) {\n    position++;\n    skipNextBit = false;\n   }\n  }\n  function readCodingpasses() {\n   if (readBits(1) === 0) {\n    return 1;\n   }\n   if (readBits(1) === 0) {\n    return 2;\n   }\n   var value = readBits(2);\n   if (value < 3) {\n    return value + 3;\n   }\n   value = readBits(5);\n   if (value < 31) {\n    return value + 6;\n   }\n   value = readBits(7);\n   return value + 37;\n  }\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var sopMarkerUsed = context.COD.sopMarkerUsed;\n  var ephMarkerUsed = context.COD.ephMarkerUsed;\n  var packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n   alignToByte();\n   if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n    skipBytes(4);\n   }\n   var packet = packetsIterator.nextPacket();\n   if (!readBits(1)) {\n    continue;\n   }\n   var layerNumber = packet.layerNumber;\n   var queue = [], codeblock;\n   for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n    codeblock = packet.codeblocks[i];\n    var precinct = codeblock.precinct;\n    var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n    var codeblockRow = codeblock.cby - precinct.cbyMin;\n    var codeblockIncluded = false;\n    var firstTimeInclusion = false;\n    var valueReady;\n    if (codeblock['included'] !== undefined) {\n     codeblockIncluded = !!readBits(1);\n    } else {\n     precinct = codeblock.precinct;\n     var inclusionTree, zeroBitPlanesTree;\n     if (precinct['inclusionTree'] !== undefined) {\n      inclusionTree = precinct.inclusionTree;\n     } else {\n      var width = precinct.cbxMax - precinct.cbxMin + 1;\n      var height = precinct.cbyMax - precinct.cbyMin + 1;\n      inclusionTree = new InclusionTree(width, height, layerNumber);\n      zeroBitPlanesTree = new TagTree(width, height);\n      precinct.inclusionTree = inclusionTree;\n      precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n     }\n     if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n      while (true) {\n       if (readBits(1)) {\n        valueReady = !inclusionTree.nextLevel();\n        if (valueReady) {\n         codeblock.included = true;\n         codeblockIncluded = firstTimeInclusion = true;\n         break;\n        }\n       } else {\n        inclusionTree.incrementValue(layerNumber);\n        break;\n       }\n      }\n     }\n    }\n    if (!codeblockIncluded) {\n     continue;\n    }\n    if (firstTimeInclusion) {\n     zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n     zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n     while (true) {\n      if (readBits(1)) {\n       valueReady = !zeroBitPlanesTree.nextLevel();\n       if (valueReady) {\n        break;\n       }\n      } else {\n       zeroBitPlanesTree.incrementValue();\n      }\n     }\n     codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n    }\n    var codingpasses = readCodingpasses();\n    while (readBits(1)) {\n     codeblock.Lblock++;\n    }\n    var codingpassesLog2 = log2(codingpasses);\n    var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n    var codedDataLength = readBits(bits);\n    queue.push({\n     codeblock: codeblock,\n     codingpasses: codingpasses,\n     dataLength: codedDataLength\n    });\n   }\n   alignToByte();\n   if (ephMarkerUsed) {\n    skipMarkerIfEqual(0x92);\n   }\n   while (queue.length > 0) {\n    var packetItem = queue.shift();\n    codeblock = packetItem.codeblock;\n    if (codeblock['data'] === undefined) {\n     codeblock.data = [];\n    }\n    codeblock.data.push({\n     data: data,\n     start: offset + position,\n     end: offset + position + packetItem.dataLength,\n     codingpasses: packetItem.codingpasses\n    });\n    position += packetItem.dataLength;\n   }\n  }\n  return position;\n }\n function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n  var x0 = subband.tbx0;\n  var y0 = subband.tby0;\n  var width = subband.tbx1 - subband.tbx0;\n  var codeblocks = subband.codeblocks;\n  var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n  var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n  for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n   var codeblock = codeblocks[i];\n   var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n   var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n   if (blockWidth === 0 || blockHeight === 0) {\n    continue;\n   }\n   if (codeblock['data'] === undefined) {\n    continue;\n   }\n   var bitModel, currentCodingpassType;\n   bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n   currentCodingpassType = 2;\n   var data = codeblock.data, totalLength = 0, codingpasses = 0;\n   var j, jj, dataItem;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    totalLength += dataItem.end - dataItem.start;\n    codingpasses += dataItem.codingpasses;\n   }\n   var encodedData = new Uint8Array(totalLength);\n   var position = 0;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n    encodedData.set(chunk, position);\n    position += chunk.length;\n   }\n   var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n   bitModel.setDecoder(decoder);\n   for (j = 0; j < codingpasses; j++) {\n    switch (currentCodingpassType) {\n    case 0:\n     bitModel.runSignificancePropagationPass();\n     break;\n    case 1:\n     bitModel.runMagnitudeRefinementPass();\n     break;\n    case 2:\n     bitModel.runCleanupPass();\n     if (segmentationSymbolUsed) {\n      bitModel.checkSegmentationSymbol();\n     }\n     break;\n    }\n    currentCodingpassType = (currentCodingpassType + 1) % 3;\n   }\n   var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n   var sign = bitModel.coefficentsSign;\n   var magnitude = bitModel.coefficentsMagnitude;\n   var bitsDecoded = bitModel.bitsDecoded;\n   var magnitudeCorrection = reversible ? 0 : 0.5;\n   var k, n, nb;\n   position = 0;\n   var interleave = subband.type !== 'LL';\n   for (j = 0; j < blockHeight; j++) {\n    var row = offset / width | 0;\n    var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n    for (k = 0; k < blockWidth; k++) {\n     n = magnitude[position];\n     if (n !== 0) {\n      n = (n + magnitudeCorrection) * delta;\n      if (sign[position] !== 0) {\n       n = -n;\n      }\n      nb = bitsDecoded[position];\n      var pos = interleave ? levelOffset + (offset << 1) : offset;\n      if (reversible && nb >= mb) {\n       coefficients[pos] = n;\n      } else {\n       coefficients[pos] = n * (1 << mb - nb);\n      }\n     }\n     offset++;\n     position++;\n    }\n    offset += width - blockWidth;\n   }\n  }\n }\n function transformTile(context, tile, c) {\n  var component = tile.components[c];\n  var codingStyleParameters = component.codingStyleParameters;\n  var quantizationParameters = component.quantizationParameters;\n  var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n  var spqcds = quantizationParameters.SPqcds;\n  var scalarExpounded = quantizationParameters.scalarExpounded;\n  var guardBits = quantizationParameters.guardBits;\n  var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  var precision = context.components[c].precision;\n  var reversible = codingStyleParameters.reversibleTransformation;\n  var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n  var subbandCoefficients = [];\n  var b = 0;\n  for (var i = 0; i <= decompositionLevelsCount; i++) {\n   var resolution = component.resolutions[i];\n   var width = resolution.trx1 - resolution.trx0;\n   var height = resolution.try1 - resolution.try0;\n   var coefficients = new Float32Array(width * height);\n   for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n    var mu, epsilon;\n    if (!scalarExpounded) {\n     mu = spqcds[0].mu;\n     epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n    } else {\n     mu = spqcds[b].mu;\n     epsilon = spqcds[b].epsilon;\n     b++;\n    }\n    var subband = resolution.subbands[j];\n    var gainLog2 = SubbandsGainLog2[subband.type];\n    var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n    var mb = guardBits + epsilon - 1;\n    copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n   }\n   subbandCoefficients.push({\n    width: width,\n    height: height,\n    items: coefficients\n   });\n  }\n  var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n  return {\n   left: component.tcx0,\n   top: component.tcy0,\n   width: result.width,\n   height: result.height,\n   items: result.items\n  };\n }\n function transformComponents(context) {\n  var siz = context.SIZ;\n  var components = context.components;\n  var componentsCount = siz.Csiz;\n  var resultImages = [];\n  for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n   var tile = context.tiles[i];\n   var transformedTiles = [];\n   var c;\n   for (c = 0; c < componentsCount; c++) {\n    transformedTiles[c] = transformTile(context, tile, c);\n   }\n   var tile0 = transformedTiles[0];\n   var out = new Uint8Array(tile0.items.length * componentsCount);\n   var result = {\n    left: tile0.left,\n    top: tile0.top,\n    width: tile0.width,\n    height: tile0.height,\n    items: out\n   };\n   var shift, offset, max, min, maxK;\n   var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n   if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n    var fourComponents = componentsCount === 4;\n    var y0items = transformedTiles[0].items;\n    var y1items = transformedTiles[1].items;\n    var y2items = transformedTiles[2].items;\n    var y3items = fourComponents ? transformedTiles[3].items : null;\n    shift = components[0].precision - 8;\n    offset = (128 << shift) + 0.5;\n    max = 255 * (1 << shift);\n    maxK = max * 0.5;\n    min = -maxK;\n    var component0 = tile.components[0];\n    var alpha01 = componentsCount - 3;\n    jj = y0items.length;\n    if (!component0.codingStyleParameters.reversibleTransformation) {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      r = y0 + 1.402 * y2;\n      g = y0 - 0.34413 * y1 - 0.71414 * y2;\n      b = y0 + 1.772 * y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    } else {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      g = y0 - (y2 + y1 >> 2);\n      r = g + y2;\n      b = g + y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    }\n    if (fourComponents) {\n     for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n      k = y3items[j];\n      out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n     }\n    }\n   } else {\n    for (c = 0; c < componentsCount; c++) {\n     var items = transformedTiles[c].items;\n     shift = components[c].precision - 8;\n     offset = (128 << shift) + 0.5;\n     max = 127.5 * (1 << shift);\n     min = -max;\n     for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n      val = items[j];\n      out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n      pos += componentsCount;\n     }\n    }\n   }\n   resultImages.push(result);\n  }\n  return resultImages;\n }\n function initializeTile(context, tileIndex) {\n  var siz = context.SIZ;\n  var componentsCount = siz.Csiz;\n  var tile = context.tiles[tileIndex];\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n   component.quantizationParameters = qcdOrQcc;\n   var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n   component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n }\n var TagTree = function TagTreeClosure() {\n  function TagTree(width, height) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var level = {\n     width: width,\n     height: height,\n     items: []\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  TagTree.prototype = {\n   reset: function TagTree_reset(i, j) {\n    var currentLevel = 0, value = 0, level;\n    while (currentLevel < this.levels.length) {\n     level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     if (level.items[index] !== undefined) {\n      value = level.items[index];\n      break;\n     }\n     level.index = index;\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n   },\n   incrementValue: function TagTree_incrementValue() {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n   },\n   nextLevel: function TagTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n     this.value = value;\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return TagTree;\n }();\n var InclusionTree = function InclusionTreeClosure() {\n  function InclusionTree(width, height, defaultValue) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var items = new Uint8Array(width * height);\n    for (var j = 0, jj = items.length; j < jj; j++) {\n     items[j] = defaultValue;\n    }\n    var level = {\n     width: width,\n     height: height,\n     items: items\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  InclusionTree.prototype = {\n   reset: function InclusionTree_reset(i, j, stopValue) {\n    var currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n     var level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     level.index = index;\n     var value = level.items[index];\n     if (value === 0xFF) {\n      break;\n     }\n     if (value > stopValue) {\n      this.currentLevel = currentLevel;\n      this.propagateValues();\n      return false;\n     }\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n   },\n   incrementValue: function InclusionTree_incrementValue(stopValue) {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n   },\n   propagateValues: function InclusionTree_propagateValues() {\n    var levelIndex = this.currentLevel;\n    var level = this.levels[levelIndex];\n    var currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n     level = this.levels[levelIndex];\n     level.items[level.index] = currentValue;\n    }\n   },\n   nextLevel: function InclusionTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    level.items[level.index] = 0xFF;\n    currentLevel--;\n    if (currentLevel < 0) {\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return InclusionTree;\n }();\n var BitModel = function BitModelClosure() {\n  var UNIFORM_CONTEXT = 17;\n  var RUNLENGTH_CONTEXT = 18;\n  var LLAndLHContextsLabel = new Uint8Array([\n   0,\n   5,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8\n  ]);\n  var HLContextLabel = new Uint8Array([\n   0,\n   3,\n   4,\n   0,\n   5,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8\n  ]);\n  var HHContextLabel = new Uint8Array([\n   0,\n   1,\n   2,\n   0,\n   1,\n   2,\n   2,\n   0,\n   2,\n   2,\n   2,\n   0,\n   0,\n   0,\n   0,\n   0,\n   3,\n   4,\n   5,\n   0,\n   4,\n   5,\n   5,\n   0,\n   5,\n   5,\n   5,\n   0,\n   0,\n   0,\n   0,\n   0,\n   6,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8\n  ]);\n  function BitModel(width, height, subband, zeroBitPlanes, mb) {\n   this.width = width;\n   this.height = height;\n   this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n   var coefficientCount = width * height;\n   this.neighborsSignificance = new Uint8Array(coefficientCount);\n   this.coefficentsSign = new Uint8Array(coefficientCount);\n   this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n   this.processingFlags = new Uint8Array(coefficientCount);\n   var bitsDecoded = new Uint8Array(coefficientCount);\n   if (zeroBitPlanes !== 0) {\n    for (var i = 0; i < coefficientCount; i++) {\n     bitsDecoded[i] = zeroBitPlanes;\n    }\n   }\n   this.bitsDecoded = bitsDecoded;\n   this.reset();\n  }\n  BitModel.prototype = {\n   setDecoder: function BitModel_setDecoder(decoder) {\n    this.decoder = decoder;\n   },\n   reset: function BitModel_reset() {\n    this.contexts = new Int8Array(19);\n    this.contexts[0] = 4 << 1 | 0;\n    this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n    this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n   },\n   setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n    var neighborsSignificance = this.neighborsSignificance;\n    var width = this.width, height = this.height;\n    var left = column > 0;\n    var right = column + 1 < width;\n    var i;\n    if (row > 0) {\n     i = index - width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (row + 1 < height) {\n     i = index + width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (left) {\n     neighborsSignificance[index - 1] += 0x01;\n    }\n    if (right) {\n     neighborsSignificance[index + 1] += 0x01;\n    }\n    neighborsSignificance[index] |= 0x80;\n   },\n   runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var neighborsSignificance = this.neighborsSignificance;\n    var processingFlags = this.processingFlags;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processedInverseMask = ~1;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    for (var i0 = 0; i0 < height; i0 += 4) {\n     for (var j = 0; j < width; j++) {\n      var index = i0 * width + j;\n      for (var i1 = 0; i1 < 4; i1++, index += width) {\n       var i = i0 + i1;\n       if (i >= height) {\n        break;\n       }\n       processingFlags[index] &= processedInverseMask;\n       if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision) {\n        var sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contribution, sign0, sign1, significance1;\n    var contextLabel, decoded;\n    significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n    if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n     sign1 = coefficentsSign[index + 1];\n     if (significance1) {\n      sign0 = coefficentsSign[index - 1];\n      contribution = 1 - sign1 - sign0;\n     } else {\n      contribution = 1 - sign1 - sign1;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - 1];\n     contribution = 1 - sign0 - sign0;\n    } else {\n     contribution = 0;\n    }\n    var horizontalContribution = 3 * contribution;\n    significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n    if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n     sign1 = coefficentsSign[index + width];\n     if (significance1) {\n      sign0 = coefficentsSign[index - width];\n      contribution = 1 - sign1 - sign0 + horizontalContribution;\n     } else {\n      contribution = 1 - sign1 - sign1 + horizontalContribution;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - width];\n     contribution = 1 - sign0 - sign0 + horizontalContribution;\n    } else {\n     contribution = horizontalContribution;\n    }\n    if (contribution >= 0) {\n     contextLabel = 9 + contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel);\n    } else {\n     contextLabel = 9 - contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n    }\n    return decoded;\n   },\n   runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var neighborsSignificance = this.neighborsSignificance;\n    var contexts = this.contexts;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var length = width * height;\n    var width4 = width * 4;\n    for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n     indexNext = Math.min(length, index0 + width4);\n     for (var j = 0; j < width; j++) {\n      for (var index = index0 + j; index < indexNext; index += width) {\n       if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = 16;\n       if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n        processingFlags[index] ^= firstMagnitudeBitMask;\n        var significance = neighborsSignificance[index] & 127;\n        contextLabel = significance === 0 ? 15 : 14;\n       }\n       var bit = decoder.readBit(contexts, contextLabel);\n       coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   runCleanupPass: function BitModel_runCleanupPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var neighborsSignificance = this.neighborsSignificance;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var oneRowDown = width;\n    var twoRowsDown = width * 2;\n    var threeRowsDown = width * 3;\n    var iNext;\n    for (var i0 = 0; i0 < height; i0 = iNext) {\n     iNext = Math.min(i0 + 4, height);\n     var indexBase = i0 * width;\n     var checkAllEmpty = i0 + 3 < height;\n     for (var j = 0; j < width; j++) {\n      var index0 = indexBase + j;\n      var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n      var i1 = 0, index = index0;\n      var i = i0, sign;\n      if (allEmpty) {\n       var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n       if (!hasSignificantCoefficent) {\n        bitsDecoded[index0]++;\n        bitsDecoded[index0 + oneRowDown]++;\n        bitsDecoded[index0 + twoRowsDown]++;\n        bitsDecoded[index0 + threeRowsDown]++;\n        continue;\n       }\n       i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n       if (i1 !== 0) {\n        i = i0 + i1;\n        index += i1 * width;\n       }\n       sign = this.decodeSignBit(i, j, index);\n       coefficentsSign[index] = sign;\n       coefficentsMagnitude[index] = 1;\n       this.setNeighborsSignificance(i, j, index);\n       processingFlags[index] |= firstMagnitudeBitMask;\n       index = index0;\n       for (var i2 = i0; i2 <= i; i2++, index += width) {\n        bitsDecoded[index]++;\n       }\n       i1++;\n      }\n      for (i = i0 + i1; i < iNext; i++, index += width) {\n       if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision === 1) {\n        sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n      }\n     }\n    }\n   },\n   checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n    var decoder = this.decoder;\n    var contexts = this.contexts;\n    var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n    if (symbol !== 0xA) {\n     error('JPX Error: Invalid segmentation symbol');\n    }\n   }\n  };\n  return BitModel;\n }();\n var Transform = function TransformClosure() {\n  function Transform() {\n  }\n  Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n   var ll = subbands[0];\n   for (var i = 1, ii = subbands.length; i < ii; i++) {\n    ll = this.iterate(ll, subbands[i], u0, v0);\n   }\n   return ll;\n  };\n  Transform.prototype.extend = function extend(buffer, offset, size) {\n   var i1 = offset - 1, j1 = offset + 1;\n   var i2 = offset + size - 2, j2 = offset + size;\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1] = buffer[j1];\n   buffer[j2] = buffer[i2];\n  };\n  Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n   var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n   var width = hl_lh_hh.width;\n   var height = hl_lh_hh.height;\n   var items = hl_lh_hh.items;\n   var i, j, k, l, u, v;\n   for (k = 0, i = 0; i < llHeight; i++) {\n    l = i * 2 * width;\n    for (j = 0; j < llWidth; j++, k++, l += 2) {\n     items[l] = llItems[k];\n    }\n   }\n   llItems = ll.items = null;\n   var bufferPadding = 4;\n   var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n   if (width === 1) {\n    if ((u0 & 1) !== 0) {\n     for (v = 0, k = 0; v < height; v++, k += width) {\n      items[k] *= 0.5;\n     }\n    }\n   } else {\n    for (v = 0, k = 0; v < height; v++, k += width) {\n     rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n     this.extend(rowBuffer, bufferPadding, width);\n     this.filter(rowBuffer, bufferPadding, width);\n     items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n    }\n   }\n   var numBuffers = 16;\n   var colBuffers = [];\n   for (i = 0; i < numBuffers; i++) {\n    colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n   }\n   var b, currentBuffer = 0;\n   ll = bufferPadding + height;\n   if (height === 1) {\n    if ((v0 & 1) !== 0) {\n     for (u = 0; u < width; u++) {\n      items[u] *= 0.5;\n     }\n    }\n   } else {\n    for (u = 0; u < width; u++) {\n     if (currentBuffer === 0) {\n      numBuffers = Math.min(width - u, numBuffers);\n      for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        colBuffers[b][l] = items[k + b];\n       }\n      }\n      currentBuffer = numBuffers;\n     }\n     currentBuffer--;\n     var buffer = colBuffers[currentBuffer];\n     this.extend(buffer, bufferPadding, height);\n     this.filter(buffer, bufferPadding, height);\n     if (currentBuffer === 0) {\n      k = u - numBuffers + 1;\n      for (l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        items[k + b] = colBuffers[b][l];\n       }\n      }\n     }\n    }\n   }\n   return {\n    width: width,\n    height: height,\n    items: items\n   };\n  };\n  return Transform;\n }();\n var IrreversibleTransform = function IrreversibleTransformClosure() {\n  function IrreversibleTransform() {\n   Transform.call(this);\n  }\n  IrreversibleTransform.prototype = Object.create(Transform.prototype);\n  IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n, current, next;\n   var alpha = -1.586134342059924;\n   var beta = -0.052980118572961;\n   var gamma = 0.882911075530934;\n   var delta = 0.443506852043971;\n   var K = 1.230174104914001;\n   var K_ = 1 / K;\n   j = offset - 3;\n   for (n = len + 4; n--; j += 2) {\n    x[j] *= K_;\n   }\n   j = offset - 2;\n   current = delta * x[j - 1];\n   for (n = len + 3; n--; j += 2) {\n    next = delta * x[j + 1];\n    x[j] = K * x[j] - current - next;\n    if (n--) {\n     j += 2;\n     current = delta * x[j + 1];\n     x[j] = K * x[j] - current - next;\n    } else {\n     break;\n    }\n   }\n   j = offset - 1;\n   current = gamma * x[j - 1];\n   for (n = len + 2; n--; j += 2) {\n    next = gamma * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = gamma * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   j = offset;\n   current = beta * x[j - 1];\n   for (n = len + 1; n--; j += 2) {\n    next = beta * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = beta * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   if (len !== 0) {\n    j = offset + 1;\n    current = alpha * x[j - 1];\n    for (n = len; n--; j += 2) {\n     next = alpha * x[j + 1];\n     x[j] -= current + next;\n     if (n--) {\n      j += 2;\n      current = alpha * x[j + 1];\n      x[j] -= current + next;\n     } else {\n      break;\n     }\n    }\n   }\n  };\n  return IrreversibleTransform;\n }();\n var ReversibleTransform = function ReversibleTransformClosure() {\n  function ReversibleTransform() {\n   Transform.call(this);\n  }\n  ReversibleTransform.prototype = Object.create(Transform.prototype);\n  ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n;\n   for (j = offset, n = len + 1; n--; j += 2) {\n    x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n   }\n   for (j = offset + 1, n = len; n--; j += 2) {\n    x[j] += x[j - 1] + x[j + 1] >> 1;\n   }\n  };\n  return ReversibleTransform;\n }();\n return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreCrypto = __w_pdfjs_require__(12);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreChunkedStream = __w_pdfjs_require__(11);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar stringToUTF8String = sharedUtil.stringToUTF8String;\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar Util = sharedUtil.Util;\nvar Ref = corePrimitives.Ref;\nvar RefSet = corePrimitives.RefSet;\nvar RefSetCache = corePrimitives.RefSetCache;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isRef = corePrimitives.isRef;\nvar isRefsEqual = corePrimitives.isRefsEqual;\nvar isStream = corePrimitives.isStream;\nvar CipherTransformFactory = coreCrypto.CipherTransformFactory;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar ChunkedStream = coreChunkedStream.ChunkedStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = function CatalogClosure() {\n function Catalog(pdfManager, xref, pageFactory) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.catDict = xref.getCatalogObj();\n  this.fontCache = new RefSetCache();\n  this.builtInCMapCache = Object.create(null);\n  assert(isDict(this.catDict), 'catalog object is not a dictionary');\n  this.pageFactory = pageFactory;\n  this.pagePromises = [];\n }\n Catalog.prototype = {\n  get metadata() {\n   var streamRef = this.catDict.getRaw('Metadata');\n   if (!isRef(streamRef)) {\n    return shadow(this, 'metadata', null);\n   }\n   var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n   var stream = this.xref.fetch(streamRef, !encryptMetadata);\n   var metadata;\n   if (stream && isDict(stream.dict)) {\n    var type = stream.dict.get('Type');\n    var subtype = stream.dict.get('Subtype');\n    if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n     try {\n      metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n     } catch (e) {\n      info('Skipping invalid metadata.');\n     }\n    }\n   }\n   return shadow(this, 'metadata', metadata);\n  },\n  get toplevelPagesDict() {\n   var pagesObj = this.catDict.get('Pages');\n   assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n   return shadow(this, 'toplevelPagesDict', pagesObj);\n  },\n  get documentOutline() {\n   var obj = null;\n   try {\n    obj = this.readDocumentOutline();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read document outline');\n   }\n   return shadow(this, 'documentOutline', obj);\n  },\n  readDocumentOutline: function Catalog_readDocumentOutline() {\n   var obj = this.catDict.get('Outlines');\n   if (!isDict(obj)) {\n    return null;\n   }\n   obj = obj.getRaw('First');\n   if (!isRef(obj)) {\n    return null;\n   }\n   var root = { items: [] };\n   var queue = [{\n     obj: obj,\n     parent: root\n    }];\n   var processed = new RefSet();\n   processed.put(obj);\n   var xref = this.xref, blackColor = new Uint8Array(3);\n   while (queue.length > 0) {\n    var i = queue.shift();\n    var outlineDict = xref.fetchIfRef(i.obj);\n    if (outlineDict === null) {\n     continue;\n    }\n    assert(outlineDict.has('Title'), 'Invalid outline item');\n    var data = {\n     url: null,\n     dest: null\n    };\n    Catalog.parseDestDictionary({\n     destDict: outlineDict,\n     resultObj: data,\n     docBaseUrl: this.pdfManager.docBaseUrl\n    });\n    var title = outlineDict.get('Title');\n    var flags = outlineDict.get('F') || 0;\n    var color = outlineDict.getArray('C'), rgbColor = blackColor;\n    if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n     rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n    }\n    var outlineItem = {\n     dest: data.dest,\n     url: data.url,\n     unsafeUrl: data.unsafeUrl,\n     newWindow: data.newWindow,\n     title: stringToPDFString(title),\n     color: rgbColor,\n     count: outlineDict.get('Count'),\n     bold: !!(flags & 2),\n     italic: !!(flags & 1),\n     items: []\n    };\n    i.parent.items.push(outlineItem);\n    obj = outlineDict.getRaw('First');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: outlineItem\n     });\n     processed.put(obj);\n    }\n    obj = outlineDict.getRaw('Next');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: i.parent\n     });\n     processed.put(obj);\n    }\n   }\n   return root.items.length > 0 ? root.items : null;\n  },\n  get numPages() {\n   var obj = this.toplevelPagesDict.get('Count');\n   assert(isInt(obj), 'page count in top level pages object is not an integer');\n   return shadow(this, 'num', obj);\n  },\n  get destinations() {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dests = {}, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    obj = nameDictionaryRef;\n    obj.forEach(function catalogForEach(key, value) {\n     if (!value) {\n      return;\n     }\n     dests[key] = fetchDestination(value);\n    });\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     dests[name] = fetchDestination(names[name]);\n    }\n   }\n   return shadow(this, 'destinations', dests);\n  },\n  getDestination: function Catalog_getDestination(destinationId) {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dest = null, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    var value = nameDictionaryRef.get(destinationId);\n    if (value) {\n     dest = fetchDestination(value);\n    }\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    dest = fetchDestination(nameTree.get(destinationId));\n   }\n   return dest;\n  },\n  get pageLabels() {\n   var obj = null;\n   try {\n    obj = this.readPageLabels();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read page labels.');\n   }\n   return shadow(this, 'pageLabels', obj);\n  },\n  readPageLabels: function Catalog_readPageLabels() {\n   var obj = this.catDict.getRaw('PageLabels');\n   if (!obj) {\n    return null;\n   }\n   var pageLabels = new Array(this.numPages);\n   var style = null;\n   var prefix = '';\n   var numberTree = new NumberTree(obj, this.xref);\n   var nums = numberTree.getAll();\n   var currentLabel = '', currentIndex = 1;\n   for (var i = 0, ii = this.numPages; i < ii; i++) {\n    if (i in nums) {\n     var labelDict = nums[i];\n     assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n     var type = labelDict.get('Type');\n     assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n     var s = labelDict.get('S');\n     assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n     style = s ? s.name : null;\n     var p = labelDict.get('P');\n     assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n     prefix = p ? stringToPDFString(p) : '';\n     var st = labelDict.get('St');\n     assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n     currentIndex = st || 1;\n    }\n    switch (style) {\n    case 'D':\n     currentLabel = currentIndex;\n     break;\n    case 'R':\n    case 'r':\n     currentLabel = Util.toRoman(currentIndex, style === 'r');\n     break;\n    case 'A':\n    case 'a':\n     var LIMIT = 26;\n     var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n     var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n     var letterIndex = currentIndex - 1;\n     var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n     var charBuf = [];\n     for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n      charBuf.push(character);\n     }\n     currentLabel = charBuf.join('');\n     break;\n    default:\n     assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n    }\n    pageLabels[i] = prefix + currentLabel;\n    currentLabel = '';\n    currentIndex++;\n   }\n   return pageLabels;\n  },\n  get attachments() {\n   var xref = this.xref;\n   var attachments = null, nameTreeRef;\n   var obj = this.catDict.get('Names');\n   if (obj) {\n    nameTreeRef = obj.getRaw('EmbeddedFiles');\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var fs = new FileSpec(names[name], xref);\n     if (!attachments) {\n      attachments = Object.create(null);\n     }\n     attachments[stringToPDFString(name)] = fs.serializable;\n    }\n   }\n   return shadow(this, 'attachments', attachments);\n  },\n  get javaScript() {\n   var xref = this.xref;\n   var obj = this.catDict.get('Names');\n   var javaScript = [];\n   function appendIfJavaScriptDict(jsDict) {\n    var type = jsDict.get('S');\n    if (!isName(type, 'JavaScript')) {\n     return;\n    }\n    var js = jsDict.get('JS');\n    if (isStream(js)) {\n     js = bytesToString(js.getBytes());\n    } else if (!isString(js)) {\n     return;\n    }\n    javaScript.push(stringToPDFString(js));\n   }\n   if (obj && obj.has('JavaScript')) {\n    var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var jsDict = names[name];\n     if (isDict(jsDict)) {\n      appendIfJavaScriptDict(jsDict);\n     }\n    }\n   }\n   var openactionDict = this.catDict.get('OpenAction');\n   if (isDict(openactionDict, 'Action')) {\n    var actionType = openactionDict.get('S');\n    if (isName(actionType, 'Named')) {\n     var action = openactionDict.get('N');\n     if (isName(action, 'Print')) {\n      javaScript.push('print({});');\n     }\n    } else {\n     appendIfJavaScriptDict(openactionDict);\n    }\n   }\n   return shadow(this, 'javaScript', javaScript);\n  },\n  cleanup: function Catalog_cleanup() {\n   var promises = [];\n   this.fontCache.forEach(function (promise) {\n    promises.push(promise);\n   });\n   return Promise.all(promises).then(function (translatedFonts) {\n    for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n     var font = translatedFonts[i].dict;\n     delete font.translated;\n    }\n    this.fontCache.clear();\n    this.builtInCMapCache = Object.create(null);\n   }.bind(this));\n  },\n  getPage: function Catalog_getPage(pageIndex) {\n   if (!(pageIndex in this.pagePromises)) {\n    this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n     var dict = a[0];\n     var ref = a[1];\n     return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache, this.builtInCMapCache);\n    }.bind(this));\n   }\n   return this.pagePromises[pageIndex];\n  },\n  getPageDict: function Catalog_getPageDict(pageIndex) {\n   var capability = createPromiseCapability();\n   var nodesToVisit = [this.catDict.getRaw('Pages')];\n   var currentPageIndex = 0;\n   var xref = this.xref;\n   var checkAllKids = false;\n   function next() {\n    while (nodesToVisit.length) {\n     var currentNode = nodesToVisit.pop();\n     if (isRef(currentNode)) {\n      xref.fetchAsync(currentNode).then(function (obj) {\n       if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n        if (pageIndex === currentPageIndex) {\n         capability.resolve([\n          obj,\n          currentNode\n         ]);\n        } else {\n         currentPageIndex++;\n         next();\n        }\n        return;\n       }\n       nodesToVisit.push(obj);\n       next();\n      }, capability.reject);\n      return;\n     }\n     assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n     var count = currentNode.get('Count');\n     if (count === 0) {\n      checkAllKids = true;\n     }\n     if (currentPageIndex + count <= pageIndex) {\n      currentPageIndex += count;\n      continue;\n     }\n     var kids = currentNode.get('Kids');\n     assert(isArray(kids), 'page dictionary kids object is not an array');\n     if (!checkAllKids && count === kids.length) {\n      nodesToVisit = [kids[pageIndex - currentPageIndex]];\n      currentPageIndex = pageIndex;\n      continue;\n     } else {\n      for (var last = kids.length - 1; last >= 0; last--) {\n       nodesToVisit.push(kids[last]);\n      }\n     }\n    }\n    capability.reject('Page index ' + pageIndex + ' not found.');\n   }\n   next();\n   return capability.promise;\n  },\n  getPageIndex: function Catalog_getPageIndex(pageRef) {\n   var xref = this.xref;\n   function pagesBeforeRef(kidRef) {\n    var total = 0;\n    var parentRef;\n    return xref.fetchAsync(kidRef).then(function (node) {\n     if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n      throw new Error('The reference does not point to a /Page Dict.');\n     }\n     if (!node) {\n      return null;\n     }\n     assert(isDict(node), 'node must be a Dict.');\n     parentRef = node.getRaw('Parent');\n     return node.getAsync('Parent');\n    }).then(function (parent) {\n     if (!parent) {\n      return null;\n     }\n     assert(isDict(parent), 'parent must be a Dict.');\n     return parent.getAsync('Kids');\n    }).then(function (kids) {\n     if (!kids) {\n      return null;\n     }\n     var kidPromises = [];\n     var found = false;\n     for (var i = 0; i < kids.length; i++) {\n      var kid = kids[i];\n      assert(isRef(kid), 'kid must be a Ref.');\n      if (kid.num === kidRef.num) {\n       found = true;\n       break;\n      }\n      kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n       if (kid.has('Count')) {\n        var count = kid.get('Count');\n        total += count;\n       } else {\n        total++;\n       }\n      }));\n     }\n     if (!found) {\n      error('kid ref not found in parents kids');\n     }\n     return Promise.all(kidPromises).then(function () {\n      return [\n       total,\n       parentRef\n      ];\n     });\n    });\n   }\n   var total = 0;\n   function next(ref) {\n    return pagesBeforeRef(ref).then(function (args) {\n     if (!args) {\n      return total;\n     }\n     var count = args[0];\n     var parentRef = args[1];\n     total += count;\n     return next(parentRef);\n    });\n   }\n   return next(pageRef);\n  }\n };\n Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n  function addDefaultProtocolToUrl(url) {\n   if (url.indexOf('www.') === 0) {\n    return 'http://' + url;\n   }\n   return url;\n  }\n  function tryConvertUrlEncoding(url) {\n   try {\n    return stringToUTF8String(url);\n   } catch (e) {\n    return url;\n   }\n  }\n  var destDict = params.destDict;\n  if (!isDict(destDict)) {\n   warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n   return;\n  }\n  var resultObj = params.resultObj;\n  if (typeof resultObj !== 'object') {\n   warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n   return;\n  }\n  var docBaseUrl = params.docBaseUrl || null;\n  var action = destDict.get('A'), url, dest;\n  if (isDict(action)) {\n   var linkType = action.get('S').name;\n   switch (linkType) {\n   case 'URI':\n    url = action.get('URI');\n    if (isName(url)) {\n     url = '/' + url.name;\n    } else if (isString(url)) {\n     url = addDefaultProtocolToUrl(url);\n    }\n    break;\n   case 'GoTo':\n    dest = action.get('D');\n    break;\n   case 'Launch':\n   case 'GoToR':\n    var urlDict = action.get('F');\n    if (isDict(urlDict)) {\n     url = urlDict.get('F') || null;\n    } else if (isString(urlDict)) {\n     url = urlDict;\n    }\n    var remoteDest = action.get('D');\n    if (remoteDest) {\n     if (isName(remoteDest)) {\n      remoteDest = remoteDest.name;\n     }\n     if (isString(url)) {\n      var baseUrl = url.split('#')[0];\n      if (isString(remoteDest)) {\n       url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n      } else if (isArray(remoteDest)) {\n       url = baseUrl + '#' + JSON.stringify(remoteDest);\n      }\n     }\n    }\n    var newWindow = action.get('NewWindow');\n    if (isBool(newWindow)) {\n     resultObj.newWindow = newWindow;\n    }\n    break;\n   case 'Named':\n    var namedAction = action.get('N');\n    if (isName(namedAction)) {\n     resultObj.action = namedAction.name;\n    }\n    break;\n   case 'JavaScript':\n    var jsAction = action.get('JS'), js;\n    if (isStream(jsAction)) {\n     js = bytesToString(jsAction.getBytes());\n    } else if (isString(jsAction)) {\n     js = jsAction;\n    }\n    if (js) {\n     var URL_OPEN_METHODS = [\n      'app.launchURL',\n      'window.open'\n     ];\n     var regex = new RegExp('^(?:' + URL_OPEN_METHODS.join('|') + ')' + '\\\\((?:\\'|\\\")(\\\\S+)(?:\\'|\\\")(?:,|\\\\))');\n     var jsUrl = regex.exec(stringToPDFString(js), 'i');\n     if (jsUrl && jsUrl[1]) {\n      url = jsUrl[1];\n      break;\n     }\n    }\n   default:\n    warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n    break;\n   }\n  } else if (destDict.has('Dest')) {\n   dest = destDict.get('Dest');\n  }\n  if (isString(url)) {\n   url = tryConvertUrlEncoding(url);\n   var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n   if (absoluteUrl) {\n    resultObj.url = absoluteUrl.href;\n   }\n   resultObj.unsafeUrl = url;\n  }\n  if (dest) {\n   if (isName(dest)) {\n    dest = dest.name;\n   }\n   if (isString(dest) || isArray(dest)) {\n    resultObj.dest = dest;\n   }\n  }\n };\n return Catalog;\n}();\nvar XRef = function XRefClosure() {\n function XRef(stream, pdfManager) {\n  this.stream = stream;\n  this.pdfManager = pdfManager;\n  this.entries = [];\n  this.xrefstms = Object.create(null);\n  this.cache = [];\n  this.stats = {\n   streamTypes: [],\n   fontTypes: []\n  };\n }\n XRef.prototype = {\n  setStartXRef: function XRef_setStartXRef(startXRef) {\n   this.startXRefQueue = [startXRef];\n  },\n  parse: function XRef_parse(recoveryMode) {\n   var trailerDict;\n   if (!recoveryMode) {\n    trailerDict = this.readXRef();\n   } else {\n    warn('Indexing all PDF objects');\n    trailerDict = this.indexObjects();\n   }\n   trailerDict.assignXref(this);\n   this.trailer = trailerDict;\n   var encrypt = trailerDict.get('Encrypt');\n   if (isDict(encrypt)) {\n    var ids = trailerDict.get('ID');\n    var fileId = ids && ids.length ? ids[0] : '';\n    encrypt.suppressEncryption = true;\n    this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n   }\n   if (!(this.root = trailerDict.get('Root'))) {\n    error('Invalid root reference');\n   }\n  },\n  processXRefTable: function XRef_processXRefTable(parser) {\n   if (!('tableState' in this)) {\n    this.tableState = {\n     entryNum: 0,\n     streamPos: parser.lexer.stream.pos,\n     parserBuf1: parser.buf1,\n     parserBuf2: parser.buf2\n    };\n   }\n   var obj = this.readXRefTable(parser);\n   if (!isCmd(obj, 'trailer')) {\n    error('Invalid XRef table: could not find trailer dictionary');\n   }\n   var dict = parser.getObj();\n   if (!isDict(dict) && dict.dict) {\n    dict = dict.dict;\n   }\n   if (!isDict(dict)) {\n    error('Invalid XRef table: could not parse trailer dictionary');\n   }\n   delete this.tableState;\n   return dict;\n  },\n  readXRefTable: function XRef_readXRefTable(parser) {\n   var stream = parser.lexer.stream;\n   var tableState = this.tableState;\n   stream.pos = tableState.streamPos;\n   parser.buf1 = tableState.parserBuf1;\n   parser.buf2 = tableState.parserBuf2;\n   var obj;\n   while (true) {\n    if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n     if (isCmd(obj = parser.getObj(), 'trailer')) {\n      break;\n     }\n     tableState.firstEntryNum = obj;\n     tableState.entryCount = parser.getObj();\n    }\n    var first = tableState.firstEntryNum;\n    var count = tableState.entryCount;\n    if (!isInt(first) || !isInt(count)) {\n     error('Invalid XRef table: wrong types in subsection header');\n    }\n    for (var i = tableState.entryNum; i < count; i++) {\n     tableState.streamPos = stream.pos;\n     tableState.entryNum = i;\n     tableState.parserBuf1 = parser.buf1;\n     tableState.parserBuf2 = parser.buf2;\n     var entry = {};\n     entry.offset = parser.getObj();\n     entry.gen = parser.getObj();\n     var type = parser.getObj();\n     if (isCmd(type, 'f')) {\n      entry.free = true;\n     } else if (isCmd(type, 'n')) {\n      entry.uncompressed = true;\n     }\n     if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n      error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n     }\n     if (i === 0 && entry.free && first === 1) {\n      first = 0;\n     }\n     if (!this.entries[i + first]) {\n      this.entries[i + first] = entry;\n     }\n    }\n    tableState.entryNum = 0;\n    tableState.streamPos = stream.pos;\n    tableState.parserBuf1 = parser.buf1;\n    tableState.parserBuf2 = parser.buf2;\n    delete tableState.firstEntryNum;\n    delete tableState.entryCount;\n   }\n   if (this.entries[0] && !this.entries[0].free) {\n    error('Invalid XRef table: unexpected first object');\n   }\n   return obj;\n  },\n  processXRefStream: function XRef_processXRefStream(stream) {\n   if (!('streamState' in this)) {\n    var streamParameters = stream.dict;\n    var byteWidths = streamParameters.get('W');\n    var range = streamParameters.get('Index');\n    if (!range) {\n     range = [\n      0,\n      streamParameters.get('Size')\n     ];\n    }\n    this.streamState = {\n     entryRanges: range,\n     byteWidths: byteWidths,\n     entryNum: 0,\n     streamPos: stream.pos\n    };\n   }\n   this.readXRefStream(stream);\n   delete this.streamState;\n   return stream.dict;\n  },\n  readXRefStream: function XRef_readXRefStream(stream) {\n   var i, j;\n   var streamState = this.streamState;\n   stream.pos = streamState.streamPos;\n   var byteWidths = streamState.byteWidths;\n   var typeFieldWidth = byteWidths[0];\n   var offsetFieldWidth = byteWidths[1];\n   var generationFieldWidth = byteWidths[2];\n   var entryRanges = streamState.entryRanges;\n   while (entryRanges.length > 0) {\n    var first = entryRanges[0];\n    var n = entryRanges[1];\n    if (!isInt(first) || !isInt(n)) {\n     error('Invalid XRef range fields: ' + first + ', ' + n);\n    }\n    if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n     error('Invalid XRef entry fields length: ' + first + ', ' + n);\n    }\n    for (i = streamState.entryNum; i < n; ++i) {\n     streamState.entryNum = i;\n     streamState.streamPos = stream.pos;\n     var type = 0, offset = 0, generation = 0;\n     for (j = 0; j < typeFieldWidth; ++j) {\n      type = type << 8 | stream.getByte();\n     }\n     if (typeFieldWidth === 0) {\n      type = 1;\n     }\n     for (j = 0; j < offsetFieldWidth; ++j) {\n      offset = offset << 8 | stream.getByte();\n     }\n     for (j = 0; j < generationFieldWidth; ++j) {\n      generation = generation << 8 | stream.getByte();\n     }\n     var entry = {};\n     entry.offset = offset;\n     entry.gen = generation;\n     switch (type) {\n     case 0:\n      entry.free = true;\n      break;\n     case 1:\n      entry.uncompressed = true;\n      break;\n     case 2:\n      break;\n     default:\n      error('Invalid XRef entry type: ' + type);\n     }\n     if (!this.entries[first + i]) {\n      this.entries[first + i] = entry;\n     }\n    }\n    streamState.entryNum = 0;\n    streamState.streamPos = stream.pos;\n    entryRanges.splice(0, 2);\n   }\n  },\n  indexObjects: function XRef_indexObjects() {\n   var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n   var PERCENT = 0x25, LT = 0x3C;\n   function readToken(data, offset) {\n    var token = '', ch = data[offset];\n    while (ch !== LF && ch !== CR && ch !== LT) {\n     if (++offset >= data.length) {\n      break;\n     }\n     token += String.fromCharCode(ch);\n     ch = data[offset];\n    }\n    return token;\n   }\n   function skipUntil(data, offset, what) {\n    var length = what.length, dataLength = data.length;\n    var skipped = 0;\n    while (offset < dataLength) {\n     var i = 0;\n     while (i < length && data[offset + i] === what[i]) {\n      ++i;\n     }\n     if (i >= length) {\n      break;\n     }\n     offset++;\n     skipped++;\n    }\n    return skipped;\n   }\n   var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n   var trailerBytes = new Uint8Array([\n    116,\n    114,\n    97,\n    105,\n    108,\n    101,\n    114\n   ]);\n   var startxrefBytes = new Uint8Array([\n    115,\n    116,\n    97,\n    114,\n    116,\n    120,\n    114,\n    101,\n    102\n   ]);\n   var endobjBytes = new Uint8Array([\n    101,\n    110,\n    100,\n    111,\n    98,\n    106\n   ]);\n   var xrefBytes = new Uint8Array([\n    47,\n    88,\n    82,\n    101,\n    102\n   ]);\n   this.entries.length = 0;\n   var stream = this.stream;\n   stream.pos = 0;\n   var buffer = stream.getBytes();\n   var position = stream.start, length = buffer.length;\n   var trailers = [], xrefStms = [];\n   while (position < length) {\n    var ch = buffer[position];\n    if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n     ++position;\n     continue;\n    }\n    if (ch === PERCENT) {\n     do {\n      ++position;\n      if (position >= length) {\n       break;\n      }\n      ch = buffer[position];\n     } while (ch !== LF && ch !== CR);\n     continue;\n    }\n    var token = readToken(buffer, position);\n    var m;\n    if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n     position += skipUntil(buffer, position, trailerBytes);\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else if (m = objRegExp.exec(token)) {\n     if (typeof this.entries[m[1]] === 'undefined') {\n      this.entries[m[1]] = {\n       offset: position - stream.start,\n       gen: m[2] | 0,\n       uncompressed: true\n      };\n     }\n     var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n     var content = buffer.subarray(position, position + contentLength);\n     var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n     if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n      xrefStms.push(position - stream.start);\n      this.xrefstms[position - stream.start] = 1;\n     }\n     position += contentLength;\n    } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else {\n     position += token.length + 1;\n    }\n   }\n   var i, ii;\n   for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n    this.startXRefQueue.push(xrefStms[i]);\n    this.readXRef(true);\n   }\n   var dict;\n   for (i = 0, ii = trailers.length; i < ii; ++i) {\n    stream.pos = trailers[i];\n    var parser = new Parser(new Lexer(stream), true, this, true);\n    var obj = parser.getObj();\n    if (!isCmd(obj, 'trailer')) {\n     continue;\n    }\n    dict = parser.getObj();\n    if (!isDict(dict)) {\n     continue;\n    }\n    if (dict.has('ID')) {\n     return dict;\n    }\n   }\n   if (dict) {\n    return dict;\n   }\n   throw new InvalidPDFException('Invalid PDF structure');\n  },\n  readXRef: function XRef_readXRef(recoveryMode) {\n   var stream = this.stream;\n   try {\n    while (this.startXRefQueue.length) {\n     var startXRef = this.startXRefQueue[0];\n     stream.pos = startXRef + stream.start;\n     var parser = new Parser(new Lexer(stream), true, this);\n     var obj = parser.getObj();\n     var dict;\n     if (isCmd(obj, 'xref')) {\n      dict = this.processXRefTable(parser);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      obj = dict.get('XRefStm');\n      if (isInt(obj)) {\n       var pos = obj;\n       if (!(pos in this.xrefstms)) {\n        this.xrefstms[pos] = 1;\n        this.startXRefQueue.push(pos);\n       }\n      }\n     } else if (isInt(obj)) {\n      if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n       error('Invalid XRef stream');\n      }\n      dict = this.processXRefStream(obj);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      if (!dict) {\n       error('Failed to read XRef stream');\n      }\n     } else {\n      error('Invalid XRef stream header');\n     }\n     obj = dict.get('Prev');\n     if (isInt(obj)) {\n      this.startXRefQueue.push(obj);\n     } else if (isRef(obj)) {\n      this.startXRefQueue.push(obj.num);\n     }\n     this.startXRefQueue.shift();\n    }\n    return this.topDict;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    info('(while reading XRef): ' + e);\n   }\n   if (recoveryMode) {\n    return;\n   }\n   throw new XRefParseException();\n  },\n  getEntry: function XRef_getEntry(i) {\n   var xrefEntry = this.entries[i];\n   if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n    return xrefEntry;\n   }\n   return null;\n  },\n  fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return obj;\n   }\n   return this.fetch(obj, suppressEncryption);\n  },\n  fetch: function XRef_fetch(ref, suppressEncryption) {\n   assert(isRef(ref), 'ref object is not a reference');\n   var num = ref.num;\n   if (num in this.cache) {\n    var cacheEntry = this.cache[num];\n    return cacheEntry;\n   }\n   var xrefEntry = this.getEntry(num);\n   if (xrefEntry === null) {\n    return this.cache[num] = null;\n   }\n   if (xrefEntry.uncompressed) {\n    xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n   } else {\n    xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n   }\n   if (isDict(xrefEntry)) {\n    xrefEntry.objId = ref.toString();\n   } else if (isStream(xrefEntry)) {\n    xrefEntry.dict.objId = ref.toString();\n   }\n   return xrefEntry;\n  },\n  fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n   var gen = ref.gen;\n   var num = ref.num;\n   if (xrefEntry.gen !== gen) {\n    error('inconsistent generation in XRef');\n   }\n   var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n   var parser = new Parser(new Lexer(stream), true, this);\n   var obj1 = parser.getObj();\n   var obj2 = parser.getObj();\n   var obj3 = parser.getObj();\n   if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n    error('bad XRef entry');\n   }\n   if (!isCmd(obj3, 'obj')) {\n    if (obj3.cmd.indexOf('obj') === 0) {\n     num = parseInt(obj3.cmd.substring(3), 10);\n     if (!isNaN(num)) {\n      return num;\n     }\n    }\n    error('bad XRef entry');\n   }\n   if (this.encrypt && !suppressEncryption) {\n    xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n   } else {\n    xrefEntry = parser.getObj();\n   }\n   if (!isStream(xrefEntry)) {\n    this.cache[num] = xrefEntry;\n   }\n   return xrefEntry;\n  },\n  fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n   var tableOffset = xrefEntry.offset;\n   var stream = this.fetch(new Ref(tableOffset, 0));\n   if (!isStream(stream)) {\n    error('bad ObjStm stream');\n   }\n   var first = stream.dict.get('First');\n   var n = stream.dict.get('N');\n   if (!isInt(first) || !isInt(n)) {\n    error('invalid first and n parameters for ObjStm stream');\n   }\n   var parser = new Parser(new Lexer(stream), false, this);\n   parser.allowStreams = true;\n   var i, entries = [], num, nums = [];\n   for (i = 0; i < n; ++i) {\n    num = parser.getObj();\n    if (!isInt(num)) {\n     error('invalid object number in the ObjStm stream: ' + num);\n    }\n    nums.push(num);\n    var offset = parser.getObj();\n    if (!isInt(offset)) {\n     error('invalid object offset in the ObjStm stream: ' + offset);\n    }\n   }\n   for (i = 0; i < n; ++i) {\n    entries.push(parser.getObj());\n    if (isCmd(parser.buf1, 'endobj')) {\n     parser.shift();\n    }\n    num = nums[i];\n    var entry = this.entries[num];\n    if (entry && entry.offset === tableOffset && entry.gen === i) {\n     this.cache[num] = entries[i];\n    }\n   }\n   xrefEntry = entries[xrefEntry.gen];\n   if (xrefEntry === undefined) {\n    error('bad XRef entry for compressed object');\n   }\n   return xrefEntry;\n  },\n  fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return Promise.resolve(obj);\n   }\n   return this.fetchAsync(obj, suppressEncryption);\n  },\n  fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n   var streamManager = this.stream.manager;\n   var xref = this;\n   return new Promise(function tryFetch(resolve, reject) {\n    try {\n     resolve(xref.fetch(ref, suppressEncryption));\n    } catch (e) {\n     if (e instanceof MissingDataException) {\n      streamManager.requestRange(e.begin, e.end).then(function () {\n       tryFetch(resolve, reject);\n      }, reject);\n      return;\n     }\n     reject(e);\n    }\n   });\n  },\n  getCatalogObj: function XRef_getCatalogObj() {\n   return this.root;\n  }\n };\n return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n function NameOrNumberTree(root, xref) {\n  throw new Error('Cannot initialize NameOrNumberTree.');\n }\n NameOrNumberTree.prototype = {\n  getAll: function NameOrNumberTree_getAll() {\n   var dict = Object.create(null);\n   if (!this.root) {\n    return dict;\n   }\n   var xref = this.xref;\n   var processed = new RefSet();\n   processed.put(this.root);\n   var queue = [this.root];\n   while (queue.length > 0) {\n    var i, n;\n    var obj = xref.fetchIfRef(queue.shift());\n    if (!isDict(obj)) {\n     continue;\n    }\n    if (obj.has('Kids')) {\n     var kids = obj.get('Kids');\n     for (i = 0, n = kids.length; i < n; i++) {\n      var kid = kids[i];\n      assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n      queue.push(kid);\n      processed.put(kid);\n     }\n     continue;\n    }\n    var entries = obj.get(this._type);\n    if (isArray(entries)) {\n     for (i = 0, n = entries.length; i < n; i += 2) {\n      dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n     }\n    }\n   }\n   return dict;\n  },\n  get: function NameOrNumberTree_get(key) {\n   if (!this.root) {\n    return null;\n   }\n   var xref = this.xref;\n   var kidsOrEntries = xref.fetchIfRef(this.root);\n   var loopCount = 0;\n   var MAX_LEVELS = 10;\n   var l, r, m;\n   while (kidsOrEntries.has('Kids')) {\n    if (++loopCount > MAX_LEVELS) {\n     warn('Search depth limit reached for \"' + this._type + '\" tree.');\n     return null;\n    }\n    var kids = kidsOrEntries.get('Kids');\n    if (!isArray(kids)) {\n     return null;\n    }\n    l = 0;\n    r = kids.length - 1;\n    while (l <= r) {\n     m = l + r >> 1;\n     var kid = xref.fetchIfRef(kids[m]);\n     var limits = kid.get('Limits');\n     if (key < xref.fetchIfRef(limits[0])) {\n      r = m - 1;\n     } else if (key > xref.fetchIfRef(limits[1])) {\n      l = m + 1;\n     } else {\n      kidsOrEntries = xref.fetchIfRef(kids[m]);\n      break;\n     }\n    }\n    if (l > r) {\n     return null;\n    }\n   }\n   var entries = kidsOrEntries.get(this._type);\n   if (isArray(entries)) {\n    l = 0;\n    r = entries.length - 2;\n    while (l <= r) {\n     m = l + r & ~1;\n     var currentKey = xref.fetchIfRef(entries[m]);\n     if (key < currentKey) {\n      r = m - 2;\n     } else if (key > currentKey) {\n      l = m + 2;\n     } else {\n      return xref.fetchIfRef(entries[m + 1]);\n     }\n    }\n   }\n   return null;\n  }\n };\n return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n function NameTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Names';\n }\n Util.inherit(NameTree, NameOrNumberTree, {});\n return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n function NumberTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Nums';\n }\n Util.inherit(NumberTree, NameOrNumberTree, {});\n return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n function FileSpec(root, xref) {\n  if (!root || !isDict(root)) {\n   return;\n  }\n  this.xref = xref;\n  this.root = root;\n  if (root.has('FS')) {\n   this.fs = root.get('FS');\n  }\n  this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n  if (root.has('RF')) {\n   warn('Related file specifications are not supported');\n  }\n  this.contentAvailable = true;\n  if (!root.has('EF')) {\n   this.contentAvailable = false;\n   warn('Non-embedded file specifications are not supported');\n  }\n }\n function pickPlatformItem(dict) {\n  if (dict.has('UF')) {\n   return dict.get('UF');\n  } else if (dict.has('F')) {\n   return dict.get('F');\n  } else if (dict.has('Unix')) {\n   return dict.get('Unix');\n  } else if (dict.has('Mac')) {\n   return dict.get('Mac');\n  } else if (dict.has('DOS')) {\n   return dict.get('DOS');\n  }\n  return null;\n }\n FileSpec.prototype = {\n  get filename() {\n   if (!this._filename && this.root) {\n    var filename = pickPlatformItem(this.root) || 'unnamed';\n    this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n   }\n   return this._filename;\n  },\n  get content() {\n   if (!this.contentAvailable) {\n    return null;\n   }\n   if (!this.contentRef && this.root) {\n    this.contentRef = pickPlatformItem(this.root.get('EF'));\n   }\n   var content = null;\n   if (this.contentRef) {\n    var xref = this.xref;\n    var fileObj = xref.fetchIfRef(this.contentRef);\n    if (fileObj && isStream(fileObj)) {\n     content = fileObj.getBytes();\n    } else {\n     warn('Embedded file specification points to non-existing/invalid ' + 'content');\n    }\n   } else {\n    warn('Embedded file specification does not have a content');\n   }\n   return content;\n  },\n  get serializable() {\n   return {\n    filename: this.filename,\n    content: this.content\n   };\n  }\n };\n return FileSpec;\n}();\nvar ObjectLoader = function () {\n function mayHaveChildren(value) {\n  return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n }\n function addChildren(node, nodesToVisit) {\n  var value;\n  if (isDict(node) || isStream(node)) {\n   var map;\n   if (isDict(node)) {\n    map = node.map;\n   } else {\n    map = node.dict.map;\n   }\n   for (var key in map) {\n    value = map[key];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  } else if (isArray(node)) {\n   for (var i = 0, ii = node.length; i < ii; i++) {\n    value = node[i];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  }\n }\n function ObjectLoader(obj, keys, xref) {\n  this.obj = obj;\n  this.keys = keys;\n  this.xref = xref;\n  this.refSet = null;\n  this.capability = null;\n }\n ObjectLoader.prototype = {\n  load: function ObjectLoader_load() {\n   var keys = this.keys;\n   this.capability = createPromiseCapability();\n   if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n    this.capability.resolve();\n    return this.capability.promise;\n   }\n   this.refSet = new RefSet();\n   var nodesToVisit = [];\n   for (var i = 0; i < keys.length; i++) {\n    nodesToVisit.push(this.obj[keys[i]]);\n   }\n   this._walk(nodesToVisit);\n   return this.capability.promise;\n  },\n  _walk: function ObjectLoader_walk(nodesToVisit) {\n   var nodesToRevisit = [];\n   var pendingRequests = [];\n   while (nodesToVisit.length) {\n    var currentNode = nodesToVisit.pop();\n    if (isRef(currentNode)) {\n     if (this.refSet.has(currentNode)) {\n      continue;\n     }\n     try {\n      var ref = currentNode;\n      this.refSet.put(ref);\n      currentNode = this.xref.fetch(currentNode);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       throw e;\n      }\n      nodesToRevisit.push(currentNode);\n      pendingRequests.push({\n       begin: e.begin,\n       end: e.end\n      });\n     }\n    }\n    if (currentNode && currentNode.getBaseStreams) {\n     var baseStreams = currentNode.getBaseStreams();\n     var foundMissingData = false;\n     for (var i = 0; i < baseStreams.length; i++) {\n      var stream = baseStreams[i];\n      if (stream.getMissingChunks && stream.getMissingChunks().length) {\n       foundMissingData = true;\n       pendingRequests.push({\n        begin: stream.start,\n        end: stream.end\n       });\n      }\n     }\n     if (foundMissingData) {\n      nodesToRevisit.push(currentNode);\n     }\n    }\n    addChildren(currentNode, nodesToVisit);\n   }\n   if (pendingRequests.length) {\n    this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n     nodesToVisit = nodesToRevisit;\n     for (var i = 0; i < nodesToRevisit.length; i++) {\n      var node = nodesToRevisit[i];\n      if (isRef(node)) {\n       this.refSet.remove(node);\n      }\n     }\n     this._walk(nodesToVisit);\n    }.bind(this), this.capability.reject);\n    return;\n   }\n   this.refSet = null;\n   this.capability.resolve();\n  }\n };\n return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getStdFontMap = getLookupTableFactory(function (t) {\n t['ArialNarrow'] = 'Helvetica';\n t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n t['ArialBlack'] = 'Helvetica';\n t['ArialBlack-Bold'] = 'Helvetica-Bold';\n t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n t['Arial-Black'] = 'Helvetica';\n t['Arial-Black-Bold'] = 'Helvetica-Bold';\n t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n t['Arial'] = 'Helvetica';\n t['Arial-Bold'] = 'Helvetica-Bold';\n t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Italic'] = 'Helvetica-Oblique';\n t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n t['Arial-BoldMT'] = 'Helvetica-Bold';\n t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n t['ArialMT'] = 'Helvetica';\n t['Courier-Bold'] = 'Courier-Bold';\n t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n t['Courier-Italic'] = 'Courier-Oblique';\n t['CourierNew'] = 'Courier';\n t['CourierNew-Bold'] = 'Courier-Bold';\n t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n t['CourierNew-Italic'] = 'Courier-Oblique';\n t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n t['CourierNewPSMT'] = 'Courier';\n t['Helvetica'] = 'Helvetica';\n t['Helvetica-Bold'] = 'Helvetica-Bold';\n t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n t['Helvetica-Italic'] = 'Helvetica-Oblique';\n t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n t['Symbol-Bold'] = 'Symbol';\n t['Symbol-BoldItalic'] = 'Symbol';\n t['Symbol-Italic'] = 'Symbol';\n t['TimesNewRoman'] = 'Times-Roman';\n t['TimesNewRoman-Bold'] = 'Times-Bold';\n t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRoman-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS'] = 'Times-Roman';\n t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n t['TimesNewRomanPSMT'] = 'Times-Roman';\n t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = getLookupTableFactory(function (t) {\n t['CenturyGothic'] = 'Helvetica';\n t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n t['ComicSansMS'] = 'Comic Sans MS';\n t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n t['LucidaConsole'] = 'Courier';\n t['LucidaConsole-Bold'] = 'Courier-Bold';\n t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n t['LucidaConsole-Italic'] = 'Courier-Oblique';\n t['MS-Gothic'] = 'MS Gothic';\n t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n t['MS-Mincho'] = 'MS Mincho';\n t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n t['MS-PGothic'] = 'MS PGothic';\n t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n t['MS-PMincho'] = 'MS PMincho';\n t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n t['NuptialScript'] = 'Times-Italic';\n t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = getLookupTableFactory(function (t) {\n t['Adobe Jenson'] = true;\n t['Adobe Text'] = true;\n t['Albertus'] = true;\n t['Aldus'] = true;\n t['Alexandria'] = true;\n t['Algerian'] = true;\n t['American Typewriter'] = true;\n t['Antiqua'] = true;\n t['Apex'] = true;\n t['Arno'] = true;\n t['Aster'] = true;\n t['Aurora'] = true;\n t['Baskerville'] = true;\n t['Bell'] = true;\n t['Bembo'] = true;\n t['Bembo Schoolbook'] = true;\n t['Benguiat'] = true;\n t['Berkeley Old Style'] = true;\n t['Bernhard Modern'] = true;\n t['Berthold City'] = true;\n t['Bodoni'] = true;\n t['Bauer Bodoni'] = true;\n t['Book Antiqua'] = true;\n t['Bookman'] = true;\n t['Bordeaux Roman'] = true;\n t['Californian FB'] = true;\n t['Calisto'] = true;\n t['Calvert'] = true;\n t['Capitals'] = true;\n t['Cambria'] = true;\n t['Cartier'] = true;\n t['Caslon'] = true;\n t['Catull'] = true;\n t['Centaur'] = true;\n t['Century Old Style'] = true;\n t['Century Schoolbook'] = true;\n t['Chaparral'] = true;\n t['Charis SIL'] = true;\n t['Cheltenham'] = true;\n t['Cholla Slab'] = true;\n t['Clarendon'] = true;\n t['Clearface'] = true;\n t['Cochin'] = true;\n t['Colonna'] = true;\n t['Computer Modern'] = true;\n t['Concrete Roman'] = true;\n t['Constantia'] = true;\n t['Cooper Black'] = true;\n t['Corona'] = true;\n t['Ecotype'] = true;\n t['Egyptienne'] = true;\n t['Elephant'] = true;\n t['Excelsior'] = true;\n t['Fairfield'] = true;\n t['FF Scala'] = true;\n t['Folkard'] = true;\n t['Footlight'] = true;\n t['FreeSerif'] = true;\n t['Friz Quadrata'] = true;\n t['Garamond'] = true;\n t['Gentium'] = true;\n t['Georgia'] = true;\n t['Gloucester'] = true;\n t['Goudy Old Style'] = true;\n t['Goudy Schoolbook'] = true;\n t['Goudy Pro Font'] = true;\n t['Granjon'] = true;\n t['Guardian Egyptian'] = true;\n t['Heather'] = true;\n t['Hercules'] = true;\n t['High Tower Text'] = true;\n t['Hiroshige'] = true;\n t['Hoefler Text'] = true;\n t['Humana Serif'] = true;\n t['Imprint'] = true;\n t['Ionic No. 5'] = true;\n t['Janson'] = true;\n t['Joanna'] = true;\n t['Korinna'] = true;\n t['Lexicon'] = true;\n t['Liberation Serif'] = true;\n t['Linux Libertine'] = true;\n t['Literaturnaya'] = true;\n t['Lucida'] = true;\n t['Lucida Bright'] = true;\n t['Melior'] = true;\n t['Memphis'] = true;\n t['Miller'] = true;\n t['Minion'] = true;\n t['Modern'] = true;\n t['Mona Lisa'] = true;\n t['Mrs Eaves'] = true;\n t['MS Serif'] = true;\n t['Museo Slab'] = true;\n t['New York'] = true;\n t['Nimbus Roman'] = true;\n t['NPS Rawlinson Roadway'] = true;\n t['NuptialScript'] = true;\n t['Palatino'] = true;\n t['Perpetua'] = true;\n t['Plantin'] = true;\n t['Plantin Schoolbook'] = true;\n t['Playbill'] = true;\n t['Poor Richard'] = true;\n t['Rawlinson Roadway'] = true;\n t['Renault'] = true;\n t['Requiem'] = true;\n t['Rockwell'] = true;\n t['Roman'] = true;\n t['Rotis Serif'] = true;\n t['Sabon'] = true;\n t['Scala'] = true;\n t['Seagull'] = true;\n t['Sistina'] = true;\n t['Souvenir'] = true;\n t['STIX'] = true;\n t['Stone Informal'] = true;\n t['Stone Serif'] = true;\n t['Sylfaen'] = true;\n t['Times'] = true;\n t['Trajan'] = true;\n t['Trinité'] = true;\n t['Trump Mediaeval'] = true;\n t['Utopia'] = true;\n t['Vale Type'] = true;\n t['Bitstream Vera'] = true;\n t['Vera Serif'] = true;\n t['Versailles'] = true;\n t['Wanted'] = true;\n t['Weiss'] = true;\n t['Wide Latin'] = true;\n t['Windsor'] = true;\n t['XITS'] = true;\n});\nvar getSymbolsFonts = getLookupTableFactory(function (t) {\n t['Dingbats'] = true;\n t['Symbol'] = true;\n t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n t[2] = 10;\n t[3] = 32;\n t[4] = 33;\n t[5] = 34;\n t[6] = 35;\n t[7] = 36;\n t[8] = 37;\n t[9] = 38;\n t[10] = 39;\n t[11] = 40;\n t[12] = 41;\n t[13] = 42;\n t[14] = 43;\n t[15] = 44;\n t[16] = 45;\n t[17] = 46;\n t[18] = 47;\n t[19] = 48;\n t[20] = 49;\n t[21] = 50;\n t[22] = 51;\n t[23] = 52;\n t[24] = 53;\n t[25] = 54;\n t[26] = 55;\n t[27] = 56;\n t[28] = 57;\n t[29] = 58;\n t[30] = 894;\n t[31] = 60;\n t[32] = 61;\n t[33] = 62;\n t[34] = 63;\n t[35] = 64;\n t[36] = 65;\n t[37] = 66;\n t[38] = 67;\n t[39] = 68;\n t[40] = 69;\n t[41] = 70;\n t[42] = 71;\n t[43] = 72;\n t[44] = 73;\n t[45] = 74;\n t[46] = 75;\n t[47] = 76;\n t[48] = 77;\n t[49] = 78;\n t[50] = 79;\n t[51] = 80;\n t[52] = 81;\n t[53] = 82;\n t[54] = 83;\n t[55] = 84;\n t[56] = 85;\n t[57] = 86;\n t[58] = 87;\n t[59] = 88;\n t[60] = 89;\n t[61] = 90;\n t[62] = 91;\n t[63] = 92;\n t[64] = 93;\n t[65] = 94;\n t[66] = 95;\n t[67] = 96;\n t[68] = 97;\n t[69] = 98;\n t[70] = 99;\n t[71] = 100;\n t[72] = 101;\n t[73] = 102;\n t[74] = 103;\n t[75] = 104;\n t[76] = 105;\n t[77] = 106;\n t[78] = 107;\n t[79] = 108;\n t[80] = 109;\n t[81] = 110;\n t[82] = 111;\n t[83] = 112;\n t[84] = 113;\n t[85] = 114;\n t[86] = 115;\n t[87] = 116;\n t[88] = 117;\n t[89] = 118;\n t[90] = 119;\n t[91] = 120;\n t[92] = 121;\n t[93] = 122;\n t[94] = 123;\n t[95] = 124;\n t[96] = 125;\n t[97] = 126;\n t[98] = 196;\n t[99] = 197;\n t[100] = 199;\n t[101] = 201;\n t[102] = 209;\n t[103] = 214;\n t[104] = 220;\n t[105] = 225;\n t[106] = 224;\n t[107] = 226;\n t[108] = 228;\n t[109] = 227;\n t[110] = 229;\n t[111] = 231;\n t[112] = 233;\n t[113] = 232;\n t[114] = 234;\n t[115] = 235;\n t[116] = 237;\n t[117] = 236;\n t[118] = 238;\n t[119] = 239;\n t[120] = 241;\n t[121] = 243;\n t[122] = 242;\n t[123] = 244;\n t[124] = 246;\n t[125] = 245;\n t[126] = 250;\n t[127] = 249;\n t[128] = 251;\n t[129] = 252;\n t[130] = 8224;\n t[131] = 176;\n t[132] = 162;\n t[133] = 163;\n t[134] = 167;\n t[135] = 8226;\n t[136] = 182;\n t[137] = 223;\n t[138] = 174;\n t[139] = 169;\n t[140] = 8482;\n t[141] = 180;\n t[142] = 168;\n t[143] = 8800;\n t[144] = 198;\n t[145] = 216;\n t[146] = 8734;\n t[147] = 177;\n t[148] = 8804;\n t[149] = 8805;\n t[150] = 165;\n t[151] = 181;\n t[152] = 8706;\n t[153] = 8721;\n t[154] = 8719;\n t[156] = 8747;\n t[157] = 170;\n t[158] = 186;\n t[159] = 8486;\n t[160] = 230;\n t[161] = 248;\n t[162] = 191;\n t[163] = 161;\n t[164] = 172;\n t[165] = 8730;\n t[166] = 402;\n t[167] = 8776;\n t[168] = 8710;\n t[169] = 171;\n t[170] = 187;\n t[171] = 8230;\n t[210] = 218;\n t[223] = 711;\n t[224] = 321;\n t[225] = 322;\n t[227] = 353;\n t[229] = 382;\n t[234] = 253;\n t[252] = 263;\n t[253] = 268;\n t[254] = 269;\n t[258] = 258;\n t[260] = 260;\n t[261] = 261;\n t[265] = 280;\n t[266] = 281;\n t[268] = 283;\n t[269] = 313;\n t[275] = 323;\n t[276] = 324;\n t[278] = 328;\n t[284] = 345;\n t[285] = 346;\n t[286] = 347;\n t[292] = 367;\n t[295] = 377;\n t[296] = 378;\n t[298] = 380;\n t[305] = 963;\n t[306] = 964;\n t[307] = 966;\n t[308] = 8215;\n t[309] = 8252;\n t[310] = 8319;\n t[311] = 8359;\n t[312] = 8592;\n t[313] = 8593;\n t[337] = 9552;\n t[493] = 1039;\n t[494] = 1040;\n t[705] = 1524;\n t[706] = 8362;\n t[710] = 64288;\n t[711] = 64298;\n t[759] = 1617;\n t[761] = 1776;\n t[763] = 1778;\n t[775] = 1652;\n t[777] = 1764;\n t[778] = 1780;\n t[779] = 1781;\n t[780] = 1782;\n t[782] = 771;\n t[783] = 64726;\n t[786] = 8363;\n t[788] = 8532;\n t[790] = 768;\n t[791] = 769;\n t[792] = 768;\n t[795] = 803;\n t[797] = 64336;\n t[798] = 64337;\n t[799] = 64342;\n t[800] = 64343;\n t[801] = 64344;\n t[802] = 64345;\n t[803] = 64362;\n t[804] = 64363;\n t[805] = 64364;\n t[2424] = 7821;\n t[2425] = 7822;\n t[2426] = 7823;\n t[2427] = 7824;\n t[2428] = 7825;\n t[2429] = 7826;\n t[2430] = 7827;\n t[2433] = 7682;\n t[2678] = 8045;\n t[2679] = 8046;\n t[2830] = 1552;\n t[2838] = 686;\n t[2840] = 751;\n t[2842] = 753;\n t[2843] = 754;\n t[2844] = 755;\n t[2846] = 757;\n t[2856] = 767;\n t[2857] = 848;\n t[2858] = 849;\n t[2862] = 853;\n t[2863] = 854;\n t[2864] = 855;\n t[2865] = 861;\n t[2866] = 862;\n t[2906] = 7460;\n t[2908] = 7462;\n t[2909] = 7463;\n t[2910] = 7464;\n t[2912] = 7466;\n t[2913] = 7467;\n t[2914] = 7468;\n t[2916] = 7470;\n t[2917] = 7471;\n t[2918] = 7472;\n t[2920] = 7474;\n t[2921] = 7475;\n t[2922] = 7476;\n t[2924] = 7478;\n t[2925] = 7479;\n t[2926] = 7480;\n t[2928] = 7482;\n t[2929] = 7483;\n t[2930] = 7484;\n t[2932] = 7486;\n t[2933] = 7487;\n t[2934] = 7488;\n t[2936] = 7490;\n t[2937] = 7491;\n t[2938] = 7492;\n t[2940] = 7494;\n t[2941] = 7495;\n t[2942] = 7496;\n t[2944] = 7498;\n t[2946] = 7500;\n t[2948] = 7502;\n t[2950] = 7504;\n t[2951] = 7505;\n t[2952] = 7506;\n t[2954] = 7508;\n t[2955] = 7509;\n t[2956] = 7510;\n t[2958] = 7512;\n t[2959] = 7513;\n t[2960] = 7514;\n t[2962] = 7516;\n t[2963] = 7517;\n t[2964] = 7518;\n t[2966] = 7520;\n t[2967] = 7521;\n t[2968] = 7522;\n t[2970] = 7524;\n t[2971] = 7525;\n t[2972] = 7526;\n t[2974] = 7528;\n t[2975] = 7529;\n t[2976] = 7530;\n t[2978] = 1537;\n t[2979] = 1538;\n t[2980] = 1539;\n t[2982] = 1549;\n t[2983] = 1551;\n t[2984] = 1552;\n t[2986] = 1554;\n t[2987] = 1555;\n t[2988] = 1556;\n t[2990] = 1623;\n t[2991] = 1624;\n t[2995] = 1775;\n t[2999] = 1791;\n t[3002] = 64290;\n t[3003] = 64291;\n t[3004] = 64292;\n t[3006] = 64294;\n t[3007] = 64295;\n t[3008] = 64296;\n t[3011] = 1900;\n t[3014] = 8223;\n t[3015] = 8244;\n t[3017] = 7532;\n t[3018] = 7533;\n t[3019] = 7534;\n t[3075] = 7590;\n t[3076] = 7591;\n t[3079] = 7594;\n t[3080] = 7595;\n t[3083] = 7598;\n t[3084] = 7599;\n t[3087] = 7602;\n t[3088] = 7603;\n t[3091] = 7606;\n t[3092] = 7607;\n t[3095] = 7610;\n t[3096] = 7611;\n t[3099] = 7614;\n t[3100] = 7615;\n t[3103] = 7618;\n t[3104] = 7619;\n t[3107] = 8337;\n t[3108] = 8338;\n t[3116] = 1884;\n t[3119] = 1885;\n t[3120] = 1885;\n t[3123] = 1886;\n t[3124] = 1886;\n t[3127] = 1887;\n t[3128] = 1887;\n t[3131] = 1888;\n t[3132] = 1888;\n t[3135] = 1889;\n t[3136] = 1889;\n t[3139] = 1890;\n t[3140] = 1890;\n t[3143] = 1891;\n t[3144] = 1891;\n t[3147] = 1892;\n t[3148] = 1892;\n t[3153] = 580;\n t[3154] = 581;\n t[3157] = 584;\n t[3158] = 585;\n t[3161] = 588;\n t[3162] = 589;\n t[3165] = 891;\n t[3166] = 892;\n t[3169] = 1274;\n t[3170] = 1275;\n t[3173] = 1278;\n t[3174] = 1279;\n t[3181] = 7622;\n t[3182] = 7623;\n t[3282] = 11799;\n t[3316] = 578;\n t[3379] = 42785;\n t[3393] = 1159;\n t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n t[227] = 322;\n t[264] = 261;\n t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n t[63721] = 0x00A9;\n t[63193] = 0x00A9;\n t[63720] = 0x00AE;\n t[63194] = 0x00AE;\n t[63722] = 0x2122;\n t[63195] = 0x2122;\n t[63729] = 0x23A7;\n t[63730] = 0x23A8;\n t[63731] = 0x23A9;\n t[63740] = 0x23AB;\n t[63741] = 0x23AC;\n t[63742] = 0x23AD;\n t[63726] = 0x23A1;\n t[63727] = 0x23A2;\n t[63728] = 0x23A3;\n t[63737] = 0x23A4;\n t[63738] = 0x23A5;\n t[63739] = 0x23A6;\n t[63723] = 0x239B;\n t[63724] = 0x239C;\n t[63725] = 0x239D;\n t[63734] = 0x239E;\n t[63735] = 0x239F;\n t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n if (code >= 0xFFF0 && code <= 0xFFFF) {\n  return 0;\n } else if (code >= 0xF600 && code <= 0xF8FF) {\n  return getSpecialPUASymbols()[code] || code;\n }\n return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n var unicode = glyphsUnicodeMap[name];\n if (unicode !== undefined) {\n  return unicode;\n }\n if (!name) {\n  return -1;\n }\n if (name[0] === 'u') {\n  var nameLen = name.length, hexStr;\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n   hexStr = name.substr(3);\n  } else if (nameLen >= 5 && nameLen <= 7) {\n   hexStr = name.substr(1);\n  } else {\n   return -1;\n  }\n  if (hexStr === hexStr.toUpperCase()) {\n   unicode = parseInt(hexStr, 16);\n   if (unicode >= 0) {\n    return unicode;\n   }\n  }\n }\n return -1;\n}\nvar UnicodeRanges = [\n {\n  'begin': 0x0000,\n  'end': 0x007F\n },\n {\n  'begin': 0x0080,\n  'end': 0x00FF\n },\n {\n  'begin': 0x0100,\n  'end': 0x017F\n },\n {\n  'begin': 0x0180,\n  'end': 0x024F\n },\n {\n  'begin': 0x0250,\n  'end': 0x02AF\n },\n {\n  'begin': 0x02B0,\n  'end': 0x02FF\n },\n {\n  'begin': 0x0300,\n  'end': 0x036F\n },\n {\n  'begin': 0x0370,\n  'end': 0x03FF\n },\n {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n },\n {\n  'begin': 0x0400,\n  'end': 0x04FF\n },\n {\n  'begin': 0x0530,\n  'end': 0x058F\n },\n {\n  'begin': 0x0590,\n  'end': 0x05FF\n },\n {\n  'begin': 0xA500,\n  'end': 0xA63F\n },\n {\n  'begin': 0x0600,\n  'end': 0x06FF\n },\n {\n  'begin': 0x07C0,\n  'end': 0x07FF\n },\n {\n  'begin': 0x0900,\n  'end': 0x097F\n },\n {\n  'begin': 0x0980,\n  'end': 0x09FF\n },\n {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n },\n {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n },\n {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n },\n {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n },\n {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n },\n {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n },\n {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n },\n {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n },\n {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n },\n {\n  'begin': 0x10A0,\n  'end': 0x10FF\n },\n {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n },\n {\n  'begin': 0x1100,\n  'end': 0x11FF\n },\n {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n },\n {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n },\n {\n  'begin': 0x2000,\n  'end': 0x206F\n },\n {\n  'begin': 0x2070,\n  'end': 0x209F\n },\n {\n  'begin': 0x20A0,\n  'end': 0x20CF\n },\n {\n  'begin': 0x20D0,\n  'end': 0x20FF\n },\n {\n  'begin': 0x2100,\n  'end': 0x214F\n },\n {\n  'begin': 0x2150,\n  'end': 0x218F\n },\n {\n  'begin': 0x2190,\n  'end': 0x21FF\n },\n {\n  'begin': 0x2200,\n  'end': 0x22FF\n },\n {\n  'begin': 0x2300,\n  'end': 0x23FF\n },\n {\n  'begin': 0x2400,\n  'end': 0x243F\n },\n {\n  'begin': 0x2440,\n  'end': 0x245F\n },\n {\n  'begin': 0x2460,\n  'end': 0x24FF\n },\n {\n  'begin': 0x2500,\n  'end': 0x257F\n },\n {\n  'begin': 0x2580,\n  'end': 0x259F\n },\n {\n  'begin': 0x25A0,\n  'end': 0x25FF\n },\n {\n  'begin': 0x2600,\n  'end': 0x26FF\n },\n {\n  'begin': 0x2700,\n  'end': 0x27BF\n },\n {\n  'begin': 0x3000,\n  'end': 0x303F\n },\n {\n  'begin': 0x3040,\n  'end': 0x309F\n },\n {\n  'begin': 0x30A0,\n  'end': 0x30FF\n },\n {\n  'begin': 0x3100,\n  'end': 0x312F\n },\n {\n  'begin': 0x3130,\n  'end': 0x318F\n },\n {\n  'begin': 0xA840,\n  'end': 0xA87F\n },\n {\n  'begin': 0x3200,\n  'end': 0x32FF\n },\n {\n  'begin': 0x3300,\n  'end': 0x33FF\n },\n {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n },\n {\n  'begin': 0xD800,\n  'end': 0xDFFF\n },\n {\n  'begin': 0x10900,\n  'end': 0x1091F\n },\n {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n },\n {\n  'begin': 0xE000,\n  'end': 0xF8FF\n },\n {\n  'begin': 0x31C0,\n  'end': 0x31EF\n },\n {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n },\n {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n },\n {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n },\n {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n },\n {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n },\n {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n },\n {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n },\n {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n },\n {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n },\n {\n  'begin': 0x0700,\n  'end': 0x074F\n },\n {\n  'begin': 0x0780,\n  'end': 0x07BF\n },\n {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n },\n {\n  'begin': 0x1000,\n  'end': 0x109F\n },\n {\n  'begin': 0x1200,\n  'end': 0x137F\n },\n {\n  'begin': 0x13A0,\n  'end': 0x13FF\n },\n {\n  'begin': 0x1400,\n  'end': 0x167F\n },\n {\n  'begin': 0x1680,\n  'end': 0x169F\n },\n {\n  'begin': 0x16A0,\n  'end': 0x16FF\n },\n {\n  'begin': 0x1780,\n  'end': 0x17FF\n },\n {\n  'begin': 0x1800,\n  'end': 0x18AF\n },\n {\n  'begin': 0x2800,\n  'end': 0x28FF\n },\n {\n  'begin': 0xA000,\n  'end': 0xA48F\n },\n {\n  'begin': 0x1700,\n  'end': 0x171F\n },\n {\n  'begin': 0x10300,\n  'end': 0x1032F\n },\n {\n  'begin': 0x10330,\n  'end': 0x1034F\n },\n {\n  'begin': 0x10400,\n  'end': 0x1044F\n },\n {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n },\n {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n },\n {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n },\n {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n },\n {\n  'begin': 0xE0000,\n  'end': 0xE007F\n },\n {\n  'begin': 0x1900,\n  'end': 0x194F\n },\n {\n  'begin': 0x1950,\n  'end': 0x197F\n },\n {\n  'begin': 0x1980,\n  'end': 0x19DF\n },\n {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n },\n {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n },\n {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n },\n {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n },\n {\n  'begin': 0xA800,\n  'end': 0xA82F\n },\n {\n  'begin': 0x10000,\n  'end': 0x1007F\n },\n {\n  'begin': 0x10140,\n  'end': 0x1018F\n },\n {\n  'begin': 0x10380,\n  'end': 0x1039F\n },\n {\n  'begin': 0x103A0,\n  'end': 0x103DF\n },\n {\n  'begin': 0x10450,\n  'end': 0x1047F\n },\n {\n  'begin': 0x10480,\n  'end': 0x104AF\n },\n {\n  'begin': 0x10800,\n  'end': 0x1083F\n },\n {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n },\n {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n },\n {\n  'begin': 0x12000,\n  'end': 0x123FF\n },\n {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n },\n {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n },\n {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n },\n {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n },\n {\n  'begin': 0xA880,\n  'end': 0xA8DF\n },\n {\n  'begin': 0xA900,\n  'end': 0xA92F\n },\n {\n  'begin': 0xA930,\n  'end': 0xA95F\n },\n {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n },\n {\n  'begin': 0x10190,\n  'end': 0x101CF\n },\n {\n  'begin': 0x101D0,\n  'end': 0x101FF\n },\n {\n  'begin': 0x102A0,\n  'end': 0x102DF\n },\n {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n }\n];\nfunction getUnicodeRangeFor(value) {\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n  var range = UnicodeRanges[i];\n  if (value >= range.begin && value < range.end) {\n   return i;\n  }\n }\n return -1;\n}\nfunction isRTLRangeFor(value) {\n var range = UnicodeRanges[13];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n range = UnicodeRanges[11];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n t['\\u00A8'] = '\\u0020\\u0308';\n t['\\u00AF'] = '\\u0020\\u0304';\n t['\\u00B4'] = '\\u0020\\u0301';\n t['\\u00B5'] = '\\u03BC';\n t['\\u00B8'] = '\\u0020\\u0327';\n t['\\u0132'] = '\\u0049\\u004A';\n t['\\u0133'] = '\\u0069\\u006A';\n t['\\u013F'] = '\\u004C\\u00B7';\n t['\\u0140'] = '\\u006C\\u00B7';\n t['\\u0149'] = '\\u02BC\\u006E';\n t['\\u017F'] = '\\u0073';\n t['\\u01C4'] = '\\u0044\\u017D';\n t['\\u01C5'] = '\\u0044\\u017E';\n t['\\u01C6'] = '\\u0064\\u017E';\n t['\\u01C7'] = '\\u004C\\u004A';\n t['\\u01C8'] = '\\u004C\\u006A';\n t['\\u01C9'] = '\\u006C\\u006A';\n t['\\u01CA'] = '\\u004E\\u004A';\n t['\\u01CB'] = '\\u004E\\u006A';\n t['\\u01CC'] = '\\u006E\\u006A';\n t['\\u01F1'] = '\\u0044\\u005A';\n t['\\u01F2'] = '\\u0044\\u007A';\n t['\\u01F3'] = '\\u0064\\u007A';\n t['\\u02D8'] = '\\u0020\\u0306';\n t['\\u02D9'] = '\\u0020\\u0307';\n t['\\u02DA'] = '\\u0020\\u030A';\n t['\\u02DB'] = '\\u0020\\u0328';\n t['\\u02DC'] = '\\u0020\\u0303';\n t['\\u02DD'] = '\\u0020\\u030B';\n t['\\u037A'] = '\\u0020\\u0345';\n t['\\u0384'] = '\\u0020\\u0301';\n t['\\u03D0'] = '\\u03B2';\n t['\\u03D1'] = '\\u03B8';\n t['\\u03D2'] = '\\u03A5';\n t['\\u03D5'] = '\\u03C6';\n t['\\u03D6'] = '\\u03C0';\n t['\\u03F0'] = '\\u03BA';\n t['\\u03F1'] = '\\u03C1';\n t['\\u03F2'] = '\\u03C2';\n t['\\u03F4'] = '\\u0398';\n t['\\u03F5'] = '\\u03B5';\n t['\\u03F9'] = '\\u03A3';\n t['\\u0587'] = '\\u0565\\u0582';\n t['\\u0675'] = '\\u0627\\u0674';\n t['\\u0676'] = '\\u0648\\u0674';\n t['\\u0677'] = '\\u06C7\\u0674';\n t['\\u0678'] = '\\u064A\\u0674';\n t['\\u0E33'] = '\\u0E4D\\u0E32';\n t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n t['\\u0EDC'] = '\\u0EAB\\u0E99';\n t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n t['\\u0F77'] = '\\u0FB2\\u0F81';\n t['\\u0F79'] = '\\u0FB3\\u0F81';\n t['\\u1E9A'] = '\\u0061\\u02BE';\n t['\\u1FBD'] = '\\u0020\\u0313';\n t['\\u1FBF'] = '\\u0020\\u0313';\n t['\\u1FC0'] = '\\u0020\\u0342';\n t['\\u1FFE'] = '\\u0020\\u0314';\n t['\\u2002'] = '\\u0020';\n t['\\u2003'] = '\\u0020';\n t['\\u2004'] = '\\u0020';\n t['\\u2005'] = '\\u0020';\n t['\\u2006'] = '\\u0020';\n t['\\u2008'] = '\\u0020';\n t['\\u2009'] = '\\u0020';\n t['\\u200A'] = '\\u0020';\n t['\\u2017'] = '\\u0020\\u0333';\n t['\\u2024'] = '\\u002E';\n t['\\u2025'] = '\\u002E\\u002E';\n t['\\u2026'] = '\\u002E\\u002E\\u002E';\n t['\\u2033'] = '\\u2032\\u2032';\n t['\\u2034'] = '\\u2032\\u2032\\u2032';\n t['\\u2036'] = '\\u2035\\u2035';\n t['\\u2037'] = '\\u2035\\u2035\\u2035';\n t['\\u203C'] = '\\u0021\\u0021';\n t['\\u203E'] = '\\u0020\\u0305';\n t['\\u2047'] = '\\u003F\\u003F';\n t['\\u2048'] = '\\u003F\\u0021';\n t['\\u2049'] = '\\u0021\\u003F';\n t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n t['\\u205F'] = '\\u0020';\n t['\\u20A8'] = '\\u0052\\u0073';\n t['\\u2100'] = '\\u0061\\u002F\\u0063';\n t['\\u2101'] = '\\u0061\\u002F\\u0073';\n t['\\u2103'] = '\\u00B0\\u0043';\n t['\\u2105'] = '\\u0063\\u002F\\u006F';\n t['\\u2106'] = '\\u0063\\u002F\\u0075';\n t['\\u2107'] = '\\u0190';\n t['\\u2109'] = '\\u00B0\\u0046';\n t['\\u2116'] = '\\u004E\\u006F';\n t['\\u2121'] = '\\u0054\\u0045\\u004C';\n t['\\u2135'] = '\\u05D0';\n t['\\u2136'] = '\\u05D1';\n t['\\u2137'] = '\\u05D2';\n t['\\u2138'] = '\\u05D3';\n t['\\u213B'] = '\\u0046\\u0041\\u0058';\n t['\\u2160'] = '\\u0049';\n t['\\u2161'] = '\\u0049\\u0049';\n t['\\u2162'] = '\\u0049\\u0049\\u0049';\n t['\\u2163'] = '\\u0049\\u0056';\n t['\\u2164'] = '\\u0056';\n t['\\u2165'] = '\\u0056\\u0049';\n t['\\u2166'] = '\\u0056\\u0049\\u0049';\n t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n t['\\u2168'] = '\\u0049\\u0058';\n t['\\u2169'] = '\\u0058';\n t['\\u216A'] = '\\u0058\\u0049';\n t['\\u216B'] = '\\u0058\\u0049\\u0049';\n t['\\u216C'] = '\\u004C';\n t['\\u216D'] = '\\u0043';\n t['\\u216E'] = '\\u0044';\n t['\\u216F'] = '\\u004D';\n t['\\u2170'] = '\\u0069';\n t['\\u2171'] = '\\u0069\\u0069';\n t['\\u2172'] = '\\u0069\\u0069\\u0069';\n t['\\u2173'] = '\\u0069\\u0076';\n t['\\u2174'] = '\\u0076';\n t['\\u2175'] = '\\u0076\\u0069';\n t['\\u2176'] = '\\u0076\\u0069\\u0069';\n t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n t['\\u2178'] = '\\u0069\\u0078';\n t['\\u2179'] = '\\u0078';\n t['\\u217A'] = '\\u0078\\u0069';\n t['\\u217B'] = '\\u0078\\u0069\\u0069';\n t['\\u217C'] = '\\u006C';\n t['\\u217D'] = '\\u0063';\n t['\\u217E'] = '\\u0064';\n t['\\u217F'] = '\\u006D';\n t['\\u222C'] = '\\u222B\\u222B';\n t['\\u222D'] = '\\u222B\\u222B\\u222B';\n t['\\u222F'] = '\\u222E\\u222E';\n t['\\u2230'] = '\\u222E\\u222E\\u222E';\n t['\\u2474'] = '\\u0028\\u0031\\u0029';\n t['\\u2475'] = '\\u0028\\u0032\\u0029';\n t['\\u2476'] = '\\u0028\\u0033\\u0029';\n t['\\u2477'] = '\\u0028\\u0034\\u0029';\n t['\\u2478'] = '\\u0028\\u0035\\u0029';\n t['\\u2479'] = '\\u0028\\u0036\\u0029';\n t['\\u247A'] = '\\u0028\\u0037\\u0029';\n t['\\u247B'] = '\\u0028\\u0038\\u0029';\n t['\\u247C'] = '\\u0028\\u0039\\u0029';\n t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n t['\\u2488'] = '\\u0031\\u002E';\n t['\\u2489'] = '\\u0032\\u002E';\n t['\\u248A'] = '\\u0033\\u002E';\n t['\\u248B'] = '\\u0034\\u002E';\n t['\\u248C'] = '\\u0035\\u002E';\n t['\\u248D'] = '\\u0036\\u002E';\n t['\\u248E'] = '\\u0037\\u002E';\n t['\\u248F'] = '\\u0038\\u002E';\n t['\\u2490'] = '\\u0039\\u002E';\n t['\\u2491'] = '\\u0031\\u0030\\u002E';\n t['\\u2492'] = '\\u0031\\u0031\\u002E';\n t['\\u2493'] = '\\u0031\\u0032\\u002E';\n t['\\u2494'] = '\\u0031\\u0033\\u002E';\n t['\\u2495'] = '\\u0031\\u0034\\u002E';\n t['\\u2496'] = '\\u0031\\u0035\\u002E';\n t['\\u2497'] = '\\u0031\\u0036\\u002E';\n t['\\u2498'] = '\\u0031\\u0037\\u002E';\n t['\\u2499'] = '\\u0031\\u0038\\u002E';\n t['\\u249A'] = '\\u0031\\u0039\\u002E';\n t['\\u249B'] = '\\u0032\\u0030\\u002E';\n t['\\u249C'] = '\\u0028\\u0061\\u0029';\n t['\\u249D'] = '\\u0028\\u0062\\u0029';\n t['\\u249E'] = '\\u0028\\u0063\\u0029';\n t['\\u249F'] = '\\u0028\\u0064\\u0029';\n t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n t['\\u2A75'] = '\\u003D\\u003D';\n t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n t['\\u2E9F'] = '\\u6BCD';\n t['\\u2EF3'] = '\\u9F9F';\n t['\\u2F00'] = '\\u4E00';\n t['\\u2F01'] = '\\u4E28';\n t['\\u2F02'] = '\\u4E36';\n t['\\u2F03'] = '\\u4E3F';\n t['\\u2F04'] = '\\u4E59';\n t['\\u2F05'] = '\\u4E85';\n t['\\u2F06'] = '\\u4E8C';\n t['\\u2F07'] = '\\u4EA0';\n t['\\u2F08'] = '\\u4EBA';\n t['\\u2F09'] = '\\u513F';\n t['\\u2F0A'] = '\\u5165';\n t['\\u2F0B'] = '\\u516B';\n t['\\u2F0C'] = '\\u5182';\n t['\\u2F0D'] = '\\u5196';\n t['\\u2F0E'] = '\\u51AB';\n t['\\u2F0F'] = '\\u51E0';\n t['\\u2F10'] = '\\u51F5';\n t['\\u2F11'] = '\\u5200';\n t['\\u2F12'] = '\\u529B';\n t['\\u2F13'] = '\\u52F9';\n t['\\u2F14'] = '\\u5315';\n t['\\u2F15'] = '\\u531A';\n t['\\u2F16'] = '\\u5338';\n t['\\u2F17'] = '\\u5341';\n t['\\u2F18'] = '\\u535C';\n t['\\u2F19'] = '\\u5369';\n t['\\u2F1A'] = '\\u5382';\n t['\\u2F1B'] = '\\u53B6';\n t['\\u2F1C'] = '\\u53C8';\n t['\\u2F1D'] = '\\u53E3';\n t['\\u2F1E'] = '\\u56D7';\n t['\\u2F1F'] = '\\u571F';\n t['\\u2F20'] = '\\u58EB';\n t['\\u2F21'] = '\\u5902';\n t['\\u2F22'] = '\\u590A';\n t['\\u2F23'] = '\\u5915';\n t['\\u2F24'] = '\\u5927';\n t['\\u2F25'] = '\\u5973';\n t['\\u2F26'] = '\\u5B50';\n t['\\u2F27'] = '\\u5B80';\n t['\\u2F28'] = '\\u5BF8';\n t['\\u2F29'] = '\\u5C0F';\n t['\\u2F2A'] = '\\u5C22';\n t['\\u2F2B'] = '\\u5C38';\n t['\\u2F2C'] = '\\u5C6E';\n t['\\u2F2D'] = '\\u5C71';\n t['\\u2F2E'] = '\\u5DDB';\n t['\\u2F2F'] = '\\u5DE5';\n t['\\u2F30'] = '\\u5DF1';\n t['\\u2F31'] = '\\u5DFE';\n t['\\u2F32'] = '\\u5E72';\n t['\\u2F33'] = '\\u5E7A';\n t['\\u2F34'] = '\\u5E7F';\n t['\\u2F35'] = '\\u5EF4';\n t['\\u2F36'] = '\\u5EFE';\n t['\\u2F37'] = '\\u5F0B';\n t['\\u2F38'] = '\\u5F13';\n t['\\u2F39'] = '\\u5F50';\n t['\\u2F3A'] = '\\u5F61';\n t['\\u2F3B'] = '\\u5F73';\n t['\\u2F3C'] = '\\u5FC3';\n t['\\u2F3D'] = '\\u6208';\n t['\\u2F3E'] = '\\u6236';\n t['\\u2F3F'] = '\\u624B';\n t['\\u2F40'] = '\\u652F';\n t['\\u2F41'] = '\\u6534';\n t['\\u2F42'] = '\\u6587';\n t['\\u2F43'] = '\\u6597';\n t['\\u2F44'] = '\\u65A4';\n t['\\u2F45'] = '\\u65B9';\n t['\\u2F46'] = '\\u65E0';\n t['\\u2F47'] = '\\u65E5';\n t['\\u2F48'] = '\\u66F0';\n t['\\u2F49'] = '\\u6708';\n t['\\u2F4A'] = '\\u6728';\n t['\\u2F4B'] = '\\u6B20';\n t['\\u2F4C'] = '\\u6B62';\n t['\\u2F4D'] = '\\u6B79';\n t['\\u2F4E'] = '\\u6BB3';\n t['\\u2F4F'] = '\\u6BCB';\n t['\\u2F50'] = '\\u6BD4';\n t['\\u2F51'] = '\\u6BDB';\n t['\\u2F52'] = '\\u6C0F';\n t['\\u2F53'] = '\\u6C14';\n t['\\u2F54'] = '\\u6C34';\n t['\\u2F55'] = '\\u706B';\n t['\\u2F56'] = '\\u722A';\n t['\\u2F57'] = '\\u7236';\n t['\\u2F58'] = '\\u723B';\n t['\\u2F59'] = '\\u723F';\n t['\\u2F5A'] = '\\u7247';\n t['\\u2F5B'] = '\\u7259';\n t['\\u2F5C'] = '\\u725B';\n t['\\u2F5D'] = '\\u72AC';\n t['\\u2F5E'] = '\\u7384';\n t['\\u2F5F'] = '\\u7389';\n t['\\u2F60'] = '\\u74DC';\n t['\\u2F61'] = '\\u74E6';\n t['\\u2F62'] = '\\u7518';\n t['\\u2F63'] = '\\u751F';\n t['\\u2F64'] = '\\u7528';\n t['\\u2F65'] = '\\u7530';\n t['\\u2F66'] = '\\u758B';\n t['\\u2F67'] = '\\u7592';\n t['\\u2F68'] = '\\u7676';\n t['\\u2F69'] = '\\u767D';\n t['\\u2F6A'] = '\\u76AE';\n t['\\u2F6B'] = '\\u76BF';\n t['\\u2F6C'] = '\\u76EE';\n t['\\u2F6D'] = '\\u77DB';\n t['\\u2F6E'] = '\\u77E2';\n t['\\u2F6F'] = '\\u77F3';\n t['\\u2F70'] = '\\u793A';\n t['\\u2F71'] = '\\u79B8';\n t['\\u2F72'] = '\\u79BE';\n t['\\u2F73'] = '\\u7A74';\n t['\\u2F74'] = '\\u7ACB';\n t['\\u2F75'] = '\\u7AF9';\n t['\\u2F76'] = '\\u7C73';\n t['\\u2F77'] = '\\u7CF8';\n t['\\u2F78'] = '\\u7F36';\n t['\\u2F79'] = '\\u7F51';\n t['\\u2F7A'] = '\\u7F8A';\n t['\\u2F7B'] = '\\u7FBD';\n t['\\u2F7C'] = '\\u8001';\n t['\\u2F7D'] = '\\u800C';\n t['\\u2F7E'] = '\\u8012';\n t['\\u2F7F'] = '\\u8033';\n t['\\u2F80'] = '\\u807F';\n t['\\u2F81'] = '\\u8089';\n t['\\u2F82'] = '\\u81E3';\n t['\\u2F83'] = '\\u81EA';\n t['\\u2F84'] = '\\u81F3';\n t['\\u2F85'] = '\\u81FC';\n t['\\u2F86'] = '\\u820C';\n t['\\u2F87'] = '\\u821B';\n t['\\u2F88'] = '\\u821F';\n t['\\u2F89'] = '\\u826E';\n t['\\u2F8A'] = '\\u8272';\n t['\\u2F8B'] = '\\u8278';\n t['\\u2F8C'] = '\\u864D';\n t['\\u2F8D'] = '\\u866B';\n t['\\u2F8E'] = '\\u8840';\n t['\\u2F8F'] = '\\u884C';\n t['\\u2F90'] = '\\u8863';\n t['\\u2F91'] = '\\u897E';\n t['\\u2F92'] = '\\u898B';\n t['\\u2F93'] = '\\u89D2';\n t['\\u2F94'] = '\\u8A00';\n t['\\u2F95'] = '\\u8C37';\n t['\\u2F96'] = '\\u8C46';\n t['\\u2F97'] = '\\u8C55';\n t['\\u2F98'] = '\\u8C78';\n t['\\u2F99'] = '\\u8C9D';\n t['\\u2F9A'] = '\\u8D64';\n t['\\u2F9B'] = '\\u8D70';\n t['\\u2F9C'] = '\\u8DB3';\n t['\\u2F9D'] = '\\u8EAB';\n t['\\u2F9E'] = '\\u8ECA';\n t['\\u2F9F'] = '\\u8F9B';\n t['\\u2FA0'] = '\\u8FB0';\n t['\\u2FA1'] = '\\u8FB5';\n t['\\u2FA2'] = '\\u9091';\n t['\\u2FA3'] = '\\u9149';\n t['\\u2FA4'] = '\\u91C6';\n t['\\u2FA5'] = '\\u91CC';\n t['\\u2FA6'] = '\\u91D1';\n t['\\u2FA7'] = '\\u9577';\n t['\\u2FA8'] = '\\u9580';\n t['\\u2FA9'] = '\\u961C';\n t['\\u2FAA'] = '\\u96B6';\n t['\\u2FAB'] = '\\u96B9';\n t['\\u2FAC'] = '\\u96E8';\n t['\\u2FAD'] = '\\u9751';\n t['\\u2FAE'] = '\\u975E';\n t['\\u2FAF'] = '\\u9762';\n t['\\u2FB0'] = '\\u9769';\n t['\\u2FB1'] = '\\u97CB';\n t['\\u2FB2'] = '\\u97ED';\n t['\\u2FB3'] = '\\u97F3';\n t['\\u2FB4'] = '\\u9801';\n t['\\u2FB5'] = '\\u98A8';\n t['\\u2FB6'] = '\\u98DB';\n t['\\u2FB7'] = '\\u98DF';\n t['\\u2FB8'] = '\\u9996';\n t['\\u2FB9'] = '\\u9999';\n t['\\u2FBA'] = '\\u99AC';\n t['\\u2FBB'] = '\\u9AA8';\n t['\\u2FBC'] = '\\u9AD8';\n t['\\u2FBD'] = '\\u9ADF';\n t['\\u2FBE'] = '\\u9B25';\n t['\\u2FBF'] = '\\u9B2F';\n t['\\u2FC0'] = '\\u9B32';\n t['\\u2FC1'] = '\\u9B3C';\n t['\\u2FC2'] = '\\u9B5A';\n t['\\u2FC3'] = '\\u9CE5';\n t['\\u2FC4'] = '\\u9E75';\n t['\\u2FC5'] = '\\u9E7F';\n t['\\u2FC6'] = '\\u9EA5';\n t['\\u2FC7'] = '\\u9EBB';\n t['\\u2FC8'] = '\\u9EC3';\n t['\\u2FC9'] = '\\u9ECD';\n t['\\u2FCA'] = '\\u9ED1';\n t['\\u2FCB'] = '\\u9EF9';\n t['\\u2FCC'] = '\\u9EFD';\n t['\\u2FCD'] = '\\u9F0E';\n t['\\u2FCE'] = '\\u9F13';\n t['\\u2FCF'] = '\\u9F20';\n t['\\u2FD0'] = '\\u9F3B';\n t['\\u2FD1'] = '\\u9F4A';\n t['\\u2FD2'] = '\\u9F52';\n t['\\u2FD3'] = '\\u9F8D';\n t['\\u2FD4'] = '\\u9F9C';\n t['\\u2FD5'] = '\\u9FA0';\n t['\\u3036'] = '\\u3012';\n t['\\u3038'] = '\\u5341';\n t['\\u3039'] = '\\u5344';\n t['\\u303A'] = '\\u5345';\n t['\\u309B'] = '\\u0020\\u3099';\n t['\\u309C'] = '\\u0020\\u309A';\n t['\\u3131'] = '\\u1100';\n t['\\u3132'] = '\\u1101';\n t['\\u3133'] = '\\u11AA';\n t['\\u3134'] = '\\u1102';\n t['\\u3135'] = '\\u11AC';\n t['\\u3136'] = '\\u11AD';\n t['\\u3137'] = '\\u1103';\n t['\\u3138'] = '\\u1104';\n t['\\u3139'] = '\\u1105';\n t['\\u313A'] = '\\u11B0';\n t['\\u313B'] = '\\u11B1';\n t['\\u313C'] = '\\u11B2';\n t['\\u313D'] = '\\u11B3';\n t['\\u313E'] = '\\u11B4';\n t['\\u313F'] = '\\u11B5';\n t['\\u3140'] = '\\u111A';\n t['\\u3141'] = '\\u1106';\n t['\\u3142'] = '\\u1107';\n t['\\u3143'] = '\\u1108';\n t['\\u3144'] = '\\u1121';\n t['\\u3145'] = '\\u1109';\n t['\\u3146'] = '\\u110A';\n t['\\u3147'] = '\\u110B';\n t['\\u3148'] = '\\u110C';\n t['\\u3149'] = '\\u110D';\n t['\\u314A'] = '\\u110E';\n t['\\u314B'] = '\\u110F';\n t['\\u314C'] = '\\u1110';\n t['\\u314D'] = '\\u1111';\n t['\\u314E'] = '\\u1112';\n t['\\u314F'] = '\\u1161';\n t['\\u3150'] = '\\u1162';\n t['\\u3151'] = '\\u1163';\n t['\\u3152'] = '\\u1164';\n t['\\u3153'] = '\\u1165';\n t['\\u3154'] = '\\u1166';\n t['\\u3155'] = '\\u1167';\n t['\\u3156'] = '\\u1168';\n t['\\u3157'] = '\\u1169';\n t['\\u3158'] = '\\u116A';\n t['\\u3159'] = '\\u116B';\n t['\\u315A'] = '\\u116C';\n t['\\u315B'] = '\\u116D';\n t['\\u315C'] = '\\u116E';\n t['\\u315D'] = '\\u116F';\n t['\\u315E'] = '\\u1170';\n t['\\u315F'] = '\\u1171';\n t['\\u3160'] = '\\u1172';\n t['\\u3161'] = '\\u1173';\n t['\\u3162'] = '\\u1174';\n t['\\u3163'] = '\\u1175';\n t['\\u3164'] = '\\u1160';\n t['\\u3165'] = '\\u1114';\n t['\\u3166'] = '\\u1115';\n t['\\u3167'] = '\\u11C7';\n t['\\u3168'] = '\\u11C8';\n t['\\u3169'] = '\\u11CC';\n t['\\u316A'] = '\\u11CE';\n t['\\u316B'] = '\\u11D3';\n t['\\u316C'] = '\\u11D7';\n t['\\u316D'] = '\\u11D9';\n t['\\u316E'] = '\\u111C';\n t['\\u316F'] = '\\u11DD';\n t['\\u3170'] = '\\u11DF';\n t['\\u3171'] = '\\u111D';\n t['\\u3172'] = '\\u111E';\n t['\\u3173'] = '\\u1120';\n t['\\u3174'] = '\\u1122';\n t['\\u3175'] = '\\u1123';\n t['\\u3176'] = '\\u1127';\n t['\\u3177'] = '\\u1129';\n t['\\u3178'] = '\\u112B';\n t['\\u3179'] = '\\u112C';\n t['\\u317A'] = '\\u112D';\n t['\\u317B'] = '\\u112E';\n t['\\u317C'] = '\\u112F';\n t['\\u317D'] = '\\u1132';\n t['\\u317E'] = '\\u1136';\n t['\\u317F'] = '\\u1140';\n t['\\u3180'] = '\\u1147';\n t['\\u3181'] = '\\u114C';\n t['\\u3182'] = '\\u11F1';\n t['\\u3183'] = '\\u11F2';\n t['\\u3184'] = '\\u1157';\n t['\\u3185'] = '\\u1158';\n t['\\u3186'] = '\\u1159';\n t['\\u3187'] = '\\u1184';\n t['\\u3188'] = '\\u1185';\n t['\\u3189'] = '\\u1188';\n t['\\u318A'] = '\\u1191';\n t['\\u318B'] = '\\u1192';\n t['\\u318C'] = '\\u1194';\n t['\\u318D'] = '\\u119E';\n t['\\u318E'] = '\\u11A1';\n t['\\u3200'] = '\\u0028\\u1100\\u0029';\n t['\\u3201'] = '\\u0028\\u1102\\u0029';\n t['\\u3202'] = '\\u0028\\u1103\\u0029';\n t['\\u3203'] = '\\u0028\\u1105\\u0029';\n t['\\u3204'] = '\\u0028\\u1106\\u0029';\n t['\\u3205'] = '\\u0028\\u1107\\u0029';\n t['\\u3206'] = '\\u0028\\u1109\\u0029';\n t['\\u3207'] = '\\u0028\\u110B\\u0029';\n t['\\u3208'] = '\\u0028\\u110C\\u0029';\n t['\\u3209'] = '\\u0028\\u110E\\u0029';\n t['\\u320A'] = '\\u0028\\u110F\\u0029';\n t['\\u320B'] = '\\u0028\\u1110\\u0029';\n t['\\u320C'] = '\\u0028\\u1111\\u0029';\n t['\\u320D'] = '\\u0028\\u1112\\u0029';\n t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n t['\\u3225'] = '\\u0028\\u516D\\u0029';\n t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n t['\\u3227'] = '\\u0028\\u516B\\u0029';\n t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n t['\\u3229'] = '\\u0028\\u5341\\u0029';\n t['\\u322A'] = '\\u0028\\u6708\\u0029';\n t['\\u322B'] = '\\u0028\\u706B\\u0029';\n t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n t['\\u322D'] = '\\u0028\\u6728\\u0029';\n t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n t['\\u322F'] = '\\u0028\\u571F\\u0029';\n t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n t['\\u3231'] = '\\u0028\\u682A\\u0029';\n t['\\u3232'] = '\\u0028\\u6709\\u0029';\n t['\\u3233'] = '\\u0028\\u793E\\u0029';\n t['\\u3234'] = '\\u0028\\u540D\\u0029';\n t['\\u3235'] = '\\u0028\\u7279\\u0029';\n t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n t['\\u3237'] = '\\u0028\\u795D\\u0029';\n t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n t['\\u323A'] = '\\u0028\\u547C\\u0029';\n t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n t['\\u323F'] = '\\u0028\\u5354\\u0029';\n t['\\u3240'] = '\\u0028\\u796D\\u0029';\n t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n t['\\u32C0'] = '\\u0031\\u6708';\n t['\\u32C1'] = '\\u0032\\u6708';\n t['\\u32C2'] = '\\u0033\\u6708';\n t['\\u32C3'] = '\\u0034\\u6708';\n t['\\u32C4'] = '\\u0035\\u6708';\n t['\\u32C5'] = '\\u0036\\u6708';\n t['\\u32C6'] = '\\u0037\\u6708';\n t['\\u32C7'] = '\\u0038\\u6708';\n t['\\u32C8'] = '\\u0039\\u6708';\n t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n t['\\u3358'] = '\\u0030\\u70B9';\n t['\\u3359'] = '\\u0031\\u70B9';\n t['\\u335A'] = '\\u0032\\u70B9';\n t['\\u335B'] = '\\u0033\\u70B9';\n t['\\u335C'] = '\\u0034\\u70B9';\n t['\\u335D'] = '\\u0035\\u70B9';\n t['\\u335E'] = '\\u0036\\u70B9';\n t['\\u335F'] = '\\u0037\\u70B9';\n t['\\u3360'] = '\\u0038\\u70B9';\n t['\\u3361'] = '\\u0039\\u70B9';\n t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n t['\\u33E0'] = '\\u0031\\u65E5';\n t['\\u33E1'] = '\\u0032\\u65E5';\n t['\\u33E2'] = '\\u0033\\u65E5';\n t['\\u33E3'] = '\\u0034\\u65E5';\n t['\\u33E4'] = '\\u0035\\u65E5';\n t['\\u33E5'] = '\\u0036\\u65E5';\n t['\\u33E6'] = '\\u0037\\u65E5';\n t['\\u33E7'] = '\\u0038\\u65E5';\n t['\\u33E8'] = '\\u0039\\u65E5';\n t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n t['\\uFB00'] = '\\u0066\\u0066';\n t['\\uFB01'] = '\\u0066\\u0069';\n t['\\uFB02'] = '\\u0066\\u006C';\n t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n t['\\uFB05'] = '\\u017F\\u0074';\n t['\\uFB06'] = '\\u0073\\u0074';\n t['\\uFB13'] = '\\u0574\\u0576';\n t['\\uFB14'] = '\\u0574\\u0565';\n t['\\uFB15'] = '\\u0574\\u056B';\n t['\\uFB16'] = '\\u057E\\u0576';\n t['\\uFB17'] = '\\u0574\\u056D';\n t['\\uFB4F'] = '\\u05D0\\u05DC';\n t['\\uFB50'] = '\\u0671';\n t['\\uFB51'] = '\\u0671';\n t['\\uFB52'] = '\\u067B';\n t['\\uFB53'] = '\\u067B';\n t['\\uFB54'] = '\\u067B';\n t['\\uFB55'] = '\\u067B';\n t['\\uFB56'] = '\\u067E';\n t['\\uFB57'] = '\\u067E';\n t['\\uFB58'] = '\\u067E';\n t['\\uFB59'] = '\\u067E';\n t['\\uFB5A'] = '\\u0680';\n t['\\uFB5B'] = '\\u0680';\n t['\\uFB5C'] = '\\u0680';\n t['\\uFB5D'] = '\\u0680';\n t['\\uFB5E'] = '\\u067A';\n t['\\uFB5F'] = '\\u067A';\n t['\\uFB60'] = '\\u067A';\n t['\\uFB61'] = '\\u067A';\n t['\\uFB62'] = '\\u067F';\n t['\\uFB63'] = '\\u067F';\n t['\\uFB64'] = '\\u067F';\n t['\\uFB65'] = '\\u067F';\n t['\\uFB66'] = '\\u0679';\n t['\\uFB67'] = '\\u0679';\n t['\\uFB68'] = '\\u0679';\n t['\\uFB69'] = '\\u0679';\n t['\\uFB6A'] = '\\u06A4';\n t['\\uFB6B'] = '\\u06A4';\n t['\\uFB6C'] = '\\u06A4';\n t['\\uFB6D'] = '\\u06A4';\n t['\\uFB6E'] = '\\u06A6';\n t['\\uFB6F'] = '\\u06A6';\n t['\\uFB70'] = '\\u06A6';\n t['\\uFB71'] = '\\u06A6';\n t['\\uFB72'] = '\\u0684';\n t['\\uFB73'] = '\\u0684';\n t['\\uFB74'] = '\\u0684';\n t['\\uFB75'] = '\\u0684';\n t['\\uFB76'] = '\\u0683';\n t['\\uFB77'] = '\\u0683';\n t['\\uFB78'] = '\\u0683';\n t['\\uFB79'] = '\\u0683';\n t['\\uFB7A'] = '\\u0686';\n t['\\uFB7B'] = '\\u0686';\n t['\\uFB7C'] = '\\u0686';\n t['\\uFB7D'] = '\\u0686';\n t['\\uFB7E'] = '\\u0687';\n t['\\uFB7F'] = '\\u0687';\n t['\\uFB80'] = '\\u0687';\n t['\\uFB81'] = '\\u0687';\n t['\\uFB82'] = '\\u068D';\n t['\\uFB83'] = '\\u068D';\n t['\\uFB84'] = '\\u068C';\n t['\\uFB85'] = '\\u068C';\n t['\\uFB86'] = '\\u068E';\n t['\\uFB87'] = '\\u068E';\n t['\\uFB88'] = '\\u0688';\n t['\\uFB89'] = '\\u0688';\n t['\\uFB8A'] = '\\u0698';\n t['\\uFB8B'] = '\\u0698';\n t['\\uFB8C'] = '\\u0691';\n t['\\uFB8D'] = '\\u0691';\n t['\\uFB8E'] = '\\u06A9';\n t['\\uFB8F'] = '\\u06A9';\n t['\\uFB90'] = '\\u06A9';\n t['\\uFB91'] = '\\u06A9';\n t['\\uFB92'] = '\\u06AF';\n t['\\uFB93'] = '\\u06AF';\n t['\\uFB94'] = '\\u06AF';\n t['\\uFB95'] = '\\u06AF';\n t['\\uFB96'] = '\\u06B3';\n t['\\uFB97'] = '\\u06B3';\n t['\\uFB98'] = '\\u06B3';\n t['\\uFB99'] = '\\u06B3';\n t['\\uFB9A'] = '\\u06B1';\n t['\\uFB9B'] = '\\u06B1';\n t['\\uFB9C'] = '\\u06B1';\n t['\\uFB9D'] = '\\u06B1';\n t['\\uFB9E'] = '\\u06BA';\n t['\\uFB9F'] = '\\u06BA';\n t['\\uFBA0'] = '\\u06BB';\n t['\\uFBA1'] = '\\u06BB';\n t['\\uFBA2'] = '\\u06BB';\n t['\\uFBA3'] = '\\u06BB';\n t['\\uFBA4'] = '\\u06C0';\n t['\\uFBA5'] = '\\u06C0';\n t['\\uFBA6'] = '\\u06C1';\n t['\\uFBA7'] = '\\u06C1';\n t['\\uFBA8'] = '\\u06C1';\n t['\\uFBA9'] = '\\u06C1';\n t['\\uFBAA'] = '\\u06BE';\n t['\\uFBAB'] = '\\u06BE';\n t['\\uFBAC'] = '\\u06BE';\n t['\\uFBAD'] = '\\u06BE';\n t['\\uFBAE'] = '\\u06D2';\n t['\\uFBAF'] = '\\u06D2';\n t['\\uFBB0'] = '\\u06D3';\n t['\\uFBB1'] = '\\u06D3';\n t['\\uFBD3'] = '\\u06AD';\n t['\\uFBD4'] = '\\u06AD';\n t['\\uFBD5'] = '\\u06AD';\n t['\\uFBD6'] = '\\u06AD';\n t['\\uFBD7'] = '\\u06C7';\n t['\\uFBD8'] = '\\u06C7';\n t['\\uFBD9'] = '\\u06C6';\n t['\\uFBDA'] = '\\u06C6';\n t['\\uFBDB'] = '\\u06C8';\n t['\\uFBDC'] = '\\u06C8';\n t['\\uFBDD'] = '\\u0677';\n t['\\uFBDE'] = '\\u06CB';\n t['\\uFBDF'] = '\\u06CB';\n t['\\uFBE0'] = '\\u06C5';\n t['\\uFBE1'] = '\\u06C5';\n t['\\uFBE2'] = '\\u06C9';\n t['\\uFBE3'] = '\\u06C9';\n t['\\uFBE4'] = '\\u06D0';\n t['\\uFBE5'] = '\\u06D0';\n t['\\uFBE6'] = '\\u06D0';\n t['\\uFBE7'] = '\\u06D0';\n t['\\uFBE8'] = '\\u0649';\n t['\\uFBE9'] = '\\u0649';\n t['\\uFBEA'] = '\\u0626\\u0627';\n t['\\uFBEB'] = '\\u0626\\u0627';\n t['\\uFBEC'] = '\\u0626\\u06D5';\n t['\\uFBED'] = '\\u0626\\u06D5';\n t['\\uFBEE'] = '\\u0626\\u0648';\n t['\\uFBEF'] = '\\u0626\\u0648';\n t['\\uFBF0'] = '\\u0626\\u06C7';\n t['\\uFBF1'] = '\\u0626\\u06C7';\n t['\\uFBF2'] = '\\u0626\\u06C6';\n t['\\uFBF3'] = '\\u0626\\u06C6';\n t['\\uFBF4'] = '\\u0626\\u06C8';\n t['\\uFBF5'] = '\\u0626\\u06C8';\n t['\\uFBF6'] = '\\u0626\\u06D0';\n t['\\uFBF7'] = '\\u0626\\u06D0';\n t['\\uFBF8'] = '\\u0626\\u06D0';\n t['\\uFBF9'] = '\\u0626\\u0649';\n t['\\uFBFA'] = '\\u0626\\u0649';\n t['\\uFBFB'] = '\\u0626\\u0649';\n t['\\uFBFC'] = '\\u06CC';\n t['\\uFBFD'] = '\\u06CC';\n t['\\uFBFE'] = '\\u06CC';\n t['\\uFBFF'] = '\\u06CC';\n t['\\uFC00'] = '\\u0626\\u062C';\n t['\\uFC01'] = '\\u0626\\u062D';\n t['\\uFC02'] = '\\u0626\\u0645';\n t['\\uFC03'] = '\\u0626\\u0649';\n t['\\uFC04'] = '\\u0626\\u064A';\n t['\\uFC05'] = '\\u0628\\u062C';\n t['\\uFC06'] = '\\u0628\\u062D';\n t['\\uFC07'] = '\\u0628\\u062E';\n t['\\uFC08'] = '\\u0628\\u0645';\n t['\\uFC09'] = '\\u0628\\u0649';\n t['\\uFC0A'] = '\\u0628\\u064A';\n t['\\uFC0B'] = '\\u062A\\u062C';\n t['\\uFC0C'] = '\\u062A\\u062D';\n t['\\uFC0D'] = '\\u062A\\u062E';\n t['\\uFC0E'] = '\\u062A\\u0645';\n t['\\uFC0F'] = '\\u062A\\u0649';\n t['\\uFC10'] = '\\u062A\\u064A';\n t['\\uFC11'] = '\\u062B\\u062C';\n t['\\uFC12'] = '\\u062B\\u0645';\n t['\\uFC13'] = '\\u062B\\u0649';\n t['\\uFC14'] = '\\u062B\\u064A';\n t['\\uFC15'] = '\\u062C\\u062D';\n t['\\uFC16'] = '\\u062C\\u0645';\n t['\\uFC17'] = '\\u062D\\u062C';\n t['\\uFC18'] = '\\u062D\\u0645';\n t['\\uFC19'] = '\\u062E\\u062C';\n t['\\uFC1A'] = '\\u062E\\u062D';\n t['\\uFC1B'] = '\\u062E\\u0645';\n t['\\uFC1C'] = '\\u0633\\u062C';\n t['\\uFC1D'] = '\\u0633\\u062D';\n t['\\uFC1E'] = '\\u0633\\u062E';\n t['\\uFC1F'] = '\\u0633\\u0645';\n t['\\uFC20'] = '\\u0635\\u062D';\n t['\\uFC21'] = '\\u0635\\u0645';\n t['\\uFC22'] = '\\u0636\\u062C';\n t['\\uFC23'] = '\\u0636\\u062D';\n t['\\uFC24'] = '\\u0636\\u062E';\n t['\\uFC25'] = '\\u0636\\u0645';\n t['\\uFC26'] = '\\u0637\\u062D';\n t['\\uFC27'] = '\\u0637\\u0645';\n t['\\uFC28'] = '\\u0638\\u0645';\n t['\\uFC29'] = '\\u0639\\u062C';\n t['\\uFC2A'] = '\\u0639\\u0645';\n t['\\uFC2B'] = '\\u063A\\u062C';\n t['\\uFC2C'] = '\\u063A\\u0645';\n t['\\uFC2D'] = '\\u0641\\u062C';\n t['\\uFC2E'] = '\\u0641\\u062D';\n t['\\uFC2F'] = '\\u0641\\u062E';\n t['\\uFC30'] = '\\u0641\\u0645';\n t['\\uFC31'] = '\\u0641\\u0649';\n t['\\uFC32'] = '\\u0641\\u064A';\n t['\\uFC33'] = '\\u0642\\u062D';\n t['\\uFC34'] = '\\u0642\\u0645';\n t['\\uFC35'] = '\\u0642\\u0649';\n t['\\uFC36'] = '\\u0642\\u064A';\n t['\\uFC37'] = '\\u0643\\u0627';\n t['\\uFC38'] = '\\u0643\\u062C';\n t['\\uFC39'] = '\\u0643\\u062D';\n t['\\uFC3A'] = '\\u0643\\u062E';\n t['\\uFC3B'] = '\\u0643\\u0644';\n t['\\uFC3C'] = '\\u0643\\u0645';\n t['\\uFC3D'] = '\\u0643\\u0649';\n t['\\uFC3E'] = '\\u0643\\u064A';\n t['\\uFC3F'] = '\\u0644\\u062C';\n t['\\uFC40'] = '\\u0644\\u062D';\n t['\\uFC41'] = '\\u0644\\u062E';\n t['\\uFC42'] = '\\u0644\\u0645';\n t['\\uFC43'] = '\\u0644\\u0649';\n t['\\uFC44'] = '\\u0644\\u064A';\n t['\\uFC45'] = '\\u0645\\u062C';\n t['\\uFC46'] = '\\u0645\\u062D';\n t['\\uFC47'] = '\\u0645\\u062E';\n t['\\uFC48'] = '\\u0645\\u0645';\n t['\\uFC49'] = '\\u0645\\u0649';\n t['\\uFC4A'] = '\\u0645\\u064A';\n t['\\uFC4B'] = '\\u0646\\u062C';\n t['\\uFC4C'] = '\\u0646\\u062D';\n t['\\uFC4D'] = '\\u0646\\u062E';\n t['\\uFC4E'] = '\\u0646\\u0645';\n t['\\uFC4F'] = '\\u0646\\u0649';\n t['\\uFC50'] = '\\u0646\\u064A';\n t['\\uFC51'] = '\\u0647\\u062C';\n t['\\uFC52'] = '\\u0647\\u0645';\n t['\\uFC53'] = '\\u0647\\u0649';\n t['\\uFC54'] = '\\u0647\\u064A';\n t['\\uFC55'] = '\\u064A\\u062C';\n t['\\uFC56'] = '\\u064A\\u062D';\n t['\\uFC57'] = '\\u064A\\u062E';\n t['\\uFC58'] = '\\u064A\\u0645';\n t['\\uFC59'] = '\\u064A\\u0649';\n t['\\uFC5A'] = '\\u064A\\u064A';\n t['\\uFC5B'] = '\\u0630\\u0670';\n t['\\uFC5C'] = '\\u0631\\u0670';\n t['\\uFC5D'] = '\\u0649\\u0670';\n t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n t['\\uFC64'] = '\\u0626\\u0631';\n t['\\uFC65'] = '\\u0626\\u0632';\n t['\\uFC66'] = '\\u0626\\u0645';\n t['\\uFC67'] = '\\u0626\\u0646';\n t['\\uFC68'] = '\\u0626\\u0649';\n t['\\uFC69'] = '\\u0626\\u064A';\n t['\\uFC6A'] = '\\u0628\\u0631';\n t['\\uFC6B'] = '\\u0628\\u0632';\n t['\\uFC6C'] = '\\u0628\\u0645';\n t['\\uFC6D'] = '\\u0628\\u0646';\n t['\\uFC6E'] = '\\u0628\\u0649';\n t['\\uFC6F'] = '\\u0628\\u064A';\n t['\\uFC70'] = '\\u062A\\u0631';\n t['\\uFC71'] = '\\u062A\\u0632';\n t['\\uFC72'] = '\\u062A\\u0645';\n t['\\uFC73'] = '\\u062A\\u0646';\n t['\\uFC74'] = '\\u062A\\u0649';\n t['\\uFC75'] = '\\u062A\\u064A';\n t['\\uFC76'] = '\\u062B\\u0631';\n t['\\uFC77'] = '\\u062B\\u0632';\n t['\\uFC78'] = '\\u062B\\u0645';\n t['\\uFC79'] = '\\u062B\\u0646';\n t['\\uFC7A'] = '\\u062B\\u0649';\n t['\\uFC7B'] = '\\u062B\\u064A';\n t['\\uFC7C'] = '\\u0641\\u0649';\n t['\\uFC7D'] = '\\u0641\\u064A';\n t['\\uFC7E'] = '\\u0642\\u0649';\n t['\\uFC7F'] = '\\u0642\\u064A';\n t['\\uFC80'] = '\\u0643\\u0627';\n t['\\uFC81'] = '\\u0643\\u0644';\n t['\\uFC82'] = '\\u0643\\u0645';\n t['\\uFC83'] = '\\u0643\\u0649';\n t['\\uFC84'] = '\\u0643\\u064A';\n t['\\uFC85'] = '\\u0644\\u0645';\n t['\\uFC86'] = '\\u0644\\u0649';\n t['\\uFC87'] = '\\u0644\\u064A';\n t['\\uFC88'] = '\\u0645\\u0627';\n t['\\uFC89'] = '\\u0645\\u0645';\n t['\\uFC8A'] = '\\u0646\\u0631';\n t['\\uFC8B'] = '\\u0646\\u0632';\n t['\\uFC8C'] = '\\u0646\\u0645';\n t['\\uFC8D'] = '\\u0646\\u0646';\n t['\\uFC8E'] = '\\u0646\\u0649';\n t['\\uFC8F'] = '\\u0646\\u064A';\n t['\\uFC90'] = '\\u0649\\u0670';\n t['\\uFC91'] = '\\u064A\\u0631';\n t['\\uFC92'] = '\\u064A\\u0632';\n t['\\uFC93'] = '\\u064A\\u0645';\n t['\\uFC94'] = '\\u064A\\u0646';\n t['\\uFC95'] = '\\u064A\\u0649';\n t['\\uFC96'] = '\\u064A\\u064A';\n t['\\uFC97'] = '\\u0626\\u062C';\n t['\\uFC98'] = '\\u0626\\u062D';\n t['\\uFC99'] = '\\u0626\\u062E';\n t['\\uFC9A'] = '\\u0626\\u0645';\n t['\\uFC9B'] = '\\u0626\\u0647';\n t['\\uFC9C'] = '\\u0628\\u062C';\n t['\\uFC9D'] = '\\u0628\\u062D';\n t['\\uFC9E'] = '\\u0628\\u062E';\n t['\\uFC9F'] = '\\u0628\\u0645';\n t['\\uFCA0'] = '\\u0628\\u0647';\n t['\\uFCA1'] = '\\u062A\\u062C';\n t['\\uFCA2'] = '\\u062A\\u062D';\n t['\\uFCA3'] = '\\u062A\\u062E';\n t['\\uFCA4'] = '\\u062A\\u0645';\n t['\\uFCA5'] = '\\u062A\\u0647';\n t['\\uFCA6'] = '\\u062B\\u0645';\n t['\\uFCA7'] = '\\u062C\\u062D';\n t['\\uFCA8'] = '\\u062C\\u0645';\n t['\\uFCA9'] = '\\u062D\\u062C';\n t['\\uFCAA'] = '\\u062D\\u0645';\n t['\\uFCAB'] = '\\u062E\\u062C';\n t['\\uFCAC'] = '\\u062E\\u0645';\n t['\\uFCAD'] = '\\u0633\\u062C';\n t['\\uFCAE'] = '\\u0633\\u062D';\n t['\\uFCAF'] = '\\u0633\\u062E';\n t['\\uFCB0'] = '\\u0633\\u0645';\n t['\\uFCB1'] = '\\u0635\\u062D';\n t['\\uFCB2'] = '\\u0635\\u062E';\n t['\\uFCB3'] = '\\u0635\\u0645';\n t['\\uFCB4'] = '\\u0636\\u062C';\n t['\\uFCB5'] = '\\u0636\\u062D';\n t['\\uFCB6'] = '\\u0636\\u062E';\n t['\\uFCB7'] = '\\u0636\\u0645';\n t['\\uFCB8'] = '\\u0637\\u062D';\n t['\\uFCB9'] = '\\u0638\\u0645';\n t['\\uFCBA'] = '\\u0639\\u062C';\n t['\\uFCBB'] = '\\u0639\\u0645';\n t['\\uFCBC'] = '\\u063A\\u062C';\n t['\\uFCBD'] = '\\u063A\\u0645';\n t['\\uFCBE'] = '\\u0641\\u062C';\n t['\\uFCBF'] = '\\u0641\\u062D';\n t['\\uFCC0'] = '\\u0641\\u062E';\n t['\\uFCC1'] = '\\u0641\\u0645';\n t['\\uFCC2'] = '\\u0642\\u062D';\n t['\\uFCC3'] = '\\u0642\\u0645';\n t['\\uFCC4'] = '\\u0643\\u062C';\n t['\\uFCC5'] = '\\u0643\\u062D';\n t['\\uFCC6'] = '\\u0643\\u062E';\n t['\\uFCC7'] = '\\u0643\\u0644';\n t['\\uFCC8'] = '\\u0643\\u0645';\n t['\\uFCC9'] = '\\u0644\\u062C';\n t['\\uFCCA'] = '\\u0644\\u062D';\n t['\\uFCCB'] = '\\u0644\\u062E';\n t['\\uFCCC'] = '\\u0644\\u0645';\n t['\\uFCCD'] = '\\u0644\\u0647';\n t['\\uFCCE'] = '\\u0645\\u062C';\n t['\\uFCCF'] = '\\u0645\\u062D';\n t['\\uFCD0'] = '\\u0645\\u062E';\n t['\\uFCD1'] = '\\u0645\\u0645';\n t['\\uFCD2'] = '\\u0646\\u062C';\n t['\\uFCD3'] = '\\u0646\\u062D';\n t['\\uFCD4'] = '\\u0646\\u062E';\n t['\\uFCD5'] = '\\u0646\\u0645';\n t['\\uFCD6'] = '\\u0646\\u0647';\n t['\\uFCD7'] = '\\u0647\\u062C';\n t['\\uFCD8'] = '\\u0647\\u0645';\n t['\\uFCD9'] = '\\u0647\\u0670';\n t['\\uFCDA'] = '\\u064A\\u062C';\n t['\\uFCDB'] = '\\u064A\\u062D';\n t['\\uFCDC'] = '\\u064A\\u062E';\n t['\\uFCDD'] = '\\u064A\\u0645';\n t['\\uFCDE'] = '\\u064A\\u0647';\n t['\\uFCDF'] = '\\u0626\\u0645';\n t['\\uFCE0'] = '\\u0626\\u0647';\n t['\\uFCE1'] = '\\u0628\\u0645';\n t['\\uFCE2'] = '\\u0628\\u0647';\n t['\\uFCE3'] = '\\u062A\\u0645';\n t['\\uFCE4'] = '\\u062A\\u0647';\n t['\\uFCE5'] = '\\u062B\\u0645';\n t['\\uFCE6'] = '\\u062B\\u0647';\n t['\\uFCE7'] = '\\u0633\\u0645';\n t['\\uFCE8'] = '\\u0633\\u0647';\n t['\\uFCE9'] = '\\u0634\\u0645';\n t['\\uFCEA'] = '\\u0634\\u0647';\n t['\\uFCEB'] = '\\u0643\\u0644';\n t['\\uFCEC'] = '\\u0643\\u0645';\n t['\\uFCED'] = '\\u0644\\u0645';\n t['\\uFCEE'] = '\\u0646\\u0645';\n t['\\uFCEF'] = '\\u0646\\u0647';\n t['\\uFCF0'] = '\\u064A\\u0645';\n t['\\uFCF1'] = '\\u064A\\u0647';\n t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n t['\\uFCF5'] = '\\u0637\\u0649';\n t['\\uFCF6'] = '\\u0637\\u064A';\n t['\\uFCF7'] = '\\u0639\\u0649';\n t['\\uFCF8'] = '\\u0639\\u064A';\n t['\\uFCF9'] = '\\u063A\\u0649';\n t['\\uFCFA'] = '\\u063A\\u064A';\n t['\\uFCFB'] = '\\u0633\\u0649';\n t['\\uFCFC'] = '\\u0633\\u064A';\n t['\\uFCFD'] = '\\u0634\\u0649';\n t['\\uFCFE'] = '\\u0634\\u064A';\n t['\\uFCFF'] = '\\u062D\\u0649';\n t['\\uFD00'] = '\\u062D\\u064A';\n t['\\uFD01'] = '\\u062C\\u0649';\n t['\\uFD02'] = '\\u062C\\u064A';\n t['\\uFD03'] = '\\u062E\\u0649';\n t['\\uFD04'] = '\\u062E\\u064A';\n t['\\uFD05'] = '\\u0635\\u0649';\n t['\\uFD06'] = '\\u0635\\u064A';\n t['\\uFD07'] = '\\u0636\\u0649';\n t['\\uFD08'] = '\\u0636\\u064A';\n t['\\uFD09'] = '\\u0634\\u062C';\n t['\\uFD0A'] = '\\u0634\\u062D';\n t['\\uFD0B'] = '\\u0634\\u062E';\n t['\\uFD0C'] = '\\u0634\\u0645';\n t['\\uFD0D'] = '\\u0634\\u0631';\n t['\\uFD0E'] = '\\u0633\\u0631';\n t['\\uFD0F'] = '\\u0635\\u0631';\n t['\\uFD10'] = '\\u0636\\u0631';\n t['\\uFD11'] = '\\u0637\\u0649';\n t['\\uFD12'] = '\\u0637\\u064A';\n t['\\uFD13'] = '\\u0639\\u0649';\n t['\\uFD14'] = '\\u0639\\u064A';\n t['\\uFD15'] = '\\u063A\\u0649';\n t['\\uFD16'] = '\\u063A\\u064A';\n t['\\uFD17'] = '\\u0633\\u0649';\n t['\\uFD18'] = '\\u0633\\u064A';\n t['\\uFD19'] = '\\u0634\\u0649';\n t['\\uFD1A'] = '\\u0634\\u064A';\n t['\\uFD1B'] = '\\u062D\\u0649';\n t['\\uFD1C'] = '\\u062D\\u064A';\n t['\\uFD1D'] = '\\u062C\\u0649';\n t['\\uFD1E'] = '\\u062C\\u064A';\n t['\\uFD1F'] = '\\u062E\\u0649';\n t['\\uFD20'] = '\\u062E\\u064A';\n t['\\uFD21'] = '\\u0635\\u0649';\n t['\\uFD22'] = '\\u0635\\u064A';\n t['\\uFD23'] = '\\u0636\\u0649';\n t['\\uFD24'] = '\\u0636\\u064A';\n t['\\uFD25'] = '\\u0634\\u062C';\n t['\\uFD26'] = '\\u0634\\u062D';\n t['\\uFD27'] = '\\u0634\\u062E';\n t['\\uFD28'] = '\\u0634\\u0645';\n t['\\uFD29'] = '\\u0634\\u0631';\n t['\\uFD2A'] = '\\u0633\\u0631';\n t['\\uFD2B'] = '\\u0635\\u0631';\n t['\\uFD2C'] = '\\u0636\\u0631';\n t['\\uFD2D'] = '\\u0634\\u062C';\n t['\\uFD2E'] = '\\u0634\\u062D';\n t['\\uFD2F'] = '\\u0634\\u062E';\n t['\\uFD30'] = '\\u0634\\u0645';\n t['\\uFD31'] = '\\u0633\\u0647';\n t['\\uFD32'] = '\\u0634\\u0647';\n t['\\uFD33'] = '\\u0637\\u0645';\n t['\\uFD34'] = '\\u0633\\u062C';\n t['\\uFD35'] = '\\u0633\\u062D';\n t['\\uFD36'] = '\\u0633\\u062E';\n t['\\uFD37'] = '\\u0634\\u062C';\n t['\\uFD38'] = '\\u0634\\u062D';\n t['\\uFD39'] = '\\u0634\\u062E';\n t['\\uFD3A'] = '\\u0637\\u0645';\n t['\\uFD3B'] = '\\u0638\\u0645';\n t['\\uFD3C'] = '\\u0627\\u064B';\n t['\\uFD3D'] = '\\u0627\\u064B';\n t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n t['\\uFE49'] = '\\u203E';\n t['\\uFE4A'] = '\\u203E';\n t['\\uFE4B'] = '\\u203E';\n t['\\uFE4C'] = '\\u203E';\n t['\\uFE4D'] = '\\u005F';\n t['\\uFE4E'] = '\\u005F';\n t['\\uFE4F'] = '\\u005F';\n t['\\uFE80'] = '\\u0621';\n t['\\uFE81'] = '\\u0622';\n t['\\uFE82'] = '\\u0622';\n t['\\uFE83'] = '\\u0623';\n t['\\uFE84'] = '\\u0623';\n t['\\uFE85'] = '\\u0624';\n t['\\uFE86'] = '\\u0624';\n t['\\uFE87'] = '\\u0625';\n t['\\uFE88'] = '\\u0625';\n t['\\uFE89'] = '\\u0626';\n t['\\uFE8A'] = '\\u0626';\n t['\\uFE8B'] = '\\u0626';\n t['\\uFE8C'] = '\\u0626';\n t['\\uFE8D'] = '\\u0627';\n t['\\uFE8E'] = '\\u0627';\n t['\\uFE8F'] = '\\u0628';\n t['\\uFE90'] = '\\u0628';\n t['\\uFE91'] = '\\u0628';\n t['\\uFE92'] = '\\u0628';\n t['\\uFE93'] = '\\u0629';\n t['\\uFE94'] = '\\u0629';\n t['\\uFE95'] = '\\u062A';\n t['\\uFE96'] = '\\u062A';\n t['\\uFE97'] = '\\u062A';\n t['\\uFE98'] = '\\u062A';\n t['\\uFE99'] = '\\u062B';\n t['\\uFE9A'] = '\\u062B';\n t['\\uFE9B'] = '\\u062B';\n t['\\uFE9C'] = '\\u062B';\n t['\\uFE9D'] = '\\u062C';\n t['\\uFE9E'] = '\\u062C';\n t['\\uFE9F'] = '\\u062C';\n t['\\uFEA0'] = '\\u062C';\n t['\\uFEA1'] = '\\u062D';\n t['\\uFEA2'] = '\\u062D';\n t['\\uFEA3'] = '\\u062D';\n t['\\uFEA4'] = '\\u062D';\n t['\\uFEA5'] = '\\u062E';\n t['\\uFEA6'] = '\\u062E';\n t['\\uFEA7'] = '\\u062E';\n t['\\uFEA8'] = '\\u062E';\n t['\\uFEA9'] = '\\u062F';\n t['\\uFEAA'] = '\\u062F';\n t['\\uFEAB'] = '\\u0630';\n t['\\uFEAC'] = '\\u0630';\n t['\\uFEAD'] = '\\u0631';\n t['\\uFEAE'] = '\\u0631';\n t['\\uFEAF'] = '\\u0632';\n t['\\uFEB0'] = '\\u0632';\n t['\\uFEB1'] = '\\u0633';\n t['\\uFEB2'] = '\\u0633';\n t['\\uFEB3'] = '\\u0633';\n t['\\uFEB4'] = '\\u0633';\n t['\\uFEB5'] = '\\u0634';\n t['\\uFEB6'] = '\\u0634';\n t['\\uFEB7'] = '\\u0634';\n t['\\uFEB8'] = '\\u0634';\n t['\\uFEB9'] = '\\u0635';\n t['\\uFEBA'] = '\\u0635';\n t['\\uFEBB'] = '\\u0635';\n t['\\uFEBC'] = '\\u0635';\n t['\\uFEBD'] = '\\u0636';\n t['\\uFEBE'] = '\\u0636';\n t['\\uFEBF'] = '\\u0636';\n t['\\uFEC0'] = '\\u0636';\n t['\\uFEC1'] = '\\u0637';\n t['\\uFEC2'] = '\\u0637';\n t['\\uFEC3'] = '\\u0637';\n t['\\uFEC4'] = '\\u0637';\n t['\\uFEC5'] = '\\u0638';\n t['\\uFEC6'] = '\\u0638';\n t['\\uFEC7'] = '\\u0638';\n t['\\uFEC8'] = '\\u0638';\n t['\\uFEC9'] = '\\u0639';\n t['\\uFECA'] = '\\u0639';\n t['\\uFECB'] = '\\u0639';\n t['\\uFECC'] = '\\u0639';\n t['\\uFECD'] = '\\u063A';\n t['\\uFECE'] = '\\u063A';\n t['\\uFECF'] = '\\u063A';\n t['\\uFED0'] = '\\u063A';\n t['\\uFED1'] = '\\u0641';\n t['\\uFED2'] = '\\u0641';\n t['\\uFED3'] = '\\u0641';\n t['\\uFED4'] = '\\u0641';\n t['\\uFED5'] = '\\u0642';\n t['\\uFED6'] = '\\u0642';\n t['\\uFED7'] = '\\u0642';\n t['\\uFED8'] = '\\u0642';\n t['\\uFED9'] = '\\u0643';\n t['\\uFEDA'] = '\\u0643';\n t['\\uFEDB'] = '\\u0643';\n t['\\uFEDC'] = '\\u0643';\n t['\\uFEDD'] = '\\u0644';\n t['\\uFEDE'] = '\\u0644';\n t['\\uFEDF'] = '\\u0644';\n t['\\uFEE0'] = '\\u0644';\n t['\\uFEE1'] = '\\u0645';\n t['\\uFEE2'] = '\\u0645';\n t['\\uFEE3'] = '\\u0645';\n t['\\uFEE4'] = '\\u0645';\n t['\\uFEE5'] = '\\u0646';\n t['\\uFEE6'] = '\\u0646';\n t['\\uFEE7'] = '\\u0646';\n t['\\uFEE8'] = '\\u0646';\n t['\\uFEE9'] = '\\u0647';\n t['\\uFEEA'] = '\\u0647';\n t['\\uFEEB'] = '\\u0647';\n t['\\uFEEC'] = '\\u0647';\n t['\\uFEED'] = '\\u0648';\n t['\\uFEEE'] = '\\u0648';\n t['\\uFEEF'] = '\\u0649';\n t['\\uFEF0'] = '\\u0649';\n t['\\uFEF1'] = '\\u064A';\n t['\\uFEF2'] = '\\u064A';\n t['\\uFEF3'] = '\\u064A';\n t['\\uFEF4'] = '\\u064A';\n t['\\uFEF5'] = '\\u0644\\u0622';\n t['\\uFEF6'] = '\\u0644\\u0622';\n t['\\uFEF7'] = '\\u0644\\u0623';\n t['\\uFEF8'] = '\\u0644\\u0623';\n t['\\uFEF9'] = '\\u0644\\u0625';\n t['\\uFEFA'] = '\\u0644\\u0625';\n t['\\uFEFB'] = '\\u0644\\u0627';\n t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n var charsLength = chars.length;\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n  return chars;\n }\n var s = '';\n for (var ii = charsLength - 1; ii >= 0; ii--) {\n  s += chars[ii];\n }\n return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreWorker = __w_pdfjs_require__(8);\nvar OK_RESPONSE = 200;\nvar PARTIAL_CONTENT_RESPONSE = 206;\nfunction NetworkManager(url, args) {\n this.url = url;\n args = args || {};\n this.isHttp = /^https?:/i.test(url);\n this.httpHeaders = this.isHttp && args.httpHeaders || {};\n this.withCredentials = args.withCredentials || false;\n this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n  return new XMLHttpRequest();\n };\n this.currXhrId = 0;\n this.pendingRequests = Object.create(null);\n this.loadedRequests = Object.create(null);\n}\nfunction getArrayBuffer(xhr) {\n var data = xhr.response;\n if (typeof data !== 'string') {\n  return data;\n }\n var length = data.length;\n var array = new Uint8Array(length);\n for (var i = 0; i < length; i++) {\n  array[i] = data.charCodeAt(i) & 0xFF;\n }\n return array.buffer;\n}\nvar supportsMozChunked = function supportsMozChunkedClosure() {\n try {\n  var x = new XMLHttpRequest();\n  x.open('GET', 'https://example.com');\n  x.responseType = 'moz-chunked-arraybuffer';\n  return x.responseType === 'moz-chunked-arraybuffer';\n } catch (e) {\n  return false;\n }\n}();\nNetworkManager.prototype = {\n requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n  var args = {\n   begin: begin,\n   end: end\n  };\n  for (var prop in listeners) {\n   args[prop] = listeners[prop];\n  }\n  return this.request(args);\n },\n requestFull: function NetworkManager_requestFull(listeners) {\n  return this.request(listeners);\n },\n request: function NetworkManager_request(args) {\n  var xhr = this.getXhr();\n  var xhrId = this.currXhrId++;\n  var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n  xhr.open('GET', this.url);\n  xhr.withCredentials = this.withCredentials;\n  for (var property in this.httpHeaders) {\n   var value = this.httpHeaders[property];\n   if (typeof value === 'undefined') {\n    continue;\n   }\n   xhr.setRequestHeader(property, value);\n  }\n  if (this.isHttp && 'begin' in args && 'end' in args) {\n   var rangeStr = args.begin + '-' + (args.end - 1);\n   xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n   pendingRequest.expectedStatus = 206;\n  } else {\n   pendingRequest.expectedStatus = 200;\n  }\n  var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n  if (useMozChunkedLoading) {\n   xhr.responseType = 'moz-chunked-arraybuffer';\n   pendingRequest.onProgressiveData = args.onProgressiveData;\n   pendingRequest.mozChunked = true;\n  } else {\n   xhr.responseType = 'arraybuffer';\n  }\n  if (args.onError) {\n   xhr.onerror = function (evt) {\n    args.onError(xhr.status);\n   };\n  }\n  xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n  xhr.onprogress = this.onProgress.bind(this, xhrId);\n  pendingRequest.onHeadersReceived = args.onHeadersReceived;\n  pendingRequest.onDone = args.onDone;\n  pendingRequest.onError = args.onError;\n  pendingRequest.onProgress = args.onProgress;\n  xhr.send(null);\n  return xhrId;\n },\n onProgress: function NetworkManager_onProgress(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  if (pendingRequest.mozChunked) {\n   var chunk = getArrayBuffer(pendingRequest.xhr);\n   pendingRequest.onProgressiveData(chunk);\n  }\n  var onProgress = pendingRequest.onProgress;\n  if (onProgress) {\n   onProgress(evt);\n  }\n },\n onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  var xhr = pendingRequest.xhr;\n  if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n   pendingRequest.onHeadersReceived();\n   delete pendingRequest.onHeadersReceived;\n  }\n  if (xhr.readyState !== 4) {\n   return;\n  }\n  if (!(xhrId in this.pendingRequests)) {\n   return;\n  }\n  delete this.pendingRequests[xhrId];\n  if (xhr.status === 0 && this.isHttp) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  var xhrStatus = xhr.status || OK_RESPONSE;\n  var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n  if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  this.loadedRequests[xhrId] = true;\n  var chunk = getArrayBuffer(xhr);\n  if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n   var rangeHeader = xhr.getResponseHeader('Content-Range');\n   var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n   var begin = parseInt(matches[1], 10);\n   pendingRequest.onDone({\n    begin: begin,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onProgressiveData) {\n   pendingRequest.onDone(null);\n  } else if (chunk) {\n   pendingRequest.onDone({\n    begin: 0,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onError) {\n   pendingRequest.onError(xhr.status);\n  }\n },\n hasPendingRequests: function NetworkManager_hasPendingRequests() {\n  for (var xhrId in this.pendingRequests) {\n   return true;\n  }\n  return false;\n },\n getRequestXhr: function NetworkManager_getXhr(xhrId) {\n  return this.pendingRequests[xhrId].xhr;\n },\n isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n  return !!this.pendingRequests[xhrId].onProgressiveData;\n },\n isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n  return xhrId in this.pendingRequests;\n },\n isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n  return xhrId in this.loadedRequests;\n },\n abortAllRequests: function NetworkManager_abortAllRequests() {\n  for (var xhrId in this.pendingRequests) {\n   this.abortRequest(xhrId | 0);\n  }\n },\n abortRequest: function NetworkManager_abortRequest(xhrId) {\n  var xhr = this.pendingRequests[xhrId].xhr;\n  delete this.pendingRequests[xhrId];\n  xhr.abort();\n }\n};\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nfunction PDFNetworkStream(options) {\n this._options = options;\n var source = options.source;\n this._manager = new NetworkManager(source.url, {\n  httpHeaders: source.httpHeaders,\n  withCredentials: source.withCredentials\n });\n this._rangeChunkSize = source.rangeChunkSize;\n this._fullRequestReader = null;\n this._rangeRequestReaders = [];\n}\nPDFNetworkStream.prototype = {\n _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n  var i = this._rangeRequestReaders.indexOf(reader);\n  if (i >= 0) {\n   this._rangeRequestReaders.splice(i, 1);\n  }\n },\n getFullReader: function PDFNetworkStream_getFullReader() {\n  assert(!this._fullRequestReader);\n  this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n  return this._fullRequestReader;\n },\n getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n  var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n  reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n  this._rangeRequestReaders.push(reader);\n  return reader;\n },\n cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n  if (this._fullRequestReader) {\n   this._fullRequestReader.cancel(reason);\n  }\n  var readers = this._rangeRequestReaders.slice(0);\n  readers.forEach(function (reader) {\n   reader.cancel(reason);\n  });\n }\n};\nfunction PDFNetworkStreamFullRequestReader(manager, options) {\n this._manager = manager;\n var source = options.source;\n var args = {\n  onHeadersReceived: this._onHeadersReceived.bind(this),\n  onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n  onDone: this._onDone.bind(this),\n  onError: this._onError.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._url = source.url;\n this._fullRequestId = manager.requestFull(args);\n this._headersReceivedCapability = createPromiseCapability();\n this._disableRange = options.disableRange || false;\n this._contentLength = source.length;\n this._rangeChunkSize = source.rangeChunkSize;\n if (!this._rangeChunkSize && !this._disableRange) {\n  this._disableRange = true;\n }\n this._isStreamingSupported = false;\n this._isRangeSupported = false;\n this._cachedChunks = [];\n this._requests = [];\n this._done = false;\n this._storedError = undefined;\n this.onProgress = null;\n}\nPDFNetworkStreamFullRequestReader.prototype = {\n _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n  if (this._disableRange) {\n   return false;\n  }\n  var networkManager = this._manager;\n  if (!networkManager.isHttp) {\n   return false;\n  }\n  var fullRequestXhrId = this._fullRequestId;\n  var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n  if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n   return false;\n  }\n  var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n  if (contentEncoding !== 'identity') {\n   return false;\n  }\n  var length = fullRequestXhr.getResponseHeader('Content-Length');\n  length = parseInt(length, 10);\n  if (!isInt(length)) {\n   return false;\n  }\n  this._contentLength = length;\n  if (length <= 2 * this._rangeChunkSize) {\n   return false;\n  }\n  return true;\n },\n _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n  if (this._validateRangeRequestCapabilities()) {\n   this._isRangeSupported = true;\n  }\n  var networkManager = this._manager;\n  var fullRequestXhrId = this._fullRequestId;\n  if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n   this._isStreamingSupported = true;\n  } else if (this._isRangeSupported) {\n   networkManager.abortRequest(fullRequestXhrId);\n  }\n  this._headersReceivedCapability.resolve();\n },\n _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._cachedChunks.push(chunk);\n  }\n },\n _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n  if (args) {\n   this._onProgressiveData(args.chunk);\n  }\n  this._done = true;\n  if (this._cachedChunks.length > 0) {\n   return;\n  }\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n },\n _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n  var url = this._url;\n  var exception;\n  if (status === 404 || status === 0 && /^file:/.test(url)) {\n   exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n  } else {\n   exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n  this._storedError = exception;\n  this._headersReceivedCapability.reject(exception);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.reject(exception);\n  });\n  this._requests = [];\n  this._cachedChunks = [];\n },\n _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n  if (this.onProgress) {\n   this.onProgress({\n    loaded: data.loaded,\n    total: data.lengthComputable ? data.total : this._contentLength\n   });\n  }\n },\n get isRangeSupported() {\n  return this._isRangeSupported;\n },\n get isStreamingSupported() {\n  return this._isStreamingSupported;\n },\n get contentLength() {\n  return this._contentLength;\n },\n get headersReady() {\n  return this._headersReceivedCapability.promise;\n },\n read: function PDFNetworkStreamFullRequestReader_read() {\n  if (this._storedError) {\n   return Promise.reject(this._storedError);\n  }\n  if (this._cachedChunks.length > 0) {\n   var chunk = this._cachedChunks.shift();\n   return Promise.resolve(chunk);\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n  this._done = true;\n  this._headersReceivedCapability.reject(reason);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._fullRequestId)) {\n   this._manager.abortRequest(this._fullRequestId);\n  }\n  this._fullRequestReader = null;\n }\n};\nfunction PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n this._manager = manager;\n var args = {\n  onDone: this._onDone.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._requestId = manager.requestRange(begin, end, args);\n this._requests = [];\n this._queuedChunk = null;\n this._done = false;\n this.onProgress = null;\n this.onClosed = null;\n}\nPDFNetworkStreamRangeRequestReader.prototype = {\n _close: function PDFNetworkStreamRangeRequestReader_close() {\n  if (this.onClosed) {\n   this.onClosed(this);\n  }\n },\n _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n  var chunk = data.chunk;\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._queuedChunk = chunk;\n  }\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  this._close();\n },\n _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n  if (!this.isStreamingSupported && this.onProgress) {\n   this.onProgress({ loaded: evt.loaded });\n  }\n },\n get isStreamingSupported() {\n  return false;\n },\n read: function PDFNetworkStreamRangeRequestReader_read() {\n  if (this._queuedChunk !== null) {\n   var chunk = this._queuedChunk;\n   this._queuedChunk = null;\n   return Promise.resolve({\n    value: chunk,\n    done: false\n   });\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._requestId)) {\n   this._manager.abortRequest(this._requestId);\n  }\n  this._close();\n }\n};\ncoreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\nexports.PDFNetworkStream = PDFNetworkStream;\nexports.NetworkManager = NetworkManager;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nvar g;\ng = function () {\n return this;\n}();\ntry {\n g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n if (typeof window === \"object\")\n  g = window;\n}\nmodule.exports = g;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreObj = __w_pdfjs_require__(15);\nvar coreEvaluator = __w_pdfjs_require__(13);\nvar AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\nvar AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\nvar AnnotationFlag = sharedUtil.AnnotationFlag;\nvar AnnotationType = sharedUtil.AnnotationType;\nvar OPS = sharedUtil.OPS;\nvar Util = sharedUtil.Util;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar FileSpec = coreObj.FileSpec;\nvar OperatorList = coreEvaluator.OperatorList;\nfunction AnnotationFactory() {\n}\nAnnotationFactory.prototype = {\n create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n  var dict = xref.fetchIfRef(ref);\n  if (!isDict(dict)) {\n   return;\n  }\n  var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n  var subtype = dict.get('Subtype');\n  subtype = isName(subtype) ? subtype.name : null;\n  var parameters = {\n   xref: xref,\n   dict: dict,\n   ref: isRef(ref) ? ref : null,\n   subtype: subtype,\n   id: id,\n   pdfManager: pdfManager\n  };\n  switch (subtype) {\n  case 'Link':\n   return new LinkAnnotation(parameters);\n  case 'Text':\n   return new TextAnnotation(parameters);\n  case 'Widget':\n   var fieldType = Util.getInheritableProperty(dict, 'FT');\n   fieldType = isName(fieldType) ? fieldType.name : null;\n   switch (fieldType) {\n   case 'Tx':\n    return new TextWidgetAnnotation(parameters);\n   case 'Btn':\n    return new ButtonWidgetAnnotation(parameters);\n   case 'Ch':\n    return new ChoiceWidgetAnnotation(parameters);\n   }\n   warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n   return new WidgetAnnotation(parameters);\n  case 'Popup':\n   return new PopupAnnotation(parameters);\n  case 'Highlight':\n   return new HighlightAnnotation(parameters);\n  case 'Underline':\n   return new UnderlineAnnotation(parameters);\n  case 'Squiggly':\n   return new SquigglyAnnotation(parameters);\n  case 'StrikeOut':\n   return new StrikeOutAnnotation(parameters);\n  case 'FileAttachment':\n   return new FileAttachmentAnnotation(parameters);\n  default:\n   if (!subtype) {\n    warn('Annotation is missing the required /Subtype.');\n   } else {\n    warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n   }\n   return new Annotation(parameters);\n  }\n }\n};\nvar Annotation = function AnnotationClosure() {\n function getTransformMatrix(rect, bbox, matrix) {\n  var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n   return [\n    1,\n    0,\n    0,\n    1,\n    rect[0],\n    rect[1]\n   ];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [\n   xRatio,\n   0,\n   0,\n   yRatio,\n   rect[0] - minX * xRatio,\n   rect[1] - minY * yRatio\n  ];\n }\n function Annotation(params) {\n  var dict = params.dict;\n  this.setFlags(dict.get('F'));\n  this.setRectangle(dict.getArray('Rect'));\n  this.setColor(dict.getArray('C'));\n  this.setBorderStyle(dict);\n  this.setAppearance(dict);\n  this.data = {};\n  this.data.id = params.id;\n  this.data.subtype = params.subtype;\n  this.data.annotationFlags = this.flags;\n  this.data.rect = this.rectangle;\n  this.data.color = this.color;\n  this.data.borderStyle = this.borderStyle;\n  this.data.hasAppearance = !!this.appearance;\n }\n Annotation.prototype = {\n  _hasFlag: function Annotation_hasFlag(flags, flag) {\n   return !!(flags & flag);\n  },\n  _isViewable: function Annotation_isViewable(flags) {\n   return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n  },\n  _isPrintable: function AnnotationFlag_isPrintable(flags) {\n   return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n  },\n  get viewable() {\n   if (this.flags === 0) {\n    return true;\n   }\n   return this._isViewable(this.flags);\n  },\n  get printable() {\n   if (this.flags === 0) {\n    return false;\n   }\n   return this._isPrintable(this.flags);\n  },\n  setFlags: function Annotation_setFlags(flags) {\n   this.flags = isInt(flags) && flags > 0 ? flags : 0;\n  },\n  hasFlag: function Annotation_hasFlag(flag) {\n   return this._hasFlag(this.flags, flag);\n  },\n  setRectangle: function Annotation_setRectangle(rectangle) {\n   if (isArray(rectangle) && rectangle.length === 4) {\n    this.rectangle = Util.normalizeRect(rectangle);\n   } else {\n    this.rectangle = [\n     0,\n     0,\n     0,\n     0\n    ];\n   }\n  },\n  setColor: function Annotation_setColor(color) {\n   var rgbColor = new Uint8Array(3);\n   if (!isArray(color)) {\n    this.color = rgbColor;\n    return;\n   }\n   switch (color.length) {\n   case 0:\n    this.color = null;\n    break;\n   case 1:\n    ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 3:\n    ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 4:\n    ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   default:\n    this.color = rgbColor;\n    break;\n   }\n  },\n  setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n   this.borderStyle = new AnnotationBorderStyle();\n   if (!isDict(borderStyle)) {\n    return;\n   }\n   if (borderStyle.has('BS')) {\n    var dict = borderStyle.get('BS');\n    var dictType = dict.get('Type');\n    if (!dictType || isName(dictType, 'Border')) {\n     this.borderStyle.setWidth(dict.get('W'));\n     this.borderStyle.setStyle(dict.get('S'));\n     this.borderStyle.setDashArray(dict.getArray('D'));\n    }\n   } else if (borderStyle.has('Border')) {\n    var array = borderStyle.getArray('Border');\n    if (isArray(array) && array.length >= 3) {\n     this.borderStyle.setHorizontalCornerRadius(array[0]);\n     this.borderStyle.setVerticalCornerRadius(array[1]);\n     this.borderStyle.setWidth(array[2]);\n     if (array.length === 4) {\n      this.borderStyle.setDashArray(array[3]);\n     }\n    }\n   } else {\n    this.borderStyle.setWidth(0);\n   }\n  },\n  setAppearance: function Annotation_setAppearance(dict) {\n   this.appearance = null;\n   var appearanceStates = dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (isStream(normalAppearanceState)) {\n    this.appearance = normalAppearanceState;\n    return;\n   }\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var as = dict.get('AS');\n   if (!isName(as) || !normalAppearanceState.has(as.name)) {\n    return;\n   }\n   this.appearance = normalAppearanceState.get(as.name);\n  },\n  _preparePopup: function Annotation_preparePopup(dict) {\n   if (!dict.has('C')) {\n    this.data.color = null;\n   }\n   this.data.hasPopup = dict.has('Popup');\n   this.data.title = stringToPDFString(dict.get('T') || '');\n   this.data.contents = stringToPDFString(dict.get('Contents') || '');\n  },\n  loadResources: function Annotation_loadResources(keys) {\n   return new Promise(function (resolve, reject) {\n    this.appearance.dict.getAsync('Resources').then(function (resources) {\n     if (!resources) {\n      resolve();\n      return;\n     }\n     var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n     objectLoader.load().then(function () {\n      resolve(resources);\n     }, reject);\n    }, reject);\n   }.bind(this));\n  },\n  getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n   if (!this.appearance) {\n    return Promise.resolve(new OperatorList());\n   }\n   var data = this.data;\n   var appearanceDict = this.appearance.dict;\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var bbox = appearanceDict.getArray('BBox') || [\n    0,\n    0,\n    1,\n    1\n   ];\n   var matrix = appearanceDict.getArray('Matrix') || [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n   ];\n   var transform = getTransformMatrix(data.rect, bbox, matrix);\n   var self = this;\n   return resourcesPromise.then(function (resources) {\n    var opList = new OperatorList();\n    opList.addOp(OPS.beginAnnotation, [\n     data.rect,\n     transform,\n     matrix\n    ]);\n    return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n     opList.addOp(OPS.endAnnotation, []);\n     self.appearance.reset();\n     return opList;\n    });\n   });\n  }\n };\n Annotation.appendToOperatorList = function Annotation_appendToOperatorList(annotations, opList, partialEvaluator, task, intent, renderForms) {\n  var annotationPromises = [];\n  for (var i = 0, n = annotations.length; i < n; ++i) {\n   if (intent === 'display' && annotations[i].viewable || intent === 'print' && annotations[i].printable) {\n    annotationPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderForms));\n   }\n  }\n  return Promise.all(annotationPromises).then(function (operatorLists) {\n   opList.addOp(OPS.beginAnnotations, []);\n   for (var i = 0, n = operatorLists.length; i < n; ++i) {\n    opList.addOpList(operatorLists[i]);\n   }\n   opList.addOp(OPS.endAnnotations, []);\n  });\n };\n return Annotation;\n}();\nvar AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n function AnnotationBorderStyle() {\n  this.width = 1;\n  this.style = AnnotationBorderStyleType.SOLID;\n  this.dashArray = [3];\n  this.horizontalCornerRadius = 0;\n  this.verticalCornerRadius = 0;\n }\n AnnotationBorderStyle.prototype = {\n  setWidth: function AnnotationBorderStyle_setWidth(width) {\n   if (width === (width | 0)) {\n    this.width = width;\n   }\n  },\n  setStyle: function AnnotationBorderStyle_setStyle(style) {\n   if (!style) {\n    return;\n   }\n   switch (style.name) {\n   case 'S':\n    this.style = AnnotationBorderStyleType.SOLID;\n    break;\n   case 'D':\n    this.style = AnnotationBorderStyleType.DASHED;\n    break;\n   case 'B':\n    this.style = AnnotationBorderStyleType.BEVELED;\n    break;\n   case 'I':\n    this.style = AnnotationBorderStyleType.INSET;\n    break;\n   case 'U':\n    this.style = AnnotationBorderStyleType.UNDERLINE;\n    break;\n   default:\n    break;\n   }\n  },\n  setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n   if (isArray(dashArray) && dashArray.length > 0) {\n    var isValid = true;\n    var allZeros = true;\n    for (var i = 0, len = dashArray.length; i < len; i++) {\n     var element = dashArray[i];\n     var validNumber = +element >= 0;\n     if (!validNumber) {\n      isValid = false;\n      break;\n     } else if (element > 0) {\n      allZeros = false;\n     }\n    }\n    if (isValid && !allZeros) {\n     this.dashArray = dashArray;\n    } else {\n     this.width = 0;\n    }\n   } else if (dashArray) {\n    this.width = 0;\n   }\n  },\n  setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.horizontalCornerRadius = radius;\n   }\n  },\n  setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.verticalCornerRadius = radius;\n   }\n  }\n };\n return AnnotationBorderStyle;\n}();\nvar WidgetAnnotation = function WidgetAnnotationClosure() {\n function WidgetAnnotation(params) {\n  Annotation.call(this, params);\n  var dict = params.dict;\n  var data = this.data;\n  data.annotationType = AnnotationType.WIDGET;\n  data.fieldName = this._constructFieldName(dict);\n  data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n  data.alternativeText = stringToPDFString(dict.get('TU') || '');\n  data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n  var fieldType = Util.getInheritableProperty(dict, 'FT');\n  data.fieldType = isName(fieldType) ? fieldType.name : null;\n  this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n  data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n  if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n   data.fieldFlags = 0;\n  }\n  data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n  if (data.fieldType === 'Sig') {\n   this.setFlags(AnnotationFlag.HIDDEN);\n  }\n }\n Util.inherit(WidgetAnnotation, Annotation, {\n  _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n   if (!dict.has('T') && !dict.has('Parent')) {\n    warn('Unknown field name, falling back to empty field name.');\n    return '';\n   }\n   if (!dict.has('Parent')) {\n    return stringToPDFString(dict.get('T'));\n   }\n   var fieldName = [];\n   if (dict.has('T')) {\n    fieldName.unshift(stringToPDFString(dict.get('T')));\n   }\n   var loopDict = dict;\n   while (loopDict.has('Parent')) {\n    loopDict = loopDict.get('Parent');\n    if (loopDict.has('T')) {\n     fieldName.unshift(stringToPDFString(loopDict.get('T')));\n    }\n   }\n   return fieldName.join('.');\n  },\n  hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n   return !!(this.data.fieldFlags & flag);\n  }\n });\n return WidgetAnnotation;\n}();\nvar TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n function TextWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n  var alignment = Util.getInheritableProperty(params.dict, 'Q');\n  if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n   alignment = null;\n  }\n  this.data.textAlignment = alignment;\n  var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n  if (!isInt(maximumLength) || maximumLength < 0) {\n   maximumLength = null;\n  }\n  this.data.maxLen = maximumLength;\n  this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n  this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n }\n Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   if (!this.data.defaultAppearance) {\n    return Promise.resolve(operatorList);\n   }\n   var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n   return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n    return operatorList;\n   });\n  }\n });\n return TextWidgetAnnotation;\n}();\nvar ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n function ButtonWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.checkBox) {\n   if (!isName(this.data.fieldValue)) {\n    return;\n   }\n   this.data.fieldValue = this.data.fieldValue.name;\n  }\n  this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.radioButton) {\n   this.data.fieldValue = this.data.buttonValue = null;\n   var fieldParent = params.dict.get('Parent');\n   if (isDict(fieldParent) && fieldParent.has('V')) {\n    var fieldParentValue = fieldParent.get('V');\n    if (isName(fieldParentValue)) {\n     this.data.fieldValue = fieldParentValue.name;\n    }\n   }\n   var appearanceStates = params.dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var keys = normalAppearanceState.getKeys();\n   for (var i = 0, ii = keys.length; i < ii; i++) {\n    if (keys[i] !== 'Off') {\n     this.data.buttonValue = keys[i];\n     break;\n    }\n   }\n  }\n }\n Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   return Promise.resolve(operatorList);\n  }\n });\n return ButtonWidgetAnnotation;\n}();\nvar ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n function ChoiceWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.options = [];\n  var options = params.dict.get('Opt');\n  if (isArray(options)) {\n   var xref = params.xref;\n   for (var i = 0, ii = options.length; i < ii; i++) {\n    var option = xref.fetchIfRef(options[i]);\n    var isOptionArray = isArray(option);\n    this.data.options[i] = {\n     exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n     displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n    };\n   }\n  }\n  if (!isArray(this.data.fieldValue)) {\n   this.data.fieldValue = [this.data.fieldValue];\n  }\n  this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n  this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n }\n Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n  }\n });\n return ChoiceWidgetAnnotation;\n}();\nvar TextAnnotation = function TextAnnotationClosure() {\n var DEFAULT_ICON_SIZE = 22;\n function TextAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.TEXT;\n  if (this.data.hasAppearance) {\n   this.data.name = 'NoIcon';\n  } else {\n   this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n   this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n   this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n  }\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(TextAnnotation, Annotation, {});\n return TextAnnotation;\n}();\nvar LinkAnnotation = function LinkAnnotationClosure() {\n function LinkAnnotation(params) {\n  Annotation.call(this, params);\n  var data = this.data;\n  data.annotationType = AnnotationType.LINK;\n  Catalog.parseDestDictionary({\n   destDict: params.dict,\n   resultObj: data,\n   docBaseUrl: params.pdfManager.docBaseUrl\n  });\n }\n Util.inherit(LinkAnnotation, Annotation, {});\n return LinkAnnotation;\n}();\nvar PopupAnnotation = function PopupAnnotationClosure() {\n function PopupAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.POPUP;\n  var dict = parameters.dict;\n  var parentItem = dict.get('Parent');\n  if (!parentItem) {\n   warn('Popup annotation has a missing or invalid parent annotation.');\n   return;\n  }\n  this.data.parentId = dict.getRaw('Parent').toString();\n  this.data.title = stringToPDFString(parentItem.get('T') || '');\n  this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n  if (!parentItem.has('C')) {\n   this.data.color = null;\n  } else {\n   this.setColor(parentItem.getArray('C'));\n   this.data.color = this.color;\n  }\n  if (!this.viewable) {\n   var parentFlags = parentItem.get('F');\n   if (this._isViewable(parentFlags)) {\n    this.setFlags(parentFlags);\n   }\n  }\n }\n Util.inherit(PopupAnnotation, Annotation, {});\n return PopupAnnotation;\n}();\nvar HighlightAnnotation = function HighlightAnnotationClosure() {\n function HighlightAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.HIGHLIGHT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(HighlightAnnotation, Annotation, {});\n return HighlightAnnotation;\n}();\nvar UnderlineAnnotation = function UnderlineAnnotationClosure() {\n function UnderlineAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.UNDERLINE;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(UnderlineAnnotation, Annotation, {});\n return UnderlineAnnotation;\n}();\nvar SquigglyAnnotation = function SquigglyAnnotationClosure() {\n function SquigglyAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.SQUIGGLY;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(SquigglyAnnotation, Annotation, {});\n return SquigglyAnnotation;\n}();\nvar StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n function StrikeOutAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.STRIKEOUT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(StrikeOutAnnotation, Annotation, {});\n return StrikeOutAnnotation;\n}();\nvar FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n function FileAttachmentAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n  this.data.annotationType = AnnotationType.FILEATTACHMENT;\n  this.data.file = file.serializable;\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(FileAttachmentAnnotation, Annotation, {});\n return FileAttachmentAnnotation;\n}();\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar warn = sharedUtil.warn;\nvar baseTypes = [\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'S',\n 'B',\n 'S',\n 'WS',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'B',\n 'B',\n 'S',\n 'WS',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ES',\n 'CS',\n 'ES',\n 'CS',\n 'CS',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'CS',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'CS',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'BN',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'EN',\n 'EN',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'EN',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L'\n];\nvar arabicTypes = [\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ON',\n 'ON',\n 'AL',\n 'ET',\n 'ET',\n 'AL',\n 'CS',\n 'AL',\n 'ON',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n '',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ET',\n 'AN',\n 'AN',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL'\n];\nfunction isOdd(i) {\n return (i & 1) !== 0;\n}\nfunction isEven(i) {\n return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n for (var j = start, jj = arr.length; j < jj; ++j) {\n  if (arr[j] !== value) {\n   return j;\n  }\n }\n return j;\n}\nfunction setValues(arr, start, end, value) {\n for (var j = start; j < end; ++j) {\n  arr[j] = value;\n }\n}\nfunction reverseValues(arr, start, end) {\n for (var i = start, j = end - 1; i < j; ++i, --j) {\n  var temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n }\n}\nfunction createBidiText(str, isLTR, vertical) {\n return {\n  str: str,\n  dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n var isLTR = true;\n var strLength = str.length;\n if (strLength === 0 || vertical) {\n  return createBidiText(str, isLTR, vertical);\n }\n chars.length = strLength;\n types.length = strLength;\n var numBidi = 0;\n var i, ii;\n for (i = 0; i < strLength; ++i) {\n  chars[i] = str.charAt(i);\n  var charCode = str.charCodeAt(i);\n  var charType = 'L';\n  if (charCode <= 0x00ff) {\n   charType = baseTypes[charCode];\n  } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n   charType = 'R';\n  } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n   charType = arabicTypes[charCode & 0xff];\n   if (!charType) {\n    warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n   }\n  } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n   charType = 'AL';\n  }\n  if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n   numBidi++;\n  }\n  types[i] = charType;\n }\n if (numBidi === 0) {\n  isLTR = true;\n  return createBidiText(str, isLTR);\n }\n if (startLevel === -1) {\n  if (numBidi / strLength < 0.3) {\n   isLTR = true;\n   startLevel = 0;\n  } else {\n   isLTR = false;\n   startLevel = 1;\n  }\n }\n var levels = [];\n for (i = 0; i < strLength; ++i) {\n  levels[i] = startLevel;\n }\n var e = isOdd(startLevel) ? 'R' : 'L';\n var sor = e;\n var eor = sor;\n var lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'NSM') {\n   types[i] = lastType;\n  } else {\n   lastType = types[i];\n  }\n }\n lastType = sor;\n var t;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'AL' ? 'AN' : 'EN';\n  } else if (t === 'R' || t === 'L' || t === 'AL') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'AL') {\n   types[i] = 'R';\n  }\n }\n for (i = 1; i < strLength - 1; ++i) {\n  if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n   types[i] = 'EN';\n  }\n  if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n   types[i] = types[i - 1];\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'EN') {\n   var j;\n   for (j = i - 1; j >= 0; --j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n   for (j = i + 1; j < strLength; ++j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n   types[i] = 'ON';\n  }\n }\n lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'L' ? 'L' : 'EN';\n  } else if (t === 'R' || t === 'L') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   var end = findUnequal(types, i + 1, 'ON');\n   var before = sor;\n   if (i > 0) {\n    before = types[i - 1];\n   }\n   var after = eor;\n   if (end + 1 < strLength) {\n    after = types[end + 1];\n   }\n   if (before !== 'L') {\n    before = 'R';\n   }\n   if (after !== 'L') {\n    after = 'R';\n   }\n   if (before === after) {\n    setValues(types, i, end, before);\n   }\n   i = end - 1;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   types[i] = e;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (isEven(levels[i])) {\n   if (t === 'R') {\n    levels[i] += 1;\n   } else if (t === 'AN' || t === 'EN') {\n    levels[i] += 2;\n   }\n  } else {\n   if (t === 'L' || t === 'AN' || t === 'EN') {\n    levels[i] += 1;\n   }\n  }\n }\n var highestLevel = -1;\n var lowestOddLevel = 99;\n var level;\n for (i = 0, ii = levels.length; i < ii; ++i) {\n  level = levels[i];\n  if (highestLevel < level) {\n   highestLevel = level;\n  }\n  if (lowestOddLevel > level && isOdd(level)) {\n   lowestOddLevel = level;\n  }\n }\n for (level = highestLevel; level >= lowestOddLevel; --level) {\n  var start = -1;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n   if (levels[i] < level) {\n    if (start >= 0) {\n     reverseValues(chars, start, i);\n     start = -1;\n    }\n   } else if (start < 0) {\n    start = i;\n   }\n  }\n  if (start >= 0) {\n   reverseValues(chars, start, levels.length);\n  }\n }\n for (i = 0, ii = chars.length; i < ii; ++i) {\n  var ch = chars[i];\n  if (ch === '<' || ch === '>') {\n   chars[i] = '';\n  }\n }\n return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ISOAdobeCharset = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron'\n];\nvar ExpertCharset = [\n '.notdef',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar ExpertSubsetCharset = [\n '.notdef',\n 'space',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'hyphensuperior',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'centoldstyle',\n 'figuredash',\n 'hypheninferior',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior'\n];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar isEOF = corePrimitives.isEOF;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar BUILT_IN_CMAPS = [\n 'Adobe-GB1-UCS2',\n 'Adobe-CNS1-UCS2',\n 'Adobe-Japan1-UCS2',\n 'Adobe-Korea1-UCS2',\n '78-EUC-H',\n '78-EUC-V',\n '78-H',\n '78-RKSJ-H',\n '78-RKSJ-V',\n '78-V',\n '78ms-RKSJ-H',\n '78ms-RKSJ-V',\n '83pv-RKSJ-H',\n '90ms-RKSJ-H',\n '90ms-RKSJ-V',\n '90msp-RKSJ-H',\n '90msp-RKSJ-V',\n '90pv-RKSJ-H',\n '90pv-RKSJ-V',\n 'Add-H',\n 'Add-RKSJ-H',\n 'Add-RKSJ-V',\n 'Add-V',\n 'Adobe-CNS1-0',\n 'Adobe-CNS1-1',\n 'Adobe-CNS1-2',\n 'Adobe-CNS1-3',\n 'Adobe-CNS1-4',\n 'Adobe-CNS1-5',\n 'Adobe-CNS1-6',\n 'Adobe-GB1-0',\n 'Adobe-GB1-1',\n 'Adobe-GB1-2',\n 'Adobe-GB1-3',\n 'Adobe-GB1-4',\n 'Adobe-GB1-5',\n 'Adobe-Japan1-0',\n 'Adobe-Japan1-1',\n 'Adobe-Japan1-2',\n 'Adobe-Japan1-3',\n 'Adobe-Japan1-4',\n 'Adobe-Japan1-5',\n 'Adobe-Japan1-6',\n 'Adobe-Korea1-0',\n 'Adobe-Korea1-1',\n 'Adobe-Korea1-2',\n 'B5-H',\n 'B5-V',\n 'B5pc-H',\n 'B5pc-V',\n 'CNS-EUC-H',\n 'CNS-EUC-V',\n 'CNS1-H',\n 'CNS1-V',\n 'CNS2-H',\n 'CNS2-V',\n 'ETHK-B5-H',\n 'ETHK-B5-V',\n 'ETen-B5-H',\n 'ETen-B5-V',\n 'ETenms-B5-H',\n 'ETenms-B5-V',\n 'EUC-H',\n 'EUC-V',\n 'Ext-H',\n 'Ext-RKSJ-H',\n 'Ext-RKSJ-V',\n 'Ext-V',\n 'GB-EUC-H',\n 'GB-EUC-V',\n 'GB-H',\n 'GB-V',\n 'GBK-EUC-H',\n 'GBK-EUC-V',\n 'GBK2K-H',\n 'GBK2K-V',\n 'GBKp-EUC-H',\n 'GBKp-EUC-V',\n 'GBT-EUC-H',\n 'GBT-EUC-V',\n 'GBT-H',\n 'GBT-V',\n 'GBTpc-EUC-H',\n 'GBTpc-EUC-V',\n 'GBpc-EUC-H',\n 'GBpc-EUC-V',\n 'H',\n 'HKdla-B5-H',\n 'HKdla-B5-V',\n 'HKdlb-B5-H',\n 'HKdlb-B5-V',\n 'HKgccs-B5-H',\n 'HKgccs-B5-V',\n 'HKm314-B5-H',\n 'HKm314-B5-V',\n 'HKm471-B5-H',\n 'HKm471-B5-V',\n 'HKscs-B5-H',\n 'HKscs-B5-V',\n 'Hankaku',\n 'Hiragana',\n 'KSC-EUC-H',\n 'KSC-EUC-V',\n 'KSC-H',\n 'KSC-Johab-H',\n 'KSC-Johab-V',\n 'KSC-V',\n 'KSCms-UHC-H',\n 'KSCms-UHC-HW-H',\n 'KSCms-UHC-HW-V',\n 'KSCms-UHC-V',\n 'KSCpc-EUC-H',\n 'KSCpc-EUC-V',\n 'Katakana',\n 'NWP-H',\n 'NWP-V',\n 'RKSJ-H',\n 'RKSJ-V',\n 'Roman',\n 'UniCNS-UCS2-H',\n 'UniCNS-UCS2-V',\n 'UniCNS-UTF16-H',\n 'UniCNS-UTF16-V',\n 'UniCNS-UTF32-H',\n 'UniCNS-UTF32-V',\n 'UniCNS-UTF8-H',\n 'UniCNS-UTF8-V',\n 'UniGB-UCS2-H',\n 'UniGB-UCS2-V',\n 'UniGB-UTF16-H',\n 'UniGB-UTF16-V',\n 'UniGB-UTF32-H',\n 'UniGB-UTF32-V',\n 'UniGB-UTF8-H',\n 'UniGB-UTF8-V',\n 'UniJIS-UCS2-H',\n 'UniJIS-UCS2-HW-H',\n 'UniJIS-UCS2-HW-V',\n 'UniJIS-UCS2-V',\n 'UniJIS-UTF16-H',\n 'UniJIS-UTF16-V',\n 'UniJIS-UTF32-H',\n 'UniJIS-UTF32-V',\n 'UniJIS-UTF8-H',\n 'UniJIS-UTF8-V',\n 'UniJIS2004-UTF16-H',\n 'UniJIS2004-UTF16-V',\n 'UniJIS2004-UTF32-H',\n 'UniJIS2004-UTF32-V',\n 'UniJIS2004-UTF8-H',\n 'UniJIS2004-UTF8-V',\n 'UniJISPro-UCS2-HW-V',\n 'UniJISPro-UCS2-V',\n 'UniJISPro-UTF8-V',\n 'UniJISX0213-UTF32-H',\n 'UniJISX0213-UTF32-V',\n 'UniJISX02132004-UTF32-H',\n 'UniJISX02132004-UTF32-V',\n 'UniKS-UCS2-H',\n 'UniKS-UCS2-V',\n 'UniKS-UTF16-H',\n 'UniKS-UTF16-V',\n 'UniKS-UTF32-H',\n 'UniKS-UTF32-V',\n 'UniKS-UTF8-H',\n 'UniKS-UTF8-V',\n 'V',\n 'WP-Symbol'\n];\nvar CMap = function CMapClosure() {\n function CMap(builtInCMap) {\n  this.codespaceRanges = [\n   [],\n   [],\n   [],\n   []\n  ];\n  this.numCodespaceRanges = 0;\n  this._map = [];\n  this.name = '';\n  this.vertical = false;\n  this.useCMap = null;\n  this.builtInCMap = builtInCMap;\n }\n CMap.prototype = {\n  addCodespaceRange: function (n, low, high) {\n   this.codespaceRanges[n - 1].push(low, high);\n   this.numCodespaceRanges++;\n  },\n  mapCidRange: function (low, high, dstLow) {\n   while (low <= high) {\n    this._map[low++] = dstLow++;\n   }\n  },\n  mapBfRange: function (low, high, dstLow) {\n   var lastByte = dstLow.length - 1;\n   while (low <= high) {\n    this._map[low++] = dstLow;\n    dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n   }\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   var i = 0, ii = array.length;\n   while (low <= high && i < ii) {\n    this._map[low] = array[i++];\n    ++low;\n   }\n  },\n  mapOne: function (src, dst) {\n   this._map[src] = dst;\n  },\n  lookup: function (code) {\n   return this._map[code];\n  },\n  contains: function (code) {\n   return this._map[code] !== undefined;\n  },\n  forEach: function (callback) {\n   var map = this._map;\n   var length = map.length;\n   var i;\n   if (length <= 0x10000) {\n    for (i = 0; i < length; i++) {\n     if (map[i] !== undefined) {\n      callback(i, map[i]);\n     }\n    }\n   } else {\n    for (i in this._map) {\n     callback(i, map[i]);\n    }\n   }\n  },\n  charCodeOf: function (value) {\n   return this._map.indexOf(value);\n  },\n  getMap: function () {\n   return this._map;\n  },\n  readCharCode: function (str, offset, out) {\n   var c = 0;\n   var codespaceRanges = this.codespaceRanges;\n   var codespaceRangesLen = this.codespaceRanges.length;\n   for (var n = 0; n < codespaceRangesLen; n++) {\n    c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n    var codespaceRange = codespaceRanges[n];\n    for (var k = 0, kk = codespaceRange.length; k < kk;) {\n     var low = codespaceRange[k++];\n     var high = codespaceRange[k++];\n     if (c >= low && c <= high) {\n      out.charcode = c;\n      out.length = n + 1;\n      return;\n     }\n    }\n   }\n   out.charcode = 0;\n   out.length = 1;\n  },\n  get length() {\n   return this._map.length;\n  },\n  get isIdentityCMap() {\n   if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n    return false;\n   }\n   if (this._map.length !== 0x10000) {\n    return false;\n   }\n   for (var i = 0; i < 0x10000; i++) {\n    if (this._map[i] !== i) {\n     return false;\n    }\n   }\n   return true;\n  }\n };\n return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n function IdentityCMap(vertical, n) {\n  CMap.call(this);\n  this.vertical = vertical;\n  this.addCodespaceRange(n, 0, 0xffff);\n }\n Util.inherit(IdentityCMap, CMap, {});\n IdentityCMap.prototype = {\n  addCodespaceRange: CMap.prototype.addCodespaceRange,\n  mapCidRange: function (low, high, dstLow) {\n   error('should not call mapCidRange');\n  },\n  mapBfRange: function (low, high, dstLow) {\n   error('should not call mapBfRange');\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   error('should not call mapBfRangeToArray');\n  },\n  mapOne: function (src, dst) {\n   error('should not call mapCidOne');\n  },\n  lookup: function (code) {\n   return isInt(code) && code <= 0xffff ? code : undefined;\n  },\n  contains: function (code) {\n   return isInt(code) && code <= 0xffff;\n  },\n  forEach: function (callback) {\n   for (var i = 0; i <= 0xffff; i++) {\n    callback(i, i);\n   }\n  },\n  charCodeOf: function (value) {\n   return isInt(value) && value <= 0xffff ? value : -1;\n  },\n  getMap: function () {\n   var map = new Array(0x10000);\n   for (var i = 0; i <= 0xffff; i++) {\n    map[i] = i;\n   }\n   return map;\n  },\n  readCharCode: CMap.prototype.readCharCode,\n  get length() {\n   return 0x10000;\n  },\n  get isIdentityCMap() {\n   error('should not access .isIdentityCMap');\n  }\n };\n return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n function hexToInt(a, size) {\n  var n = 0;\n  for (var i = 0; i <= size; i++) {\n   n = n << 8 | a[i];\n  }\n  return n >>> 0;\n }\n function hexToStr(a, size) {\n  if (size === 1) {\n   return String.fromCharCode(a[0], a[1]);\n  }\n  if (size === 3) {\n   return String.fromCharCode(a[0], a[1], a[2], a[3]);\n  }\n  return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n }\n function addHex(a, b, size) {\n  var c = 0;\n  for (var i = size; i >= 0; i--) {\n   c += a[i] + b[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n function incHex(a, size) {\n  var c = 1;\n  for (var i = size; i >= 0 && c > 0; i--) {\n   c += a[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n var MAX_NUM_SIZE = 16;\n var MAX_ENCODED_NUM_SIZE = 19;\n function BinaryCMapStream(data) {\n  this.buffer = data;\n  this.pos = 0;\n  this.end = data.length;\n  this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n }\n BinaryCMapStream.prototype = {\n  readByte: function () {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.buffer[this.pos++];\n  },\n  readNumber: function () {\n   var n = 0;\n   var last;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    n = n << 7 | b & 0x7F;\n   } while (!last);\n   return n;\n  },\n  readSigned: function () {\n   var n = this.readNumber();\n   return n & 1 ? ~(n >>> 1) : n >>> 1;\n  },\n  readHex: function (num, size) {\n   num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n   this.pos += size + 1;\n  },\n  readHexNumber: function (num, size) {\n   var last;\n   var stack = this.tmpBuf, sp = 0;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    stack[sp++] = b & 0x7F;\n   } while (!last);\n   var i = size, buffer = 0, bufferSize = 0;\n   while (i >= 0) {\n    while (bufferSize < 8 && stack.length > 0) {\n     buffer = stack[--sp] << bufferSize | buffer;\n     bufferSize += 7;\n    }\n    num[i] = buffer & 255;\n    i--;\n    buffer >>= 8;\n    bufferSize -= 8;\n   }\n  },\n  readHexSigned: function (num, size) {\n   this.readHexNumber(num, size);\n   var sign = num[size] & 1 ? 255 : 0;\n   var c = 0;\n   for (var i = 0; i <= size; i++) {\n    c = (c & 1) << 8 | num[i];\n    num[i] = c >> 1 ^ sign;\n   }\n  },\n  readString: function () {\n   var len = this.readNumber();\n   var s = '';\n   for (var i = 0; i < len; i++) {\n    s += String.fromCharCode(this.readNumber());\n   }\n   return s;\n  }\n };\n function processBinaryCMap(data, cMap, extend) {\n  return new Promise(function (resolve, reject) {\n   var stream = new BinaryCMapStream(data);\n   var header = stream.readByte();\n   cMap.vertical = !!(header & 1);\n   var useCMap = null;\n   var start = new Uint8Array(MAX_NUM_SIZE);\n   var end = new Uint8Array(MAX_NUM_SIZE);\n   var char = new Uint8Array(MAX_NUM_SIZE);\n   var charCode = new Uint8Array(MAX_NUM_SIZE);\n   var tmp = new Uint8Array(MAX_NUM_SIZE);\n   var code;\n   var b;\n   while ((b = stream.readByte()) >= 0) {\n    var type = b >> 5;\n    if (type === 7) {\n     switch (b & 0x1F) {\n     case 0:\n      stream.readString();\n      break;\n     case 1:\n      useCMap = stream.readString();\n      break;\n     }\n     continue;\n    }\n    var sequence = !!(b & 0x10);\n    var dataSize = b & 15;\n    assert(dataSize + 1 <= MAX_NUM_SIZE);\n    var ucs2DataSize = 1;\n    var subitemsCount = stream.readNumber();\n    var i;\n    switch (type) {\n    case 0:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     }\n     break;\n    case 1:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n     }\n     break;\n    case 2:\n     stream.readHex(char, dataSize);\n     code = stream.readNumber();\n     cMap.mapOne(hexToInt(char, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, dataSize);\n       addHex(char, tmp, dataSize);\n      }\n      code = stream.readSigned() + (code + 1);\n      cMap.mapOne(hexToInt(char, dataSize), code);\n     }\n     break;\n    case 3:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, dataSize);\n       addHex(start, end, dataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n      cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     }\n     break;\n    case 4:\n     stream.readHex(char, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, ucs2DataSize);\n       addHex(char, tmp, ucs2DataSize);\n      }\n      incHex(charCode, dataSize);\n      stream.readHexSigned(tmp, dataSize);\n      addHex(charCode, tmp, dataSize);\n      cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    case 5:\n     stream.readHex(start, ucs2DataSize);\n     stream.readHexNumber(end, ucs2DataSize);\n     addHex(end, start, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, ucs2DataSize);\n       addHex(start, end, ucs2DataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, ucs2DataSize);\n      addHex(end, start, ucs2DataSize);\n      stream.readHex(charCode, dataSize);\n      cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    default:\n     reject(new Error('processBinaryCMap: Unknown type: ' + type));\n     return;\n    }\n   }\n   if (useCMap) {\n    resolve(extend(useCMap));\n    return;\n   }\n   resolve(cMap);\n  });\n }\n function BinaryCMapReader() {\n }\n BinaryCMapReader.prototype = { process: processBinaryCMap };\n return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n function strToInt(str) {\n  var a = 0;\n  for (var i = 0; i < str.length; i++) {\n   a = a << 8 | str.charCodeAt(i);\n  }\n  return a >>> 0;\n }\n function expectString(obj) {\n  if (!isString(obj)) {\n   error('Malformed CMap: expected string.');\n  }\n }\n function expectInt(obj) {\n  if (!isInt(obj)) {\n   error('Malformed CMap: expected int.');\n  }\n }\n function parseBfChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseBfRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   if (isInt(obj) || isString(obj)) {\n    var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n    cMap.mapBfRange(low, high, dstLow);\n   } else if (isCmd(obj, '[')) {\n    obj = lexer.getObj();\n    var array = [];\n    while (!isCmd(obj, ']') && !isEOF(obj)) {\n     array.push(obj);\n     obj = lexer.getObj();\n    }\n    cMap.mapBfRangeToArray(low, high, array);\n   } else {\n    break;\n   }\n  }\n  error('Invalid bf range.');\n }\n function parseCidChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseCidRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dstLow = obj;\n   cMap.mapCidRange(low, high, dstLow);\n  }\n }\n function parseCodespaceRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcodespacerange')) {\n    return;\n   }\n   if (!isString(obj)) {\n    break;\n   }\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   if (!isString(obj)) {\n    break;\n   }\n   var high = strToInt(obj);\n   cMap.addCodespaceRange(obj.length, low, high);\n  }\n  error('Invalid codespace range.');\n }\n function parseWMode(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isInt(obj)) {\n   cMap.vertical = !!obj;\n  }\n }\n function parseCMapName(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isName(obj) && isString(obj.name)) {\n   cMap.name = obj.name;\n  }\n }\n function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n  var previous;\n  var embededUseCMap;\n  objLoop:\n   while (true) {\n    try {\n     var obj = lexer.getObj();\n     if (isEOF(obj)) {\n      break;\n     } else if (isName(obj)) {\n      if (obj.name === 'WMode') {\n       parseWMode(cMap, lexer);\n      } else if (obj.name === 'CMapName') {\n       parseCMapName(cMap, lexer);\n      }\n      previous = obj;\n     } else if (isCmd(obj)) {\n      switch (obj.cmd) {\n      case 'endcmap':\n       break objLoop;\n      case 'usecmap':\n       if (isName(previous)) {\n        embededUseCMap = previous.name;\n       }\n       break;\n      case 'begincodespacerange':\n       parseCodespaceRange(cMap, lexer);\n       break;\n      case 'beginbfchar':\n       parseBfChar(cMap, lexer);\n       break;\n      case 'begincidchar':\n       parseCidChar(cMap, lexer);\n       break;\n      case 'beginbfrange':\n       parseBfRange(cMap, lexer);\n       break;\n      case 'begincidrange':\n       parseCidRange(cMap, lexer);\n       break;\n      }\n     }\n    } catch (ex) {\n     if (ex instanceof MissingDataException) {\n      throw ex;\n     }\n     warn('Invalid cMap data: ' + ex);\n     continue;\n    }\n   }\n  if (!useCMap && embededUseCMap) {\n   useCMap = embededUseCMap;\n  }\n  if (useCMap) {\n   return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n  }\n  return Promise.resolve(cMap);\n }\n function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n  return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n   cMap.useCMap = newCMap;\n   if (cMap.numCodespaceRanges === 0) {\n    var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n    for (var i = 0; i < useCodespaceRanges.length; i++) {\n     cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n    }\n    cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n   }\n   cMap.useCMap.forEach(function (key, value) {\n    if (!cMap.contains(key)) {\n     cMap.mapOne(key, cMap.useCMap.lookup(key));\n    }\n   });\n   return cMap;\n  });\n }\n function createBuiltInCMap(name, fetchBuiltInCMap) {\n  if (name === 'Identity-H') {\n   return Promise.resolve(new IdentityCMap(false, 2));\n  } else if (name === 'Identity-V') {\n   return Promise.resolve(new IdentityCMap(true, 2));\n  }\n  if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n   return Promise.reject(new Error('Unknown cMap name: ' + name));\n  }\n  assert(fetchBuiltInCMap, 'Built-in CMap parameters are not provided.');\n  return fetchBuiltInCMap(name).then(function (data) {\n   var cMapData = data.cMapData, compressionType = data.compressionType;\n   var cMap = new CMap(true);\n   if (compressionType === CMapCompressionType.BINARY) {\n    return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n     return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    });\n   }\n   assert(compressionType === CMapCompressionType.NONE, 'TODO: Only BINARY/NONE CMap compression is currently supported.');\n   var lexer = new Lexer(new Stream(cMapData));\n   return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n  });\n }\n return {\n  create: function (params) {\n   var encoding = params.encoding;\n   var fetchBuiltInCMap = params.fetchBuiltInCMap;\n   var useCMap = params.useCMap;\n   if (isName(encoding)) {\n    return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n   } else if (isStream(encoding)) {\n    var cMap = new CMap();\n    var lexer = new Lexer(encoding);\n    return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n     if (parsedCMap.isIdentityCMap) {\n      return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n     }\n     return parsedCMap;\n    });\n   }\n   return Promise.reject(new Error('Encoding required.'));\n  }\n };\n}();\nexports.CMap = CMap;\nexports.CMapFactory = CMapFactory;\nexports.IdentityCMap = IdentityCMap;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreObj = __w_pdfjs_require__(15);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreCrypto = __w_pdfjs_require__(12);\nvar coreEvaluator = __w_pdfjs_require__(13);\nvar coreAnnotation = __w_pdfjs_require__(20);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isArrayBuffer = sharedUtil.isArrayBuffer;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar NullStream = coreStream.NullStream;\nvar Stream = coreStream.Stream;\nvar StreamsSequenceStream = coreStream.StreamsSequenceStream;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar XRef = coreObj.XRef;\nvar Linearization = coreParser.Linearization;\nvar calculateMD5 = coreCrypto.calculateMD5;\nvar OperatorList = coreEvaluator.OperatorList;\nvar PartialEvaluator = coreEvaluator.PartialEvaluator;\nvar Annotation = coreAnnotation.Annotation;\nvar AnnotationFactory = coreAnnotation.AnnotationFactory;\nvar Page = function PageClosure() {\n var DEFAULT_USER_UNIT = 1.0;\n var LETTER_SIZE_MEDIABOX = [\n  0,\n  0,\n  612,\n  792\n ];\n function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache, builtInCMapCache) {\n  this.pdfManager = pdfManager;\n  this.pageIndex = pageIndex;\n  this.pageDict = pageDict;\n  this.xref = xref;\n  this.ref = ref;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.evaluatorOptions = pdfManager.evaluatorOptions;\n  this.resourcesPromise = null;\n  var uniquePrefix = 'p' + this.pageIndex + '_';\n  var idCounters = { obj: 0 };\n  this.idFactory = {\n   createObjId: function () {\n    return uniquePrefix + ++idCounters.obj;\n   }\n  };\n }\n Page.prototype = {\n  getPageProp: function Page_getPageProp(key) {\n   return this.pageDict.get(key);\n  },\n  getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n   var dict = this.pageDict, valueArray = null, loopCount = 0;\n   var MAX_LOOP_COUNT = 100;\n   getArray = getArray || false;\n   while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value) {\n     if (!valueArray) {\n      valueArray = [];\n     }\n     valueArray.push(value);\n    }\n    if (++loopCount > MAX_LOOP_COUNT) {\n     warn('Page_getInheritedPageProp: maximum loop count exceeded.');\n     break;\n    }\n    dict = dict.get('Parent');\n   }\n   if (!valueArray) {\n    return Dict.empty;\n   }\n   if (valueArray.length === 1 || !isDict(valueArray[0]) || loopCount > MAX_LOOP_COUNT) {\n    return valueArray[0];\n   }\n   return Dict.merge(this.xref, valueArray);\n  },\n  get content() {\n   return this.getPageProp('Contents');\n  },\n  get resources() {\n   return shadow(this, 'resources', this.getInheritedPageProp('Resources'));\n  },\n  get mediaBox() {\n   var mediaBox = this.getInheritedPageProp('MediaBox', true);\n   if (!isArray(mediaBox) || mediaBox.length !== 4) {\n    return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n   }\n   return shadow(this, 'mediaBox', mediaBox);\n  },\n  get cropBox() {\n   var cropBox = this.getInheritedPageProp('CropBox', true);\n   if (!isArray(cropBox) || cropBox.length !== 4) {\n    return shadow(this, 'cropBox', this.mediaBox);\n   }\n   return shadow(this, 'cropBox', cropBox);\n  },\n  get userUnit() {\n   var obj = this.getPageProp('UserUnit');\n   if (!isNum(obj) || obj <= 0) {\n    obj = DEFAULT_USER_UNIT;\n   }\n   return shadow(this, 'userUnit', obj);\n  },\n  get view() {\n   var mediaBox = this.mediaBox, cropBox = this.cropBox;\n   if (mediaBox === cropBox) {\n    return shadow(this, 'view', mediaBox);\n   }\n   var intersection = Util.intersect(cropBox, mediaBox);\n   return shadow(this, 'view', intersection || mediaBox);\n  },\n  get rotate() {\n   var rotate = this.getInheritedPageProp('Rotate') || 0;\n   if (rotate % 90 !== 0) {\n    rotate = 0;\n   } else if (rotate >= 360) {\n    rotate = rotate % 360;\n   } else if (rotate < 0) {\n    rotate = (rotate % 360 + 360) % 360;\n   }\n   return shadow(this, 'rotate', rotate);\n  },\n  getContentStream: function Page_getContentStream() {\n   var content = this.content;\n   var stream;\n   if (isArray(content)) {\n    var xref = this.xref;\n    var i, n = content.length;\n    var streams = [];\n    for (i = 0; i < n; ++i) {\n     streams.push(xref.fetchIfRef(content[i]));\n    }\n    stream = new StreamsSequenceStream(streams);\n   } else if (isStream(content)) {\n    stream = content;\n   } else {\n    stream = new NullStream();\n   }\n   return stream;\n  },\n  loadResources: function Page_loadResources(keys) {\n   if (!this.resourcesPromise) {\n    this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n   }\n   return this.resourcesPromise.then(function resourceSuccess() {\n    var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n    return objectLoader.load();\n   }.bind(this));\n  },\n  getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.builtInCMapCache, this.evaluatorOptions);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   var pageListPromise = dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var opList = new OperatorList(intent, handler, self.pageIndex);\n    handler.send('StartRenderPage', {\n     transparency: partialEvaluator.hasBlendModes(self.resources),\n     pageIndex: self.pageIndex,\n     intent: intent\n    });\n    return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n     return opList;\n    });\n   });\n   var annotationsPromise = pdfManager.ensure(this, 'annotations');\n   return Promise.all([\n    pageListPromise,\n    annotationsPromise\n   ]).then(function (datas) {\n    var pageOpList = datas[0];\n    var annotations = datas[1];\n    if (annotations.length === 0) {\n     pageOpList.flush(true);\n     return pageOpList;\n    }\n    var annotationsReadyPromise = Annotation.appendToOperatorList(annotations, pageOpList, partialEvaluator, task, intent, renderInteractiveForms);\n    return annotationsReadyPromise.then(function () {\n     pageOpList.flush(true);\n     return pageOpList;\n    });\n   });\n  },\n  extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n   var handler = {\n    on: function nullHandlerOn() {\n    },\n    send: function nullHandlerSend() {\n    }\n   };\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'XObject',\n    'Font'\n   ]);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   return dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.builtInCMapCache, self.evaluatorOptions);\n    return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n   });\n  },\n  getAnnotationsData: function Page_getAnnotationsData(intent) {\n   var annotations = this.annotations;\n   var annotationsData = [];\n   for (var i = 0, n = annotations.length; i < n; ++i) {\n    if (intent) {\n     if (!(intent === 'display' && annotations[i].viewable) && !(intent === 'print' && annotations[i].printable)) {\n      continue;\n     }\n    }\n    annotationsData.push(annotations[i].data);\n   }\n   return annotationsData;\n  },\n  get annotations() {\n   var annotations = [];\n   var annotationRefs = this.getInheritedPageProp('Annots') || [];\n   var annotationFactory = new AnnotationFactory();\n   for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n    var annotationRef = annotationRefs[i];\n    var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n    if (annotation) {\n     annotations.push(annotation);\n    }\n   }\n   return shadow(this, 'annotations', annotations);\n  }\n };\n return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n var FINGERPRINT_FIRST_BYTES = 1024;\n var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n function PDFDocument(pdfManager, arg) {\n  var stream;\n  if (isStream(arg)) {\n   stream = arg;\n  } else if (isArrayBuffer(arg)) {\n   stream = new Stream(arg);\n  } else {\n   error('PDFDocument: Unknown argument type');\n  }\n  assert(stream.length > 0, 'stream must have data');\n  this.pdfManager = pdfManager;\n  this.stream = stream;\n  this.xref = new XRef(stream, pdfManager);\n }\n function find(stream, needle, limit, backwards) {\n  var pos = stream.pos;\n  var end = stream.end;\n  var strBuf = [];\n  if (pos + limit > end) {\n   limit = end - pos;\n  }\n  for (var n = 0; n < limit; ++n) {\n   strBuf.push(String.fromCharCode(stream.getByte()));\n  }\n  var str = strBuf.join('');\n  stream.pos = pos;\n  var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n  if (index === -1) {\n   return false;\n  }\n  stream.pos += index;\n  return true;\n }\n var DocumentInfoValidators = {\n  get entries() {\n   return shadow(this, 'entries', {\n    Title: isString,\n    Author: isString,\n    Subject: isString,\n    Keywords: isString,\n    Creator: isString,\n    Producer: isString,\n    CreationDate: isString,\n    ModDate: isString,\n    Trapped: isName\n   });\n  }\n };\n PDFDocument.prototype = {\n  parse: function PDFDocument_parse(recoveryMode) {\n   this.setup(recoveryMode);\n   var version = this.catalog.catDict.get('Version');\n   if (isName(version)) {\n    this.pdfFormatVersion = version.name;\n   }\n   try {\n    this.acroForm = this.catalog.catDict.get('AcroForm');\n    if (this.acroForm) {\n     this.xfa = this.acroForm.get('XFA');\n     var fields = this.acroForm.get('Fields');\n     if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n      this.acroForm = null;\n     }\n    }\n   } catch (ex) {\n    info('Something wrong with AcroForm entry');\n    this.acroForm = null;\n   }\n  },\n  get linearization() {\n   var linearization = null;\n   if (this.stream.length) {\n    try {\n     linearization = Linearization.create(this.stream);\n    } catch (err) {\n     if (err instanceof MissingDataException) {\n      throw err;\n     }\n     info(err);\n    }\n   }\n   return shadow(this, 'linearization', linearization);\n  },\n  get startXRef() {\n   var stream = this.stream;\n   var startXRef = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    stream.reset();\n    if (find(stream, 'endobj', 1024)) {\n     startXRef = stream.pos + 6;\n    }\n   } else {\n    var step = 1024;\n    var found = false, pos = stream.end;\n    while (!found && pos > 0) {\n     pos -= step - 'startxref'.length;\n     if (pos < 0) {\n      pos = 0;\n     }\n     stream.pos = pos;\n     found = find(stream, 'startxref', step, true);\n    }\n    if (found) {\n     stream.skip(9);\n     var ch;\n     do {\n      ch = stream.getByte();\n     } while (isSpace(ch));\n     var str = '';\n     while (ch >= 0x20 && ch <= 0x39) {\n      str += String.fromCharCode(ch);\n      ch = stream.getByte();\n     }\n     startXRef = parseInt(str, 10);\n     if (isNaN(startXRef)) {\n      startXRef = 0;\n     }\n    }\n   }\n   return shadow(this, 'startXRef', startXRef);\n  },\n  get mainXRefEntriesOffset() {\n   var mainXRefEntriesOffset = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n   }\n   return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n  },\n  checkHeader: function PDFDocument_checkHeader() {\n   var stream = this.stream;\n   stream.reset();\n   if (find(stream, '%PDF-', 1024)) {\n    stream.moveStart();\n    var MAX_VERSION_LENGTH = 12;\n    var version = '', ch;\n    while ((ch = stream.getByte()) > 0x20) {\n     if (version.length >= MAX_VERSION_LENGTH) {\n      break;\n     }\n     version += String.fromCharCode(ch);\n    }\n    if (!this.pdfFormatVersion) {\n     this.pdfFormatVersion = version.substring(5);\n    }\n    return;\n   }\n  },\n  parseStartXRef: function PDFDocument_parseStartXRef() {\n   var startXRef = this.startXRef;\n   this.xref.setStartXRef(startXRef);\n  },\n  setup: function PDFDocument_setup(recoveryMode) {\n   this.xref.parse(recoveryMode);\n   var self = this;\n   var pageFactory = {\n    createPage: function (pageIndex, dict, ref, fontCache, builtInCMapCache) {\n     return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache, builtInCMapCache);\n    }\n   };\n   this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n  },\n  get numPages() {\n   var linearization = this.linearization;\n   var num = linearization ? linearization.numPages : this.catalog.numPages;\n   return shadow(this, 'numPages', num);\n  },\n  get documentInfo() {\n   var docInfo = {\n    PDFFormatVersion: this.pdfFormatVersion,\n    IsAcroFormPresent: !!this.acroForm,\n    IsXFAPresent: !!this.xfa\n   };\n   var infoDict;\n   try {\n    infoDict = this.xref.trailer.get('Info');\n   } catch (err) {\n    info('The document information dictionary is invalid.');\n   }\n   if (infoDict) {\n    var validEntries = DocumentInfoValidators.entries;\n    for (var key in validEntries) {\n     if (infoDict.has(key)) {\n      var value = infoDict.get(key);\n      if (validEntries[key](value)) {\n       docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n      } else {\n       info('Bad value in document info for \"' + key + '\"');\n      }\n     }\n    }\n   }\n   return shadow(this, 'documentInfo', docInfo);\n  },\n  get fingerprint() {\n   var xref = this.xref, hash, fileID = '';\n   var idArray = xref.trailer.get('ID');\n   if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n    hash = stringToBytes(idArray[0]);\n   } else {\n    if (this.stream.ensureRange) {\n     this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n    }\n    hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n   }\n   for (var i = 0, n = hash.length; i < n; i++) {\n    var hex = hash[i].toString(16);\n    fileID += hex.length === 1 ? '0' + hex : hex;\n   }\n   return shadow(this, 'fingerprint', fileID);\n  },\n  getPage: function PDFDocument_getPage(pageIndex) {\n   return this.catalog.getPage(pageIndex);\n  },\n  cleanup: function PDFDocument_cleanup() {\n   return this.catalog.cleanup();\n  }\n };\n return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreCFFParser = __w_pdfjs_require__(10);\nvar Util = sharedUtil.Util;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar CFFParser = coreCFFParser.CFFParser;\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n function getLong(data, offset) {\n  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n }\n function getUshort(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n }\n function parseCmap(data, start, end) {\n  var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n  var format = getUshort(data, start + offset);\n  var ranges, p, i;\n  if (format === 4) {\n   getUshort(data, start + offset + 2);\n   var segCount = getUshort(data, start + offset + 6) >> 1;\n   p = start + offset + 14;\n   ranges = [];\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i] = { end: getUshort(data, p) };\n   }\n   p += 2;\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].start = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].idDelta = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    var idOffset = getUshort(data, p);\n    if (idOffset === 0) {\n     continue;\n    }\n    ranges[i].ids = [];\n    for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n     ranges[i].ids[j] = getUshort(data, p + idOffset);\n     idOffset += 2;\n    }\n   }\n   return ranges;\n  } else if (format === 12) {\n   getLong(data, start + offset + 4);\n   var groups = getLong(data, start + offset + 12);\n   p = start + offset + 16;\n   ranges = [];\n   for (i = 0; i < groups; i++) {\n    ranges.push({\n     start: getLong(data, p),\n     end: getLong(data, p + 4),\n     idDelta: getLong(data, p + 8) - getLong(data, p)\n    });\n    p += 12;\n   }\n   return ranges;\n  }\n  error('not supported cmap: ' + format);\n }\n function parseCff(data, start, end, seacAnalysisEnabled) {\n  var properties = {};\n  var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n  var cff = parser.parse();\n  return {\n   glyphs: cff.charStrings.objects,\n   subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n   gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n  };\n }\n function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n  var itemSize, itemDecode;\n  if (isGlyphLocationsLong) {\n   itemSize = 4;\n   itemDecode = function fontItemDecodeLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n   };\n  } else {\n   itemSize = 2;\n   itemDecode = function fontItemDecode(data, offset) {\n    return data[offset] << 9 | data[offset + 1] << 1;\n   };\n  }\n  var glyphs = [];\n  var startOffset = itemDecode(loca, 0);\n  for (var j = itemSize; j < loca.length; j += itemSize) {\n   var endOffset = itemDecode(loca, j);\n   glyphs.push(glyf.subarray(startOffset, endOffset));\n   startOffset = endOffset;\n  }\n  return glyphs;\n }\n function lookupCmap(ranges, unicode) {\n  var code = unicode.charCodeAt(0), gid = 0;\n  var l = 0, r = ranges.length - 1;\n  while (l < r) {\n   var c = l + r + 1 >> 1;\n   if (code < ranges[c].start) {\n    r = c - 1;\n   } else {\n    l = c;\n   }\n  }\n  if (ranges[l].start <= code && code <= ranges[l].end) {\n   gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n  }\n  return {\n   charCode: code,\n   glyphId: gid\n  };\n }\n function compileGlyf(code, cmds, font) {\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function quadraticCurveTo(xa, ya, x, y) {\n   cmds.push({\n    cmd: 'quadraticCurveTo',\n    args: [\n     xa,\n     ya,\n     x,\n     y\n    ]\n   });\n  }\n  var i = 0;\n  var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n  var flags;\n  var x = 0, y = 0;\n  i += 10;\n  if (numberOfContours < 0) {\n   do {\n    flags = code[i] << 8 | code[i + 1];\n    var glyphIndex = code[i + 2] << 8 | code[i + 3];\n    i += 4;\n    var arg1, arg2;\n    if (flags & 0x01) {\n     arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n     arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n     i += 4;\n    } else {\n     arg1 = code[i++];\n     arg2 = code[i++];\n    }\n    if (flags & 0x02) {\n     x = arg1;\n     y = arg2;\n    } else {\n     x = 0;\n     y = 0;\n    }\n    var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n    if (flags & 0x08) {\n     scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     i += 2;\n    } else if (flags & 0x40) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     i += 4;\n    } else if (flags & 0x80) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n     scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n     i += 8;\n    }\n    var subglyph = font.glyphs[glyphIndex];\n    if (subglyph) {\n     cmds.push({ cmd: 'save' });\n     cmds.push({\n      cmd: 'transform',\n      args: [\n       scaleX,\n       scale01,\n       scale10,\n       scaleY,\n       x,\n       y\n      ]\n     });\n     compileGlyf(subglyph, cmds, font);\n     cmds.push({ cmd: 'restore' });\n    }\n   } while (flags & 0x20);\n  } else {\n   var endPtsOfContours = [];\n   var j, jj;\n   for (j = 0; j < numberOfContours; j++) {\n    endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n    i += 2;\n   }\n   var instructionLength = code[i] << 8 | code[i + 1];\n   i += 2 + instructionLength;\n   var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n   var points = [];\n   while (points.length < numberOfPoints) {\n    flags = code[i++];\n    var repeat = 1;\n    if (flags & 0x08) {\n     repeat += code[i++];\n    }\n    while (repeat-- > 0) {\n     points.push({ flags: flags });\n    }\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x12) {\n    case 0x00:\n     x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x02:\n     x -= code[i++];\n     break;\n    case 0x12:\n     x += code[i++];\n     break;\n    }\n    points[j].x = x;\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x24) {\n    case 0x00:\n     y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x04:\n     y -= code[i++];\n     break;\n    case 0x24:\n     y += code[i++];\n     break;\n    }\n    points[j].y = y;\n   }\n   var startPoint = 0;\n   for (i = 0; i < numberOfContours; i++) {\n    var endPoint = endPtsOfContours[i];\n    var contour = points.slice(startPoint, endPoint + 1);\n    if (contour[0].flags & 1) {\n     contour.push(contour[0]);\n    } else if (contour[contour.length - 1].flags & 1) {\n     contour.unshift(contour[contour.length - 1]);\n    } else {\n     var p = {\n      flags: 1,\n      x: (contour[0].x + contour[contour.length - 1].x) / 2,\n      y: (contour[0].y + contour[contour.length - 1].y) / 2\n     };\n     contour.unshift(p);\n     contour.push(p);\n    }\n    moveTo(contour[0].x, contour[0].y);\n    for (j = 1, jj = contour.length; j < jj; j++) {\n     if (contour[j].flags & 1) {\n      lineTo(contour[j].x, contour[j].y);\n     } else if (contour[j + 1].flags & 1) {\n      quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n      j++;\n     } else {\n      quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n     }\n    }\n    startPoint = endPoint + 1;\n   }\n  }\n }\n function compileCharString(code, cmds, font) {\n  var stack = [];\n  var x = 0, y = 0;\n  var stems = 0;\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function bezierCurveTo(x1, y1, x2, y2, x, y) {\n   cmds.push({\n    cmd: 'bezierCurveTo',\n    args: [\n     x1,\n     y1,\n     x2,\n     y2,\n     x,\n     y\n    ]\n   });\n  }\n  function parse(code) {\n   var i = 0;\n   while (i < code.length) {\n    var stackClean = false;\n    var v = code[i++];\n    var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n    switch (v) {\n    case 1:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 3:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 4:\n     y += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 5:\n     while (stack.length > 0) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 6:\n     while (stack.length > 0) {\n      x += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 7:\n     while (stack.length > 0) {\n      y += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      x += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 8:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 10:\n     n = stack.pop() + font.subrsBias;\n     subrCode = font.subrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 11:\n     return;\n    case 12:\n     v = code[i++];\n     switch (v) {\n     case 34:\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y1 = y + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y, xb, y1, x, y1);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y, x, y);\n      break;\n     case 35:\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      stack.pop();\n      break;\n     case 36:\n      xa = x + stack.shift();\n      y1 = y + stack.shift();\n      xb = xa + stack.shift();\n      y2 = y1 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y2, x, y2);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y3 = y2 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y2, xb, y3, x, y);\n      break;\n     case 37:\n      var x0 = x, y0 = y;\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb;\n      if (Math.abs(x - x0) > Math.abs(y - y0)) {\n       x += stack.shift();\n      } else {\n       y += stack.shift();\n      }\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      break;\n     default:\n      error('unknown operator: 12 ' + v);\n     }\n     break;\n    case 14:\n     if (stack.length >= 4) {\n      var achar = stack.pop();\n      var bchar = stack.pop();\n      y = stack.pop();\n      x = stack.pop();\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n       cmd: 'translate',\n       args: [\n        x,\n        y\n       ]\n      });\n      var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n      cmds.push({ cmd: 'restore' });\n      cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n     }\n     return;\n    case 18:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 19:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 20:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 21:\n     y += stack.pop();\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 22:\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 23:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 24:\n     while (stack.length > 2) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     x += stack.shift();\n     y += stack.shift();\n     lineTo(x, y);\n     break;\n    case 25:\n     while (stack.length > 6) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     xa = x + stack.shift();\n     ya = y + stack.shift();\n     xb = xa + stack.shift();\n     yb = ya + stack.shift();\n     x = xb + stack.shift();\n     y = yb + stack.shift();\n     bezierCurveTo(xa, ya, xb, yb, x, y);\n     break;\n    case 26:\n     if (stack.length % 2) {\n      x += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 27:\n     if (stack.length % 2) {\n      y += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb;\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 28:\n     stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n     i += 2;\n     break;\n    case 29:\n     n = stack.pop() + font.gsubrsBias;\n     subrCode = font.gsubrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 30:\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 31:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    default:\n     if (v < 32) {\n      error('unknown operator: ' + v);\n     }\n     if (v < 247) {\n      stack.push(v - 139);\n     } else if (v < 251) {\n      stack.push((v - 247) * 256 + code[i++] + 108);\n     } else if (v < 255) {\n      stack.push(-(v - 251) * 256 - code[i++] - 108);\n     } else {\n      stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n      i += 4;\n     }\n     break;\n    }\n    if (stackClean) {\n     stack.length = 0;\n    }\n   }\n  }\n  parse(code);\n }\n var noop = '';\n function CompiledFont(fontMatrix) {\n  this.compiledGlyphs = Object.create(null);\n  this.compiledCharCodeToGlyphId = Object.create(null);\n  this.fontMatrix = fontMatrix;\n }\n CompiledFont.prototype = {\n  getPathJs: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   var fn = this.compiledGlyphs[cmap.glyphId];\n   if (!fn) {\n    fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n    this.compiledGlyphs[cmap.glyphId] = fn;\n   }\n   if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n    this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n   }\n   return fn;\n  },\n  compileGlyph: function (code) {\n   if (!code || code.length === 0 || code[0] === 14) {\n    return noop;\n   }\n   var cmds = [];\n   cmds.push({ cmd: 'save' });\n   cmds.push({\n    cmd: 'transform',\n    args: this.fontMatrix.slice()\n   });\n   cmds.push({\n    cmd: 'scale',\n    args: [\n     'size',\n     '-size'\n    ]\n   });\n   this.compileGlyphImpl(code, cmds);\n   cmds.push({ cmd: 'restore' });\n   return cmds;\n  },\n  compileGlyphImpl: function () {\n   error('Children classes should implement this.');\n  },\n  hasBuiltPath: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n  }\n };\n function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n  fontMatrix = fontMatrix || [\n   0.000488,\n   0,\n   0,\n   0.000488,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = glyphs;\n  this.cmap = cmap;\n }\n Util.inherit(TrueTypeCompiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileGlyf(code, cmds, this);\n  }\n });\n function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n  fontMatrix = fontMatrix || [\n   0.001,\n   0,\n   0,\n   0.001,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = cffInfo.glyphs;\n  this.gsubrs = cffInfo.gsubrs || [];\n  this.subrs = cffInfo.subrs || [];\n  this.cmap = cmap;\n  this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n  this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n  this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n }\n Util.inherit(Type2Compiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileCharString(code, cmds, this);\n  }\n });\n return {\n  create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n   var data = new Uint8Array(font.data);\n   var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n   var numTables = getUshort(data, 4);\n   for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n    var tag = bytesToString(data.subarray(p, p + 4));\n    var offset = getLong(data, p + 8);\n    var length = getLong(data, p + 12);\n    switch (tag) {\n    case 'cmap':\n     cmap = parseCmap(data, offset, offset + length);\n     break;\n    case 'glyf':\n     glyf = data.subarray(offset, offset + length);\n     break;\n    case 'loca':\n     loca = data.subarray(offset, offset + length);\n     break;\n    case 'head':\n     unitsPerEm = getUshort(data, offset + 18);\n     indexToLocFormat = getUshort(data, offset + 50);\n     break;\n    case 'CFF ':\n     cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n     break;\n    }\n   }\n   if (glyf) {\n    var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n     1 / unitsPerEm,\n     0,\n     0,\n     1 / unitsPerEm,\n     0,\n     0\n    ];\n    return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n   }\n   return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n  }\n };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreFontRenderer = __w_pdfjs_require__(25);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(16);\nvar coreUnicode = __w_pdfjs_require__(17);\nvar coreType1Parser = __w_pdfjs_require__(35);\nvar coreCFFParser = __w_pdfjs_require__(10);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar FontType = sharedUtil.FontType;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar string32 = sharedUtil.string32;\nvar warn = sharedUtil.warn;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\nvar FontRendererFactory = coreFontRenderer.FontRendererFactory;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\nvar getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\nvar getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\nvar getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\nvar mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar Type1Parser = coreType1Parser.Type1Parser;\nvar CFFStandardStrings = coreCFFParser.CFFStandardStrings;\nvar CFFParser = coreCFFParser.CFFParser;\nvar CFFCompiler = coreCFFParser.CFFCompiler;\nvar CFF = coreCFFParser.CFF;\nvar CFFHeader = coreCFFParser.CFFHeader;\nvar CFFTopDict = coreCFFParser.CFFTopDict;\nvar CFFPrivateDict = coreCFFParser.CFFPrivateDict;\nvar CFFStrings = coreCFFParser.CFFStrings;\nvar CFFIndex = coreCFFParser.CFFIndex;\nvar CFFCharset = coreCFFParser.CFFCharset;\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n FixedPitch: 1,\n Serif: 2,\n Symbolic: 4,\n Script: 8,\n Nonsymbolic: 32,\n Italic: 64,\n AllCap: 65536,\n SmallCap: 131072,\n ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = [\n '.notdef',\n '.null',\n 'nonmarkingreturn',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'nonbreakingspace',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'Lslash',\n 'lslash',\n 'Scaron',\n 'scaron',\n 'Zcaron',\n 'zcaron',\n 'brokenbar',\n 'Eth',\n 'eth',\n 'Yacute',\n 'yacute',\n 'Thorn',\n 'thorn',\n 'minus',\n 'multiply',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'onehalf',\n 'onequarter',\n 'threequarters',\n 'franc',\n 'Gbreve',\n 'gbreve',\n 'Idotaccent',\n 'Scedilla',\n 'scedilla',\n 'Cacute',\n 'cacute',\n 'Ccaron',\n 'ccaron',\n 'dcroat'\n];\nfunction adjustWidths(properties) {\n if (!properties.fontMatrix) {\n  return;\n }\n if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n  return;\n }\n var scale = 0.001 / properties.fontMatrix[0];\n var glyphsWidths = properties.widths;\n for (var glyph in glyphsWidths) {\n  glyphsWidths[glyph] *= scale;\n }\n properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n if (properties.hasIncludedToUnicodeMap) {\n  return;\n }\n if (properties.hasEncoding) {\n  return;\n }\n if (builtInEncoding === properties.defaultEncoding) {\n  return;\n }\n if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n  return;\n }\n var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n for (var charCode in builtInEncoding) {\n  var glyphName = builtInEncoding[charCode];\n  var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n  if (unicode !== -1) {\n   toUnicode[charCode] = String.fromCharCode(unicode);\n  }\n }\n properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n switch (type) {\n case 'Type1':\n  return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n case 'CIDFontType0':\n  return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n case 'OpenType':\n  return FontType.OPENTYPE;\n case 'TrueType':\n  return FontType.TRUETYPE;\n case 'CIDFontType2':\n  return FontType.CIDFONTTYPE2;\n case 'MMType1':\n  return FontType.MMTYPE1;\n case 'Type0':\n  return FontType.TYPE0;\n default:\n  return FontType.UNKNOWN;\n }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n if (glyphsUnicodeMap[name] !== undefined) {\n  return name;\n }\n var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n if (unicode !== -1) {\n  for (var key in glyphsUnicodeMap) {\n   if (glyphsUnicodeMap[key] === unicode) {\n    return key;\n   }\n  }\n }\n info('Unable to recover a standard glyph name for: ' + name);\n return name;\n}\nvar Glyph = function GlyphClosure() {\n function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  this.fontChar = fontChar;\n  this.unicode = unicode;\n  this.accent = accent;\n  this.width = width;\n  this.vmetric = vmetric;\n  this.operatorListId = operatorListId;\n  this.isSpace = isSpace;\n  this.isInFont = isInFont;\n }\n Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n };\n return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n function ToUnicodeMap(cmap) {\n  this._map = cmap;\n }\n ToUnicodeMap.prototype = {\n  get length() {\n   return this._map.length;\n  },\n  forEach: function (callback) {\n   for (var charCode in this._map) {\n    callback(charCode, this._map[charCode].charCodeAt(0));\n   }\n  },\n  has: function (i) {\n   return this._map[i] !== undefined;\n  },\n  get: function (i) {\n   return this._map[i];\n  },\n  charCodeOf: function (v) {\n   return this._map.indexOf(v);\n  },\n  amend: function (map) {\n   for (var charCode in map) {\n    this._map[charCode] = map[charCode];\n   }\n  }\n };\n return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n function IdentityToUnicodeMap(firstChar, lastChar) {\n  this.firstChar = firstChar;\n  this.lastChar = lastChar;\n }\n IdentityToUnicodeMap.prototype = {\n  get length() {\n   return this.lastChar + 1 - this.firstChar;\n  },\n  forEach: function (callback) {\n   for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n    callback(i, i);\n   }\n  },\n  has: function (i) {\n   return this.firstChar <= i && i <= this.lastChar;\n  },\n  get: function (i) {\n   if (this.firstChar <= i && i <= this.lastChar) {\n    return String.fromCharCode(i);\n   }\n   return undefined;\n  },\n  charCodeOf: function (v) {\n   return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n  },\n  amend: function (map) {\n   error('Should not call amend()');\n  }\n };\n return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n function writeInt16(dest, offset, num) {\n  dest[offset] = num >> 8 & 0xFF;\n  dest[offset + 1] = num & 0xFF;\n }\n function writeInt32(dest, offset, num) {\n  dest[offset] = num >> 24 & 0xFF;\n  dest[offset + 1] = num >> 16 & 0xFF;\n  dest[offset + 2] = num >> 8 & 0xFF;\n  dest[offset + 3] = num & 0xFF;\n }\n function writeData(dest, offset, data) {\n  var i, ii;\n  if (data instanceof Uint8Array) {\n   dest.set(data, offset);\n  } else if (typeof data === 'string') {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data.charCodeAt(i) & 0xFF;\n   }\n  } else {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data[i] & 0xFF;\n   }\n  }\n }\n function OpenTypeFileBuilder(sfnt) {\n  this.sfnt = sfnt;\n  this.tables = Object.create(null);\n }\n OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n  var maxPower2 = 1, log2 = 0;\n  while ((maxPower2 ^ entriesCount) > maxPower2) {\n   maxPower2 <<= 1;\n   log2++;\n  }\n  var searchRange = maxPower2 * entrySize;\n  return {\n   range: searchRange,\n   entry: log2,\n   rangeShift: entrySize * entriesCount - searchRange\n  };\n };\n var OTF_HEADER_SIZE = 12;\n var OTF_TABLE_ENTRY_SIZE = 16;\n OpenTypeFileBuilder.prototype = {\n  toArray: function OpenTypeFileBuilder_toArray() {\n   var sfnt = this.sfnt;\n   var tables = this.tables;\n   var tablesNames = Object.keys(tables);\n   tablesNames.sort();\n   var numTables = tablesNames.length;\n   var i, j, jj, table, tableName;\n   var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n   var tableOffsets = [offset];\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    var paddedLength = (table.length + 3 & ~3) >>> 0;\n    offset += paddedLength;\n    tableOffsets.push(offset);\n   }\n   var file = new Uint8Array(offset);\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    writeData(file, tableOffsets[i], table);\n   }\n   if (sfnt === 'true') {\n    sfnt = string32(0x00010000);\n   }\n   file[0] = sfnt.charCodeAt(0) & 0xFF;\n   file[1] = sfnt.charCodeAt(1) & 0xFF;\n   file[2] = sfnt.charCodeAt(2) & 0xFF;\n   file[3] = sfnt.charCodeAt(3) & 0xFF;\n   writeInt16(file, 4, numTables);\n   var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n   writeInt16(file, 6, searchParams.range);\n   writeInt16(file, 8, searchParams.entry);\n   writeInt16(file, 10, searchParams.rangeShift);\n   offset = OTF_HEADER_SIZE;\n   for (i = 0; i < numTables; i++) {\n    tableName = tablesNames[i];\n    file[offset] = tableName.charCodeAt(0) & 0xFF;\n    file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n    file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n    file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n    var checksum = 0;\n    for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n     var quad = readUint32(file, j);\n     checksum = checksum + quad >>> 0;\n    }\n    writeInt32(file, offset + 4, checksum);\n    writeInt32(file, offset + 8, tableOffsets[i]);\n    writeInt32(file, offset + 12, tables[tableName].length);\n    offset += OTF_TABLE_ENTRY_SIZE;\n   }\n   return file;\n  },\n  addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n   if (tag in this.tables) {\n    throw new Error('Table ' + tag + ' already exists');\n   }\n   this.tables[tag] = data;\n  }\n };\n return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([\n 0x0000,\n 0x0020,\n 0x007F,\n 0x00A1,\n 0x00AD,\n 0x00AE,\n 0x0600,\n 0x0780,\n 0x08A0,\n 0x10A0,\n 0x1780,\n 0x1800,\n 0x1C00,\n 0x1C50,\n 0x2000,\n 0x2010,\n 0x2011,\n 0x2012,\n 0x2028,\n 0x2030,\n 0x205F,\n 0x2070,\n 0x25CC,\n 0x25CD,\n 0x3000,\n 0x3001,\n 0xAA60,\n 0xAA80,\n 0xFFF0,\n 0x10000\n]);\nvar Font = function FontClosure() {\n function Font(name, file, properties) {\n  var charCode, glyphName, unicode;\n  this.name = name;\n  this.loadedName = properties.loadedName;\n  this.isType3Font = properties.isType3Font;\n  this.sizes = [];\n  this.missingFile = false;\n  this.glyphCache = Object.create(null);\n  this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n  this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n  var type = properties.type;\n  var subtype = properties.subtype;\n  this.type = type;\n  this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n  this.differences = properties.differences;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.composite = properties.composite;\n  this.wideChars = properties.wideChars;\n  this.cMap = properties.cMap;\n  this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n  this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n  this.fontMatrix = properties.fontMatrix;\n  this.bbox = properties.bbox;\n  this.toUnicode = properties.toUnicode;\n  this.toFontChar = [];\n  if (properties.type === 'Type3') {\n   for (charCode = 0; charCode < 256; charCode++) {\n    this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n   }\n   this.fontType = FontType.TYPE3;\n   return;\n  }\n  this.cidEncoding = properties.cidEncoding;\n  this.vertical = properties.vertical;\n  if (this.vertical) {\n   this.vmetrics = properties.vmetrics;\n   this.defaultVMetrics = properties.defaultVMetrics;\n  }\n  var glyphsUnicodeMap;\n  if (!file || file.isEmpty) {\n   if (file) {\n    warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n   }\n   this.missingFile = true;\n   var fontName = name.replace(/[,_]/g, '-');\n   var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n   var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n   fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n   this.bold = fontName.search(/bold/gi) !== -1;\n   this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n   this.black = name.search(/Black/g) !== -1;\n   this.remeasure = Object.keys(this.widths).length > 0;\n   if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n    var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n    var map = [];\n    for (charCode in GlyphMapForStandardFonts) {\n     map[+charCode] = GlyphMapForStandardFonts[charCode];\n    }\n    if (/Arial-?Black/i.test(name)) {\n     var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n     for (charCode in SupplementalGlyphMapForArialBlack) {\n      map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n     }\n    }\n    var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n    if (!isIdentityUnicode) {\n     this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n      map[+charCode] = unicodeCharCode;\n     });\n    }\n    this.toFontChar = map;\n    this.toUnicode = new ToUnicodeMap(map);\n   } else if (/Symbol/i.test(fontName)) {\n    this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n   } else if (/Dingbats/i.test(fontName)) {\n    if (/Wingdings/i.test(name)) {\n     warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n    }\n    this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n   } else if (isStandardFont) {\n    this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n   } else {\n    glyphsUnicodeMap = getGlyphsUnicode();\n    this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n     if (!this.composite) {\n      glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n      unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n      if (unicode !== -1) {\n       unicodeCharCode = unicode;\n      }\n     }\n     this.toFontChar[charCode] = unicodeCharCode;\n    }.bind(this));\n   }\n   this.loadedName = fontName.split('-')[0];\n   this.loading = false;\n   this.fontType = getFontType(type, subtype);\n   return;\n  }\n  if (subtype === 'Type1C') {\n   if (type !== 'Type1' && type !== 'MMType1') {\n    if (isTrueTypeFile(file)) {\n     subtype = 'TrueType';\n    } else {\n     type = 'Type1';\n    }\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   }\n  }\n  if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n   type = 'CIDFontType0';\n  }\n  if (subtype === 'OpenType') {\n   type = 'OpenType';\n  }\n  if (type === 'CIDFontType0') {\n   if (isType1File(file)) {\n    subtype = 'CIDFontType0';\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   } else {\n    subtype = 'CIDFontType0C';\n   }\n  }\n  var data;\n  switch (type) {\n  case 'MMType1':\n   info('MMType1 font (' + name + '), falling back to Type1.');\n  case 'Type1':\n  case 'CIDFontType0':\n   this.mimetype = 'font/opentype';\n   var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n   adjustWidths(properties);\n   data = this.convert(name, cff, properties);\n   break;\n  case 'OpenType':\n  case 'TrueType':\n  case 'CIDFontType2':\n   this.mimetype = 'font/opentype';\n   data = this.checkAndRepair(name, file, properties);\n   if (this.isOpenType) {\n    adjustWidths(properties);\n    type = 'OpenType';\n   }\n   break;\n  default:\n   error('Font ' + type + ' is not supported');\n   break;\n  }\n  this.data = data;\n  this.fontType = getFontType(type, subtype);\n  this.fontMatrix = properties.fontMatrix;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.toUnicode = properties.toUnicode;\n  this.encoding = properties.baseEncoding;\n  this.seacMap = properties.seacMap;\n  this.loading = true;\n }\n Font.getFontID = function () {\n  var ID = 1;\n  return function Font_getFontID() {\n   return String(ID++);\n  };\n }();\n function int16(b0, b1) {\n  return (b0 << 8) + b1;\n }\n function signedInt16(b0, b1) {\n  var value = (b0 << 8) + b1;\n  return value & 1 << 15 ? value - 0x10000 : value;\n }\n function int32(b0, b1, b2, b3) {\n  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n }\n function string16(value) {\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function safeString16(value) {\n  value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function isTrueTypeFile(file) {\n  var header = file.peekBytes(4);\n  return readUint32(header, 0) === 0x00010000;\n }\n function isOpenTypeFile(file) {\n  var header = file.peekBytes(4);\n  return bytesToString(header) === 'OTTO';\n }\n function isType1File(file) {\n  var header = file.peekBytes(2);\n  if (header[0] === 0x25 && header[1] === 0x21) {\n   return true;\n  }\n  if (header[0] === 0x80 && header[1] === 0x01) {\n   return true;\n  }\n  return false;\n }\n function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n  var toFontChar = [], unicode;\n  for (var i = 0, ii = encoding.length; i < ii; i++) {\n   unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[i] = unicode;\n   }\n  }\n  for (var charCode in differences) {\n   unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[+charCode] = unicode;\n   }\n  }\n  return toFontChar;\n }\n function isProblematicUnicodeLocation(code) {\n  var i = 0, j = ProblematicCharRanges.length - 1;\n  while (i < j) {\n   var c = i + j + 1 >> 1;\n   if (code < ProblematicCharRanges[c]) {\n    j = c - 1;\n   } else {\n    i = c;\n   }\n  }\n  return !(i & 1);\n }\n function adjustMapping(charCodeToGlyphId, properties) {\n  var toUnicode = properties.toUnicode;\n  var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n  var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n  var newMap = Object.create(null);\n  var toFontChar = [];\n  var usedFontCharCodes = [];\n  var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n  for (var originalCharCode in charCodeToGlyphId) {\n   originalCharCode |= 0;\n   var glyphId = charCodeToGlyphId[originalCharCode];\n   var fontCharCode = originalCharCode;\n   var hasUnicodeValue = false;\n   if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n    hasUnicodeValue = true;\n    var unicode = toUnicode.get(fontCharCode);\n    if (unicode.length === 1) {\n     fontCharCode = unicode.charCodeAt(0);\n    }\n   }\n   if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n    do {\n     fontCharCode = nextAvailableFontCharCode++;\n     if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n      fontCharCode = 0xF020;\n      nextAvailableFontCharCode = fontCharCode + 1;\n     }\n    } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n   }\n   newMap[fontCharCode] = glyphId;\n   toFontChar[originalCharCode] = fontCharCode;\n   usedFontCharCodes[fontCharCode] = true;\n  }\n  return {\n   toFontChar: toFontChar,\n   charCodeToGlyphId: newMap,\n   nextAvailableFontCharCode: nextAvailableFontCharCode\n  };\n }\n function getRanges(glyphs, numGlyphs) {\n  var codes = [];\n  for (var charCode in glyphs) {\n   if (glyphs[charCode] >= numGlyphs) {\n    continue;\n   }\n   codes.push({\n    fontCharCode: charCode | 0,\n    glyphId: glyphs[charCode]\n   });\n  }\n  codes.sort(function fontGetRangesSort(a, b) {\n   return a.fontCharCode - b.fontCharCode;\n  });\n  var ranges = [];\n  var length = codes.length;\n  for (var n = 0; n < length;) {\n   var start = codes[n].fontCharCode;\n   var codeIndices = [codes[n].glyphId];\n   ++n;\n   var end = start;\n   while (n < length && end + 1 === codes[n].fontCharCode) {\n    codeIndices.push(codes[n].glyphId);\n    ++end;\n    ++n;\n    if (end === 0xFFFF) {\n     break;\n    }\n   }\n   ranges.push([\n    start,\n    end,\n    codeIndices\n   ]);\n  }\n  return ranges;\n }\n function createCmapTable(glyphs, numGlyphs) {\n  var ranges = getRanges(glyphs, numGlyphs);\n  var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n  var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n  var i, ii, j, jj;\n  for (i = ranges.length - 1; i >= 0; --i) {\n   if (ranges[i][0] <= 0xFFFF) {\n    break;\n   }\n  }\n  var bmpLength = i + 1;\n  if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n   ranges[i][1] = 0xFFFE;\n  }\n  var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n  var segCount = bmpLength + trailingRangesCount;\n  var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n  var startCount = '';\n  var endCount = '';\n  var idDeltas = '';\n  var idRangeOffsets = '';\n  var glyphsIds = '';\n  var bias = 0;\n  var range, start, end, codes;\n  for (i = 0, ii = bmpLength; i < ii; i++) {\n   range = ranges[i];\n   start = range[0];\n   end = range[1];\n   startCount += string16(start);\n   endCount += string16(end);\n   codes = range[2];\n   var contiguous = true;\n   for (j = 1, jj = codes.length; j < jj; ++j) {\n    if (codes[j] !== codes[j - 1] + 1) {\n     contiguous = false;\n     break;\n    }\n   }\n   if (!contiguous) {\n    var offset = (segCount - i) * 2 + bias * 2;\n    bias += end - start + 1;\n    idDeltas += string16(0);\n    idRangeOffsets += string16(offset);\n    for (j = 0, jj = codes.length; j < jj; ++j) {\n     glyphsIds += string16(codes[j]);\n    }\n   } else {\n    var startCode = codes[0];\n    idDeltas += string16(startCode - start & 0xFFFF);\n    idRangeOffsets += string16(0);\n   }\n  }\n  if (trailingRangesCount > 0) {\n   endCount += '\\xFF\\xFF';\n   startCount += '\\xFF\\xFF';\n   idDeltas += '\\x00\\x01';\n   idRangeOffsets += '\\x00\\x00';\n  }\n  var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n  var format31012 = '';\n  var header31012 = '';\n  if (numTables > 1) {\n   cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n   format31012 = '';\n   for (i = 0, ii = ranges.length; i < ii; i++) {\n    range = ranges[i];\n    start = range[0];\n    codes = range[2];\n    var code = codes[0];\n    for (j = 1, jj = codes.length; j < jj; ++j) {\n     if (codes[j] !== codes[j - 1] + 1) {\n      end = range[0] + j - 1;\n      format31012 += string32(start) + string32(end) + string32(code);\n      start = end + 1;\n      code = codes[j];\n     }\n    }\n    format31012 += string32(start) + string32(range[1]) + string32(code);\n   }\n   header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n  }\n  return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n }\n function validateOS2Table(os2) {\n  var stream = new Stream(os2.data);\n  var version = stream.getUint16();\n  stream.getBytes(60);\n  var selection = stream.getUint16();\n  if (version < 4 && selection & 0x0300) {\n   return false;\n  }\n  var firstChar = stream.getUint16();\n  var lastChar = stream.getUint16();\n  if (firstChar > lastChar) {\n   return false;\n  }\n  stream.getBytes(6);\n  var usWinAscent = stream.getUint16();\n  if (usWinAscent === 0) {\n   return false;\n  }\n  os2.data[8] = os2.data[9] = 0;\n  return true;\n }\n function createOS2Table(properties, charstrings, override) {\n  override = override || {\n   unitsPerEm: 0,\n   yMax: 0,\n   yMin: 0,\n   ascent: 0,\n   descent: 0\n  };\n  var ulUnicodeRange1 = 0;\n  var ulUnicodeRange2 = 0;\n  var ulUnicodeRange3 = 0;\n  var ulUnicodeRange4 = 0;\n  var firstCharIndex = null;\n  var lastCharIndex = 0;\n  if (charstrings) {\n   for (var code in charstrings) {\n    code |= 0;\n    if (firstCharIndex > code || !firstCharIndex) {\n     firstCharIndex = code;\n    }\n    if (lastCharIndex < code) {\n     lastCharIndex = code;\n    }\n    var position = getUnicodeRangeFor(code);\n    if (position < 32) {\n     ulUnicodeRange1 |= 1 << position;\n    } else if (position < 64) {\n     ulUnicodeRange2 |= 1 << position - 32;\n    } else if (position < 96) {\n     ulUnicodeRange3 |= 1 << position - 64;\n    } else if (position < 123) {\n     ulUnicodeRange4 |= 1 << position - 96;\n    } else {\n     error('Unicode ranges Bits > 123 are reserved for internal usage');\n    }\n   }\n  } else {\n   firstCharIndex = 0;\n   lastCharIndex = 255;\n  }\n  var bbox = properties.bbox || [\n   0,\n   0,\n   0,\n   0\n  ];\n  var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n  var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n  var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n  var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n  if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n   typoDescent = -typoDescent;\n  }\n  var winAscent = override.yMax || typoAscent;\n  var winDescent = -override.yMin || -typoDescent;\n  return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n }\n function createPostTable(properties) {\n  var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n  return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n }\n function createNameTable(name, proto) {\n  if (!proto) {\n   proto = [\n    [],\n    []\n   ];\n  }\n  var strings = [\n   proto[0][0] || 'Original licence',\n   proto[0][1] || name,\n   proto[0][2] || 'Unknown',\n   proto[0][3] || 'uniqueID',\n   proto[0][4] || name,\n   proto[0][5] || 'Version 0.11',\n   proto[0][6] || '',\n   proto[0][7] || 'Unknown',\n   proto[0][8] || 'Unknown',\n   proto[0][9] || 'Unknown'\n  ];\n  var stringsUnicode = [];\n  var i, ii, j, jj, str;\n  for (i = 0, ii = strings.length; i < ii; i++) {\n   str = proto[1][i] || strings[i];\n   var strBufUnicode = [];\n   for (j = 0, jj = str.length; j < jj; j++) {\n    strBufUnicode.push(string16(str.charCodeAt(j)));\n   }\n   stringsUnicode.push(strBufUnicode.join(''));\n  }\n  var names = [\n   strings,\n   stringsUnicode\n  ];\n  var platforms = [\n   '\\x00\\x01',\n   '\\x00\\x03'\n  ];\n  var encodings = [\n   '\\x00\\x00',\n   '\\x00\\x01'\n  ];\n  var languages = [\n   '\\x00\\x00',\n   '\\x04\\x09'\n  ];\n  var namesRecordCount = strings.length * platforms.length;\n  var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n  var strOffset = 0;\n  for (i = 0, ii = platforms.length; i < ii; i++) {\n   var strs = names[i];\n   for (j = 0, jj = strs.length; j < jj; j++) {\n    str = strs[j];\n    var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n    nameTable += nameRecord;\n    strOffset += str.length;\n   }\n  }\n  nameTable += strings.join('') + stringsUnicode.join('');\n  return nameTable;\n }\n Font.prototype = {\n  name: null,\n  font: null,\n  mimetype: null,\n  encoding: null,\n  get renderer() {\n   var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n   return shadow(this, 'renderer', renderer);\n  },\n  exportData: function Font_exportData() {\n   var data = {};\n   for (var i in this) {\n    if (this.hasOwnProperty(i)) {\n     data[i] = this[i];\n    }\n   }\n   return data;\n  },\n  checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n   function readTableEntry(file) {\n    var tag = bytesToString(file.getBytes(4));\n    var checksum = file.getInt32() >>> 0;\n    var offset = file.getInt32() >>> 0;\n    var length = file.getInt32() >>> 0;\n    var previousPosition = file.pos;\n    file.pos = file.start ? file.start : 0;\n    file.skip(offset);\n    var data = file.getBytes(length);\n    file.pos = previousPosition;\n    if (tag === 'head') {\n     data[8] = data[9] = data[10] = data[11] = 0;\n     data[17] |= 0x20;\n    }\n    return {\n     tag: tag,\n     checksum: checksum,\n     length: length,\n     offset: offset,\n     data: data\n    };\n   }\n   function readOpenTypeHeader(ttf) {\n    return {\n     version: bytesToString(ttf.getBytes(4)),\n     numTables: ttf.getUint16(),\n     searchRange: ttf.getUint16(),\n     entrySelector: ttf.getUint16(),\n     rangeShift: ttf.getUint16()\n    };\n   }\n   function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n    if (!cmap) {\n     warn('No cmap table available.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var segment;\n    var start = (font.start ? font.start : 0) + cmap.offset;\n    font.pos = start;\n    font.getUint16();\n    var numTables = font.getUint16();\n    var potentialTable;\n    var canBreak = false;\n    for (var i = 0; i < numTables; i++) {\n     var platformId = font.getUint16();\n     var encodingId = font.getUint16();\n     var offset = font.getInt32() >>> 0;\n     var useTable = false;\n     if (platformId === 0 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 1 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n      useTable = true;\n      if (!isSymbolicFont) {\n       canBreak = true;\n      }\n     } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n      useTable = true;\n      canBreak = true;\n     }\n     if (useTable) {\n      potentialTable = {\n       platformId: platformId,\n       encodingId: encodingId,\n       offset: offset\n      };\n     }\n     if (canBreak) {\n      break;\n     }\n    }\n    if (potentialTable) {\n     font.pos = start + potentialTable.offset;\n    }\n    if (!potentialTable || font.peekByte() === -1) {\n     warn('Could not find a preferred cmap table.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var format = font.getUint16();\n    font.getUint16();\n    font.getUint16();\n    var hasShortCmap = false;\n    var mappings = [];\n    var j, glyphId;\n    if (format === 0) {\n     for (j = 0; j < 256; j++) {\n      var index = font.getByte();\n      if (!index) {\n       continue;\n      }\n      mappings.push({\n       charCode: j,\n       glyphId: index\n      });\n     }\n     hasShortCmap = true;\n    } else if (format === 4) {\n     var segCount = font.getUint16() >> 1;\n     font.getBytes(6);\n     var segIndex, segments = [];\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments.push({ end: font.getUint16() });\n     }\n     font.getUint16();\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].start = font.getUint16();\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].delta = font.getUint16();\n     }\n     var offsetsCount = 0;\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      var rangeOffset = font.getUint16();\n      if (!rangeOffset) {\n       segment.offsetIndex = -1;\n       continue;\n      }\n      var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n      segment.offsetIndex = offsetIndex;\n      offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n     }\n     var offsets = [];\n     for (j = 0; j < offsetsCount; j++) {\n      offsets.push(font.getUint16());\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      start = segment.start;\n      var end = segment.end;\n      var delta = segment.delta;\n      offsetIndex = segment.offsetIndex;\n      for (j = start; j <= end; j++) {\n       if (j === 0xFFFF) {\n        continue;\n       }\n       glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n       glyphId = glyphId + delta & 0xFFFF;\n       if (glyphId === 0) {\n        continue;\n       }\n       mappings.push({\n        charCode: j,\n        glyphId: glyphId\n       });\n      }\n     }\n    } else if (format === 6) {\n     var firstCode = font.getUint16();\n     var entryCount = font.getUint16();\n     for (j = 0; j < entryCount; j++) {\n      glyphId = font.getUint16();\n      var charCode = firstCode + j;\n      mappings.push({\n       charCode: charCode,\n       glyphId: glyphId\n      });\n     }\n    } else {\n     warn('cmap table has unsupported format: ' + format);\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    mappings.sort(function (a, b) {\n     return a.charCode - b.charCode;\n    });\n    for (i = 1; i < mappings.length; i++) {\n     if (mappings[i - 1].charCode === mappings[i].charCode) {\n      mappings.splice(i, 1);\n      i--;\n     }\n    }\n    return {\n     platformId: potentialTable.platformId,\n     encodingId: potentialTable.encodingId,\n     mappings: mappings,\n     hasShortCmap: hasShortCmap\n    };\n   }\n   function sanitizeMetrics(font, header, metrics, numGlyphs) {\n    if (!header) {\n     if (metrics) {\n      metrics.data = null;\n     }\n     return;\n    }\n    font.pos = (font.start ? font.start : 0) + header.offset;\n    font.pos += header.length - 2;\n    var numOfMetrics = font.getUint16();\n    if (numOfMetrics > numGlyphs) {\n     info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n     numOfMetrics = numGlyphs;\n     header.data[34] = (numOfMetrics & 0xff00) >> 8;\n     header.data[35] = numOfMetrics & 0x00ff;\n    }\n    var numOfSidebearings = numGlyphs - numOfMetrics;\n    var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n    if (numMissing > 0) {\n     var entries = new Uint8Array(metrics.length + numMissing * 2);\n     entries.set(metrics.data);\n     metrics.data = entries;\n    }\n   }\n   function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n    if (sourceEnd - sourceStart <= 12) {\n     return 0;\n    }\n    var glyf = source.subarray(sourceStart, sourceEnd);\n    var contoursCount = glyf[0] << 8 | glyf[1];\n    if (contoursCount & 0x8000) {\n     dest.set(glyf, destStart);\n     return glyf.length;\n    }\n    var i, j = 10, flagsCount = 0;\n    for (i = 0; i < contoursCount; i++) {\n     var endPoint = glyf[j] << 8 | glyf[j + 1];\n     flagsCount = endPoint + 1;\n     j += 2;\n    }\n    var instructionsStart = j;\n    var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n    j += 2 + instructionsLength;\n    var instructionsEnd = j;\n    var coordinatesLength = 0;\n    for (i = 0; i < flagsCount; i++) {\n     var flag = glyf[j++];\n     if (flag & 0xC0) {\n      glyf[j - 1] = flag & 0x3F;\n     }\n     var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n     coordinatesLength += xyLength;\n     if (flag & 8) {\n      var repeat = glyf[j++];\n      i += repeat;\n      coordinatesLength += repeat * xyLength;\n     }\n    }\n    if (coordinatesLength === 0) {\n     return 0;\n    }\n    var glyphDataLength = j + coordinatesLength;\n    if (glyphDataLength > glyf.length) {\n     return 0;\n    }\n    if (!hintsValid && instructionsLength > 0) {\n     dest.set(glyf.subarray(0, instructionsStart), destStart);\n     dest.set([\n      0,\n      0\n     ], destStart + instructionsStart);\n     dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n     glyphDataLength -= instructionsLength;\n     if (glyf.length - glyphDataLength > 3) {\n      glyphDataLength = glyphDataLength + 3 & ~3;\n     }\n     return glyphDataLength;\n    }\n    if (glyf.length - glyphDataLength > 3) {\n     glyphDataLength = glyphDataLength + 3 & ~3;\n     dest.set(glyf.subarray(0, glyphDataLength), destStart);\n     return glyphDataLength;\n    }\n    dest.set(glyf, destStart);\n    return glyf.length;\n   }\n   function sanitizeHead(head, numGlyphs, locaLength) {\n    var data = head.data;\n    var version = int32(data[0], data[1], data[2], data[3]);\n    if (version >> 16 !== 1) {\n     info('Attempting to fix invalid version in head table: ' + version);\n     data[0] = 0;\n     data[1] = 1;\n     data[2] = 0;\n     data[3] = 0;\n    }\n    var indexToLocFormat = int16(data[50], data[51]);\n    if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n     info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n     var numGlyphsPlusOne = numGlyphs + 1;\n     if (locaLength === numGlyphsPlusOne << 1) {\n      data[50] = 0;\n      data[51] = 0;\n     } else if (locaLength === numGlyphsPlusOne << 2) {\n      data[50] = 0;\n      data[51] = 1;\n     } else {\n      warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n     }\n    }\n   }\n   function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n    var itemSize, itemDecode, itemEncode;\n    if (isGlyphLocationsLong) {\n     itemSize = 4;\n     itemDecode = function fontItemDecodeLong(data, offset) {\n      return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n     };\n     itemEncode = function fontItemEncodeLong(data, offset, value) {\n      data[offset] = value >>> 24 & 0xFF;\n      data[offset + 1] = value >> 16 & 0xFF;\n      data[offset + 2] = value >> 8 & 0xFF;\n      data[offset + 3] = value & 0xFF;\n     };\n    } else {\n     itemSize = 2;\n     itemDecode = function fontItemDecode(data, offset) {\n      return data[offset] << 9 | data[offset + 1] << 1;\n     };\n     itemEncode = function fontItemEncode(data, offset, value) {\n      data[offset] = value >> 9 & 0xFF;\n      data[offset + 1] = value >> 1 & 0xFF;\n     };\n    }\n    var locaData = loca.data;\n    var locaDataSize = itemSize * (1 + numGlyphs);\n    if (locaData.length !== locaDataSize) {\n     locaData = new Uint8Array(locaDataSize);\n     locaData.set(loca.data.subarray(0, locaDataSize));\n     loca.data = locaData;\n    }\n    var oldGlyfData = glyf.data;\n    var oldGlyfDataLength = oldGlyfData.length;\n    var newGlyfData = new Uint8Array(oldGlyfDataLength);\n    var startOffset = itemDecode(locaData, 0);\n    var writeOffset = 0;\n    var missingGlyphData = Object.create(null);\n    itemEncode(locaData, 0, writeOffset);\n    var i, j;\n    for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n     var endOffset = itemDecode(locaData, j);\n     if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n      endOffset = oldGlyfDataLength;\n     }\n     if (endOffset > oldGlyfDataLength) {\n      itemEncode(locaData, j, writeOffset);\n      startOffset = endOffset;\n      continue;\n     }\n     if (startOffset === endOffset) {\n      missingGlyphData[i] = true;\n     }\n     var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n     writeOffset += newLength;\n     itemEncode(locaData, j, writeOffset);\n     startOffset = endOffset;\n    }\n    if (writeOffset === 0) {\n     var simpleGlyph = new Uint8Array([\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      49,\n      0\n     ]);\n     for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n      itemEncode(locaData, j, simpleGlyph.length);\n     }\n     glyf.data = simpleGlyph;\n     return missingGlyphData;\n    }\n    if (dupFirstEntry) {\n     var firstEntryLength = itemDecode(locaData, itemSize);\n     if (newGlyfData.length > firstEntryLength + writeOffset) {\n      glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n     } else {\n      glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n      glyf.data.set(newGlyfData.subarray(0, writeOffset));\n     }\n     glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n     itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n    } else {\n     glyf.data = newGlyfData.subarray(0, writeOffset);\n    }\n    return missingGlyphData;\n   }\n   function readPostScriptTable(post, properties, maxpNumGlyphs) {\n    var start = (font.start ? font.start : 0) + post.offset;\n    font.pos = start;\n    var length = post.length, end = start + length;\n    var version = font.getInt32();\n    font.getBytes(28);\n    var glyphNames;\n    var valid = true;\n    var i;\n    switch (version) {\n    case 0x00010000:\n     glyphNames = MacStandardGlyphOrdering;\n     break;\n    case 0x00020000:\n     var numGlyphs = font.getUint16();\n     if (numGlyphs !== maxpNumGlyphs) {\n      valid = false;\n      break;\n     }\n     var glyphNameIndexes = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var index = font.getUint16();\n      if (index >= 32768) {\n       valid = false;\n       break;\n      }\n      glyphNameIndexes.push(index);\n     }\n     if (!valid) {\n      break;\n     }\n     var customNames = [];\n     var strBuf = [];\n     while (font.pos < end) {\n      var stringLength = font.getByte();\n      strBuf.length = stringLength;\n      for (i = 0; i < stringLength; ++i) {\n       strBuf[i] = String.fromCharCode(font.getByte());\n      }\n      customNames.push(strBuf.join(''));\n     }\n     glyphNames = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var j = glyphNameIndexes[i];\n      if (j < 258) {\n       glyphNames.push(MacStandardGlyphOrdering[j]);\n       continue;\n      }\n      glyphNames.push(customNames[j - 258]);\n     }\n     break;\n    case 0x00030000:\n     break;\n    default:\n     warn('Unknown/unsupported post table version ' + version);\n     valid = false;\n     if (properties.defaultEncoding) {\n      glyphNames = properties.defaultEncoding;\n     }\n     break;\n    }\n    properties.glyphNames = glyphNames;\n    return valid;\n   }\n   function readNameTable(nameTable) {\n    var start = (font.start ? font.start : 0) + nameTable.offset;\n    font.pos = start;\n    var names = [\n     [],\n     []\n    ];\n    var length = nameTable.length, end = start + length;\n    var format = font.getUint16();\n    var FORMAT_0_HEADER_LENGTH = 6;\n    if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n     return names;\n    }\n    var numRecords = font.getUint16();\n    var stringsStart = font.getUint16();\n    var records = [];\n    var NAME_RECORD_LENGTH = 12;\n    var i, ii;\n    for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n     var r = {\n      platform: font.getUint16(),\n      encoding: font.getUint16(),\n      language: font.getUint16(),\n      name: font.getUint16(),\n      length: font.getUint16(),\n      offset: font.getUint16()\n     };\n     if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n      records.push(r);\n     }\n    }\n    for (i = 0, ii = records.length; i < ii; i++) {\n     var record = records[i];\n     if (record.length <= 0) {\n      continue;\n     }\n     var pos = start + stringsStart + record.offset;\n     if (pos + record.length > end) {\n      continue;\n     }\n     font.pos = pos;\n     var nameIndex = record.name;\n     if (record.encoding) {\n      var str = '';\n      for (var j = 0, jj = record.length; j < jj; j += 2) {\n       str += String.fromCharCode(font.getUint16());\n      }\n      names[1][nameIndex] = str;\n     } else {\n      names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n     }\n    }\n    return names;\n   }\n   var TTOpsStackDeltas = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -2,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    -5,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    -999,\n    0,\n    1,\n    0,\n    -1,\n    -2,\n    0,\n    -1,\n    -2,\n    -1,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    0,\n    -999,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -2,\n    -999,\n    -2,\n    -2,\n    -999,\n    0,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    0,\n    -2,\n    0,\n    0,\n    0,\n    -2,\n    -1,\n    -1,\n    1,\n    1,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -999,\n    -999,\n    -999,\n    -999,\n    -999,\n    -1,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -999,\n    -2,\n    -2,\n    0,\n    0,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -2\n   ];\n   function sanitizeTTProgram(table, ttContext) {\n    var data = table.data;\n    var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n    var stack = [];\n    var callstack = [];\n    var functionsCalled = [];\n    var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n    var inFDEF = false, ifLevel = 0, inELSE = 0;\n    for (var ii = data.length; i < ii;) {\n     var op = data[i++];\n     if (op === 0x40) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if (op === 0x41) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB0) {\n      n = op - 0xB0 + 1;\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB8) {\n      n = op - 0xB8 + 1;\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n      if (!inFDEF && !inELSE) {\n       funcId = stack[stack.length - 1];\n       ttContext.functionsUsed[funcId] = true;\n       if (funcId in ttContext.functionsStackDeltas) {\n        stack.length += ttContext.functionsStackDeltas[funcId];\n       } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n        callstack.push({\n         data: data,\n         i: i,\n         stackTop: stack.length - 1\n        });\n        functionsCalled.push(funcId);\n        pc = ttContext.functionsDefined[funcId];\n        if (!pc) {\n         warn('TT: CALL non-existent function');\n         ttContext.hintsValid = false;\n         return;\n        }\n        data = pc.data;\n        i = pc.i;\n       }\n      }\n     } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested FDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n      funcId = stack.pop();\n      ttContext.functionsDefined[funcId] = {\n       data: data,\n       i: i\n      };\n     } else if (op === 0x2D) {\n      if (inFDEF) {\n       inFDEF = false;\n       lastEndf = i;\n      } else {\n       pc = callstack.pop();\n       if (!pc) {\n        warn('TT: ENDF bad stack');\n        ttContext.hintsValid = false;\n        return;\n       }\n       funcId = functionsCalled.pop();\n       data = pc.data;\n       i = pc.i;\n       ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n      }\n     } else if (op === 0x89) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested IDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n     } else if (op === 0x58) {\n      ++ifLevel;\n     } else if (op === 0x1B) {\n      inELSE = ifLevel;\n     } else if (op === 0x59) {\n      if (inELSE === ifLevel) {\n       inELSE = 0;\n      }\n      --ifLevel;\n     } else if (op === 0x1C) {\n      if (!inFDEF && !inELSE) {\n       var offset = stack[stack.length - 1];\n       if (offset > 0) {\n        i += offset - 1;\n       }\n      }\n     }\n     if (!inFDEF && !inELSE) {\n      var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n      if (op >= 0x71 && op <= 0x75) {\n       n = stack.pop();\n       if (!isNaN(n)) {\n        stackDelta = -n * 2;\n       }\n      }\n      while (stackDelta < 0 && stack.length > 0) {\n       stack.pop();\n       stackDelta++;\n      }\n      while (stackDelta > 0) {\n       stack.push(NaN);\n       stackDelta--;\n      }\n     }\n    }\n    ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n    var content = [data];\n    if (i > data.length) {\n     content.push(new Uint8Array(i - data.length));\n    }\n    if (lastDeff > lastEndf) {\n     warn('TT: complementing a missing function tail');\n     content.push(new Uint8Array([\n      0x22,\n      0x2D\n     ]));\n    }\n    foldTTTable(table, content);\n   }\n   function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n    if (ttContext.tooComplexToFollowFunctions) {\n     return;\n    }\n    if (ttContext.functionsDefined.length > maxFunctionDefs) {\n     warn('TT: more functions defined than expected');\n     ttContext.hintsValid = false;\n     return;\n    }\n    for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n     if (j > maxFunctionDefs) {\n      warn('TT: invalid function id: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n     if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n      warn('TT: undefined function: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n    }\n   }\n   function foldTTTable(table, content) {\n    if (content.length > 1) {\n     var newLength = 0;\n     var j, jj;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      newLength += content[j].length;\n     }\n     newLength = newLength + 3 & ~3;\n     var result = new Uint8Array(newLength);\n     var pos = 0;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      result.set(content[j], pos);\n      pos += content[j].length;\n     }\n     table.data = result;\n     table.length = newLength;\n    }\n   }\n   function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n    var ttContext = {\n     functionsDefined: [],\n     functionsUsed: [],\n     functionsStackDeltas: [],\n     tooComplexToFollowFunctions: false,\n     hintsValid: true\n    };\n    if (fpgm) {\n     sanitizeTTProgram(fpgm, ttContext);\n    }\n    if (prep) {\n     sanitizeTTProgram(prep, ttContext);\n    }\n    if (fpgm) {\n     checkInvalidFunctions(ttContext, maxFunctionDefs);\n    }\n    if (cvt && cvt.length & 1) {\n     var cvtData = new Uint8Array(cvt.length + 1);\n     cvtData.set(cvt.data);\n     cvt.data = cvtData;\n    }\n    return ttContext.hintsValid;\n   }\n   font = new Stream(new Uint8Array(font.getBytes()));\n   var VALID_TABLES = [\n    'OS/2',\n    'cmap',\n    'head',\n    'hhea',\n    'hmtx',\n    'maxp',\n    'name',\n    'post',\n    'loca',\n    'glyf',\n    'fpgm',\n    'prep',\n    'cvt ',\n    'CFF '\n   ];\n   var header = readOpenTypeHeader(font);\n   var numTables = header.numTables;\n   var cff, cffFile;\n   var tables = Object.create(null);\n   tables['OS/2'] = null;\n   tables['cmap'] = null;\n   tables['head'] = null;\n   tables['hhea'] = null;\n   tables['hmtx'] = null;\n   tables['maxp'] = null;\n   tables['name'] = null;\n   tables['post'] = null;\n   var table;\n   for (var i = 0; i < numTables; i++) {\n    table = readTableEntry(font);\n    if (VALID_TABLES.indexOf(table.tag) < 0) {\n     continue;\n    }\n    if (table.length === 0) {\n     continue;\n    }\n    tables[table.tag] = table;\n   }\n   var isTrueType = !tables['CFF '];\n   if (!isTrueType) {\n    if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n     cffFile = new Stream(tables['CFF '].data);\n     cff = new CFFFont(cffFile, properties);\n     adjustWidths(properties);\n     return this.convert(name, cff, properties);\n    }\n    delete tables['glyf'];\n    delete tables['loca'];\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n    this.isOpenType = true;\n   } else {\n    if (!tables['loca']) {\n     error('Required \"loca\" table is not found');\n    }\n    if (!tables['glyf']) {\n     warn('Required \"glyf\" table is not found -- trying to recover.');\n     tables['glyf'] = {\n      tag: 'glyf',\n      data: new Uint8Array(0)\n     };\n    }\n    this.isOpenType = false;\n   }\n   if (!tables['maxp']) {\n    error('Required \"maxp\" table is not found');\n   }\n   font.pos = (font.start || 0) + tables['maxp'].offset;\n   var version = font.getInt32();\n   var numGlyphs = font.getUint16();\n   var maxFunctionDefs = 0;\n   if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n    font.pos += 8;\n    var maxZones = font.getUint16();\n    if (maxZones > 2) {\n     tables['maxp'].data[14] = 0;\n     tables['maxp'].data[15] = 2;\n    }\n    font.pos += 4;\n    maxFunctionDefs = font.getUint16();\n   }\n   var dupFirstEntry = false;\n   if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n    dupFirstEntry = true;\n    numGlyphs++;\n    tables['maxp'].data[4] = numGlyphs >> 8;\n    tables['maxp'].data[5] = numGlyphs & 255;\n   }\n   var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n   if (!hintsValid) {\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n   }\n   sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n   if (!tables['head']) {\n    error('Required \"head\" table is not found');\n   }\n   sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n   var missingGlyphs = Object.create(null);\n   if (isTrueType) {\n    var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n    missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n   }\n   if (!tables['hhea']) {\n    error('Required \"hhea\" table is not found');\n   }\n   if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n    tables['hhea'].data[10] = 0xFF;\n    tables['hhea'].data[11] = 0xFF;\n   }\n   var metricsOverride = {\n    unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n    yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n    yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n    ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n    descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n   };\n   this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n   this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n   if (tables['post']) {\n    var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n    if (!valid) {\n     tables['post'] = null;\n    }\n   }\n   var charCodeToGlyphId = [], charCode;\n   var toUnicode = properties.toUnicode, widths = properties.widths;\n   var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n   function hasGlyph(glyphId, charCode, widthCode) {\n    if (!missingGlyphs[glyphId]) {\n     return true;\n    }\n    if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n     return true;\n    }\n    if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n     return true;\n    }\n    return false;\n   }\n   if (properties.composite) {\n    var cidToGidMap = properties.cidToGidMap || [];\n    var isCidToGidMapEmpty = cidToGidMap.length === 0;\n    properties.cMap.forEach(function (charCode, cid) {\n     assert(cid <= 0xffff, 'Max size of CID is 65,535');\n     var glyphId = -1;\n     if (isCidToGidMapEmpty) {\n      glyphId = cid;\n     } else if (cidToGidMap[cid] !== undefined) {\n      glyphId = cidToGidMap[cid];\n     }\n     if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    });\n    if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n     charCodeToGlyphId[0] = numGlyphs - 1;\n    }\n   } else {\n    var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n    var cmapPlatformId = cmapTable.platformId;\n    var cmapEncodingId = cmapTable.encodingId;\n    var cmapMappings = cmapTable.mappings;\n    var cmapMappingsLength = cmapMappings.length;\n    if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n     var baseEncoding = [];\n     if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n      baseEncoding = getEncoding(properties.baseEncodingName);\n     }\n     var glyphsUnicodeMap = getGlyphsUnicode();\n     for (charCode = 0; charCode < 256; charCode++) {\n      var glyphName, standardGlyphName;\n      if (this.differences && charCode in this.differences) {\n       glyphName = this.differences[charCode];\n      } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n       glyphName = baseEncoding[charCode];\n      } else {\n       glyphName = StandardEncoding[charCode];\n      }\n      if (!glyphName) {\n       continue;\n      }\n      standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n      var unicodeOrCharCode, isUnicode = false;\n      if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n       unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n       isUnicode = true;\n      } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n       unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n      }\n      var found = false;\n      for (i = 0; i < cmapMappingsLength; ++i) {\n       if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n        continue;\n       }\n       var code = isUnicode ? charCode : unicodeOrCharCode;\n       if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n        charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n        found = true;\n        break;\n       }\n      }\n      if (!found && properties.glyphNames) {\n       var glyphId = properties.glyphNames.indexOf(glyphName);\n       if (glyphId === -1 && standardGlyphName !== glyphName) {\n        glyphId = properties.glyphNames.indexOf(standardGlyphName);\n       }\n       if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n        charCodeToGlyphId[charCode] = glyphId;\n        found = true;\n       }\n      }\n      if (!found) {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n     }\n    } else {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCode = cmapMappings[i].charCode & 0xFF;\n      charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n     }\n    }\n   }\n   if (charCodeToGlyphId.length === 0) {\n    charCodeToGlyphId[0] = 0;\n   }\n   var newMapping = adjustMapping(charCodeToGlyphId, properties);\n   this.toFontChar = newMapping.toFontChar;\n   tables['cmap'] = {\n    tag: 'cmap',\n    data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n   };\n   if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n    tables['OS/2'] = {\n     tag: 'OS/2',\n     data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n    };\n   }\n   if (!tables['post']) {\n    tables['post'] = {\n     tag: 'post',\n     data: createPostTable(properties)\n    };\n   }\n   if (!isTrueType) {\n    try {\n     cffFile = new Stream(tables['CFF '].data);\n     var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n     cff = parser.parse();\n     var compiler = new CFFCompiler(cff);\n     tables['CFF '].data = compiler.compile();\n    } catch (e) {\n     warn('Failed to compile font ' + properties.loadedName);\n    }\n   }\n   if (!tables['name']) {\n    tables['name'] = {\n     tag: 'name',\n     data: createNameTable(this.name)\n    };\n   } else {\n    var namePrototype = readNameTable(tables['name']);\n    tables['name'].data = createNameTable(name, namePrototype);\n   }\n   var builder = new OpenTypeFileBuilder(header.version);\n   for (var tableTag in tables) {\n    builder.addTable(tableTag, tables[tableTag].data);\n   }\n   return builder.toArray();\n  },\n  convert: function Font_convert(fontName, font, properties) {\n   properties.fixedPitch = false;\n   if (properties.builtInEncoding) {\n    adjustToUnicode(properties, properties.builtInEncoding);\n   }\n   var mapping = font.getGlyphMapping(properties);\n   var newMapping = adjustMapping(mapping, properties);\n   this.toFontChar = newMapping.toFontChar;\n   var numGlyphs = font.numGlyphs;\n   function getCharCodes(charCodeToGlyphId, glyphId) {\n    var charCodes = null;\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      if (!charCodes) {\n       charCodes = [];\n      }\n      charCodes.push(charCode | 0);\n     }\n    }\n    return charCodes;\n   }\n   function createCharCode(charCodeToGlyphId, glyphId) {\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      return charCode | 0;\n     }\n    }\n    newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n    return newMapping.nextAvailableFontCharCode++;\n   }\n   var seacs = font.seacs;\n   if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n    var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n    var charset = font.getCharset();\n    var seacMap = Object.create(null);\n    for (var glyphId in seacs) {\n     glyphId |= 0;\n     var seac = seacs[glyphId];\n     var baseGlyphName = StandardEncoding[seac[2]];\n     var accentGlyphName = StandardEncoding[seac[3]];\n     var baseGlyphId = charset.indexOf(baseGlyphName);\n     var accentGlyphId = charset.indexOf(accentGlyphName);\n     if (baseGlyphId < 0 || accentGlyphId < 0) {\n      continue;\n     }\n     var accentOffset = {\n      x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n      y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n     };\n     var charCodes = getCharCodes(mapping, glyphId);\n     if (!charCodes) {\n      continue;\n     }\n     for (var i = 0, ii = charCodes.length; i < ii; i++) {\n      var charCode = charCodes[i];\n      var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n      var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n      var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n      seacMap[charCode] = {\n       baseFontCharCode: baseFontCharCode,\n       accentFontCharCode: accentFontCharCode,\n       accentOffset: accentOffset\n      };\n     }\n    }\n    properties.seacMap = seacMap;\n   }\n   var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n   var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n   builder.addTable('CFF ', font.data);\n   builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n   builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n   builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n   builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n   builder.addTable('hmtx', function fontFieldsHmtx() {\n    var charstrings = font.charstrings;\n    var cffWidths = font.cff ? font.cff.widths : null;\n    var hmtx = '\\x00\\x00\\x00\\x00';\n    for (var i = 1, ii = numGlyphs; i < ii; i++) {\n     var width = 0;\n     if (charstrings) {\n      var charstring = charstrings[i - 1];\n      width = 'width' in charstring ? charstring.width : 0;\n     } else if (cffWidths) {\n      width = Math.ceil(cffWidths[i] || 0);\n     }\n     hmtx += string16(width) + string16(0);\n    }\n    return hmtx;\n   }());\n   builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n   builder.addTable('name', createNameTable(fontName));\n   builder.addTable('post', createPostTable(properties));\n   return builder.toArray();\n  },\n  get spaceWidth() {\n   if ('_shadowWidth' in this) {\n    return this._shadowWidth;\n   }\n   var possibleSpaceReplacements = [\n    'space',\n    'minus',\n    'one',\n    'i',\n    'I'\n   ];\n   var width;\n   for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n    var glyphName = possibleSpaceReplacements[i];\n    if (glyphName in this.widths) {\n     width = this.widths[glyphName];\n     break;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    var glyphUnicode = glyphsUnicodeMap[glyphName];\n    var charcode = 0;\n    if (this.composite) {\n     if (this.cMap.contains(glyphUnicode)) {\n      charcode = this.cMap.lookup(glyphUnicode);\n     }\n    }\n    if (!charcode && this.toUnicode) {\n     charcode = this.toUnicode.charCodeOf(glyphUnicode);\n    }\n    if (charcode <= 0) {\n     charcode = glyphUnicode;\n    }\n    width = this.widths[charcode];\n    if (width) {\n     break;\n    }\n   }\n   width = width || this.defaultWidth;\n   this._shadowWidth = width;\n   return width;\n  },\n  charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n   var fontCharCode, width, operatorListId;\n   var widthCode = charcode;\n   if (this.cMap && this.cMap.contains(charcode)) {\n    widthCode = this.cMap.lookup(charcode);\n   }\n   width = this.widths[widthCode];\n   width = isNum(width) ? width : this.defaultWidth;\n   var vmetric = this.vmetrics && this.vmetrics[widthCode];\n   var unicode = this.toUnicode.get(charcode) || charcode;\n   if (typeof unicode === 'number') {\n    unicode = String.fromCharCode(unicode);\n   }\n   var isInFont = charcode in this.toFontChar;\n   fontCharCode = this.toFontChar[charcode] || charcode;\n   if (this.missingFile) {\n    fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n   }\n   if (this.isType3Font) {\n    operatorListId = fontCharCode;\n   }\n   var accent = null;\n   if (this.seacMap && this.seacMap[charcode]) {\n    isInFont = true;\n    var seac = this.seacMap[charcode];\n    fontCharCode = seac.baseFontCharCode;\n    accent = {\n     fontChar: String.fromCharCode(seac.accentFontCharCode),\n     offset: seac.accentOffset\n    };\n   }\n   var fontChar = String.fromCharCode(fontCharCode);\n   var glyph = this.glyphCache[charcode];\n   if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n    glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n    this.glyphCache[charcode] = glyph;\n   }\n   return glyph;\n  },\n  charsToGlyphs: function Font_charsToGlyphs(chars) {\n   var charsCache = this.charsCache;\n   var glyphs, glyph, charcode;\n   if (charsCache) {\n    glyphs = charsCache[chars];\n    if (glyphs) {\n     return glyphs;\n    }\n   }\n   if (!charsCache) {\n    charsCache = this.charsCache = Object.create(null);\n   }\n   glyphs = [];\n   var charsCacheKey = chars;\n   var i = 0, ii;\n   if (this.cMap) {\n    var c = Object.create(null);\n    while (i < chars.length) {\n     this.cMap.readCharCode(chars, i, c);\n     charcode = c.charcode;\n     var length = c.length;\n     i += length;\n     var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n     glyph = this.charToGlyph(charcode, isSpace);\n     glyphs.push(glyph);\n    }\n   } else {\n    for (i = 0, ii = chars.length; i < ii; ++i) {\n     charcode = chars.charCodeAt(i);\n     glyph = this.charToGlyph(charcode, charcode === 0x20);\n     glyphs.push(glyph);\n    }\n   }\n   return charsCache[charsCacheKey] = glyphs;\n  }\n };\n return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n function ErrorFont(error) {\n  this.error = error;\n  this.loadedName = 'g_font_error';\n  this.loading = false;\n }\n ErrorFont.prototype = {\n  charsToGlyphs: function ErrorFont_charsToGlyphs() {\n   return [];\n  },\n  exportData: function ErrorFont_exportData() {\n   return { error: this.error };\n  }\n };\n return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n var charCodeToGlyphId = Object.create(null);\n var glyphId, charCode, baseEncoding;\n var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n if (properties.baseEncodingName) {\n  baseEncoding = getEncoding(properties.baseEncodingName);\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n } else if (isSymbolicFont) {\n  for (charCode in builtInEncoding) {\n   charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n  }\n } else {\n  baseEncoding = StandardEncoding;\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n var differences = properties.differences, glyphsUnicodeMap;\n if (differences) {\n  for (charCode in differences) {\n   var glyphName = differences[charCode];\n   glyphId = glyphNames.indexOf(glyphName);\n   if (glyphId === -1) {\n    if (!glyphsUnicodeMap) {\n     glyphsUnicodeMap = getGlyphsUnicode();\n    }\n    var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n    if (standardGlyphName !== glyphName) {\n     glyphId = glyphNames.indexOf(standardGlyphName);\n    }\n   }\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n function findBlock(streamBytes, signature, startIndex) {\n  var streamBytesLength = streamBytes.length;\n  var signatureLength = signature.length;\n  var scanLength = streamBytesLength - signatureLength;\n  var i = startIndex, j, found = false;\n  while (i < scanLength) {\n   j = 0;\n   while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n    j++;\n   }\n   if (j >= signatureLength) {\n    i += j;\n    while (i < streamBytesLength && isSpace(streamBytes[i])) {\n     i++;\n    }\n    found = true;\n    break;\n   }\n   i++;\n  }\n  return {\n   found: found,\n   length: i\n  };\n }\n function getHeaderBlock(stream, suggestedLength) {\n  var EEXEC_SIGNATURE = [\n   0x65,\n   0x65,\n   0x78,\n   0x65,\n   0x63\n  ];\n  var streamStartPos = stream.pos;\n  var headerBytes, headerBytesLength, block;\n  try {\n   headerBytes = stream.getBytes(suggestedLength);\n   headerBytesLength = headerBytes.length;\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n  }\n  if (headerBytesLength === suggestedLength) {\n   block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n   if (block.found && block.length === suggestedLength) {\n    return {\n     stream: new Stream(headerBytes),\n     length: suggestedLength\n    };\n   }\n  }\n  warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n  stream.pos = streamStartPos;\n  var SCAN_BLOCK_LENGTH = 2048;\n  var actualLength;\n  while (true) {\n   var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n   block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n   if (block.length === 0) {\n    break;\n   }\n   stream.pos += block.length;\n   if (block.found) {\n    actualLength = stream.pos - streamStartPos;\n    break;\n   }\n  }\n  stream.pos = streamStartPos;\n  if (actualLength) {\n   return {\n    stream: new Stream(stream.getBytes(actualLength)),\n    length: actualLength\n   };\n  }\n  warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n  return {\n   stream: new Stream(stream.getBytes(suggestedLength)),\n   length: suggestedLength\n  };\n }\n function getEexecBlock(stream, suggestedLength) {\n  var eexecBytes = stream.getBytes();\n  return {\n   stream: new Stream(eexecBytes),\n   length: eexecBytes.length\n  };\n }\n function Type1Font(name, file, properties) {\n  var PFB_HEADER_SIZE = 6;\n  var headerBlockLength = properties.length1;\n  var eexecBlockLength = properties.length2;\n  var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n  var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n  if (pfbHeaderPresent) {\n   file.skip(PFB_HEADER_SIZE);\n   headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var headerBlock = getHeaderBlock(file, headerBlockLength);\n  headerBlockLength = headerBlock.length;\n  var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n  headerBlockParser.extractFontHeader(properties);\n  if (pfbHeaderPresent) {\n   pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n   eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var eexecBlock = getEexecBlock(file, eexecBlockLength);\n  eexecBlockLength = eexecBlock.length;\n  var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n  var data = eexecBlockParser.extractFontProgram();\n  for (var info in data.properties) {\n   properties[info] = data.properties[info];\n  }\n  var charstrings = data.charstrings;\n  var type2Charstrings = this.getType2Charstrings(charstrings);\n  var subrs = this.getType2Subrs(data.subrs);\n  this.charstrings = charstrings;\n  this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n  this.seacs = this.getSeacs(data.charstrings);\n }\n Type1Font.prototype = {\n  get numGlyphs() {\n   return this.charstrings.length + 1;\n  },\n  getCharset: function Type1Font_getCharset() {\n   var charset = ['.notdef'];\n   var charstrings = this.charstrings;\n   for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    charset.push(charstrings[glyphId].glyphName);\n   }\n   return charset;\n  },\n  getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n   var charstrings = this.charstrings;\n   var glyphNames = ['.notdef'], glyphId;\n   for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    glyphNames.push(charstrings[glyphId].glyphName);\n   }\n   var encoding = properties.builtInEncoding;\n   if (encoding) {\n    var builtInEncoding = Object.create(null);\n    for (var charCode in encoding) {\n     glyphId = glyphNames.indexOf(encoding[charCode]);\n     if (glyphId >= 0) {\n      builtInEncoding[charCode] = glyphId;\n     }\n    }\n   }\n   return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n  },\n  getSeacs: function Type1Font_getSeacs(charstrings) {\n   var i, ii;\n   var seacMap = [];\n   for (i = 0, ii = charstrings.length; i < ii; i++) {\n    var charstring = charstrings[i];\n    if (charstring.seac) {\n     seacMap[i + 1] = charstring.seac;\n    }\n   }\n   return seacMap;\n  },\n  getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n   var type2Charstrings = [];\n   for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n    type2Charstrings.push(type1Charstrings[i].charstring);\n   }\n   return type2Charstrings;\n  },\n  getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n   var bias = 0;\n   var count = type1Subrs.length;\n   if (count < 1133) {\n    bias = 107;\n   } else if (count < 33769) {\n    bias = 1131;\n   } else {\n    bias = 32768;\n   }\n   var type2Subrs = [];\n   var i;\n   for (i = 0; i < bias; i++) {\n    type2Subrs.push([0x0B]);\n   }\n   for (i = 0; i < count; i++) {\n    type2Subrs.push(type1Subrs[i]);\n   }\n   return type2Subrs;\n  },\n  wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n   var cff = new CFF();\n   cff.header = new CFFHeader(1, 0, 4, 4);\n   cff.names = [name];\n   var topDict = new CFFTopDict();\n   topDict.setByName('version', 391);\n   topDict.setByName('Notice', 392);\n   topDict.setByName('FullName', 393);\n   topDict.setByName('FamilyName', 394);\n   topDict.setByName('Weight', 395);\n   topDict.setByName('Encoding', null);\n   topDict.setByName('FontMatrix', properties.fontMatrix);\n   topDict.setByName('FontBBox', properties.bbox);\n   topDict.setByName('charset', null);\n   topDict.setByName('CharStrings', null);\n   topDict.setByName('Private', null);\n   cff.topDict = topDict;\n   var strings = new CFFStrings();\n   strings.add('Version 0.11');\n   strings.add('See original notice');\n   strings.add(name);\n   strings.add(name);\n   strings.add('Medium');\n   cff.strings = strings;\n   cff.globalSubrIndex = new CFFIndex();\n   var count = glyphs.length;\n   var charsetArray = [0];\n   var i, ii;\n   for (i = 0; i < count; i++) {\n    var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n    if (index === -1) {\n     index = 0;\n    }\n    charsetArray.push(index >> 8 & 0xff, index & 0xff);\n   }\n   cff.charset = new CFFCharset(false, 0, [], charsetArray);\n   var charStringsIndex = new CFFIndex();\n   charStringsIndex.add([\n    0x8B,\n    0x0E\n   ]);\n   for (i = 0; i < count; i++) {\n    var glyph = glyphs[i];\n    if (glyph.length === 0) {\n     charStringsIndex.add([\n      0x8B,\n      0x0E\n     ]);\n     continue;\n    }\n    charStringsIndex.add(glyph);\n   }\n   cff.charStrings = charStringsIndex;\n   var privateDict = new CFFPrivateDict();\n   privateDict.setByName('Subrs', null);\n   var fields = [\n    'BlueValues',\n    'OtherBlues',\n    'FamilyBlues',\n    'FamilyOtherBlues',\n    'StemSnapH',\n    'StemSnapV',\n    'BlueShift',\n    'BlueFuzz',\n    'BlueScale',\n    'LanguageGroup',\n    'ExpansionFactor',\n    'ForceBold',\n    'StdHW',\n    'StdVW'\n   ];\n   for (i = 0, ii = fields.length; i < ii; i++) {\n    var field = fields[i];\n    if (!(field in properties.privateData)) {\n     continue;\n    }\n    var value = properties.privateData[field];\n    if (isArray(value)) {\n     for (var j = value.length - 1; j > 0; j--) {\n      value[j] -= value[j - 1];\n     }\n    }\n    privateDict.setByName(field, value);\n   }\n   cff.topDict.privateDict = privateDict;\n   var subrIndex = new CFFIndex();\n   for (i = 0, ii = subrs.length; i < ii; i++) {\n    subrIndex.add(subrs[i]);\n   }\n   privateDict.subrsIndex = subrIndex;\n   var compiler = new CFFCompiler(cff);\n   return compiler.compile();\n  }\n };\n return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n function CFFFont(file, properties) {\n  this.properties = properties;\n  var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n  this.cff = parser.parse();\n  var compiler = new CFFCompiler(this.cff);\n  this.seacs = this.cff.seacs;\n  try {\n   this.data = compiler.compile();\n  } catch (e) {\n   warn('Failed to compile font ' + properties.loadedName);\n   this.data = file;\n  }\n }\n CFFFont.prototype = {\n  get numGlyphs() {\n   return this.cff.charStrings.count;\n  },\n  getCharset: function CFFFont_getCharset() {\n   return this.cff.charset.charset;\n  },\n  getGlyphMapping: function CFFFont_getGlyphMapping() {\n   var cff = this.cff;\n   var properties = this.properties;\n   var charsets = cff.charset.charset;\n   var charCodeToGlyphId;\n   var glyphId;\n   if (properties.composite) {\n    charCodeToGlyphId = Object.create(null);\n    if (cff.isCIDFont) {\n     for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n      var cid = charsets[glyphId];\n      var charCode = properties.cMap.charCodeOf(cid);\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    } else {\n     for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n      charCodeToGlyphId[glyphId] = glyphId;\n     }\n    }\n    return charCodeToGlyphId;\n   }\n   var encoding = cff.encoding ? cff.encoding.encoding : null;\n   charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n   return charCodeToGlyphId;\n  }\n };\n return CFFFont;\n}();\n(function checkSeacSupport() {\n if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n  SEAC_ANALYSIS_ENABLED = true;\n }\n}());\n(function checkChromeWindows() {\n if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n  SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n }\n}());\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreJpx = __w_pdfjs_require__(14);\nvar ImageKind = sharedUtil.ImageKind;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar warn = sharedUtil.warn;\nvar Name = corePrimitives.Name;\nvar isStream = corePrimitives.isStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxImage = coreJpx.JpxImage;\nvar PDFImage = function PDFImageClosure() {\n function handleImageData(image, nativeDecoder) {\n  if (nativeDecoder && nativeDecoder.canDecode(image)) {\n   return nativeDecoder.decode(image);\n  }\n  return Promise.resolve(image);\n }\n function decodeAndClamp(value, addend, coefficient, max) {\n  value = addend + value * coefficient;\n  return value < 0 ? 0 : value > max ? max : value;\n }\n function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n  var length = w2 * h2;\n  var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio);\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex];\n   }\n  }\n  return dest;\n }\n function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n  this.image = image;\n  var dict = image.dict;\n  if (dict.has('Filter')) {\n   var filter = dict.get('Filter').name;\n   if (filter === 'JPXDecode') {\n    var jpxImage = new JpxImage();\n    jpxImage.parseImageProperties(image.stream);\n    image.stream.reset();\n    image.bitsPerComponent = jpxImage.bitsPerComponent;\n    image.numComps = jpxImage.componentsCount;\n   } else if (filter === 'JBIG2Decode') {\n    image.bitsPerComponent = 1;\n    image.numComps = 1;\n   }\n  }\n  this.width = dict.get('Width', 'W');\n  this.height = dict.get('Height', 'H');\n  if (this.width < 1 || this.height < 1) {\n   error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n  }\n  this.interpolate = dict.get('Interpolate', 'I') || false;\n  this.imageMask = dict.get('ImageMask', 'IM') || false;\n  this.matte = dict.get('Matte') || false;\n  var bitsPerComponent = image.bitsPerComponent;\n  if (!bitsPerComponent) {\n   bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n   if (!bitsPerComponent) {\n    if (this.imageMask) {\n     bitsPerComponent = 1;\n    } else {\n     error('Bits per component missing in image: ' + this.imageMask);\n    }\n   }\n  }\n  this.bpc = bitsPerComponent;\n  if (!this.imageMask) {\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   if (!colorSpace) {\n    info('JPX images (which do not require color spaces)');\n    switch (image.numComps) {\n    case 1:\n     colorSpace = Name.get('DeviceGray');\n     break;\n    case 3:\n     colorSpace = Name.get('DeviceRGB');\n     break;\n    case 4:\n     colorSpace = Name.get('DeviceCMYK');\n     break;\n    default:\n     error('JPX images with ' + this.numComps + ' color components not supported.');\n    }\n   }\n   this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n   this.numComps = this.colorSpace.numComps;\n  }\n  this.decode = dict.getArray('Decode', 'D');\n  this.needsDecode = false;\n  if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n   this.needsDecode = true;\n   var max = (1 << bitsPerComponent) - 1;\n   this.decodeCoefficients = [];\n   this.decodeAddends = [];\n   for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n    var dmin = this.decode[i];\n    var dmax = this.decode[i + 1];\n    this.decodeCoefficients[j] = dmax - dmin;\n    this.decodeAddends[j] = max * dmin;\n   }\n  }\n  if (smask) {\n   this.smask = new PDFImage(xref, res, smask, false);\n  } else if (mask) {\n   if (isStream(mask)) {\n    var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n    if (!imageMask) {\n     warn('Ignoring /Mask in image without /ImageMask.');\n    } else {\n     this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n    }\n   } else {\n    this.mask = mask;\n   }\n  }\n }\n PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n  var imagePromise = handleImageData(image, nativeDecoder);\n  var smaskPromise;\n  var maskPromise;\n  var smask = image.dict.get('SMask');\n  var mask = image.dict.get('Mask');\n  if (smask) {\n   smaskPromise = handleImageData(smask, nativeDecoder);\n   maskPromise = Promise.resolve(null);\n  } else {\n   smaskPromise = Promise.resolve(null);\n   if (mask) {\n    if (isStream(mask)) {\n     maskPromise = handleImageData(mask, nativeDecoder);\n    } else if (isArray(mask)) {\n     maskPromise = Promise.resolve(mask);\n    } else {\n     warn('Unsupported mask format.');\n     maskPromise = Promise.resolve(null);\n    }\n   } else {\n    maskPromise = Promise.resolve(null);\n   }\n  }\n  return Promise.all([\n   imagePromise,\n   smaskPromise,\n   maskPromise\n  ]).then(function (results) {\n   var imageData = results[0];\n   var smaskData = results[1];\n   var maskData = results[2];\n   return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n  });\n };\n PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n  var computedLength = (width + 7 >> 3) * height;\n  var actualLength = imgArray.byteLength;\n  var haveFullData = computedLength === actualLength;\n  var data, i;\n  if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n   data = imgArray;\n  } else if (!inverseDecode) {\n   data = new Uint8Array(actualLength);\n   data.set(imgArray);\n  } else {\n   data = new Uint8Array(computedLength);\n   data.set(imgArray);\n   for (i = actualLength; i < computedLength; i++) {\n    data[i] = 0xff;\n   }\n  }\n  if (inverseDecode) {\n   for (i = 0; i < actualLength; i++) {\n    data[i] = ~data[i];\n   }\n  }\n  return {\n   data: data,\n   width: width,\n   height: height\n  };\n };\n PDFImage.prototype = {\n  get drawWidth() {\n   return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n  },\n  get drawHeight() {\n   return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n  },\n  decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n   var bpc = this.bpc;\n   var numComps = this.numComps;\n   var decodeAddends = this.decodeAddends;\n   var decodeCoefficients = this.decodeCoefficients;\n   var max = (1 << bpc) - 1;\n   var i, ii;\n   if (bpc === 1) {\n    for (i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = +!buffer[i];\n    }\n    return;\n   }\n   var index = 0;\n   for (i = 0, ii = this.width * this.height; i < ii; i++) {\n    for (var j = 0; j < numComps; j++) {\n     buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n     index++;\n    }\n   }\n  },\n  getComponents: function PDFImage_getComponents(buffer) {\n   var bpc = this.bpc;\n   if (bpc === 8) {\n    return buffer;\n   }\n   var width = this.width;\n   var height = this.height;\n   var numComps = this.numComps;\n   var length = width * height * numComps;\n   var bufferPos = 0;\n   var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n   var rowComps = width * numComps;\n   var max = (1 << bpc) - 1;\n   var i = 0, ii, buf;\n   if (bpc === 1) {\n    var mask, loop1End, loop2End;\n    for (var j = 0; j < height; j++) {\n     loop1End = i + (rowComps & ~7);\n     loop2End = i + rowComps;\n     while (i < loop1End) {\n      buf = buffer[bufferPos++];\n      output[i] = buf >> 7 & 1;\n      output[i + 1] = buf >> 6 & 1;\n      output[i + 2] = buf >> 5 & 1;\n      output[i + 3] = buf >> 4 & 1;\n      output[i + 4] = buf >> 3 & 1;\n      output[i + 5] = buf >> 2 & 1;\n      output[i + 6] = buf >> 1 & 1;\n      output[i + 7] = buf & 1;\n      i += 8;\n     }\n     if (i < loop2End) {\n      buf = buffer[bufferPos++];\n      mask = 128;\n      while (i < loop2End) {\n       output[i++] = +!!(buf & mask);\n       mask >>= 1;\n      }\n     }\n    }\n   } else {\n    var bits = 0;\n    buf = 0;\n    for (i = 0, ii = length; i < ii; ++i) {\n     if (i % rowComps === 0) {\n      buf = 0;\n      bits = 0;\n     }\n     while (bits < bpc) {\n      buf = buf << 8 | buffer[bufferPos++];\n      bits += 8;\n     }\n     var remainingBits = bits - bpc;\n     var value = buf >> remainingBits;\n     output[i] = value < 0 ? 0 : value > max ? max : value;\n     buf = buf & (1 << remainingBits) - 1;\n     bits = remainingBits;\n    }\n   }\n   return output;\n  },\n  fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n   var smask = this.smask;\n   var mask = this.mask;\n   var alphaBuf, sw, sh, i, ii, j;\n   if (smask) {\n    sw = smask.width;\n    sh = smask.height;\n    alphaBuf = new Uint8Array(sw * sh);\n    smask.fillGrayBuffer(alphaBuf);\n    if (sw !== width || sh !== height) {\n     alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n    }\n   } else if (mask) {\n    if (mask instanceof PDFImage) {\n     sw = mask.width;\n     sh = mask.height;\n     alphaBuf = new Uint8Array(sw * sh);\n     mask.numComps = 1;\n     mask.fillGrayBuffer(alphaBuf);\n     for (i = 0, ii = sw * sh; i < ii; ++i) {\n      alphaBuf[i] = 255 - alphaBuf[i];\n     }\n     if (sw !== width || sh !== height) {\n      alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n     }\n    } else if (isArray(mask)) {\n     alphaBuf = new Uint8Array(width * height);\n     var numComps = this.numComps;\n     for (i = 0, ii = width * height; i < ii; ++i) {\n      var opacity = 0;\n      var imageOffset = i * numComps;\n      for (j = 0; j < numComps; ++j) {\n       var color = image[imageOffset + j];\n       var maskOffset = j * 2;\n       if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n        opacity = 255;\n        break;\n       }\n      }\n      alphaBuf[i] = opacity;\n     }\n    } else {\n     error('Unknown mask format.');\n    }\n   }\n   if (alphaBuf) {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = alphaBuf[i];\n    }\n   } else {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = 255;\n    }\n   }\n  },\n  undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n   var matte = this.smask && this.smask.matte;\n   if (!matte) {\n    return;\n   }\n   var matteRgb = this.colorSpace.getRgb(matte, 0);\n   var matteR = matteRgb[0];\n   var matteG = matteRgb[1];\n   var matteB = matteRgb[2];\n   var length = width * height * 4;\n   var r, g, b;\n   for (var i = 0; i < length; i += 4) {\n    var alpha = buffer[i + 3];\n    if (alpha === 0) {\n     buffer[i] = 255;\n     buffer[i + 1] = 255;\n     buffer[i + 2] = 255;\n     continue;\n    }\n    var k = 255 / alpha;\n    r = (buffer[i] - matteR) * k + matteR;\n    g = (buffer[i + 1] - matteG) * k + matteG;\n    b = (buffer[i + 2] - matteB) * k + matteB;\n    buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n    buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n    buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n   }\n  },\n  createImageData: function PDFImage_createImageData(forceRGBA) {\n   var drawWidth = this.drawWidth;\n   var drawHeight = this.drawHeight;\n   var imgData = {\n    width: drawWidth,\n    height: drawHeight\n   };\n   var numComps = this.numComps;\n   var originalWidth = this.width;\n   var originalHeight = this.height;\n   var bpc = this.bpc;\n   var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n   var imgArray;\n   if (!forceRGBA) {\n    var kind;\n    if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n     kind = ImageKind.GRAYSCALE_1BPP;\n    } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n     kind = ImageKind.RGB_24BPP;\n    }\n    if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n     imgData.kind = kind;\n     imgArray = this.getImageBytes(originalHeight * rowBytes);\n     if (this.image instanceof DecodeStream) {\n      imgData.data = imgArray;\n     } else {\n      var newArray = new Uint8Array(imgArray.length);\n      newArray.set(imgArray);\n      imgData.data = newArray;\n     }\n     if (this.needsDecode) {\n      assert(kind === ImageKind.GRAYSCALE_1BPP);\n      var buffer = imgData.data;\n      for (var i = 0, ii = buffer.length; i < ii; i++) {\n       buffer[i] ^= 0xff;\n      }\n     }\n     return imgData;\n    }\n    if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n     imgData.kind = ImageKind.RGB_24BPP;\n     imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n     return imgData;\n    }\n   }\n   imgArray = this.getImageBytes(originalHeight * rowBytes);\n   var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n   var comps = this.getComponents(imgArray);\n   var alpha01, maybeUndoPreblend;\n   if (!forceRGBA && !this.smask && !this.mask) {\n    imgData.kind = ImageKind.RGB_24BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n    alpha01 = 0;\n    maybeUndoPreblend = false;\n   } else {\n    imgData.kind = ImageKind.RGBA_32BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n    alpha01 = 1;\n    maybeUndoPreblend = true;\n    this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n   if (maybeUndoPreblend) {\n    this.undoPreblend(imgData.data, drawWidth, actualHeight);\n   }\n   return imgData;\n  },\n  fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n   var numComps = this.numComps;\n   if (numComps !== 1) {\n    error('Reading gray scale from a color image: ' + numComps);\n   }\n   var width = this.width;\n   var height = this.height;\n   var bpc = this.bpc;\n   var rowBytes = width * numComps * bpc + 7 >> 3;\n   var imgArray = this.getImageBytes(height * rowBytes);\n   var comps = this.getComponents(imgArray);\n   var i, length;\n   if (bpc === 1) {\n    length = width * height;\n    if (this.needsDecode) {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = comps[i] - 1 & 255;\n     }\n    } else {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = -comps[i] & 255;\n     }\n    }\n    return;\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   length = width * height;\n   var scale = 255 / ((1 << bpc) - 1);\n   for (i = 0; i < length; ++i) {\n    buffer[i] = scale * comps[i] | 0;\n   }\n  },\n  getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n   this.image.reset();\n   this.image.drawWidth = drawWidth || this.width;\n   this.image.drawHeight = drawHeight || this.height;\n   this.image.forceRGB = !!forceRGB;\n   return this.image.getBytes(length);\n  }\n };\n return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(9);\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readInt8 = sharedUtil.readInt8;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar Jbig2Image = function Jbig2ImageClosure() {\n function ContextCache() {\n }\n ContextCache.prototype = {\n  getContexts: function (id) {\n   if (id in this) {\n    return this[id];\n   }\n   return this[id] = new Int8Array(1 << 16);\n  }\n };\n function DecodingContext(data, start, end) {\n  this.data = data;\n  this.start = start;\n  this.end = end;\n }\n DecodingContext.prototype = {\n  get decoder() {\n   var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n   return shadow(this, 'decoder', decoder);\n  },\n  get contextCache() {\n   var cache = new ContextCache();\n   return shadow(this, 'contextCache', cache);\n  }\n };\n function decodeInteger(contextCache, procedure, decoder) {\n  var contexts = contextCache.getContexts(procedure);\n  var prev = 1;\n  function readBits(length) {\n   var v = 0;\n   for (var i = 0; i < length; i++) {\n    var bit = decoder.readBit(contexts, prev);\n    prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n    v = v << 1 | bit;\n   }\n   return v >>> 0;\n  }\n  var sign = readBits(1);\n  var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n  return sign === 0 ? value : value > 0 ? -value : null;\n }\n function decodeIAID(contextCache, decoder, codeLength) {\n  var contexts = contextCache.getContexts('IAID');\n  var prev = 1;\n  for (var i = 0; i < codeLength; i++) {\n   var bit = decoder.readBit(contexts, prev);\n   prev = prev << 1 | bit;\n  }\n  if (codeLength < 31) {\n   return prev & (1 << codeLength) - 1;\n  }\n  return prev & 0x7FFFFFFF;\n }\n var SegmentTypes = [\n  'SymbolDictionary',\n  null,\n  null,\n  null,\n  'IntermediateTextRegion',\n  null,\n  'ImmediateTextRegion',\n  'ImmediateLosslessTextRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'patternDictionary',\n  null,\n  null,\n  null,\n  'IntermediateHalftoneRegion',\n  null,\n  'ImmediateHalftoneRegion',\n  'ImmediateLosslessHalftoneRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'IntermediateGenericRegion',\n  null,\n  'ImmediateGenericRegion',\n  'ImmediateLosslessGenericRegion',\n  'IntermediateGenericRefinementRegion',\n  null,\n  'ImmediateGenericRefinementRegion',\n  'ImmediateLosslessGenericRefinementRegion',\n  null,\n  null,\n  null,\n  null,\n  'PageInformation',\n  'EndOfPage',\n  'EndOfStripe',\n  'EndOfFile',\n  'Profiles',\n  'Tables',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'Extension'\n ];\n var CodingTemplates = [\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: 2,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -3,\n    y: -1\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ]\n ];\n var RefinementTemplates = [\n  {\n   coding: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: -1,\n     y: 1\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  },\n  {\n   coding: [\n    {\n     x: -1,\n     y: -1\n    },\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  }\n ];\n var ReusedContexts = [\n  0x9B25,\n  0x0795,\n  0x00E5,\n  0x0195\n ];\n var RefinementReusedContexts = [\n  0x0020,\n  0x0008\n ];\n function decodeBitmapTemplate0(width, height, decodingContext) {\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n  var OLD_PIXEL_MASK = 0x7BF7;\n  for (i = 0; i < height; i++) {\n   row = bitmap[i] = new Uint8Array(width);\n   row1 = i < 1 ? row : bitmap[i - 1];\n   row2 = i < 2 ? row : bitmap[i - 2];\n   contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n   for (j = 0; j < width; j++) {\n    row[j] = pixel = decoder.readBit(contexts, contextLabel);\n    contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n  if (mmr) {\n   error('JBIG2 error: MMR encoding is not supported');\n  }\n  if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n   return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n  var useskip = !!skip;\n  var template = CodingTemplates[templateIndex].concat(at);\n  template.sort(function (a, b) {\n   return a.y - b.y || a.x - b.x;\n  });\n  var templateLength = template.length;\n  var templateX = new Int8Array(templateLength);\n  var templateY = new Int8Array(templateLength);\n  var changingTemplateEntries = [];\n  var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n  var c, k;\n  for (k = 0; k < templateLength; k++) {\n   templateX[k] = template[k].x;\n   templateY[k] = template[k].y;\n   minX = Math.min(minX, template[k].x);\n   maxX = Math.max(maxX, template[k].x);\n   minY = Math.min(minY, template[k].y);\n   if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n    reuseMask |= 1 << templateLength - 1 - k;\n   } else {\n    changingTemplateEntries.push(k);\n   }\n  }\n  var changingEntriesLength = changingTemplateEntries.length;\n  var changingTemplateX = new Int8Array(changingEntriesLength);\n  var changingTemplateY = new Int8Array(changingEntriesLength);\n  var changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n   k = changingTemplateEntries[c];\n   changingTemplateX[c] = template[k].x;\n   changingTemplateY[c] = template[k].y;\n   changingTemplateBit[c] = 1 << templateLength - 1 - k;\n  }\n  var sbb_left = -minX;\n  var sbb_top = -minY;\n  var sbb_right = width - maxX;\n  var pseudoPixelContext = ReusedContexts[templateIndex];\n  var row = new Uint8Array(width);\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     bitmap.push(row);\n     continue;\n    }\n   }\n   row = new Uint8Array(row);\n   bitmap.push(row);\n   for (j = 0; j < width; j++) {\n    if (useskip && skip[i][j]) {\n     row[j] = 0;\n     continue;\n    }\n    if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n     contextLabel = contextLabel << 1 & reuseMask;\n     for (k = 0; k < changingEntriesLength; k++) {\n      i0 = i + changingTemplateY[k];\n      j0 = j + changingTemplateX[k];\n      bit = bitmap[i0][j0];\n      if (bit) {\n       bit = changingTemplateBit[k];\n       contextLabel |= bit;\n      }\n     }\n    } else {\n     contextLabel = 0;\n     shift = templateLength - 1;\n     for (k = 0; k < templateLength; k++, shift--) {\n      j0 = j + templateX[k];\n      if (j0 >= 0 && j0 < width) {\n       i0 = i + templateY[k];\n       if (i0 >= 0) {\n        bit = bitmap[i0][j0];\n        if (bit) {\n         contextLabel |= bit << shift;\n        }\n       }\n      }\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n  var codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n   codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  var codingTemplateLength = codingTemplate.length;\n  var codingTemplateX = new Int32Array(codingTemplateLength);\n  var codingTemplateY = new Int32Array(codingTemplateLength);\n  var k;\n  for (k = 0; k < codingTemplateLength; k++) {\n   codingTemplateX[k] = codingTemplate[k].x;\n   codingTemplateY[k] = codingTemplate[k].y;\n  }\n  var referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n   referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  var referenceTemplateLength = referenceTemplate.length;\n  var referenceTemplateX = new Int32Array(referenceTemplateLength);\n  var referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n   referenceTemplateX[k] = referenceTemplate[k].x;\n   referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  var referenceWidth = referenceBitmap[0].length;\n  var referenceHeight = referenceBitmap.length;\n  var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GR');\n  var ltp = 0;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     error('JBIG2 error: prediction is not supported');\n    }\n   }\n   var row = new Uint8Array(width);\n   bitmap.push(row);\n   for (var j = 0; j < width; j++) {\n    var i0, j0;\n    var contextLabel = 0;\n    for (k = 0; k < codingTemplateLength; k++) {\n     i0 = i + codingTemplateY[k];\n     j0 = j + codingTemplateX[k];\n     if (i0 < 0 || j0 < 0 || j0 >= width) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | bitmap[i0][j0];\n     }\n    }\n    for (k = 0; k < referenceTemplateLength; k++) {\n     i0 = i + referenceTemplateY[k] + offsetY;\n     j0 = j + referenceTemplateX[k] + offsetX;\n     if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var newSymbols = [];\n  var currentHeight = 0;\n  var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  while (newSymbols.length < numberOfNewSymbols) {\n   var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n   currentHeight += deltaHeight;\n   var currentWidth = 0;\n   while (true) {\n    var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n    if (deltaWidth === null) {\n     break;\n    }\n    currentWidth += deltaWidth;\n    var bitmap;\n    if (refinement) {\n     var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n     if (numberOfInstances > 1) {\n      bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n     } else {\n      var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n      var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n      var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n      var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n      bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n     }\n    } else {\n     bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n    }\n    newSymbols.push(bitmap);\n   }\n  }\n  var exportedSymbols = [];\n  var flags = [], currentFlag = false;\n  var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n   var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n   while (runLength--) {\n    flags.push(currentFlag);\n   }\n   currentFlag = !currentFlag;\n  }\n  for (var i = 0, ii = symbols.length; i < ii; i++) {\n   if (flags[i]) {\n    exportedSymbols.push(symbols[i]);\n   }\n  }\n  for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n   if (flags[i]) {\n    exportedSymbols.push(newSymbols[j]);\n   }\n  }\n  return exportedSymbols;\n }\n function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var bitmap = [];\n  var i, row;\n  for (i = 0; i < height; i++) {\n   row = new Uint8Array(width);\n   if (defaultPixelValue) {\n    for (var j = 0; j < width; j++) {\n     row[j] = defaultPixelValue;\n    }\n   }\n   bitmap.push(row);\n  }\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n  var firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n   var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n   stripT += deltaT;\n   var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n   firstS += deltaFirstS;\n   var currentS = firstS;\n   do {\n    var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n    var t = stripSize * stripT + currentT;\n    var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n    var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n    var symbolBitmap = inputSymbols[symbolId];\n    var symbolWidth = symbolBitmap[0].length;\n    var symbolHeight = symbolBitmap.length;\n    if (applyRefinement) {\n     var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n     var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n     var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n     var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n     symbolWidth += rdw;\n     symbolHeight += rdh;\n     symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n    }\n    var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n    var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n    var s2, t2, symbolRow;\n    if (transposed) {\n     for (s2 = 0; s2 < symbolHeight; s2++) {\n      row = bitmap[offsetS + s2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[s2];\n      var maxWidth = Math.min(width - offsetT, symbolWidth);\n      switch (combinationOperator) {\n      case 0:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] |= symbolRow[t2];\n       }\n       break;\n      case 2:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] ^= symbolRow[t2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolHeight - 1;\n    } else {\n     for (t2 = 0; t2 < symbolHeight; t2++) {\n      row = bitmap[offsetT + t2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[t2];\n      switch (combinationOperator) {\n      case 0:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] |= symbolRow[s2];\n       }\n       break;\n      case 2:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] ^= symbolRow[s2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolWidth - 1;\n    }\n    i++;\n    var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n    if (deltaS === null) {\n     break;\n    }\n    currentS += deltaS + dsOffset;\n   } while (true);\n  }\n  return bitmap;\n }\n function readSegmentHeader(data, start) {\n  var segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  var flags = data[start + 4];\n  var segmentType = flags & 0x3F;\n  if (!SegmentTypes[segmentType]) {\n   error('JBIG2 error: invalid segment type: ' + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n  var pageAssociationFieldSize = !!(flags & 0x40);\n  var referredFlags = data[start + 5];\n  var referredToCount = referredFlags >> 5 & 7;\n  var retainBits = [referredFlags & 31];\n  var position = start + 6;\n  if (referredFlags === 7) {\n   referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n   position += 3;\n   var bytes = referredToCount + 7 >> 3;\n   retainBits[0] = data[position++];\n   while (--bytes > 0) {\n    retainBits.push(data[position++]);\n   }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n   error('JBIG2 error: invalid referred-to flags');\n  }\n  segmentHeader.retainBits = retainBits;\n  var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n  var referredTo = [];\n  var i, ii;\n  for (i = 0; i < referredToCount; i++) {\n   var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n   referredTo.push(number);\n   position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n   segmentHeader.pageAssociation = data[position++];\n  } else {\n   segmentHeader.pageAssociation = readUint32(data, position);\n   position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n  if (segmentHeader.length === 0xFFFFFFFF) {\n   if (segmentType === 38) {\n    var genericRegionInfo = readRegionSegmentInformation(data, position);\n    var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n    var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n    var searchPatternLength = 6;\n    var searchPattern = new Uint8Array(searchPatternLength);\n    if (!genericRegionMmr) {\n     searchPattern[0] = 0xFF;\n     searchPattern[1] = 0xAC;\n    }\n    searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n    searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n    searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n    searchPattern[5] = genericRegionInfo.height & 0xFF;\n    for (i = position, ii = data.length; i < ii; i++) {\n     var j = 0;\n     while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n      j++;\n     }\n     if (j === searchPatternLength) {\n      segmentHeader.length = i + searchPatternLength;\n      break;\n     }\n    }\n    if (segmentHeader.length === 0xFFFFFFFF) {\n     error('JBIG2 error: segment end was not found');\n    }\n   } else {\n    error('JBIG2 error: invalid unknown segment length');\n   }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n }\n function readSegments(header, data, start, end) {\n  var segments = [];\n  var position = start;\n  while (position < end) {\n   var segmentHeader = readSegmentHeader(data, position);\n   position = segmentHeader.headerEnd;\n   var segment = {\n    header: segmentHeader,\n    data: data\n   };\n   if (!header.randomAccess) {\n    segment.start = position;\n    position += segmentHeader.length;\n    segment.end = position;\n   }\n   segments.push(segment);\n   if (segmentHeader.type === 51) {\n    break;\n   }\n  }\n  if (header.randomAccess) {\n   for (var i = 0, ii = segments.length; i < ii; i++) {\n    segments[i].start = position;\n    position += segments[i].header.length;\n    segments[i].end = position;\n   }\n  }\n  return segments;\n }\n function readRegionSegmentInformation(data, start) {\n  return {\n   width: readUint32(data, start),\n   height: readUint32(data, start + 4),\n   x: readUint32(data, start + 8),\n   y: readUint32(data, start + 12),\n   combinationOperator: data[start + 16] & 7\n  };\n }\n var RegionSegmentInformationFieldLength = 17;\n function processSegment(segment, visitor) {\n  var header = segment.header;\n  var data = segment.data, position = segment.start, end = segment.end;\n  var args, at, i, atLength;\n  switch (header.type) {\n  case 0:\n   var dictionary = {};\n   var dictionaryFlags = readUint16(data, position);\n   dictionary.huffman = !!(dictionaryFlags & 1);\n   dictionary.refinement = !!(dictionaryFlags & 2);\n   dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n   dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n   dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n   dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n   dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n   dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n   dictionary.template = dictionaryFlags >> 10 & 3;\n   dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n   position += 2;\n   if (!dictionary.huffman) {\n    atLength = dictionary.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.at = at;\n   }\n   if (dictionary.refinement && !dictionary.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.refinementAt = at;\n   }\n   dictionary.numberOfExportedSymbols = readUint32(data, position);\n   position += 4;\n   dictionary.numberOfNewSymbols = readUint32(data, position);\n   position += 4;\n   args = [\n    dictionary,\n    header.number,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 6:\n  case 7:\n   var textRegion = {};\n   textRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var textRegionSegmentFlags = readUint16(data, position);\n   position += 2;\n   textRegion.huffman = !!(textRegionSegmentFlags & 1);\n   textRegion.refinement = !!(textRegionSegmentFlags & 2);\n   textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n   textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n   textRegion.transposed = !!(textRegionSegmentFlags & 64);\n   textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n   textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n   textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n   textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n   if (textRegion.huffman) {\n    var textRegionHuffmanFlags = readUint16(data, position);\n    position += 2;\n    textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n    textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n    textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n    textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n    textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n    textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n    textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n    textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n   }\n   if (textRegion.refinement && !textRegion.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    textRegion.refinementAt = at;\n   }\n   textRegion.numberOfSymbolInstances = readUint32(data, position);\n   position += 4;\n   if (textRegion.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   args = [\n    textRegion,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 38:\n  case 39:\n   var genericRegion = {};\n   genericRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var genericRegionSegmentFlags = data[position++];\n   genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n   genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n   genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n   if (!genericRegion.mmr) {\n    atLength = genericRegion.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    genericRegion.at = at;\n   }\n   args = [\n    genericRegion,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 48:\n   var pageInfo = {\n    width: readUint32(data, position),\n    height: readUint32(data, position + 4),\n    resolutionX: readUint32(data, position + 8),\n    resolutionY: readUint32(data, position + 12)\n   };\n   if (pageInfo.height === 0xFFFFFFFF) {\n    delete pageInfo.height;\n   }\n   var pageSegmentFlags = data[position + 16];\n   readUint16(data, position + 17);\n   pageInfo.lossless = !!(pageSegmentFlags & 1);\n   pageInfo.refinement = !!(pageSegmentFlags & 2);\n   pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n   pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n   pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n   pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n   args = [pageInfo];\n   break;\n  case 49:\n   break;\n  case 50:\n   break;\n  case 51:\n   break;\n  case 62:\n   break;\n  default:\n   error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n  }\n  var callbackName = 'on' + header.typeName;\n  if (callbackName in visitor) {\n   visitor[callbackName].apply(visitor, args);\n  }\n }\n function processSegments(segments, visitor) {\n  for (var i = 0, ii = segments.length; i < ii; i++) {\n   processSegment(segments[i], visitor);\n  }\n }\n function parseJbig2(data, start, end) {\n  var position = start;\n  if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n   error('JBIG2 error: invalid header');\n  }\n  var header = {};\n  position += 8;\n  var flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n   header.numberOfPages = readUint32(data, position);\n   position += 4;\n  }\n  readSegments(header, data, position, end);\n  error('Not implemented');\n }\n function parseJbig2Chunks(chunks) {\n  var visitor = new SimpleSegmentVisitor();\n  for (var i = 0, ii = chunks.length; i < ii; i++) {\n   var chunk = chunks[i];\n   var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n   processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n }\n function SimpleSegmentVisitor() {\n }\n SimpleSegmentVisitor.prototype = {\n  onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n   this.currentPageInfo = info;\n   var rowSize = info.width + 7 >> 3;\n   var buffer = new Uint8Array(rowSize * info.height);\n   if (info.defaultPixelValue) {\n    for (var i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = 0xFF;\n    }\n   }\n   this.buffer = buffer;\n  },\n  drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n   var pageInfo = this.currentPageInfo;\n   var width = regionInfo.width, height = regionInfo.height;\n   var rowSize = pageInfo.width + 7 >> 3;\n   var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n   var buffer = this.buffer;\n   var mask0 = 128 >> (regionInfo.x & 7);\n   var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n   var i, j, mask, offset;\n   switch (combinationOperator) {\n   case 0:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] |= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   case 2:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] ^= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   default:\n    error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n   }\n  },\n  onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n   var regionInfo = region.info;\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n   this.onImmediateGenericRegion.apply(this, arguments);\n  },\n  onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n   var huffmanTables;\n   if (dictionary.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   var symbols = this.symbols;\n   if (!symbols) {\n    this.symbols = symbols = {};\n   }\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var decodingContext = new DecodingContext(data, start, end);\n   symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n  },\n  onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n   var regionInfo = region.info;\n   var huffmanTables;\n   var symbols = this.symbols;\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var symbolCodeLength = log2(inputSymbols.length);\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n   this.onImmediateTextRegion.apply(this, arguments);\n  }\n };\n function Jbig2Image() {\n }\n Jbig2Image.prototype = {\n  parseChunks: function Jbig2Image_parseChunks(chunks) {\n   return parseJbig2Chunks(chunks);\n  }\n };\n return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar error = sharedUtil.error;\nvar JpegImage = function JpegImageClosure() {\n var dctZigZag = new Uint8Array([\n  0,\n  1,\n  8,\n  16,\n  9,\n  2,\n  3,\n  10,\n  17,\n  24,\n  32,\n  25,\n  18,\n  11,\n  4,\n  5,\n  12,\n  19,\n  26,\n  33,\n  40,\n  48,\n  41,\n  34,\n  27,\n  20,\n  13,\n  6,\n  7,\n  14,\n  21,\n  28,\n  35,\n  42,\n  49,\n  56,\n  57,\n  50,\n  43,\n  36,\n  29,\n  22,\n  15,\n  23,\n  30,\n  37,\n  44,\n  51,\n  58,\n  59,\n  52,\n  45,\n  38,\n  31,\n  39,\n  46,\n  53,\n  60,\n  61,\n  54,\n  47,\n  55,\n  62,\n  63\n ]);\n var dctCos1 = 4017;\n var dctSin1 = 799;\n var dctCos3 = 3406;\n var dctSin3 = 2276;\n var dctCos6 = 1567;\n var dctSin6 = 3784;\n var dctSqrt2 = 5793;\n var dctSqrt1d2 = 2896;\n function JpegImage() {\n  this.decodeTransform = null;\n  this.colorTransform = -1;\n }\n function buildHuffmanTable(codeLengths, values) {\n  var k = 0, code = [], i, j, length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n   length--;\n  }\n  code.push({\n   children: [],\n   index: 0\n  });\n  var p = code[0], q;\n  for (i = 0; i < length; i++) {\n   for (j = 0; j < codeLengths[i]; j++) {\n    p = code.pop();\n    p.children[p.index] = values[k];\n    while (p.index > 0) {\n     p = code.pop();\n    }\n    p.index++;\n    code.push(p);\n    while (code.length <= i) {\n     code.push(q = {\n      children: [],\n      index: 0\n     });\n     p.children[p.index] = q.children;\n     p = q;\n    }\n    k++;\n   }\n   if (i + 1 < length) {\n    code.push(q = {\n     children: [],\n     index: 0\n    });\n    p.children[p.index] = q.children;\n    p = q;\n   }\n  }\n  return code[0].children;\n }\n function getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n }\n function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n  var mcusPerLine = frame.mcusPerLine;\n  var progressive = frame.progressive;\n  var startOffset = offset, bitsData = 0, bitsCount = 0;\n  function readBit() {\n   if (bitsCount > 0) {\n    bitsCount--;\n    return bitsData >> bitsCount & 1;\n   }\n   bitsData = data[offset++];\n   if (bitsData === 0xFF) {\n    var nextByte = data[offset++];\n    if (nextByte) {\n     error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n    }\n   }\n   bitsCount = 7;\n   return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n   var node = tree;\n   while (true) {\n    node = node[readBit()];\n    if (typeof node === 'number') {\n     return node;\n    }\n    if (typeof node !== 'object') {\n     error('JPEG error: invalid huffman sequence');\n    }\n   }\n  }\n  function receive(length) {\n   var n = 0;\n   while (length > 0) {\n    n = n << 1 | readBit();\n    length--;\n   }\n   return n;\n  }\n  function receiveAndExtend(length) {\n   if (length === 1) {\n    return readBit() === 1 ? 1 : -1;\n   }\n   var n = receive(length);\n   if (n >= 1 << length - 1) {\n    return n;\n   }\n   return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t);\n   component.blockData[offset] = component.pred += diff;\n   var k = 1;\n   while (k < 64) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s);\n    k++;\n   }\n  }\n  function decodeDCFirst(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n   component.blockData[offset] = component.pred += diff;\n  }\n  function decodeDCSuccessive(component, offset) {\n   component.blockData[offset] |= readBit() << successive;\n  }\n  var eobrun = 0;\n  function decodeACFirst(component, offset) {\n   if (eobrun > 0) {\n    eobrun--;\n    return;\n   }\n   var k = spectralStart, e = spectralEnd;\n   while (k <= e) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      eobrun = receive(r) + (1 << r) - 1;\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n    k++;\n   }\n  }\n  var successiveACState = 0, successiveACNextValue;\n  function decodeACSuccessive(component, offset) {\n   var k = spectralStart;\n   var e = spectralEnd;\n   var r = 0;\n   var s;\n   var rs;\n   while (k <= e) {\n    var z = dctZigZag[k];\n    switch (successiveACState) {\n    case 0:\n     rs = decodeHuffman(component.huffmanTableAC);\n     s = rs & 15;\n     r = rs >> 4;\n     if (s === 0) {\n      if (r < 15) {\n       eobrun = receive(r) + (1 << r);\n       successiveACState = 4;\n      } else {\n       r = 16;\n       successiveACState = 1;\n      }\n     } else {\n      if (s !== 1) {\n       error('JPEG error: invalid ACn encoding');\n      }\n      successiveACNextValue = receiveAndExtend(s);\n      successiveACState = r ? 2 : 3;\n     }\n     continue;\n    case 1:\n    case 2:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      r--;\n      if (r === 0) {\n       successiveACState = successiveACState === 2 ? 3 : 0;\n      }\n     }\n     break;\n    case 3:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      component.blockData[offset + z] = successiveACNextValue << successive;\n      successiveACState = 0;\n     }\n     break;\n    case 4:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     }\n     break;\n    }\n    k++;\n   }\n   if (successiveACState === 4) {\n    eobrun--;\n    if (eobrun === 0) {\n     successiveACState = 0;\n    }\n   }\n  }\n  function decodeMcu(component, decode, mcu, row, col) {\n   var mcuRow = mcu / mcusPerLine | 0;\n   var mcuCol = mcu % mcusPerLine;\n   var blockRow = mcuRow * component.v + row;\n   var blockCol = mcuCol * component.h + col;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  function decodeBlock(component, decode, mcu) {\n   var blockRow = mcu / component.blocksPerLine | 0;\n   var blockCol = mcu % component.blocksPerLine;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  var componentsLength = components.length;\n  var component, i, j, k, n;\n  var decodeFn;\n  if (progressive) {\n   if (spectralStart === 0) {\n    decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n   } else {\n    decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n   }\n  } else {\n   decodeFn = decodeBaseline;\n  }\n  var mcu = 0, marker;\n  var mcuExpected;\n  if (componentsLength === 1) {\n   mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n   mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n  if (!resetInterval) {\n   resetInterval = mcuExpected;\n  }\n  var h, v;\n  while (mcu < mcuExpected) {\n   for (i = 0; i < componentsLength; i++) {\n    components[i].pred = 0;\n   }\n   eobrun = 0;\n   if (componentsLength === 1) {\n    component = components[0];\n    for (n = 0; n < resetInterval; n++) {\n     decodeBlock(component, decodeFn, mcu);\n     mcu++;\n    }\n   } else {\n    for (n = 0; n < resetInterval; n++) {\n     for (i = 0; i < componentsLength; i++) {\n      component = components[i];\n      h = component.h;\n      v = component.v;\n      for (j = 0; j < v; j++) {\n       for (k = 0; k < h; k++) {\n        decodeMcu(component, decodeFn, mcu, j, k);\n       }\n      }\n     }\n     mcu++;\n    }\n   }\n   bitsCount = 0;\n   marker = data[offset] << 8 | data[offset + 1];\n   while (data[offset] === 0x00 && offset < data.length - 1) {\n    offset++;\n    marker = data[offset] << 8 | data[offset + 1];\n   }\n   if (marker <= 0xFF00) {\n    error('JPEG error: marker was not found');\n   }\n   if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n    offset += 2;\n   } else {\n    break;\n   }\n  }\n  return offset - startOffset;\n }\n function quantizeAndInverse(component, blockBufferOffset, p) {\n  var qt = component.quantizationTable, blockData = component.blockData;\n  var v0, v1, v2, v3, v4, v5, v6, v7;\n  var p0, p1, p2, p3, p4, p5, p6, p7;\n  var t;\n  if (!qt) {\n   error('JPEG error: missing required Quantization Table.');\n  }\n  for (var row = 0; row < 64; row += 8) {\n   p0 = blockData[blockBufferOffset + row];\n   p1 = blockData[blockBufferOffset + row + 1];\n   p2 = blockData[blockBufferOffset + row + 2];\n   p3 = blockData[blockBufferOffset + row + 3];\n   p4 = blockData[blockBufferOffset + row + 4];\n   p5 = blockData[blockBufferOffset + row + 5];\n   p6 = blockData[blockBufferOffset + row + 6];\n   p7 = blockData[blockBufferOffset + row + 7];\n   p0 *= qt[row];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 512 >> 10;\n    p[row] = t;\n    p[row + 1] = t;\n    p[row + 2] = t;\n    p[row + 3] = t;\n    p[row + 4] = t;\n    p[row + 5] = t;\n    p[row + 6] = t;\n    p[row + 7] = t;\n    continue;\n   }\n   p1 *= qt[row + 1];\n   p2 *= qt[row + 2];\n   p3 *= qt[row + 3];\n   p4 *= qt[row + 4];\n   p5 *= qt[row + 5];\n   p6 *= qt[row + 6];\n   p7 *= qt[row + 7];\n   v0 = dctSqrt2 * p0 + 128 >> 8;\n   v1 = dctSqrt2 * p4 + 128 >> 8;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n   v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n   v5 = p3 << 4;\n   v6 = p5 << 4;\n   v0 = v0 + v1 + 1 >> 1;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p[row] = v0 + v7;\n   p[row + 7] = v0 - v7;\n   p[row + 1] = v1 + v6;\n   p[row + 6] = v1 - v6;\n   p[row + 2] = v2 + v5;\n   p[row + 5] = v2 - v5;\n   p[row + 3] = v3 + v4;\n   p[row + 4] = v3 - v4;\n  }\n  for (var col = 0; col < 8; ++col) {\n   p0 = p[col];\n   p1 = p[col + 8];\n   p2 = p[col + 16];\n   p3 = p[col + 24];\n   p4 = p[col + 32];\n   p5 = p[col + 40];\n   p6 = p[col + 48];\n   p7 = p[col + 56];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 8192 >> 14;\n    t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n    blockData[blockBufferOffset + col] = t;\n    blockData[blockBufferOffset + col + 8] = t;\n    blockData[blockBufferOffset + col + 16] = t;\n    blockData[blockBufferOffset + col + 24] = t;\n    blockData[blockBufferOffset + col + 32] = t;\n    blockData[blockBufferOffset + col + 40] = t;\n    blockData[blockBufferOffset + col + 48] = t;\n    blockData[blockBufferOffset + col + 56] = t;\n    continue;\n   }\n   v0 = dctSqrt2 * p0 + 2048 >> 12;\n   v1 = dctSqrt2 * p4 + 2048 >> 12;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n   v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n   v5 = p3;\n   v6 = p5;\n   v0 = (v0 + v1 + 1 >> 1) + 4112;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p0 = v0 + v7;\n   p7 = v0 - v7;\n   p1 = v1 + v6;\n   p6 = v1 - v6;\n   p2 = v2 + v5;\n   p5 = v2 - v5;\n   p3 = v3 + v4;\n   p4 = v3 - v4;\n   p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n   p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n   p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n   p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n   p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n   p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n   p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n   p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n   blockData[blockBufferOffset + col] = p0;\n   blockData[blockBufferOffset + col + 8] = p1;\n   blockData[blockBufferOffset + col + 16] = p2;\n   blockData[blockBufferOffset + col + 24] = p3;\n   blockData[blockBufferOffset + col + 32] = p4;\n   blockData[blockBufferOffset + col + 40] = p5;\n   blockData[blockBufferOffset + col + 48] = p6;\n   blockData[blockBufferOffset + col + 56] = p7;\n  }\n }\n function buildComponentData(frame, component) {\n  var blocksPerLine = component.blocksPerLine;\n  var blocksPerColumn = component.blocksPerColumn;\n  var computationBuffer = new Int16Array(64);\n  for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n   for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n    var offset = getBlockBufferOffset(component, blockRow, blockCol);\n    quantizeAndInverse(component, offset, computationBuffer);\n   }\n  }\n  return component.blockData;\n }\n function clamp0to255(a) {\n  return a <= 0 ? 0 : a >= 255 ? 255 : a;\n }\n JpegImage.prototype = {\n  parse: function parse(data) {\n   function readUint16() {\n    var value = data[offset] << 8 | data[offset + 1];\n    offset += 2;\n    return value;\n   }\n   function readDataBlock() {\n    var length = readUint16();\n    var array = data.subarray(offset, offset + length - 2);\n    offset += array.length;\n    return array;\n   }\n   function prepareComponents(frame) {\n    var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n    var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n    for (var i = 0; i < frame.components.length; i++) {\n     component = frame.components[i];\n     var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n     var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n     var blocksPerLineForMcu = mcusPerLine * component.h;\n     var blocksPerColumnForMcu = mcusPerColumn * component.v;\n     var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n     component.blockData = new Int16Array(blocksBufferSize);\n     component.blocksPerLine = blocksPerLine;\n     component.blocksPerColumn = blocksPerColumn;\n    }\n    frame.mcusPerLine = mcusPerLine;\n    frame.mcusPerColumn = mcusPerColumn;\n   }\n   var offset = 0;\n   var jfif = null;\n   var adobe = null;\n   var frame, resetInterval;\n   var quantizationTables = [];\n   var huffmanTablesAC = [], huffmanTablesDC = [];\n   var fileMarker = readUint16();\n   if (fileMarker !== 0xFFD8) {\n    error('JPEG error: SOI not found');\n   }\n   fileMarker = readUint16();\n   while (fileMarker !== 0xFFD9) {\n    var i, j, l;\n    switch (fileMarker) {\n    case 0xFFE0:\n    case 0xFFE1:\n    case 0xFFE2:\n    case 0xFFE3:\n    case 0xFFE4:\n    case 0xFFE5:\n    case 0xFFE6:\n    case 0xFFE7:\n    case 0xFFE8:\n    case 0xFFE9:\n    case 0xFFEA:\n    case 0xFFEB:\n    case 0xFFEC:\n    case 0xFFED:\n    case 0xFFEE:\n    case 0xFFEF:\n    case 0xFFFE:\n     var appData = readDataBlock();\n     if (fileMarker === 0xFFE0) {\n      if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n       jfif = {\n        version: {\n         major: appData[5],\n         minor: appData[6]\n        },\n        densityUnits: appData[7],\n        xDensity: appData[8] << 8 | appData[9],\n        yDensity: appData[10] << 8 | appData[11],\n        thumbWidth: appData[12],\n        thumbHeight: appData[13],\n        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n       };\n      }\n     }\n     if (fileMarker === 0xFFEE) {\n      if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n       adobe = {\n        version: appData[5] << 8 | appData[6],\n        flags0: appData[7] << 8 | appData[8],\n        flags1: appData[9] << 8 | appData[10],\n        transformCode: appData[11]\n       };\n      }\n     }\n     break;\n    case 0xFFDB:\n     var quantizationTablesLength = readUint16();\n     var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n     var z;\n     while (offset < quantizationTablesEnd) {\n      var quantizationTableSpec = data[offset++];\n      var tableData = new Uint16Array(64);\n      if (quantizationTableSpec >> 4 === 0) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = data[offset++];\n       }\n      } else if (quantizationTableSpec >> 4 === 1) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = readUint16();\n       }\n      } else {\n       error('JPEG error: DQT - invalid table spec');\n      }\n      quantizationTables[quantizationTableSpec & 15] = tableData;\n     }\n     break;\n    case 0xFFC0:\n    case 0xFFC1:\n    case 0xFFC2:\n     if (frame) {\n      error('JPEG error: Only single frame JPEGs supported');\n     }\n     readUint16();\n     frame = {};\n     frame.extended = fileMarker === 0xFFC1;\n     frame.progressive = fileMarker === 0xFFC2;\n     frame.precision = data[offset++];\n     frame.scanLines = readUint16();\n     frame.samplesPerLine = readUint16();\n     frame.components = [];\n     frame.componentIds = {};\n     var componentsCount = data[offset++], componentId;\n     var maxH = 0, maxV = 0;\n     for (i = 0; i < componentsCount; i++) {\n      componentId = data[offset];\n      var h = data[offset + 1] >> 4;\n      var v = data[offset + 1] & 15;\n      if (maxH < h) {\n       maxH = h;\n      }\n      if (maxV < v) {\n       maxV = v;\n      }\n      var qId = data[offset + 2];\n      l = frame.components.push({\n       h: h,\n       v: v,\n       quantizationId: qId,\n       quantizationTable: null\n      });\n      frame.componentIds[componentId] = l - 1;\n      offset += 3;\n     }\n     frame.maxH = maxH;\n     frame.maxV = maxV;\n     prepareComponents(frame);\n     break;\n    case 0xFFC4:\n     var huffmanLength = readUint16();\n     for (i = 2; i < huffmanLength;) {\n      var huffmanTableSpec = data[offset++];\n      var codeLengths = new Uint8Array(16);\n      var codeLengthSum = 0;\n      for (j = 0; j < 16; j++, offset++) {\n       codeLengthSum += codeLengths[j] = data[offset];\n      }\n      var huffmanValues = new Uint8Array(codeLengthSum);\n      for (j = 0; j < codeLengthSum; j++, offset++) {\n       huffmanValues[j] = data[offset];\n      }\n      i += 17 + codeLengthSum;\n      (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n     }\n     break;\n    case 0xFFDD:\n     readUint16();\n     resetInterval = readUint16();\n     break;\n    case 0xFFDA:\n     readUint16();\n     var selectorsCount = data[offset++];\n     var components = [], component;\n     for (i = 0; i < selectorsCount; i++) {\n      var componentIndex = frame.componentIds[data[offset++]];\n      component = frame.components[componentIndex];\n      var tableSpec = data[offset++];\n      component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n      component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n      components.push(component);\n     }\n     var spectralStart = data[offset++];\n     var spectralEnd = data[offset++];\n     var successiveApproximation = data[offset++];\n     var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n     offset += processed;\n     break;\n    case 0xFFFF:\n     if (data[offset] !== 0xFF) {\n      offset--;\n     }\n     break;\n    default:\n     if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n      offset -= 3;\n      break;\n     }\n     error('JPEG error: unknown marker ' + fileMarker.toString(16));\n    }\n    fileMarker = readUint16();\n   }\n   this.width = frame.samplesPerLine;\n   this.height = frame.scanLines;\n   this.jfif = jfif;\n   this.adobe = adobe;\n   this.components = [];\n   for (i = 0; i < frame.components.length; i++) {\n    component = frame.components[i];\n    var quantizationTable = quantizationTables[component.quantizationId];\n    if (quantizationTable) {\n     component.quantizationTable = quantizationTable;\n    }\n    this.components.push({\n     output: buildComponentData(frame, component),\n     scaleX: component.h / frame.maxH,\n     scaleY: component.v / frame.maxV,\n     blocksPerLine: component.blocksPerLine,\n     blocksPerColumn: component.blocksPerColumn\n    });\n   }\n   this.numComponents = this.components.length;\n  },\n  _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n   var scaleX = this.width / width, scaleY = this.height / height;\n   var component, componentScaleX, componentScaleY, blocksPerScanline;\n   var x, y, i, j, k;\n   var index;\n   var offset = 0;\n   var output;\n   var numComponents = this.components.length;\n   var dataLength = width * height * numComponents;\n   var data = new Uint8Array(dataLength);\n   var xScaleBlockOffset = new Uint32Array(width);\n   var mask3LSB = 0xfffffff8;\n   for (i = 0; i < numComponents; i++) {\n    component = this.components[i];\n    componentScaleX = component.scaleX * scaleX;\n    componentScaleY = component.scaleY * scaleY;\n    offset = i;\n    output = component.output;\n    blocksPerScanline = component.blocksPerLine + 1 << 3;\n    for (x = 0; x < width; x++) {\n     j = 0 | x * componentScaleX;\n     xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n    }\n    for (y = 0; y < height; y++) {\n     j = 0 | y * componentScaleY;\n     index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n     for (x = 0; x < width; x++) {\n      data[offset] = output[index + xScaleBlockOffset[x]];\n      offset += numComponents;\n     }\n    }\n   }\n   var transform = this.decodeTransform;\n   if (transform) {\n    for (i = 0; i < dataLength;) {\n     for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n      data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n     }\n    }\n   }\n   return data;\n  },\n  _isColorConversionNeeded: function isColorConversionNeeded() {\n   if (this.adobe && this.adobe.transformCode) {\n    return true;\n   } else if (this.numComponents === 3) {\n    if (!this.adobe && this.colorTransform === 0) {\n     return false;\n    }\n    return true;\n   }\n   if (!this.adobe && this.colorTransform === 1) {\n    return true;\n   }\n   return false;\n  },\n  _convertYccToRgb: function convertYccToRgb(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 3) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n    data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n    data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertYcckToRgb: function convertYcckToRgb(data) {\n   var Y, Cb, Cr, k;\n   var offset = 0;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    k = data[i + 3];\n    var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n    var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n    var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n    data[offset++] = clamp0to255(r);\n    data[offset++] = clamp0to255(g);\n    data[offset++] = clamp0to255(b);\n   }\n   return data;\n  },\n  _convertYcckToCmyk: function convertYcckToCmyk(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n    data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n    data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertCmykToRgb: function convertCmykToRgb(data) {\n   var c, m, y, k;\n   var offset = 0;\n   var min = -255 * 255 * 255;\n   var scale = 1 / 255 / 255;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    c = data[i];\n    m = data[i + 1];\n    y = data[i + 2];\n    k = data[i + 3];\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n    data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n    data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n    data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n   }\n   return data;\n  },\n  getData: function getData(width, height, forceRGBoutput) {\n   if (this.numComponents > 4) {\n    error('JPEG error: Unsupported color mode');\n   }\n   var data = this._getLinearizedBlockData(width, height);\n   if (this.numComponents === 1 && forceRGBoutput) {\n    var dataLength = data.length;\n    var rgbData = new Uint8Array(dataLength * 3);\n    var offset = 0;\n    for (var i = 0; i < dataLength; i++) {\n     var grayColor = data[i];\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n    }\n    return rgbData;\n   } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n    return this._convertYccToRgb(data);\n   } else if (this.numComponents === 4) {\n    if (this._isColorConversionNeeded()) {\n     if (forceRGBoutput) {\n      return this._convertYcckToRgb(data);\n     }\n     return this._convertYcckToCmyk(data);\n    } else if (forceRGBoutput) {\n     return this._convertCmykToRgb(data);\n    }\n   }\n   return data;\n  }\n };\n return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getMetrics = getLookupTableFactory(function (t) {\n t['Courier'] = 600;\n t['Courier-Bold'] = 600;\n t['Courier-BoldOblique'] = 600;\n t['Courier-Oblique'] = 600;\n t['Helvetica'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Symbol'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['universal'] = 713;\n  t['numbersign'] = 500;\n  t['existential'] = 549;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['suchthat'] = 439;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asteriskmath'] = 500;\n  t['plus'] = 549;\n  t['comma'] = 250;\n  t['minus'] = 549;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 549;\n  t['equal'] = 549;\n  t['greater'] = 549;\n  t['question'] = 444;\n  t['congruent'] = 549;\n  t['Alpha'] = 722;\n  t['Beta'] = 667;\n  t['Chi'] = 722;\n  t['Delta'] = 612;\n  t['Epsilon'] = 611;\n  t['Phi'] = 763;\n  t['Gamma'] = 603;\n  t['Eta'] = 722;\n  t['Iota'] = 333;\n  t['theta1'] = 631;\n  t['Kappa'] = 722;\n  t['Lambda'] = 686;\n  t['Mu'] = 889;\n  t['Nu'] = 722;\n  t['Omicron'] = 722;\n  t['Pi'] = 768;\n  t['Theta'] = 741;\n  t['Rho'] = 556;\n  t['Sigma'] = 592;\n  t['Tau'] = 611;\n  t['Upsilon'] = 690;\n  t['sigma1'] = 439;\n  t['Omega'] = 768;\n  t['Xi'] = 645;\n  t['Psi'] = 795;\n  t['Zeta'] = 611;\n  t['bracketleft'] = 333;\n  t['therefore'] = 863;\n  t['bracketright'] = 333;\n  t['perpendicular'] = 658;\n  t['underscore'] = 500;\n  t['radicalex'] = 500;\n  t['alpha'] = 631;\n  t['beta'] = 549;\n  t['chi'] = 549;\n  t['delta'] = 494;\n  t['epsilon'] = 439;\n  t['phi'] = 521;\n  t['gamma'] = 411;\n  t['eta'] = 603;\n  t['iota'] = 329;\n  t['phi1'] = 603;\n  t['kappa'] = 549;\n  t['lambda'] = 549;\n  t['mu'] = 576;\n  t['nu'] = 521;\n  t['omicron'] = 549;\n  t['pi'] = 549;\n  t['theta'] = 521;\n  t['rho'] = 549;\n  t['sigma'] = 603;\n  t['tau'] = 439;\n  t['upsilon'] = 576;\n  t['omega1'] = 713;\n  t['omega'] = 686;\n  t['xi'] = 493;\n  t['psi'] = 686;\n  t['zeta'] = 494;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['similar'] = 549;\n  t['Euro'] = 750;\n  t['Upsilon1'] = 620;\n  t['minute'] = 247;\n  t['lessequal'] = 549;\n  t['fraction'] = 167;\n  t['infinity'] = 713;\n  t['florin'] = 500;\n  t['club'] = 753;\n  t['diamond'] = 753;\n  t['heart'] = 753;\n  t['spade'] = 753;\n  t['arrowboth'] = 1042;\n  t['arrowleft'] = 987;\n  t['arrowup'] = 603;\n  t['arrowright'] = 987;\n  t['arrowdown'] = 603;\n  t['degree'] = 400;\n  t['plusminus'] = 549;\n  t['second'] = 411;\n  t['greaterequal'] = 549;\n  t['multiply'] = 549;\n  t['proportional'] = 713;\n  t['partialdiff'] = 494;\n  t['bullet'] = 460;\n  t['divide'] = 549;\n  t['notequal'] = 549;\n  t['equivalence'] = 549;\n  t['approxequal'] = 549;\n  t['ellipsis'] = 1000;\n  t['arrowvertex'] = 603;\n  t['arrowhorizex'] = 1000;\n  t['carriagereturn'] = 658;\n  t['aleph'] = 823;\n  t['Ifraktur'] = 686;\n  t['Rfraktur'] = 795;\n  t['weierstrass'] = 987;\n  t['circlemultiply'] = 768;\n  t['circleplus'] = 768;\n  t['emptyset'] = 823;\n  t['intersection'] = 768;\n  t['union'] = 768;\n  t['propersuperset'] = 713;\n  t['reflexsuperset'] = 713;\n  t['notsubset'] = 713;\n  t['propersubset'] = 713;\n  t['reflexsubset'] = 713;\n  t['element'] = 713;\n  t['notelement'] = 713;\n  t['angle'] = 768;\n  t['gradient'] = 713;\n  t['registerserif'] = 790;\n  t['copyrightserif'] = 790;\n  t['trademarkserif'] = 890;\n  t['product'] = 823;\n  t['radical'] = 549;\n  t['dotmath'] = 250;\n  t['logicalnot'] = 713;\n  t['logicaland'] = 603;\n  t['logicalor'] = 603;\n  t['arrowdblboth'] = 1042;\n  t['arrowdblleft'] = 987;\n  t['arrowdblup'] = 603;\n  t['arrowdblright'] = 987;\n  t['arrowdbldown'] = 603;\n  t['lozenge'] = 494;\n  t['angleleft'] = 329;\n  t['registersans'] = 790;\n  t['copyrightsans'] = 790;\n  t['trademarksans'] = 786;\n  t['summation'] = 713;\n  t['parenlefttp'] = 384;\n  t['parenleftex'] = 384;\n  t['parenleftbt'] = 384;\n  t['bracketlefttp'] = 384;\n  t['bracketleftex'] = 384;\n  t['bracketleftbt'] = 384;\n  t['bracelefttp'] = 494;\n  t['braceleftmid'] = 494;\n  t['braceleftbt'] = 494;\n  t['braceex'] = 494;\n  t['angleright'] = 329;\n  t['integral'] = 274;\n  t['integraltp'] = 686;\n  t['integralex'] = 686;\n  t['integralbt'] = 686;\n  t['parenrighttp'] = 384;\n  t['parenrightex'] = 384;\n  t['parenrightbt'] = 384;\n  t['bracketrighttp'] = 384;\n  t['bracketrightex'] = 384;\n  t['bracketrightbt'] = 384;\n  t['bracerighttp'] = 494;\n  t['bracerightmid'] = 494;\n  t['bracerightbt'] = 494;\n  t['apple'] = 790;\n });\n t['Times-Roman'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 408;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 564;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 564;\n  t['equal'] = 564;\n  t['greater'] = 564;\n  t['question'] = 444;\n  t['at'] = 921;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 556;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 389;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 556;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 944;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 469;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 444;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 333;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 180;\n  t['quotedblleft'] = 444;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 453;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 444;\n  t['quotedblright'] = 444;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 444;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 889;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 444;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 564;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 444;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 444;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 444;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 444;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 444;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 444;\n  t['Amacron'] = 722;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 556;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 588;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 564;\n  t['uacute'] = 500;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 444;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 333;\n  t['plusminus'] = 564;\n  t['brokenbar'] = 200;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 333;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 326;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 444;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 344;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 564;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 564;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 1000;\n  t['ampersand'] = 833;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 930;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 778;\n  t['L'] = 667;\n  t['M'] = 944;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 611;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 556;\n  t['T'] = 667;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 1000;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 667;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 581;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 556;\n  t['c'] = 444;\n  t['d'] = 556;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 333;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 444;\n  t['s'] = 389;\n  t['t'] = 333;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 394;\n  t['bar'] = 220;\n  t['braceright'] = 394;\n  t['asciitilde'] = 520;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 540;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 300;\n  t['Lslash'] = 667;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 330;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 556;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 570;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 667;\n  t['Cacute'] = 722;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 722;\n  t['rcaron'] = 444;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 667;\n  t['Thorn'] = 611;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 556;\n  t['dcaron'] = 672;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 667;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 444;\n  t['omacron'] = 500;\n  t['Zacute'] = 667;\n  t['Zcaron'] = 667;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 416;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 394;\n  t['Kcommaaccent'] = 778;\n  t['Lacute'] = 667;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 667;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 444;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 667;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 570;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 570;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 389;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 832;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 667;\n  t['G'] = 722;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 889;\n  t['X'] = 667;\n  t['Y'] = 611;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 570;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 500;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 348;\n  t['bar'] = 220;\n  t['braceright'] = 348;\n  t['asciitilde'] = 570;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 500;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 944;\n  t['ordfeminine'] = 266;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 300;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 611;\n  t['divide'] = 570;\n  t['Yacute'] = 611;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 667;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 608;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 366;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 576;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 382;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 606;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 606;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Italic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 420;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 675;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 675;\n  t['equal'] = 675;\n  t['greater'] = 675;\n  t['question'] = 500;\n  t['at'] = 920;\n  t['A'] = 611;\n  t['B'] = 611;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 611;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 444;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 667;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 611;\n  t['S'] = 500;\n  t['T'] = 556;\n  t['U'] = 722;\n  t['V'] = 611;\n  t['W'] = 833;\n  t['X'] = 611;\n  t['Y'] = 556;\n  t['Z'] = 556;\n  t['bracketleft'] = 389;\n  t['backslash'] = 278;\n  t['bracketright'] = 389;\n  t['asciicircum'] = 422;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 278;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 444;\n  t['l'] = 278;\n  t['m'] = 722;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 444;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 400;\n  t['bar'] = 275;\n  t['braceright'] = 400;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 214;\n  t['quotedblleft'] = 556;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 523;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 556;\n  t['quotedblright'] = 556;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 889;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 889;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 556;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 667;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 556;\n  t['divide'] = 675;\n  t['Yacute'] = 556;\n  t['Acircumflex'] = 611;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 667;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 556;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 611;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 611;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 556;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 611;\n  t['Sacute'] = 500;\n  t['dcaron'] = 544;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 611;\n  t['Abreve'] = 611;\n  t['multiply'] = 675;\n  t['uacute'] = 500;\n  t['Tcaron'] = 556;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 667;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 667;\n  t['Iacute'] = 333;\n  t['plusminus'] = 675;\n  t['brokenbar'] = 275;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 556;\n  t['Zcaron'] = 556;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 300;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 611;\n  t['Adieresis'] = 611;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 500;\n  t['lcaron'] = 300;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 500;\n  t['Scommaaccent'] = 500;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 667;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 611;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 611;\n  t['Aogonek'] = 611;\n  t['Aring'] = 611;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 444;\n  t['minus'] = 675;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 675;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['a1'] = 974;\n  t['a2'] = 961;\n  t['a202'] = 974;\n  t['a3'] = 980;\n  t['a4'] = 719;\n  t['a5'] = 789;\n  t['a119'] = 790;\n  t['a118'] = 791;\n  t['a117'] = 690;\n  t['a11'] = 960;\n  t['a12'] = 939;\n  t['a13'] = 549;\n  t['a14'] = 855;\n  t['a15'] = 911;\n  t['a16'] = 933;\n  t['a105'] = 911;\n  t['a17'] = 945;\n  t['a18'] = 974;\n  t['a19'] = 755;\n  t['a20'] = 846;\n  t['a21'] = 762;\n  t['a22'] = 761;\n  t['a23'] = 571;\n  t['a24'] = 677;\n  t['a25'] = 763;\n  t['a26'] = 760;\n  t['a27'] = 759;\n  t['a28'] = 754;\n  t['a6'] = 494;\n  t['a7'] = 552;\n  t['a8'] = 537;\n  t['a9'] = 577;\n  t['a10'] = 692;\n  t['a29'] = 786;\n  t['a30'] = 788;\n  t['a31'] = 788;\n  t['a32'] = 790;\n  t['a33'] = 793;\n  t['a34'] = 794;\n  t['a35'] = 816;\n  t['a36'] = 823;\n  t['a37'] = 789;\n  t['a38'] = 841;\n  t['a39'] = 823;\n  t['a40'] = 833;\n  t['a41'] = 816;\n  t['a42'] = 831;\n  t['a43'] = 923;\n  t['a44'] = 744;\n  t['a45'] = 723;\n  t['a46'] = 749;\n  t['a47'] = 790;\n  t['a48'] = 792;\n  t['a49'] = 695;\n  t['a50'] = 776;\n  t['a51'] = 768;\n  t['a52'] = 792;\n  t['a53'] = 759;\n  t['a54'] = 707;\n  t['a55'] = 708;\n  t['a56'] = 682;\n  t['a57'] = 701;\n  t['a58'] = 826;\n  t['a59'] = 815;\n  t['a60'] = 789;\n  t['a61'] = 789;\n  t['a62'] = 707;\n  t['a63'] = 687;\n  t['a64'] = 696;\n  t['a65'] = 689;\n  t['a66'] = 786;\n  t['a67'] = 787;\n  t['a68'] = 713;\n  t['a69'] = 791;\n  t['a70'] = 785;\n  t['a71'] = 791;\n  t['a72'] = 873;\n  t['a73'] = 761;\n  t['a74'] = 762;\n  t['a203'] = 762;\n  t['a75'] = 759;\n  t['a204'] = 759;\n  t['a76'] = 892;\n  t['a77'] = 892;\n  t['a78'] = 788;\n  t['a79'] = 784;\n  t['a81'] = 438;\n  t['a82'] = 138;\n  t['a83'] = 277;\n  t['a84'] = 415;\n  t['a97'] = 392;\n  t['a98'] = 392;\n  t['a99'] = 668;\n  t['a100'] = 668;\n  t['a89'] = 390;\n  t['a90'] = 390;\n  t['a93'] = 317;\n  t['a94'] = 317;\n  t['a91'] = 276;\n  t['a92'] = 276;\n  t['a205'] = 509;\n  t['a85'] = 509;\n  t['a206'] = 410;\n  t['a86'] = 410;\n  t['a87'] = 234;\n  t['a88'] = 234;\n  t['a95'] = 334;\n  t['a96'] = 334;\n  t['a101'] = 732;\n  t['a102'] = 544;\n  t['a103'] = 544;\n  t['a104'] = 910;\n  t['a106'] = 667;\n  t['a107'] = 760;\n  t['a108'] = 760;\n  t['a112'] = 776;\n  t['a111'] = 595;\n  t['a110'] = 694;\n  t['a109'] = 626;\n  t['a120'] = 788;\n  t['a121'] = 788;\n  t['a122'] = 788;\n  t['a123'] = 788;\n  t['a124'] = 788;\n  t['a125'] = 788;\n  t['a126'] = 788;\n  t['a127'] = 788;\n  t['a128'] = 788;\n  t['a129'] = 788;\n  t['a130'] = 788;\n  t['a131'] = 788;\n  t['a132'] = 788;\n  t['a133'] = 788;\n  t['a134'] = 788;\n  t['a135'] = 788;\n  t['a136'] = 788;\n  t['a137'] = 788;\n  t['a138'] = 788;\n  t['a139'] = 788;\n  t['a140'] = 788;\n  t['a141'] = 788;\n  t['a142'] = 788;\n  t['a143'] = 788;\n  t['a144'] = 788;\n  t['a145'] = 788;\n  t['a146'] = 788;\n  t['a147'] = 788;\n  t['a148'] = 788;\n  t['a149'] = 788;\n  t['a150'] = 788;\n  t['a151'] = 788;\n  t['a152'] = 788;\n  t['a153'] = 788;\n  t['a154'] = 788;\n  t['a155'] = 788;\n  t['a156'] = 788;\n  t['a157'] = 788;\n  t['a158'] = 788;\n  t['a159'] = 788;\n  t['a160'] = 894;\n  t['a161'] = 838;\n  t['a163'] = 1016;\n  t['a164'] = 458;\n  t['a196'] = 748;\n  t['a165'] = 924;\n  t['a192'] = 748;\n  t['a166'] = 918;\n  t['a167'] = 927;\n  t['a168'] = 928;\n  t['a169'] = 928;\n  t['a170'] = 834;\n  t['a171'] = 873;\n  t['a172'] = 828;\n  t['a173'] = 924;\n  t['a162'] = 924;\n  t['a174'] = 917;\n  t['a175'] = 930;\n  t['a176'] = 931;\n  t['a177'] = 463;\n  t['a178'] = 883;\n  t['a179'] = 836;\n  t['a193'] = 836;\n  t['a180'] = 867;\n  t['a199'] = 867;\n  t['a181'] = 696;\n  t['a200'] = 696;\n  t['a182'] = 874;\n  t['a201'] = 874;\n  t['a183'] = 760;\n  t['a184'] = 946;\n  t['a197'] = 771;\n  t['a185'] = 865;\n  t['a194'] = 771;\n  t['a198'] = 888;\n  t['a186'] = 967;\n  t['a195'] = 888;\n  t['a187'] = 831;\n  t['a188'] = 873;\n  t['a189'] = 927;\n  t['a190'] = 970;\n  t['a191'] = 918;\n });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar Uint32ArrayView = sharedUtil.Uint32ArrayView;\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n var MASK_HIGH = 0xffff0000;\n var MASK_LOW = 0xffff;\n function MurmurHash3_64(seed) {\n  var SEED = 0xc3d2e1f0;\n  this.h1 = seed ? seed & 0xffffffff : SEED;\n  this.h2 = seed ? seed & 0xffffffff : SEED;\n }\n var alwaysUseUint32ArrayView = false;\n try {\n  new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n } catch (e) {\n  alwaysUseUint32ArrayView = true;\n }\n MurmurHash3_64.prototype = {\n  update: function MurmurHash3_64_update(input) {\n   var useUint32ArrayView = alwaysUseUint32ArrayView;\n   var i;\n   if (typeof input === 'string') {\n    var data = new Uint8Array(input.length * 2);\n    var length = 0;\n    for (i = 0; i < input.length; i++) {\n     var code = input.charCodeAt(i);\n     if (code <= 0xff) {\n      data[length++] = code;\n     } else {\n      data[length++] = code >>> 8;\n      data[length++] = code & 0xff;\n     }\n    }\n   } else if (input instanceof Uint8Array) {\n    data = input;\n    length = data.length;\n   } else if (typeof input === 'object' && 'length' in input) {\n    data = input;\n    length = data.length;\n    useUint32ArrayView = true;\n   } else {\n    throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n   }\n   var blockCounts = length >> 2;\n   var tailLength = length - blockCounts * 4;\n   var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n   var k1 = 0;\n   var k2 = 0;\n   var h1 = this.h1;\n   var h2 = this.h2;\n   var C1 = 0xcc9e2d51;\n   var C2 = 0x1b873593;\n   var C1_LOW = C1 & MASK_LOW;\n   var C2_LOW = C2 & MASK_LOW;\n   for (i = 0; i < blockCounts; i++) {\n    if (i & 1) {\n     k1 = dataUint32[i];\n     k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n     k1 = k1 << 15 | k1 >>> 17;\n     k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n     h1 ^= k1;\n     h1 = h1 << 13 | h1 >>> 19;\n     h1 = h1 * 5 + 0xe6546b64;\n    } else {\n     k2 = dataUint32[i];\n     k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n     k2 = k2 << 15 | k2 >>> 17;\n     k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n     h2 ^= k2;\n     h2 = h2 << 13 | h2 >>> 19;\n     h2 = h2 * 5 + 0xe6546b64;\n    }\n   }\n   k1 = 0;\n   switch (tailLength) {\n   case 3:\n    k1 ^= data[blockCounts * 4 + 2] << 16;\n   case 2:\n    k1 ^= data[blockCounts * 4 + 1] << 8;\n   case 1:\n    k1 ^= data[blockCounts * 4];\n    k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n    if (blockCounts & 1) {\n     h1 ^= k1;\n    } else {\n     h2 ^= k1;\n    }\n   }\n   this.h1 = h1;\n   this.h2 = h2;\n   return this;\n  },\n  hexdigest: function MurmurHash3_64_hexdigest() {\n   var h1 = this.h1;\n   var h2 = this.h2;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n   h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n   h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   for (var i = 0, arr = [\n      h1,\n      h2\n     ], str = ''; i < arr.length; i++) {\n    var hex = (arr[i] >>> 0).toString(16);\n    while (hex.length < 8) {\n     hex = '0' + hex;\n    }\n    str += hex;\n   }\n   return str;\n  }\n };\n return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar ShadingType = {\n FUNCTION_BASED: 1,\n AXIAL: 2,\n RADIAL: 3,\n FREE_FORM_MESH: 4,\n LATTICE_FORM_MESH: 5,\n COONS_PATCH_MESH: 6,\n TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n function Pattern() {\n  error('should not call Pattern constructor');\n }\n Pattern.prototype = {\n  getPattern: function Pattern_getPattern(ctx) {\n   error('Should not call Pattern.getStyle: ' + ctx);\n  }\n };\n Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n  var dict = isStream(shading) ? shading.dict : shading;\n  var type = dict.get('ShadingType');\n  try {\n   switch (type) {\n   case ShadingType.AXIAL:\n   case ShadingType.RADIAL:\n    return new Shadings.RadialAxial(dict, matrix, xref, res);\n   case ShadingType.FREE_FORM_MESH:\n   case ShadingType.LATTICE_FORM_MESH:\n   case ShadingType.COONS_PATCH_MESH:\n   case ShadingType.TENSOR_PATCH_MESH:\n    return new Shadings.Mesh(shading, matrix, xref, res);\n   default:\n    throw new Error('Unsupported ShadingType: ' + type);\n   }\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n   handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n   warn(ex);\n   return new Shadings.Dummy();\n  }\n };\n return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n function RadialAxial(dict, matrix, xref, res) {\n  this.matrix = matrix;\n  this.coordsArr = dict.getArray('Coords');\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  var t0 = 0.0, t1 = 1.0;\n  if (dict.has('Domain')) {\n   var domainArr = dict.getArray('Domain');\n   t0 = domainArr[0];\n   t1 = domainArr[1];\n  }\n  var extendStart = false, extendEnd = false;\n  if (dict.has('Extend')) {\n   var extendArr = dict.getArray('Extend');\n   extendStart = extendArr[0];\n   extendEnd = extendArr[1];\n  }\n  if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n   var x1 = this.coordsArr[0];\n   var y1 = this.coordsArr[1];\n   var r1 = this.coordsArr[2];\n   var x2 = this.coordsArr[3];\n   var y2 = this.coordsArr[4];\n   var r2 = this.coordsArr[5];\n   var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n   if (r1 <= r2 + distance && r2 <= r1 + distance) {\n    warn('Unsupported radial gradient.');\n   }\n  }\n  this.extendStart = extendStart;\n  this.extendEnd = extendEnd;\n  var fnObj = dict.get('Function');\n  var fn = PDFFunction.parseArray(xref, fnObj);\n  var diff = t1 - t0;\n  var step = diff / 10;\n  var colorStops = this.colorStops = [];\n  if (t0 >= t1 || step <= 0) {\n   info('Bad shading domain.');\n   return;\n  }\n  var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n  var rgbColor;\n  for (var i = t0; i <= t1; i += step) {\n   ratio[0] = i;\n   fn(ratio, 0, color, 0);\n   rgbColor = cs.getRgb(color, 0);\n   var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n   colorStops.push([\n    (i - t0) / diff,\n    cssColor\n   ]);\n  }\n  var background = 'transparent';\n  if (dict.has('Background')) {\n   rgbColor = cs.getRgb(dict.get('Background'), 0);\n   background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n  }\n  if (!extendStart) {\n   colorStops.unshift([\n    0,\n    background\n   ]);\n   colorStops[1][0] += Shadings.SMALL_NUMBER;\n  }\n  if (!extendEnd) {\n   colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n   colorStops.push([\n    1,\n    background\n   ]);\n  }\n  this.colorStops = colorStops;\n }\n RadialAxial.prototype = {\n  getIR: function RadialAxial_getIR() {\n   var coordsArr = this.coordsArr;\n   var shadingType = this.shadingType;\n   var type, p0, p1, r0, r1;\n   if (shadingType === ShadingType.AXIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[2],\n     coordsArr[3]\n    ];\n    r0 = null;\n    r1 = null;\n    type = 'axial';\n   } else if (shadingType === ShadingType.RADIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[3],\n     coordsArr[4]\n    ];\n    r0 = coordsArr[2];\n    r1 = coordsArr[5];\n    type = 'radial';\n   } else {\n    error('getPattern type unknown: ' + shadingType);\n   }\n   var matrix = this.matrix;\n   if (matrix) {\n    p0 = Util.applyTransform(p0, matrix);\n    p1 = Util.applyTransform(p1, matrix);\n    if (shadingType === ShadingType.RADIAL) {\n     var scale = Util.singularValueDecompose2dScale(matrix);\n     r0 *= scale[0];\n     r1 *= scale[1];\n    }\n   }\n   return [\n    'RadialAxial',\n    type,\n    this.colorStops,\n    p0,\n    p1,\n    r0,\n    r1\n   ];\n  }\n };\n return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n function MeshStreamReader(stream, context) {\n  this.stream = stream;\n  this.context = context;\n  this.buffer = 0;\n  this.bufferLength = 0;\n  var numComps = context.numComps;\n  this.tmpCompsBuf = new Float32Array(numComps);\n  var csNumComps = context.colorSpace.numComps;\n  this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n }\n MeshStreamReader.prototype = {\n  get hasData() {\n   if (this.stream.end) {\n    return this.stream.pos < this.stream.end;\n   }\n   if (this.bufferLength > 0) {\n    return true;\n   }\n   var nextByte = this.stream.getByte();\n   if (nextByte < 0) {\n    return false;\n   }\n   this.buffer = nextByte;\n   this.bufferLength = 8;\n   return true;\n  },\n  readBits: function MeshStreamReader_readBits(n) {\n   var buffer = this.buffer;\n   var bufferLength = this.bufferLength;\n   if (n === 32) {\n    if (bufferLength === 0) {\n     return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n    }\n    buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n    var nextByte = this.stream.getByte();\n    this.buffer = nextByte & (1 << bufferLength) - 1;\n    return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n   }\n   if (n === 8 && bufferLength === 0) {\n    return this.stream.getByte();\n   }\n   while (bufferLength < n) {\n    buffer = buffer << 8 | this.stream.getByte();\n    bufferLength += 8;\n   }\n   bufferLength -= n;\n   this.bufferLength = bufferLength;\n   this.buffer = buffer & (1 << bufferLength) - 1;\n   return buffer >> bufferLength;\n  },\n  align: function MeshStreamReader_align() {\n   this.buffer = 0;\n   this.bufferLength = 0;\n  },\n  readFlag: function MeshStreamReader_readFlag() {\n   return this.readBits(this.context.bitsPerFlag);\n  },\n  readCoordinate: function MeshStreamReader_readCoordinate() {\n   var bitsPerCoordinate = this.context.bitsPerCoordinate;\n   var xi = this.readBits(bitsPerCoordinate);\n   var yi = this.readBits(bitsPerCoordinate);\n   var decode = this.context.decode;\n   var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n   return [\n    xi * scale * (decode[1] - decode[0]) + decode[0],\n    yi * scale * (decode[3] - decode[2]) + decode[2]\n   ];\n  },\n  readComponents: function MeshStreamReader_readComponents() {\n   var numComps = this.context.numComps;\n   var bitsPerComponent = this.context.bitsPerComponent;\n   var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n   var decode = this.context.decode;\n   var components = this.tmpCompsBuf;\n   for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n    var ci = this.readBits(bitsPerComponent);\n    components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n   }\n   var color = this.tmpCsCompsBuf;\n   if (this.context.colorFn) {\n    this.context.colorFn(components, 0, color, 0);\n   }\n   return this.context.colorSpace.getRgb(color, 0);\n  }\n };\n function decodeType4Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var operators = [];\n  var ps = [];\n  var verticesLeft = 0;\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   if (verticesLeft === 0) {\n    assert(0 <= f && f <= 2, 'Unknown type4 flag');\n    switch (f) {\n    case 0:\n     verticesLeft = 3;\n     break;\n    case 1:\n     ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    case 2:\n     ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    }\n    operators.push(f);\n   }\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n   verticesLeft--;\n   reader.align();\n  }\n  mesh.figures.push({\n   type: 'triangles',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps)\n  });\n }\n function decodeType5Shading(mesh, reader, verticesPerRow) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = [];\n  while (reader.hasData) {\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n  }\n  mesh.figures.push({\n   type: 'lattice',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps),\n   verticesPerRow: verticesPerRow\n  });\n }\n var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n var TRIANGLE_DENSITY = 20;\n var getB = function getBClosure() {\n  function buildB(count) {\n   var lut = [];\n   for (var i = 0; i <= count; i++) {\n    var t = i / count, t_ = 1 - t;\n    lut.push(new Float32Array([\n     t_ * t_ * t_,\n     3 * t * t_ * t_,\n     3 * t * t * t_,\n     t * t * t\n    ]));\n   }\n   return lut;\n  }\n  var cache = [];\n  return function getB(count) {\n   if (!cache[count]) {\n    cache[count] = buildB(count);\n   }\n   return cache[count];\n  };\n }();\n function buildFigureFromPatch(mesh, index) {\n  var figure = mesh.figures[index];\n  assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n  var coords = mesh.coords, colors = mesh.colors;\n  var pi = figure.coords;\n  var ci = figure.colors;\n  var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n  splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n  var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n  splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n  var verticesPerRow = splitXBy + 1;\n  var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var k = 0;\n  var cl = new Uint8Array(3), cr = new Uint8Array(3);\n  var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n  var bRow = getB(splitYBy), bCol = getB(splitXBy);\n  for (var row = 0; row <= splitYBy; row++) {\n   cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n   cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n   cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n   cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n   cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n   cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n   for (var col = 0; col <= splitXBy; col++, k++) {\n    if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n     continue;\n    }\n    var x = 0, y = 0;\n    var q = 0;\n    for (var i = 0; i <= 3; i++) {\n     for (var j = 0; j <= 3; j++, q++) {\n      var m = bRow[row][i] * bCol[col][j];\n      x += coords[pi[q]][0] * m;\n      y += coords[pi[q]][1] * m;\n     }\n    }\n    figureCoords[k] = coords.length;\n    coords.push([\n     x,\n     y\n    ]);\n    figureColors[k] = colors.length;\n    var newColor = new Uint8Array(3);\n    newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n    newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n    newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n    colors.push(newColor);\n   }\n  }\n  figureCoords[0] = pi[0];\n  figureColors[0] = ci[0];\n  figureCoords[splitXBy] = pi[3];\n  figureColors[splitXBy] = ci[1];\n  figureCoords[verticesPerRow * splitYBy] = pi[12];\n  figureColors[verticesPerRow * splitYBy] = ci[2];\n  figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n  figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n  mesh.figures[index] = {\n   type: 'lattice',\n   coords: figureCoords,\n   colors: figureColors,\n   verticesPerRow: verticesPerRow\n  };\n }\n function decodeType6Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type6 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   ps[5] = coords.length;\n   coords.push([\n    (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n    (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n   ]);\n   ps[6] = coords.length;\n   coords.push([\n    (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n    (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n   ]);\n   ps[9] = coords.length;\n   coords.push([\n    (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n    (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n   ]);\n   ps[10] = coords.length;\n   coords.push([\n    (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n    (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n   ]);\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function decodeType7Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type7 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[9] = pi + 13;\n    ps[10] = pi + 14;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[5] = pi + 12;\n    ps[6] = pi + 15;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function updateBounds(mesh) {\n  var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n  for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n   var x = mesh.coords[i][0], y = mesh.coords[i][1];\n   minX = minX > x ? x : minX;\n   minY = minY > y ? y : minY;\n   maxX = maxX < x ? x : maxX;\n   maxY = maxY < y ? y : maxY;\n  }\n  mesh.bounds = [\n   minX,\n   minY,\n   maxX,\n   maxY\n  ];\n }\n function packData(mesh) {\n  var i, ii, j, jj;\n  var coords = mesh.coords;\n  var coordsPacked = new Float32Array(coords.length * 2);\n  for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n   var xy = coords[i];\n   coordsPacked[j++] = xy[0];\n   coordsPacked[j++] = xy[1];\n  }\n  mesh.coords = coordsPacked;\n  var colors = mesh.colors;\n  var colorsPacked = new Uint8Array(colors.length * 3);\n  for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n   var c = colors[i];\n   colorsPacked[j++] = c[0];\n   colorsPacked[j++] = c[1];\n   colorsPacked[j++] = c[2];\n  }\n  mesh.colors = colorsPacked;\n  var figures = mesh.figures;\n  for (i = 0, ii = figures.length; i < ii; i++) {\n   var figure = figures[i], ps = figure.coords, cs = figure.colors;\n   for (j = 0, jj = ps.length; j < jj; j++) {\n    ps[j] *= 2;\n    cs[j] *= 3;\n   }\n  }\n }\n function Mesh(stream, matrix, xref, res) {\n  assert(isStream(stream), 'Mesh data is not a stream');\n  var dict = stream.dict;\n  this.matrix = matrix;\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  this.bbox = dict.getArray('BBox');\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n  var fnObj = dict.get('Function');\n  var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n  this.coords = [];\n  this.colors = [];\n  this.figures = [];\n  var decodeContext = {\n   bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n   bitsPerComponent: dict.get('BitsPerComponent'),\n   bitsPerFlag: dict.get('BitsPerFlag'),\n   decode: dict.getArray('Decode'),\n   colorFn: fn,\n   colorSpace: cs,\n   numComps: fn ? 1 : cs.numComps\n  };\n  var reader = new MeshStreamReader(stream, decodeContext);\n  var patchMesh = false;\n  switch (this.shadingType) {\n  case ShadingType.FREE_FORM_MESH:\n   decodeType4Shading(this, reader);\n   break;\n  case ShadingType.LATTICE_FORM_MESH:\n   var verticesPerRow = dict.get('VerticesPerRow') | 0;\n   assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n   decodeType5Shading(this, reader, verticesPerRow);\n   break;\n  case ShadingType.COONS_PATCH_MESH:\n   decodeType6Shading(this, reader);\n   patchMesh = true;\n   break;\n  case ShadingType.TENSOR_PATCH_MESH:\n   decodeType7Shading(this, reader);\n   patchMesh = true;\n   break;\n  default:\n   error('Unsupported mesh type.');\n   break;\n  }\n  if (patchMesh) {\n   updateBounds(this);\n   for (var i = 0, ii = this.figures.length; i < ii; i++) {\n    buildFigureFromPatch(this, i);\n   }\n  }\n  updateBounds(this);\n  packData(this);\n }\n Mesh.prototype = {\n  getIR: function Mesh_getIR() {\n   return [\n    'Mesh',\n    this.shadingType,\n    this.coords,\n    this.colors,\n    this.figures,\n    this.bounds,\n    this.matrix,\n    this.bbox,\n    this.background\n   ];\n  }\n };\n return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n function Dummy() {\n  this.type = 'Pattern';\n }\n Dummy.prototype = {\n  getIR: function Dummy_getIR() {\n   return ['Dummy'];\n  }\n };\n return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n var matrix = dict.getArray('Matrix');\n var bbox = dict.getArray('BBox');\n var xstep = dict.get('XStep');\n var ystep = dict.get('YStep');\n var paintType = dict.get('PaintType');\n var tilingType = dict.get('TilingType');\n return [\n  'TilingPattern',\n  args,\n  operatorList,\n  matrix,\n  bbox,\n  xstep,\n  ystep,\n  paintType,\n  tilingType\n ];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreChunkedStream = __w_pdfjs_require__(11);\nvar coreDocument = __w_pdfjs_require__(24);\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar shadow = sharedUtil.shadow;\nvar NotImplementedException = sharedUtil.NotImplementedException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar Util = sharedUtil.Util;\nvar Stream = coreStream.Stream;\nvar ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\nvar PDFDocument = coreDocument.PDFDocument;\nvar BasePdfManager = function BasePdfManagerClosure() {\n function BasePdfManager() {\n  throw new Error('Cannot initialize BaseManagerManager');\n }\n BasePdfManager.prototype = {\n  get docId() {\n   return this._docId;\n  },\n  get password() {\n   return this._password;\n  },\n  get docBaseUrl() {\n   var docBaseUrl = null;\n   if (this._docBaseUrl) {\n    var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n    if (absoluteUrl) {\n     docBaseUrl = absoluteUrl.href;\n    } else {\n     warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n    }\n   }\n   return shadow(this, 'docBaseUrl', docBaseUrl);\n  },\n  onLoadedStream: function BasePdfManager_onLoadedStream() {\n   throw new NotImplementedException();\n  },\n  ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n   return this.ensure(this.pdfDocument, prop, args);\n  },\n  ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n   return this.ensure(this.pdfDocument.xref, prop, args);\n  },\n  ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n   return this.ensure(this.pdfDocument.catalog, prop, args);\n  },\n  getPage: function BasePdfManager_getPage(pageIndex) {\n   return this.pdfDocument.getPage(pageIndex);\n  },\n  cleanup: function BasePdfManager_cleanup() {\n   return this.pdfDocument.cleanup();\n  },\n  ensure: function BasePdfManager_ensure(obj, prop, args) {\n   return new NotImplementedException();\n  },\n  requestRange: function BasePdfManager_requestRange(begin, end) {\n   return new NotImplementedException();\n  },\n  requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n   return new NotImplementedException();\n  },\n  sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n   return new NotImplementedException();\n  },\n  updatePassword: function BasePdfManager_updatePassword(password) {\n   this._password = password;\n  },\n  terminate: function BasePdfManager_terminate() {\n   return new NotImplementedException();\n  }\n };\n return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = password;\n  this._docBaseUrl = docBaseUrl;\n  this.evaluatorOptions = evaluatorOptions;\n  var stream = new Stream(data);\n  this.pdfDocument = new PDFDocument(this, stream);\n  this._loadedStreamCapability = createPromiseCapability();\n  this._loadedStreamCapability.resolve(stream);\n }\n Util.inherit(LocalPdfManager, BasePdfManager, {\n  ensure: function LocalPdfManager_ensure(obj, prop, args) {\n   return new Promise(function (resolve, reject) {\n    try {\n     var value = obj[prop];\n     var result;\n     if (typeof value === 'function') {\n      result = value.apply(obj, args);\n     } else {\n      result = value;\n     }\n     resolve(result);\n    } catch (e) {\n     reject(e);\n    }\n   });\n  },\n  requestRange: function LocalPdfManager_requestRange(begin, end) {\n   return Promise.resolve();\n  },\n  requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n  },\n  onLoadedStream: function LocalPdfManager_onLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  terminate: function LocalPdfManager_terminate() {\n  }\n });\n return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = args.password;\n  this._docBaseUrl = docBaseUrl;\n  this.msgHandler = args.msgHandler;\n  this.evaluatorOptions = evaluatorOptions;\n  var params = {\n   msgHandler: args.msgHandler,\n   url: args.url,\n   length: args.length,\n   disableAutoFetch: args.disableAutoFetch,\n   rangeChunkSize: args.rangeChunkSize\n  };\n  this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n  this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n }\n Util.inherit(NetworkPdfManager, BasePdfManager, {\n  ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n   var pdfManager = this;\n   return new Promise(function (resolve, reject) {\n    function ensureHelper() {\n     try {\n      var result;\n      var value = obj[prop];\n      if (typeof value === 'function') {\n       result = value.apply(obj, args);\n      } else {\n       result = value;\n      }\n      resolve(result);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       reject(e);\n       return;\n      }\n      pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n     }\n    }\n    ensureHelper();\n   });\n  },\n  requestRange: function NetworkPdfManager_requestRange(begin, end) {\n   return this.streamManager.requestRange(begin, end);\n  },\n  requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n   this.streamManager.requestAllChunks();\n  },\n  sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n   this.streamManager.onReceiveData({ chunk: chunk });\n  },\n  onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n   return this.streamManager.onLoadedStream();\n  },\n  terminate: function NetworkPdfManager_terminate() {\n   this.streamManager.abort();\n  }\n });\n return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar error = sharedUtil.error;\nvar isSpace = sharedUtil.isSpace;\nvar EOF = corePrimitives.EOF;\nvar PostScriptParser = function PostScriptParserClosure() {\n function PostScriptParser(lexer) {\n  this.lexer = lexer;\n  this.operators = [];\n  this.token = null;\n  this.prev = null;\n }\n PostScriptParser.prototype = {\n  nextToken: function PostScriptParser_nextToken() {\n   this.prev = this.token;\n   this.token = this.lexer.getToken();\n  },\n  accept: function PostScriptParser_accept(type) {\n   if (this.token.type === type) {\n    this.nextToken();\n    return true;\n   }\n   return false;\n  },\n  expect: function PostScriptParser_expect(type) {\n   if (this.accept(type)) {\n    return true;\n   }\n   error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n  },\n  parse: function PostScriptParser_parse() {\n   this.nextToken();\n   this.expect(PostScriptTokenTypes.LBRACE);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   return this.operators;\n  },\n  parseBlock: function PostScriptParser_parseBlock() {\n   while (true) {\n    if (this.accept(PostScriptTokenTypes.NUMBER)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n     this.parseCondition();\n    } else {\n     return;\n    }\n   }\n  },\n  parseCondition: function PostScriptParser_parseCondition() {\n   var conditionLocation = this.operators.length;\n   this.operators.push(null, null);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   if (this.accept(PostScriptTokenTypes.IF)) {\n    this.operators[conditionLocation] = this.operators.length;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n    var jumpLocation = this.operators.length;\n    this.operators.push(null, null);\n    var endOfTrue = this.operators.length;\n    this.parseBlock();\n    this.expect(PostScriptTokenTypes.RBRACE);\n    this.expect(PostScriptTokenTypes.IFELSE);\n    this.operators[jumpLocation] = this.operators.length;\n    this.operators[jumpLocation + 1] = 'j';\n    this.operators[conditionLocation] = endOfTrue;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else {\n    error('PS Function: error parsing conditional.');\n   }\n  }\n };\n return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n LBRACE: 0,\n RBRACE: 1,\n NUMBER: 2,\n OPERATOR: 3,\n IF: 4,\n IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n function PostScriptToken(type, value) {\n  this.type = type;\n  this.value = value;\n }\n var opCache = Object.create(null);\n PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n  var opValue = opCache[op];\n  if (opValue) {\n   return opValue;\n  }\n  return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n };\n PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n function PostScriptLexer(stream) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n }\n PostScriptLexer.prototype = {\n  nextChar: function PostScriptLexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function PostScriptLexer_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n   case 0x7B:\n    this.nextChar();\n    return PostScriptToken.LBRACE;\n   case 0x7D:\n    this.nextChar();\n    return PostScriptToken.RBRACE;\n   }\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n    strBuf.push(String.fromCharCode(ch));\n   }\n   var str = strBuf.join('');\n   switch (str.toLowerCase()) {\n   case 'if':\n    return PostScriptToken.IF;\n   case 'ifelse':\n    return PostScriptToken.IFELSE;\n   default:\n    return PostScriptToken.getOperator(str);\n   }\n  },\n  getNumber: function PostScriptLexer_getNumber() {\n   var ch = this.currentChar;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0) {\n    if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n     strBuf.push(String.fromCharCode(ch));\n    } else {\n     break;\n    }\n   }\n   var value = parseFloat(strBuf.join(''));\n   if (isNaN(value)) {\n    error('Invalid floating point number: ' + value);\n   }\n   return value;\n  }\n };\n return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getEncoding = coreEncodings.getEncoding;\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n var COMMAND_MAP = {\n  'hstem': [1],\n  'vstem': [3],\n  'vmoveto': [4],\n  'rlineto': [5],\n  'hlineto': [6],\n  'vlineto': [7],\n  'rrcurveto': [8],\n  'callsubr': [10],\n  'flex': [\n   12,\n   35\n  ],\n  'drop': [\n   12,\n   18\n  ],\n  'endchar': [14],\n  'rmoveto': [21],\n  'hmoveto': [22],\n  'vhcurveto': [30],\n  'hvcurveto': [31]\n };\n function Type1CharString() {\n  this.width = 0;\n  this.lsb = 0;\n  this.flexing = false;\n  this.output = [];\n  this.stack = [];\n }\n Type1CharString.prototype = {\n  convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n   var count = encoded.length;\n   var error = false;\n   var wx, sbx, subrNumber;\n   for (var i = 0; i < count; i++) {\n    var value = encoded[i];\n    if (value < 32) {\n     if (value === 12) {\n      value = (value << 8) + encoded[++i];\n     }\n     switch (value) {\n     case 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case 3:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case 4:\n      if (this.flexing) {\n       if (this.stack.length < 1) {\n        error = true;\n        break;\n       }\n       var dy = this.stack.pop();\n       this.stack.push(0, dy);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n      break;\n     case 5:\n      error = this.executeCommand(2, COMMAND_MAP.rlineto);\n      break;\n     case 6:\n      error = this.executeCommand(1, COMMAND_MAP.hlineto);\n      break;\n     case 7:\n      error = this.executeCommand(1, COMMAND_MAP.vlineto);\n      break;\n     case 8:\n      error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n      break;\n     case 9:\n      this.stack = [];\n      break;\n     case 10:\n      if (this.stack.length < 1) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n      break;\n     case 11:\n      return error;\n     case 13:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      wx = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx);\n      error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n      break;\n     case 14:\n      this.output.push(COMMAND_MAP.endchar[0]);\n      break;\n     case 21:\n      if (this.flexing) {\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n      break;\n     case 22:\n      if (this.flexing) {\n       this.stack.push(0);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n      break;\n     case 30:\n      error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n      break;\n     case 31:\n      error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n      break;\n     case (12 << 8) + 0:\n      this.stack = [];\n      break;\n     case (12 << 8) + 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case (12 << 8) + 2:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case (12 << 8) + 6:\n      if (seacAnalysisEnabled) {\n       this.seac = this.stack.splice(-4, 4);\n       error = this.executeCommand(0, COMMAND_MAP.endchar);\n      } else {\n       error = this.executeCommand(4, COMMAND_MAP.endchar);\n      }\n      break;\n     case (12 << 8) + 7:\n      if (this.stack.length < 4) {\n       error = true;\n       break;\n      }\n      this.stack.pop();\n      wx = this.stack.pop();\n      var sby = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx, sby);\n      error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n      break;\n     case (12 << 8) + 12:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      var num2 = this.stack.pop();\n      var num1 = this.stack.pop();\n      this.stack.push(num1 / num2);\n      break;\n     case (12 << 8) + 16:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      var numArgs = this.stack.pop();\n      if (subrNumber === 0 && numArgs === 3) {\n       var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n       this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n       error = this.executeCommand(13, COMMAND_MAP.flex, true);\n       this.flexing = false;\n       this.stack.push(flexArgs[15], flexArgs[16]);\n      } else if (subrNumber === 1 && numArgs === 0) {\n       this.flexing = true;\n      }\n      break;\n     case (12 << 8) + 17:\n      break;\n     case (12 << 8) + 33:\n      this.stack = [];\n      break;\n     default:\n      warn('Unknown type 1 charstring command of \"' + value + '\"');\n      break;\n     }\n     if (error) {\n      break;\n     }\n     continue;\n    } else if (value <= 246) {\n     value = value - 139;\n    } else if (value <= 250) {\n     value = (value - 247) * 256 + encoded[++i] + 108;\n    } else if (value <= 254) {\n     value = -((value - 251) * 256) - encoded[++i] - 108;\n    } else {\n     value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n    }\n    this.stack.push(value);\n   }\n   return error;\n  },\n  executeCommand: function (howManyArgs, command, keepStack) {\n   var stackLength = this.stack.length;\n   if (howManyArgs > stackLength) {\n    return true;\n   }\n   var start = stackLength - howManyArgs;\n   for (var i = start; i < stackLength; i++) {\n    var value = this.stack[i];\n    if (value === (value | 0)) {\n     this.output.push(28, value >> 8 & 0xff, value & 0xff);\n    } else {\n     value = 65536 * value | 0;\n     this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n    }\n   }\n   this.output.push.apply(this.output, command);\n   if (keepStack) {\n    this.stack.splice(start, howManyArgs);\n   } else {\n    this.stack.length = 0;\n   }\n   return false;\n  }\n };\n return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n var EEXEC_ENCRYPT_KEY = 55665;\n var CHAR_STRS_ENCRYPT_KEY = 4330;\n function isHexDigit(code) {\n  return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n }\n function decrypt(data, key, discardNumber) {\n  if (discardNumber >= data.length) {\n   return new Uint8Array(0);\n  }\n  var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n  for (i = 0; i < discardNumber; i++) {\n   r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  var count = data.length - discardNumber;\n  var decrypted = new Uint8Array(count);\n  for (i = discardNumber, j = 0; j < count; i++, j++) {\n   var value = data[i];\n   decrypted[j] = value ^ r >> 8;\n   r = (value + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  return decrypted;\n }\n function decryptAscii(data, key, discardNumber) {\n  var r = key | 0, c1 = 52845, c2 = 22719;\n  var count = data.length, maybeLength = count >>> 1;\n  var decrypted = new Uint8Array(maybeLength);\n  var i, j;\n  for (i = 0, j = 0; i < count; i++) {\n   var digit1 = data[i];\n   if (!isHexDigit(digit1)) {\n    continue;\n   }\n   i++;\n   var digit2;\n   while (i < count && !isHexDigit(digit2 = data[i])) {\n    i++;\n   }\n   if (i < count) {\n    var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n    decrypted[j++] = value ^ r >> 8;\n    r = (value + r) * c1 + c2 & (1 << 16) - 1;\n   }\n  }\n  return Array.prototype.slice.call(decrypted, discardNumber, j);\n }\n function isSpecial(c) {\n  return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n }\n function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n  if (encrypted) {\n   var data = stream.getBytes();\n   var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n   stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n  }\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  this.stream = stream;\n  this.nextChar();\n }\n Type1Parser.prototype = {\n  readNumberArray: function Type1Parser_readNumberArray() {\n   this.getToken();\n   var array = [];\n   while (true) {\n    var token = this.getToken();\n    if (token === null || token === ']' || token === '}') {\n     break;\n    }\n    array.push(parseFloat(token || 0));\n   }\n   return array;\n  },\n  readNumber: function Type1Parser_readNumber() {\n   var token = this.getToken();\n   return parseFloat(token || 0);\n  },\n  readInt: function Type1Parser_readInt() {\n   var token = this.getToken();\n   return parseInt(token || 0, 10) | 0;\n  },\n  readBoolean: function Type1Parser_readBoolean() {\n   var token = this.getToken();\n   return token === 'true' ? 1 : 0;\n  },\n  nextChar: function Type1_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function Type1Parser_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch === -1) {\n     return null;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   if (isSpecial(ch)) {\n    this.nextChar();\n    return String.fromCharCode(ch);\n   }\n   var token = '';\n   do {\n    token += String.fromCharCode(ch);\n    ch = this.nextChar();\n   } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n   return token;\n  },\n  extractFontProgram: function Type1Parser_extractFontProgram() {\n   var stream = this.stream;\n   var subrs = [], charstrings = [];\n   var privateData = Object.create(null);\n   privateData['lenIV'] = 4;\n   var program = {\n    subrs: [],\n    charstrings: [],\n    properties: { 'privateData': privateData }\n   };\n   var token, length, data, lenIV, encoded;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'CharStrings':\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     while (true) {\n      token = this.getToken();\n      if (token === null || token === 'end') {\n       break;\n      }\n      if (token !== '/') {\n       continue;\n      }\n      var glyph = this.getToken();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      charstrings.push({\n       glyph: glyph,\n       encoded: encoded\n      });\n     }\n     break;\n    case 'Subrs':\n     this.readInt();\n     this.getToken();\n     while ((token = this.getToken()) === 'dup') {\n      var index = this.readInt();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      subrs[index] = encoded;\n     }\n     break;\n    case 'BlueValues':\n    case 'OtherBlues':\n    case 'FamilyBlues':\n    case 'FamilyOtherBlues':\n     var blueArray = this.readNumberArray();\n     if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n      program.properties.privateData[token] = blueArray;\n     }\n     break;\n    case 'StemSnapH':\n    case 'StemSnapV':\n     program.properties.privateData[token] = this.readNumberArray();\n     break;\n    case 'StdHW':\n    case 'StdVW':\n     program.properties.privateData[token] = this.readNumberArray()[0];\n     break;\n    case 'BlueShift':\n    case 'lenIV':\n    case 'BlueFuzz':\n    case 'BlueScale':\n    case 'LanguageGroup':\n    case 'ExpansionFactor':\n     program.properties.privateData[token] = this.readNumber();\n     break;\n    case 'ForceBold':\n     program.properties.privateData[token] = this.readBoolean();\n     break;\n    }\n   }\n   for (var i = 0; i < charstrings.length; i++) {\n    glyph = charstrings[i].glyph;\n    encoded = charstrings[i].encoded;\n    var charString = new Type1CharString();\n    var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n    var output = charString.output;\n    if (error) {\n     output = [14];\n    }\n    program.charstrings.push({\n     glyphName: glyph,\n     charstring: output,\n     width: charString.width,\n     lsb: charString.lsb,\n     seac: charString.seac\n    });\n   }\n   return program;\n  },\n  extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n   var token;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'FontMatrix':\n     var matrix = this.readNumberArray();\n     properties.fontMatrix = matrix;\n     break;\n    case 'Encoding':\n     var encodingArg = this.getToken();\n     var encoding;\n     if (!/^\\d+$/.test(encodingArg)) {\n      encoding = getEncoding(encodingArg);\n     } else {\n      encoding = [];\n      var size = parseInt(encodingArg, 10) | 0;\n      this.getToken();\n      for (var j = 0; j < size; j++) {\n       token = this.getToken();\n       while (token !== 'dup' && token !== 'def') {\n        token = this.getToken();\n        if (token === null) {\n         return;\n        }\n       }\n       if (token === 'def') {\n        break;\n       }\n       var index = this.readInt();\n       this.getToken();\n       var glyph = this.getToken();\n       encoding[index] = glyph;\n       this.getToken();\n      }\n     }\n     properties.builtInEncoding = encoding;\n     break;\n    case 'FontBBox':\n     var fontBBox = this.readNumberArray();\n     properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n     properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n     properties.ascentScaled = true;\n     break;\n    }\n   }\n  }\n };\n return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar pdfjsVersion = '1.7.312';\nvar pdfjsBuild = 'cada411a';\nvar pdfjsCoreWorker = __w_pdfjs_require__(8);\n{\n __w_pdfjs_require__(18);\n}\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ })\n/******/ ]);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/build/pdf.worker.js\n// module id = 527\n// module chunks = 0"],"sourceRoot":""}